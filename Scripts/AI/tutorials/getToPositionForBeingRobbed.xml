<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="getToPositionForBeingRobbed" is_function="0">
    <Variables>
      <Variable name="pickpocket" type="minigame:pickpocket" values="" isPersistent="0" form="single" />
      <Variable name="readyMsg" type="tutorial:pickpocket_tutorial" values="" isPersistent="0" form="single" />
      <Variable name="tutorialPosition" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="tutorialState" type="tutorial:pickpocket_tutorial" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <Expression expressions="$tutorialState.stage = $enum:pickpocket_stage.none" />
          <EntityContext context="crime_ignoredPickpocket" target="$this.id">
            <DecoratorBuff BuffId="&apos;f46120bf-b45f-4ec5-95c6-03d526cb40bf&apos;" SoulWUID="$this.id">
              <EntityContext context="crime_ignoredPickpocketFail" target="$this.id">
                <Parallel successMode="Any" failureMode="Any">
                  <Loop count="-1">
                    <ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$readyMsg" senderInfo="" inbox="&apos;tutorial_pickpocket_tutorial&apos;" condition="" answerVar="">
                      <Expression expressions="$tutorialState.stage = $enum:pickpocket_stage.ready" />
                    </ProcessMessage>
                  </Loop>
                  <ContinuousSwitch>
                    <IfCondition failOnCondition="false" condition="$tutorialState.stage == $enum:pickpocket_stage.none">
                      <Sequence>
                        <GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                          <LinkTagFilter tag="&apos;tutorial_tagPoint&apos;" prune="true" negprune="unknown" Parent="" Child="$tutorialPosition" Data="" />
                        </GraphSearch>
                        <EntityContext context="FollowableNPCCenter" target="">
                          <MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
                            <ExactMove directionType="AlignWithEntity" directionSpecification="$tutorialPosition" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tutorialPosition" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
                          </MoveParamsDecorator>
                        </EntityContext>
                        <SendAIConceptSignal_pickpocketTutorialStage stage="$enum:pickpocket_stage.onPlace" />
                        <Expression expressions="$tutorialState.stage = $enum:pickpocket_stage.onPlace" />
                      </Sequence>
                    </IfCondition>
                    <IfCondition failOnCondition="false" condition="$tutorialState.stage == $enum:pickpocket_stage.onPlace">
                      <ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$readyMsg" senderInfo="" inbox="&apos;tutorial_pickpocketReady&apos;" condition="" answerVar="">
                        <Expression expressions="$tutorialState.stage = $enum:pickpocket_stage.ready" />
                      </ProcessMessage>
                    </IfCondition>
                    <IfCondition failOnCondition="false" condition="$tutorialState.stage == $enum:pickpocket_stage.ready">
                      <Loop count="-1">
                        <Parallel successMode="Any" failureMode="Any">
                          <ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$pickpocket" senderInfo="" inbox="&apos;minigamePickpocket&apos;" condition="" answerVar="">
                            <Switch>
                              <IfCondition failOnCondition="false" condition="$pickpocket.event == $enum:pickpocketEvent.failedPouch | &#10;$pickpocket.event == $enum:pickpocketEvent.failedSatchel">
                                <Function_speech_dialogInitiator alias="&apos;mlynaruvUcen_jindraPokazilNabijeni&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="60842532" />
                              </IfCondition>
                              <IfCondition failOnCondition="false" condition="$pickpocket.event == $enum:pickpocketEvent.success">
                                <Success />
                              </IfCondition>
                              <DefaultBranch>
                                <Success />
                              </DefaultBranch>
                            </Switch>
                          </ProcessMessage>
                          <Loop count="-1">
                            <Sequence>
                              <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                              <Function_speech_monolog alias="&apos;mlynaruvUcen_jindraDlouhoNicNeudelal&apos;" canBeDelayed="false" context="" dramaticBark="false" lookAtId="$__player" metarole="" target="$this.id" wait="true" nodeLabel="73216629" />
                            </Sequence>
                          </Loop>
                        </Parallel>
                      </Loop>
                    </IfCondition>
                    <IfCondition failOnCondition="false" condition="true">
                      <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                    </IfCondition>
                  </ContinuousSwitch>
                </Parallel>
              </EntityContext>
            </DecoratorBuff>
          </EntityContext>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="pickpocket" comment="" />
        <Variable name="readyMsg" comment="" />
        <Variable name="tutorialPosition" comment="" />
        <Variable name="tutorialState" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-320" editorPosY="-20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
            <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <DecoratorBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                      </ProcessMessage>
                    </Loop>
                    <ContinuousSwitch hasInputBreakpoint="0" comment="States" breakpointFlags="0">
                      <OutputBreakpoints />
                      <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </LinkTagFilter>
                          </GraphSearch>
                          <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </ExactMove>
                            </MoveParamsDecorator>
                          </EntityContext>
                          <SendAIConceptSignal_pickpocketTutorialStage hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </SendAIConceptSignal_pickpocketTutorialStage>
                          <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Expression>
                        </Sequence>
                      </IfCondition>
                      <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Expression>
                        </ProcessMessage>
                      </IfCondition>
                      <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                  <Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                    <OutputBreakpoints />
                                  </Function_speech_dialogInitiator>
                                </IfCondition>
                                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                  <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                    <OutputBreakpoints />
                                  </Success>
                                </IfCondition>
                                <DefaultBranch>
                                  <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                    <OutputBreakpoints />
                                  </Success>
                                </DefaultBranch>
                              </Switch>
                            </ProcessMessage>
                            <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </Wait>
                                <Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </Function_speech_monolog>
                              </Sequence>
                            </Loop>
                          </Parallel>
                        </Loop>
                      </IfCondition>
                      <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Wait>
                      </IfCondition>
                    </ContinuousSwitch>
                  </Parallel>
                </EntityContext>
              </DecoratorBuff>
            </EntityContext>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>