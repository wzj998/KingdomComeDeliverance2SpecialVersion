<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="tutorial_stealthTakedown_customHandleChoke" is_function="0">
		<Variables>
			<Variable name="dialogContext" type="_float" values="" isPersistent="0" form="associative" />
			<Variable name="success" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="takedownResult" type="combat:stealthKillResult" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<ClearInbox inbox="&apos;combat_stealthKillResult&apos;" type="" condition="" />
							<EntityContext context="crime_disableStealthKillSwitchMailbox" target="">
								<Loop count="-1">
									<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$takedownResult" senderInfo="" inbox="&apos;combat_stealthKillResult&apos;" condition="" answerVar="">
										<Sequence>
											<Expression expressions="$success = $takedownResult.result == &apos;success&apos; | $takedownResult.result == &apos;successWithPerfectBlock&apos;" />
											<IfElseCondition failOnCondition="false" condition="$success" saveVersion="2">
												<Then canSkip="1">
													<ActorStateBarrier Who="$this.id" ToState="ragdoll" NegateTo="false" RunLogic="KeepRunning">
														<Sequence>
															<Sequence>
																<Switch>
																	<IfCondition failOnCondition="false" condition="$takedownResult.result == &apos;successWithPerfectBlock&apos;">
																		<Expression expressions="$dialogContext[&apos;successWithPerfectBlock&apos;] = 1" />
																	</IfCondition>
																	<DefaultBranch>
																		<Expression expressions="$dialogContext[&apos;successWithPerfectBlock&apos;] = 0" />
																	</DefaultBranch>
																</Switch>
																<HasSeenPlayer NPC="" FullyAwareOnly="false" saveVersion="2">
																	<Then canSkip="1">
																		<Expression expressions="$dialogContext[&apos;hasSeenPlayer&apos;] = 1" />
																	</Then>
																	<Else canSkip="1">
																		<Expression expressions="$dialogContext[&apos;hasSeenPlayer&apos;] = 0" />
																	</Else>
																</HasSeenPlayer>
															</Sequence>
															<AtomicDecorator>
																<Sequence>
																	<AddBuff SoulWUID="$this.id" BuffGUID="&apos;bd22f98a-e61f-4d83-b39c-79d1d85b6b91&apos;" />
																	<Function_speech_monolog alias="&apos;mlynaruvUcen_giverSeZvedaZeZeme&apos;" canBeDelayed="false" context="$dialogContext" dramaticBark="false" lookAtId="$__player" metarole="" target="$this.id" wait="false" nodeLabel="83798275" />
																	<SendAIConceptSignal_tutorial_giverWakingUp success="$success" />
																</Sequence>
															</AtomicDecorator>
														</Sequence>
													</ActorStateBarrier>
												</Then>
												<Else canSkip="1">
													<SendAIConceptSignal_tutorial_giverWakingUp success="$success" />
												</Else>
											</IfElseCondition>
										</Sequence>
									</ProcessMessage>
								</Loop>
							</EntityContext>
						</Sequence>
					</Child>
					<OnFail canSkip="1">
						<ClearInbox inbox="&apos;combat_stealthKillResult&apos;" type="" condition="" />
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="dialogContext" comment="" />
				<Variable name="success" comment="" />
				<Variable name="takedownResult" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ClearInbox hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ClearInbox>
								<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<ActorStateBarrier hasInputBreakpoint="0" comment="Success should leave NPC in ragdoll, wait till he gets there" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Expression>
																		</IfCondition>
																		<DefaultBranch>
																			<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Expression>
																		</DefaultBranch>
																	</Switch>
																	<HasSeenPlayer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																		<Then>
																			<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Expression>
																		</Then>
																		<Else>
																			<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Expression>
																		</Else>
																	</HasSeenPlayer>
																</Sequence>
																<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</AddBuff>
																		<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_speech_monolog>
																		<SendAIConceptSignal_tutorial_giverWakingUp hasInputBreakpoint="0" comment="Concept updates stage" breakpointFlags="0">
																			<OutputBreakpoints />
																		</SendAIConceptSignal_tutorial_giverWakingUp>
																	</Sequence>
																</AtomicDecorator>
															</Sequence>
														</ActorStateBarrier>
													</Then>
													<Else>
														<SendAIConceptSignal_tutorial_giverWakingUp hasInputBreakpoint="0" comment="Concept updates stage" breakpointFlags="0">
															<OutputBreakpoints />
														</SendAIConceptSignal_tutorial_giverWakingUp>
													</Else>
												</IfElseCondition>
											</Sequence>
										</ProcessMessage>
									</Loop>
								</EntityContext>
							</Sequence>
						</Child>
						<OnFail>
							<ClearInbox hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ClearInbox>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>