<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="player_handleLoot" is_function="1">
		<Variables>
			<Variable name="currentTime" type="_int64" values="" isPersistent="0" form="single" />
			<Variable name="mrkev" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="reactorsToLootInstance" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="reactorsToLootInstance_value" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stash" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stashOwner" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stashType" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<While doFail="false" propagateChildFail="false" condition="true">
					<Sequence>
						<LinkGate from="$__player" to="" tag="&apos;loot&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
							<AtomicDecorator>
								<Sequence>
									<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;loot&apos;" prune="true" negprune="unknown" Parent="" Child="$stash" Data="" />
									</GraphSearch>
									<GetType WUID="$stash" OutString="$stashType" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
									<IfCondition failOnCondition="false" condition="$stashType ~= &apos;NPC&apos; &amp; &#10;$stashType ~= &apos;NHNPC&apos;">
										<Sequence>
											<GetOwner Object="$stash" Owner="$stashOwner" />
											<IfCondition failOnCondition="false" condition="$stashOwner ~= $__null">
												<SuppressFailure>
													<Sequence>
														<Function_crime_getMrkev mrkev="$mrkev" nodeLabel="42978862" />
														<GetTime TimeType="WorldTime" OutVar="$currentTime" Delta="" />
														<InstantSendMessageToNPC target="$mrkev" type="&apos;crime:dailyCheck:chestEntry&apos;" values="chest($stash),timestamp($currentTime)" />
													</Sequence>
												</SuppressFailure>
											</IfCondition>
											<IfCondition failOnCondition="false" condition="$stashOwner == $__null | &#10;$stashOwner == $__player">
												<ResetStashRobbedValue StashWUID="$stash" />
											</IfCondition>
										</Sequence>
									</IfCondition>
								</Sequence>
							</AtomicDecorator>
						</LinkGate>
						<LinkGate from="$__player" to="" tag="&apos;loot&apos;" amount="AtLeastOne" presence="NotThere" RunLogic="KeepRunning">
							<Function_crime_removeLinksByName linkName="&apos;crime_reactedToLootInstance&apos;" sourceEntity="$__player" nodeLabel="49315635" />
						</LinkGate>
					</Sequence>
				</While>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="currentTime" comment="" />
				<Variable name="mrkev" comment="" />
				<Variable name="reactorsToLootInstance" comment="" />
				<Variable name="reactorsToLootInstance_value" comment="" />
				<Variable name="stash" comment="" />
				<Variable name="stashOwner" comment="" />
				<Variable name="stashType" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetType>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GetOwner hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</GetOwner>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<SuppressFailure hasInputBreakpoint="0" comment="In case this is being ran on test level without mrkev" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Function_crime_getMrkev hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_crime_getMrkev>
															<GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</GetTime>
															<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</InstantSendMessageToNPC>
														</Sequence>
													</SuppressFailure>
												</IfCondition>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ResetStashRobbedValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ResetStashRobbedValue>
												</IfCondition>
											</Sequence>
										</IfCondition>
									</Sequence>
								</AtomicDecorator>
							</LinkGate>
							<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_crime_removeLinksByName hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_removeLinksByName>
							</LinkGate>
						</Sequence>
					</While>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>