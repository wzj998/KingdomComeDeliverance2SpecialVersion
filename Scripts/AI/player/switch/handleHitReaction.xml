<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="player_handleHitReaction" is_function="1">
		<Variables>
			<Variable name="attackerType" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="attacker_soul" type="cast:wuid_soul" values="" isPersistent="0" form="single" />
			<Variable name="hasWeaponDrawn" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="spawnVolume" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="victim_soul" type="cast:wuid_soul" values="" isPersistent="0" form="single" />
			<Variable name="volumeData" type="crime:hitVolume" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<IfCondition failOnCondition="false" condition="$hitReaction.hitType == $enum:HitReactionType.Melee &amp; &#10;$hitReaction.hitStrength ~= $enum:HitReactionStrength.Zero">
					<Sequence>
						<GetType WUID="$hitReaction.attacker" OutString="$attackerType" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
						<IfCondition failOnCondition="false" condition="$attackerType == &apos;NPC&apos;">
							<Function_crime_hasMeleeWeaponDrawn npc="$hitReaction.attacker" result="$hasWeaponDrawn" nodeLabel="43078805" />
						</IfCondition>
						<Expression expressions="$volumeData.target = $__player &#10;$volumeData.attacker = $hitReaction.attacker &#10;$volumeData.directHit = true &#10;$attacker_soul.value = $hitReaction.attacker &#10;$victim_soul.value = $__player" />
						<IfElseCondition failOnCondition="false" condition="$hasWeaponDrawn" saveVersion="2">
							<Then canSkip="1">
								<Expression expressions="$volumeData.kind = $enum:crime_attackKind.armed" />
							</Then>
							<Else canSkip="1">
								<Expression expressions="$volumeData.kind = $enum:crime_attackKind.unarmed" />
							</Else>
						</IfElseCondition>
						<SendAIConceptSignal_hitReactionNotification attacker="$attacker_soul" victim="$victim_soul" hitType="$volumeData.kind" />
					</Sequence>
				</IfCondition>
			</Behavior>
		</Root>
		<ForestContainer>
			<EntityContextCheck context="combat_invisible" target="$hitReaction.attacker" saveVersion="2">
				<Then canSkip="1">
					<EntityContextCheck context="combat_invisible" target="$this.id" saveVersion="2">
						<Then canSkip="1">
							<Expression expressions="$spawnVolume = false" />
						</Then>
						<Else canSkip="1">
							<Expression expressions="$spawnVolume = true" />
						</Else>
					</EntityContextCheck>
				</Then>
				<Else canSkip="1">
					<Expression expressions="$spawnVolume = true" />
				</Else>
			</EntityContextCheck>
			<IfCondition failOnCondition="false" condition="$spawnVolume">
				<Function_switch_handleHitReaction_spawnVolume volumeData="$volumeData" nodeLabel="19385189" />
			</IfCondition>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="attackerType" comment="" />
				<Variable name="attacker_soul" comment="" />
				<Variable name="hasWeaponDrawn" comment="" />
				<Variable name="spawnVolume" comment="" />
				<Variable name="victim_soul" comment="" />
				<Variable name="volumeData" comment="" />
				<Variable name="hitReaction" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetType>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_crime_hasMeleeWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_hasMeleeWeaponDrawn>
							</IfCondition>
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Then>
								<Else>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Else>
							</IfElseCondition>
							<SendAIConceptSignal_hitReactionNotification hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</SendAIConceptSignal_hitReactionNotification>
						</Sequence>
					</IfCondition>
				</Behavior>
			</Root>
			<Forest>
				<EntityContextCheck editorPosX="810" editorPosY="410" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Then>
						<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Then>
							<Else>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Else>
						</EntityContextCheck>
					</Then>
					<Else>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</Else>
				</EntityContextCheck>
				<IfCondition editorPosX="790" editorPosY="540" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Function_switch_handleHitReaction_spawnVolume hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_switch_handleHitReaction_spawnVolume>
				</IfCondition>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>