<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="onUpdate" is_function="0">
    <Variables>
      <Variable name="entity_horse" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="entity_npc" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="message" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="position_horse" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="position_npc" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Sequence>
          <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;spawnHorse&apos;" prune="true" negprune="unknown" Parent="" Child="$position_horse" Data="" />
          </GraphSearch>
          <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;spawnNPC&apos;" prune="true" negprune="unknown" Parent="" Child="$position_npc" Data="" />
          </GraphSearch>
          <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="$entity_horse" Data="" />
          </GraphSearch>
          <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;npc&apos;" prune="true" negprune="unknown" Parent="" Child="$entity_npc" Data="" />
          </GraphSearch>
        </Sequence>
      </OnInit>
      <Behavior canSkip="1">
        <While doFail="false" propagateChildFail="false" condition="true">
          <ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$message" senderInfo="" inbox="&apos;so_test_lod_anims_mb&apos;" condition="" answerVar="">
            <Sequence>
              <SmartObjSetBehaviorState behaviors="&apos;npc_instant&apos;" state="Disabled" />
              <SmartObjSetBehaviorState behaviors="&apos;npc_normal&apos;" state="Disabled" />
              <SmartObjSetBehaviorState behaviors="&apos;npc_horse_usage_move_normal&apos;" state="Disabled" />
              <SmartObjSetBehaviorState behaviors="&apos;npc_horse_usage_move_instant&apos;" state="Disabled" />
              <SmartObjSetBehaviorState behaviors="&apos;npc_horse_usage_normal&apos;" state="Disabled" />
              <SmartObjSetBehaviorState behaviors="&apos;npc_horse_usage_instant&apos;" state="Disabled" />
              <Switch>
                <IfCondition failOnCondition="true" condition="$message == &apos;StartTest_HorseMount_Normal&apos;">
                  <SmartObjSetBehaviorState behaviors="&apos;npc_normal&apos;" state="Enabled" />
                </IfCondition>
                <IfCondition failOnCondition="true" condition="$message == &apos;StartTest_HorseMount_Instant&apos;">
                  <SmartObjSetBehaviorState behaviors="&apos;npc_instant&apos;" state="Enabled" />
                </IfCondition>
                <IfCondition failOnCondition="true" condition="$message == &apos;StartTest_HorseUsageMove_Normal&apos;">
                  <SmartObjSetBehaviorState behaviors="&apos;npc_horse_usage_move_normal&apos;" state="Enabled" />
                </IfCondition>
                <IfCondition failOnCondition="true" condition="$message == &apos;StartTest_HorseUsageMove_Instant&apos;">
                  <SmartObjSetBehaviorState behaviors="&apos;npc_horse_usage_move_instant&apos;" state="Enabled" />
                </IfCondition>
                <IfCondition failOnCondition="true" condition="$message == &apos;StartTest_HorseUsage_Normal&apos;">
                  <SmartObjSetBehaviorState behaviors="&apos;npc_horse_usage_normal&apos;" state="Enabled" />
                </IfCondition>
                <IfCondition failOnCondition="true" condition="$message == &apos;StartTest_HorseUsage_Instant&apos;">
                  <SmartObjSetBehaviorState behaviors="&apos;npc_horse_usage_instant&apos;" state="Enabled" />
                </IfCondition>
                <DefaultBranch>
                  <Success />
                </DefaultBranch>
              </Switch>
              <ExecuteLua code="local target = XGenAIModule.GetEntityByWUID(data.position_horse); &#10;local entity = XGenAIModule.GetEntityByWUID(data.entity_horse); &#10; &#10;entity:SetPos(target:GetPos())" />
              <ExecuteLua code="local target = XGenAIModule.GetEntityByWUID(data.position_npc); &#10;local entity = XGenAIModule.GetEntityByWUID(data.entity_npc); &#10; &#10;entity:SetPos(target:GetPos())" />
            </Sequence>
          </ProcessMessage>
        </While>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="entity_horse" comment="" />
        <Variable name="entity_npc" comment="" />
        <Variable name="message" comment="" />
        <Variable name="position_horse" comment="" />
        <Variable name="position_npc" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
          </Sequence>
        </OnInit>
        <Behavior>
          <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <SmartObjSetBehaviorState hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </SmartObjSetBehaviorState>
                <SmartObjSetBehaviorState hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </SmartObjSetBehaviorState>
                <SmartObjSetBehaviorState hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </SmartObjSetBehaviorState>
                <SmartObjSetBehaviorState hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </SmartObjSetBehaviorState>
                <SmartObjSetBehaviorState hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </SmartObjSetBehaviorState>
                <SmartObjSetBehaviorState hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </SmartObjSetBehaviorState>
                <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <SmartObjSetBehaviorState hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </SmartObjSetBehaviorState>
                  </IfCondition>
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <SmartObjSetBehaviorState hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </SmartObjSetBehaviorState>
                  </IfCondition>
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <SmartObjSetBehaviorState hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </SmartObjSetBehaviorState>
                  </IfCondition>
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <SmartObjSetBehaviorState hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </SmartObjSetBehaviorState>
                  </IfCondition>
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <SmartObjSetBehaviorState hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </SmartObjSetBehaviorState>
                  </IfCondition>
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <SmartObjSetBehaviorState hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </SmartObjSetBehaviorState>
                  </IfCondition>
                  <DefaultBranch>
                    <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Success>
                  </DefaultBranch>
                </Switch>
                <ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </ExecuteLua>
                <ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </ExecuteLua>
              </Sequence>
            </ProcessMessage>
          </While>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="npc_normal" is_function="0">
    <Variables>
      <Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="position" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Sequence>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
          </GraphSearch>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;move&apos;" prune="true" negprune="unknown" Parent="" Child="$position" Data="" />
          </GraphSearch>
        </Sequence>
      </OnInit>
      <Behavior canSkip="1">
        <Sequence>
          <StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
            <ExactMove directionType="AlignWithEntity" directionSpecification="$position" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$position" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
          </StanceElement>
          <WaitAction />
          <InstantSendMessageToNPC target="$__object.id" type="&apos;_string&apos;" values="&apos;&apos;" />
          <TestCheckPoint name="&apos;TestHorse_Done&apos;" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="horse" comment="" />
        <Variable name="position" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
          </Sequence>
        </OnInit>
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </ExactMove>
            </StanceElement>
            <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </WaitAction>
            <InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </InstantSendMessageToNPC>
            <TestCheckPoint hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </TestCheckPoint>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="npc_instant" is_function="0">
    <Variables>
      <Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="position" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Sequence>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
          </GraphSearch>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;move&apos;" prune="true" negprune="unknown" Parent="" Child="$position" Data="" />
          </GraphSearch>
        </Sequence>
      </OnInit>
      <Behavior canSkip="1">
        <StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
          <Sequence>
            <ExactMove directionType="AlignWithEntity" directionSpecification="$position" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$position" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
            <EnableBehaviorForNPCElement smartEntity="$__object.id" behavior="&apos;npc_instant_after&apos;" npc="$this.id" enabled="true">
              <WaitAction />
            </EnableBehaviorForNPCElement>
          </Sequence>
        </StanceElement>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="horse" comment="" />
        <Variable name="position" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
          </Sequence>
        </OnInit>
        <Behavior>
          <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </ExactMove>
              <EnableBehaviorForNPCElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </WaitAction>
              </EnableBehaviorForNPCElement>
            </Sequence>
          </StanceElement>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="horseWait" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <WaitAction />
          <Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </WaitAction>
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="npc_instant_after" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <EnableBehaviorForNPCElement smartEntity="$__object.id" behavior="&apos;npc_instant_after&apos;" npc="$this.id">
          <Sequence>
            <WaitAction />
            <InstantSendMessageToNPC target="$__object.id" type="&apos;_string&apos;" values="&apos;&apos;" />
            <TestCheckPoint name="&apos;TestHorse_Done&apos;" />
          </Sequence>
        </EnableBehaviorForNPCElement>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <EnableBehaviorForNPCElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </WaitAction>
              <InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </InstantSendMessageToNPC>
              <TestCheckPoint hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </TestCheckPoint>
            </Sequence>
          </EnableBehaviorForNPCElement>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="npc_horse_usage_normal" is_function="0">
    <Variables>
      <Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="position" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Sequence>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
          </GraphSearch>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;move&apos;" prune="true" negprune="unknown" Parent="" Child="$position" Data="" />
          </GraphSearch>
        </Sequence>
      </OnInit>
      <Behavior canSkip="1">
        <Sequence>
          <HorseUsageElement horse="$horse" decisionLabel="Label1" saveVersion="2">
            <Search canSkip="1">
              <Success />
            </Search>
            <Exec canSkip="1">
              <WaitAction />
            </Exec>
          </HorseUsageElement>
          <WaitAction />
          <Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
          <InstantSendMessageToNPC target="$__object.id" type="&apos;_string&apos;" values="&apos;&apos;" />
          <TestCheckPoint name="&apos;TestHorse_Done&apos;" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="horse" comment="" />
        <Variable name="position" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-130" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
          </Sequence>
        </OnInit>
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <HorseUsageElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Search>
                <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Success>
              </Search>
              <Exec>
                <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </WaitAction>
              </Exec>
            </HorseUsageElement>
            <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </WaitAction>
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
            <InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </InstantSendMessageToNPC>
            <TestCheckPoint hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </TestCheckPoint>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="npc_horse_usage_move_normal" is_function="0">
    <Variables>
      <Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="position" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Sequence>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
          </GraphSearch>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;move&apos;" prune="true" negprune="unknown" Parent="" Child="$position" Data="" />
          </GraphSearch>
        </Sequence>
      </OnInit>
      <Behavior canSkip="1">
        <Sequence>
          <HorseUsageElement horse="$horse" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
            <Search canSkip="1">
              <Success />
            </Search>
            <Exec canSkip="1">
              <Sequence>
                <StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
                  <ExactMove directionType="AlignWithEntity" directionSpecification="$position" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$position" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
                </StanceElement>
                <WaitAction />
              </Sequence>
            </Exec>
          </HorseUsageElement>
          <WaitAction />
          <Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
          <InstantSendMessageToNPC target="$__object.id" type="&apos;_string&apos;" values="&apos;&apos;" />
          <TestCheckPoint name="&apos;TestHorse_Done&apos;" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="horse" comment="" />
        <Variable name="position" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
          </Sequence>
        </OnInit>
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <HorseUsageElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Search>
                <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Success>
              </Search>
              <Exec>
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </ExactMove>
                  </StanceElement>
                  <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </WaitAction>
                </Sequence>
              </Exec>
            </HorseUsageElement>
            <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </WaitAction>
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
            <InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </InstantSendMessageToNPC>
            <TestCheckPoint hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </TestCheckPoint>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="npc_horse_usage_move_instant_after" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <EnableBehaviorForNPCElement smartEntity="$__object.id" behavior="&apos;npc_horse_usage_move_instant_after&apos;" npc="$this.id">
          <Sequence>
            <WaitAction />
            <InstantSendMessageToNPC target="$__object.id" type="&apos;_string&apos;" values="&apos;&apos;" />
            <TestCheckPoint name="&apos;TestHorse_Done&apos;" />
          </Sequence>
        </EnableBehaviorForNPCElement>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <EnableBehaviorForNPCElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </WaitAction>
              <InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </InstantSendMessageToNPC>
              <TestCheckPoint hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </TestCheckPoint>
            </Sequence>
          </EnableBehaviorForNPCElement>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="npc_horse_usage_move_instant" is_function="0">
    <Variables>
      <Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="position" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Sequence>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
          </GraphSearch>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;move&apos;" prune="true" negprune="unknown" Parent="" Child="$position" Data="" />
          </GraphSearch>
        </Sequence>
      </OnInit>
      <Behavior canSkip="1">
        <HorseUsageElement horse="$horse" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
          <Search canSkip="1">
            <Success />
          </Search>
          <Exec canSkip="1">
            <Sequence>
              <StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
                <ExactMove directionType="AlignWithEntity" directionSpecification="$position" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$position" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
              </StanceElement>
              <WaitAction />
              <EnableBehaviorForNPCElement smartEntity="$__object.id" behavior="&apos;npc_horse_usage_move_instant_after&apos;" npc="$this.id" enabled="true">
                <WaitAction />
              </EnableBehaviorForNPCElement>
            </Sequence>
          </Exec>
        </HorseUsageElement>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="horse" comment="" />
        <Variable name="position" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
          </Sequence>
        </OnInit>
        <Behavior>
          <HorseUsageElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Search>
              <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Success>
            </Search>
            <Exec>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </ExactMove>
                </StanceElement>
                <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </WaitAction>
                <EnableBehaviorForNPCElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </WaitAction>
                </EnableBehaviorForNPCElement>
              </Sequence>
            </Exec>
          </HorseUsageElement>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>