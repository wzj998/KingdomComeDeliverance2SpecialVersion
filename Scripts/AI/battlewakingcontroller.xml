<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="onUpdate" is_function="0">
		<Variables>
			<Variable name="groupController" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="groupControllers" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="index" type="_int" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<LinkGate from="$this.id" to="$this.id" tag="&apos;battleGate_wakeAll&apos;" amount="AtLeastOne" presence="Present" RunLogic="Halt">
					<Sequence>
						<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;groupController&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							<Nodalyzer Quantifiers="ForAll" Parent="" Child="$groupControllers" saveVersion="2">
								<Child0 canSkip="1">
									<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
								</Child0>
							</Nodalyzer>
						</GraphSearch>
						<Expression expressions="$index = 0" />
						<Loop count="-1">
							<Selector>
								<Parallel successMode="Any" failureMode="Any">
									<Sequence>
										<RequestBattleNPC TargetObject="$groupControllers[$index]" ReferencePoint="$groupControllers[$index]" Priority="Normal" RequestedNPCVarOut="" />
										<Wait duration="&apos;200&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
									<Sequence>
										<Wait duration="&apos;2500&apos;" timeType="GameTime" doFail="false" variation="" />
										<Fail />
									</Sequence>
								</Parallel>
								<IfElseCondition failOnCondition="false" condition="$index &gt;= #groupControllers-1" saveVersion="2">
									<Then canSkip="1">
										<Expression expressions="$index = 0" />
									</Then>
									<Else canSkip="1">
										<Expression expressions="$index += 1" />
									</Else>
								</IfElseCondition>
							</Selector>
						</Loop>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</LinkGate>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="groupController" comment="" />
				<Variable name="groupControllers" comment="" />
				<Variable name="index" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
								<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Child0>
										<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RangeSorter>
									</Child0>
								</Nodalyzer>
							</GraphSearch>
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<RequestBattleNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</RequestBattleNPC>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
											<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Fail>
										</Sequence>
									</Parallel>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Then>
										<Else>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Else>
									</IfElseCondition>
								</Selector>
							</Loop>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</LinkGate>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>