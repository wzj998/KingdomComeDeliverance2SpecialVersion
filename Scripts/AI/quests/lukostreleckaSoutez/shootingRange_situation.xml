<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="npc_watchingContest" is_function="0">
    <Variables>
      <Variable name="spot" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <SubtreeDecorator saveVersion="2">
          <Init canSkip="1">
            <Sequence>
              <GraphSearch Origin="$__area.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                <LinkTagFilter tag="&apos;spectatorSpot&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
                <NegationOp Results="true" Advance="true" EndOp="true" saveVersion="2">
                  <Child0 canSkip="1">
                    <LinkTagFilter tag="&apos;occupied&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
                  </Child0>
                </NegationOp>
                <Nodalyzer Quantifiers="Exists" Parent="" Child="$spot" saveVersion="2" />
              </GraphSearch>
              <AddLink From="$__area.id" To="$spot" Tag="&apos;occupied&apos;" Data="" LinkOpHandleMode="Error" />
            </Sequence>
          </Init>
          <Subtree canSkip="1">
            <Sequence>
              <ExactMove directionType="AlignWithEntity" directionSpecification="$spot" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$spot" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
              <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
            </Sequence>
          </Subtree>
          <Cleanup canSkip="1">
            <RemoveLink From="$__area.id" To="$spot" Tag="&apos;occupied&apos;" LinkOpHandleMode="Error" />
          </Cleanup>
        </SubtreeDecorator>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="spot" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <SubtreeDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Init>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </LinkTagFilter>
                  <NegationOp hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Child0>
                      <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </LinkTagFilter>
                    </Child0>
                  </NegationOp>
                  <Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                  </Nodalyzer>
                </GraphSearch>
                <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </AddLink>
              </Sequence>
            </Init>
            <Subtree>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </ExactMove>
                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Wait>
              </Sequence>
            </Subtree>
            <Cleanup>
              <RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </RemoveLink>
            </Cleanup>
          </SubtreeDecorator>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="npc_test" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="onUpdate" is_function="0">
    <Variables>
      <Variable name="situation" type="archeryContest:situation" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Parallel successMode="Any" failureMode="Any">
          <Loop count="-1">
            <ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$situation" senderInfo="" inbox="&apos;archeryContest&apos;" condition="" answerVar="">
              <Success />
            </ProcessMessage>
          </Loop>
          <Loop count="-1">
            <Sequence>
              <SetSituationState situations="&apos;watching&apos;" state="Disabled" />
              <IfGate atomic="false" condition="$situation.state == $enum:shootingContest_situation.enable" RunLogic="Halt">
                <Sequence>
                  <SetSituationState situations="&apos;watching&apos;" state="Enabled" />
                  <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
                </Sequence>
              </IfGate>
            </Sequence>
          </Loop>
        </Parallel>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="situation" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-50" editorPosY="30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Success>
              </ProcessMessage>
            </Loop>
            <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <SetSituationState hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </SetSituationState>
                <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <SetSituationState hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </SetSituationState>
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </Sequence>
                </IfGate>
              </Sequence>
            </Loop>
          </Parallel>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>