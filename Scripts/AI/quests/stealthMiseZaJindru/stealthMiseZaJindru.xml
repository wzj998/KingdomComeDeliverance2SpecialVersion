<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="guard_patroling" is_function="1">
		<Variables>
			<Variable name="distance" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="guardSpot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="guardSpotMinimalDistance" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="guardSpots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="guardSpotsDistance" type="_float" values="" isPersistent="0" form="array" />
			<Variable name="guardSpotsDistance_break" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="guardSpotsDistance_i" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="guardSpots_lastIndex" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="nearestGuardSpot_i" type="_int" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="pathStart" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="patrolType" type="enum:PatrolType" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$pathStart" Borders="" depth="-1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$guardSpots" saveVersion="2" />
					</GraphSearch>
					<PushToArray array="$guardSpots" value="$pathStart" direction="Front" />
					<For startIndex="0" endIndex="-1" step="1" array="$guardSpots" iterator="" value="$guardSpot" break="">
						<Sequence>
							<MeasureDistance position1="$this.id" position2="$guardSpot" mode="TwoDimensions" result="$distance" />
							<PushToArray array="$guardSpotsDistance" value="$distance" direction="Back" />
						</Sequence>
					</For>
					<FindNumericalExtreme array="$guardSpotsDistance" type="Min" result="$guardSpotMinimalDistance" />
					<For startIndex="0" endIndex="-1" step="1" array="$guardSpotsDistance" iterator="$guardSpotsDistance_i" value="" break="$guardSpotsDistance_break">
						<IfCondition failOnCondition="false" condition="$guardSpotsDistance[$guardSpotsDistance_i] == $guardSpotMinimalDistance">
							<Expression expressions="$nearestGuardSpot_i = $guardSpotsDistance_i &#10;$guardSpotsDistance_break = true" />
						</IfCondition>
					</For>
					<For startIndex="$nearestGuardSpot_i" endIndex="-1" step="-1" array="$guardSpotsDistance" iterator="$guardSpotsDistance_i" value="" break="">
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="10.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$guardSpots[$guardSpotsDistance_i]" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					</For>
					<Switch>
						<IfCondition failOnCondition="false" condition="$patrolType == $enum:PatrolType.BackAndForth">
							<For startIndex="-1" endIndex="-1" step="1" array="$guardSpotsDistance" iterator="$guardSpotsDistance_i" value="" break="">
								<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="10.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$guardSpots[$guardSpotsDistance_i]" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							</For>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$patrolType == $enum:PatrolType.Loop">
							<Sequence>
								<Expression expressions="$guardSpots_lastIndex = #guardSpots - 1" />
								<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="10.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$guardSpots[$guardSpots_lastIndex]" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							</Sequence>
						</IfCondition>
						<DefaultBranch>
							<Success />
						</DefaultBranch>
					</Switch>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="patrolData" EventSet="patrol">
			<Variables>
				<Variable name="distance" comment="" />
				<Variable name="guardSpot" comment="" />
				<Variable name="guardSpotMinimalDistance" comment="" />
				<Variable name="guardSpots" comment="" />
				<Variable name="guardSpotsDistance" comment="" />
				<Variable name="guardSpotsDistance_break" comment="" />
				<Variable name="guardSpotsDistance_i" comment="" />
				<Variable name="guardSpots_lastIndex" comment="" />
				<Variable name="nearestGuardSpot_i" comment="" />
				<Variable name="pathStart" comment="" />
				<Variable name="patrolType" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnyLinkFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
						<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</PushToArray>
						<For hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<MeasureDistance hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</MeasureDistance>
								<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</PushToArray>
							</Sequence>
						</For>
						<FindNumericalExtreme hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</FindNumericalExtreme>
						<For hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</For>
						<For hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
						</For>
						<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<For hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Move>
								</For>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Move>
								</Sequence>
							</IfCondition>
							<DefaultBranch>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</DefaultBranch>
						</Switch>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_moveAndWait" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="guard_goToCamp" is_function="0">
		<Variables>
			<Variable name="inFrontOfTheCustoms" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="itemCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="soldiersAtCustoms" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Parameters>
			<Variable name="customs" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="customsOfficer" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="pathStart" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$customs" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;inFrontOfTheCustoms&apos;" prune="true" negprune="unknown" Parent="" Child="$inFrontOfTheCustoms" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<WaitAction />
					<Selector>
						<Sequence>
							<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="" SubGraph="&apos;inventory&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<UnionOp Results="true" Advance="true" EndOp="true" ShortCircuit="false" LocalNodalyzers="false">
									<ItemClassFilter ClassId="&apos;738ca996-5bb8-4719-ad97-c941c3759ccc&apos;" Category="" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
									<ItemClassFilter ClassId="&apos;346e30e4-12c5-4321-8791-b007bd6b66bc&apos;" Category="" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
									<ItemClassFilter ClassId="&apos;be3eeab6-af41-4a17-8b9a-576325cde54f&apos;" Category="" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
									<ItemClassFilter ClassId="&apos;2c375955-b00d-434b-8e0e-03e3d8c180e1&apos;" Category="" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
									<ItemClassFilter ClassId="&apos;35880f76-5d1b-4d99-a839-98a8b74cae97&apos;" Category="" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
								</UnionOp>
							</GraphSearch>
							<Parallel successMode="Any" failureMode="Any">
								<Sequence>
									<Function_guard_patroling pathStart="$pathStart" patrolType="$enum:PatrolType.Loop" nodeLabel="39989474" />
									<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
								</Sequence>
								<Sequence>
									<Expression expressions="$soldiersAtCustoms[0] = $customsOfficer &#10;$soldiersAtCustoms[1] = $this.id" />
									<AreaPresenceGate aiObjects="$this.id" area="$inFrontOfTheCustoms" amount="All" presence="Present" RunLogic="KeepRunning">
										<AreaPresenceGate aiObjects="$this.id" area="$customs" amount="All" presence="Present" RunLogic="KeepRunning">
											<AreaPresenceListener aiObjects="$customsOfficer" area="$customs" trackIn="true" trackOut="true" reportInitialState="true">
												<Sequence>
													<IfElseCondition failOnCondition="false" condition="$__presence" saveVersion="2">
														<Then canSkip="1">
															<Function_speech_schedulerMonolog alias="&apos;stealthMiseZaJindru_npcChatujeHesloNaBrane&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$customsOfficer" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="33243848" />
														</Then>
														<Else canSkip="1">
															<Success />
														</Else>
													</IfElseCondition>
													<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
												</Sequence>
											</AreaPresenceListener>
										</AreaPresenceGate>
									</AreaPresenceGate>
								</Sequence>
							</Parallel>
						</Sequence>
						<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
					</Selector>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="stealthMiseZaJindru_customs" EventSet="endNotification">
			<Variables>
				<Variable name="inFrontOfTheCustoms" comment="" />
				<Variable name="itemCount" comment="" />
				<Variable name="soldiersAtCustoms" comment="" />
				<Variable name="customs" comment="" />
				<Variable name="customsOfficer" comment="" />
				<Variable name="pathStart" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-340" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<UnionOp hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ItemClassFilter>
										<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ItemClassFilter>
										<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ItemClassFilter>
										<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ItemClassFilter>
										<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ItemClassFilter>
									</UnionOp>
								</GraphSearch>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_guard_patroling hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_guard_patroling>
										<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</InstantCallback_empty>
									</Sequence>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<AreaPresenceListener hasInputBreakpoint="0" comment="" comment_box="why_listener?" comment_box_color="222,222,222,222" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_schedulerMonolog>
															</Then>
															<Else>
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</Else>
														</IfElseCondition>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Sequence>
												</AreaPresenceListener>
											</AreaPresenceGate>
										</AreaPresenceGate>
									</Sequence>
								</Parallel>
							</Sequence>
							<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantCallback_empty>
						</Selector>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="guard_patrolingWithOutEvents" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="backAndForth" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="pathStart" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData Signature="patrolData" EventSet="">
			<Variables>
				<Variable name="backAndForth" comment="" />
				<Variable name="pathStart" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" comment_box="DELETE_THIS" comment_box_color="222,222,222,222" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="brabant_yelingToSamuel" is_function="0">
		<Variables>
			<Variable name="samuel" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Function_getQuestAsset assetName="&apos;samuel&apos;" questObject="$__object.id" assetOut="$samuel" nodeLabel="66967782" />
					<Parallel successMode="Any" failureMode="Any">
						<Sequence>
							<ExactMove directionType="AlignWithEntity" directionSpecification="$wuid" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$samuel" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="59879283" />
							<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="&apos;3s&apos;" />
						</Sequence>
						<DistanceGate Origin="$this.id" ReferencePt="$samuel" Low="0.000000" High="4000.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
							<ForceLook LookTarget="$samuel" DisableVariations="false">
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</ForceLook>
						</DistanceGate>
					</Parallel>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="samuel" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-240" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_getQuestAsset hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_getQuestAsset>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
								<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerMonolog>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
							<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</ForceLook>
							</DistanceGate>
						</Parallel>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="samuel_ingameDialog" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<Function_speech_schedulerPolylog_initiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" participants="$participants" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="54576793" />
					</Child>
					<OnSuccess canSkip="1">
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="stealthMiseZaJindru_ingameDialog" EventSet="endNotification">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="participants" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_schedulerPolylog_initiator>
						</Child>
						<OnSuccess>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="brabant_leavingCamp" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="barn" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="camp" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="outsideBarn" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<IsInsideArea Origin="$this.id" Area="$barn" FailSubtMissing="false" saveVersion="2">
					<Then canSkip="1">
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$outsideBarn" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					</Then>
					<Else canSkip="1">
						<Parallel successMode="All" failureMode="Any">
							<Sequence>
								<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
								<Callback_empty EventName="&apos;DoUnstream&apos;" />
							</Sequence>
							<AreaPresenceGate aiObjects="$this.id" area="$camp" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
								<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
									<Child canSkip="1">
										<Function_speech_schedulerMonolog alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="43481046" />
									</Child>
									<OnSuccess canSkip="1">
										<Callback_empty EventName="&apos;SetAlarm&apos;" />
									</OnSuccess>
								</FuseBox>
							</AreaPresenceGate>
						</Parallel>
					</Else>
				</IsInsideArea>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="StealthMiseZaJindru_brabantLeavingFromMap" EventSet="StealthMiseZaJindru_alarmUnstream">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="barn" comment="" />
				<Variable name="camp" comment="" />
				<Variable name="outsideBarn" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
						</Then>
						<Else>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Move hasInputBreakpoint="0" comment="" comment_box="Having_2_Moves_in_one_tree_is_usually_bad_tech_design._You_can_feed_speed_through_string_variable._Keep_one_Move_if_possible." comment_box_color="222,222,222,222" breakpointFlags="0">
										<OutputBreakpoints />
									</Move>
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
								</Sequence>
								<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Child>
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</Child>
										<OnSuccess>
											<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Callback_empty>
										</OnSuccess>
									</FuseBox>
								</AreaPresenceGate>
							</Parallel>
						</Else>
					</IsInsideArea>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sam_lieDown" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<LinkGate from="$this.id" to="$__player" tag="&apos;bodyCarrier&apos;" amount="AtLeastOne" presence="NotThere" RunLogic="Halt">
					<Sequence>
						<UnstanceAction unstance="m49_stealthMiseZaJindru_samLiesInjured" locationObject="" slaveObject="" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</LinkGate>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="-200" editorPosY="620" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</LinkGate>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="guard_guardSamuel" is_function="1">
		<Variables>
			<Variable name="teleport" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="guardTeleportSpot" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="sam" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="samTeleportSpot" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="samsRoom" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
						<Child canSkip="1">
							<Sequence>
								<Callback_empty EventName="&apos;OnStarted&apos;" />
								<IsInsideArea Origin="$sam" Area="$samsRoom" FailSubtMissing="false" saveVersion="2">
									<Then canSkip="1">
										<Sequence>
											<ExactMove directionType="AlignWithEntity" directionSpecification="$guardTeleportSpot" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$guardTeleportSpot" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
											<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										</Sequence>
									</Then>
									<Else canSkip="1">
										<Parallel successMode="Any" failureMode="Any">
											<Sequence>
												<Function_speech_schedulerMonolog alias="&apos;stealthMiseZaJindru_guardHlidaSamaBark&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$sam" metarole="" subtitlesDown="false" nodeLabel="42872454" />
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
											</Sequence>
											<Sequence>
												<Move stopWithinDistance="2.000000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$sam" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
												<Sequence>
													<Turn target="$sam" align="false" />
													<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
												</Sequence>
												<While doFail="false" propagateChildFail="false" condition="~$teleport">
													<DistanceGate Origin="$sam" ReferencePt="$__player" Low="85.000000" High="85.000000" Negation="true" OpenInMiddle="false" RunLogic="Halt">
														<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="85.000000" High="85.000000" Negation="true" OpenInMiddle="false" RunLogic="Halt">
															<Expression expressions="$teleport = true" />
														</DistanceGate>
													</DistanceGate>
												</While>
											</Sequence>
										</Parallel>
									</Else>
								</IsInsideArea>
							</Sequence>
						</Child>
						<OnSuccess canSkip="1">
							<Success />
						</OnSuccess>
						<OnFail canSkip="1">
							<Callback_empty EventName="&apos;OnFinished_NoTeleport&apos;" />
						</OnFail>
					</FuseBox>
					<AtomicDecorator>
						<IfCondition failOnCondition="false" condition="$teleport">
							<Sequence>
								<AddInterrupt_teleport destination="$samTeleportSpot" Target="$sam" Host="$__land" Behavior="&apos;teleport&apos;" Priority="200" IgnorePriorityOnPreviousInterrupt="true" urgency="Instant" Aliveness="Alive" Privileged="false" FastForward="true" />
								<AddInterrupt_teleport destination="$guardTeleportSpot" Target="$this.id" Host="$__land" Behavior="&apos;teleport&apos;" Priority="200" IgnorePriorityOnPreviousInterrupt="true" urgency="Instant" Aliveness="Alive" Privileged="false" FastForward="true" />
							</Sequence>
						</IfCondition>
					</AtomicDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="stealthMiseZaJindru_guardSamuel" EventSet="stealthMiseZaJindru_guardSamuel">
			<Variables>
				<Variable name="teleport" comment="" />
				<Variable name="guardTeleportSpot" comment="" />
				<Variable name="sam" comment="" />
				<Variable name="samTeleportSpot" comment="" />
				<Variable name="samsRoom" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
									<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ExactMove>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</Then>
										<Else>
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_speech_schedulerMonolog>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Move>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Turn>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Sequence>
													<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</DistanceGate>
														</DistanceGate>
													</While>
												</Sequence>
											</Parallel>
										</Else>
									</IsInsideArea>
								</Sequence>
							</Child>
							<OnSuccess>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</OnSuccess>
							<OnFail>
								<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Callback_empty>
							</OnFail>
						</FuseBox>
						<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AddInterrupt_teleport hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AddInterrupt_teleport>
									<AddInterrupt_teleport hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AddInterrupt_teleport>
								</Sequence>
							</IfCondition>
						</AtomicDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="brabant_surrending" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
					<Sequence>
						<UnstanceAction unstance="CrimeSurrender" locationObject="" slaveObject="" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="aulitz_spared" is_function="0">
		<Variables>
			<Variable name="goblet" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="jug" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Left" item="$goblet" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="stealthMiseZaJindru_aulitzsGoblet" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<Function_findItemOnSlot linkName="&apos;goblet&apos;" npc="$this.id" searchOrigin="$this.id" item="$goblet" nodeLabel="65864448" />
					</Search>
					<Exec canSkip="1">
						<HandContentElement hand="Right" item="$jug" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="stealthMiseZaJindru_aulitzsJug" useDecision="true" enabled="true" saveVersion="2">
							<Search canSkip="1">
								<Function_findItemOnSlot linkName="&apos;jug&apos;" npc="$this.id" searchOrigin="$this.id" item="$jug" nodeLabel="57541100" />
							</Search>
							<Exec canSkip="1">
								<Sequence>
									<StanceElement smartObject="$data" stance="sitting" allowAny="false" enabled="true">
										<UnstanceAction unstance="m49_stealthMiseZaJindru_aulitzSpared" locationObject="" slaveObject="" />
									</StanceElement>
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</Exec>
						</HandContentElement>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="goblet" comment="" />
				<Variable name="jug" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-100" editorPosY="330" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_findItemOnSlot>
						</Search>
						<Exec>
							<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Search>
									<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_findItemOnSlot>
								</Search>
								<Exec>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</UnstanceAction>
										</StanceElement>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Exec>
							</HandContentElement>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="stealthMiseZaJindru_sitting" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="interrupt_lieDown" is_function="0">
		<Variables>
			<Variable name="samuelTiedSpot_SO" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="m49_stealthMiseZaJindru_samLiesInjured" locationObject="$samuelTiedSpot_SO" slaveObject="" />
					<LinkGate from="$__player" to="$this.id" tag="&apos;carriedBody&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
						<Success />
					</LinkGate>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="samuelTiedSpot_SO" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</LinkGate>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>