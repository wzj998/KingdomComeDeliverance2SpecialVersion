<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="zaby_customTheft_predicate" is_function="0">
		<Variables>
			<Variable name="itemGuid" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="majkaGuid" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="pivotType" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="stealData" type="stealData" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Expression expressions="$majkaGuid = &apos;468011bd-3f8b-4d56-ad94-20df49af6f93&apos;" />
			</OnInit>
			<Behavior canSkip="1">
				<IfCondition failOnCondition="false" condition="$stimulusTheft.method == $enum:crime_theftMethod.pick">
					<Sequence>
						<GetType WUID="$stimulusTheft.pivot" OutString="$pivotType" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
						<IfElseCondition failOnCondition="false" condition="$pivotType == &apos;ITM&apos;" saveVersion="2">
							<Then canSkip="1">
								<Sequence>
									<GetItemProperty itemId="$stimulusTheft.pivot" property="Guid" result="$itemGuid" />
								</Sequence>
							</Then>
							<Else canSkip="1">
								<Sequence>
									<GraphSearch Origin="$stimulusTheft.pivot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;stealData&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;stealData&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
										<Datalyzer Tag="&apos;stealData&apos;" Quantifiers="ForAll" Parent="" Child="" Data="$stealData" saveVersion="2" />
									</GraphSearch>
									<IfCondition failOnCondition="false" condition="$stealData.instance ~= $__null">
										<GetItemProperty itemId="$stealData.instance" property="Guid" result="$itemGuid" />
									</IfCondition>
								</Sequence>
							</Else>
						</IfElseCondition>
						<Expression expressions="$shouldOverride = $itemGuid == $majkaGuid" />
					</Sequence>
				</IfCondition>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="itemGuid" comment="" />
				<Variable name="majkaGuid" comment="" />
				<Variable name="pivotType" comment="" />
				<Variable name="stealData" comment="" />
				<Variable name="shouldOverride" comment="" />
				<Variable name="stimulusTheft" comment="" />
			</Variables>
			<ForwardDeclarations>
				<Variable name="shouldOverride" type="_bool" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
				<Variable name="stimulusTheft" type="switch:stimulus:theft" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
			</ForwardDeclarations>
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</OnInit>
				<Behavior>
					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetType>
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GetItemProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetItemProperty>
									</Sequence>
								</Then>
								<Else>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="For normally picked items (pivot == volume)" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
											<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
											</Datalyzer>
										</GraphSearch>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GetItemProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetItemProperty>
										</IfCondition>
									</Sequence>
								</Else>
							</IfElseCondition>
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</Sequence>
					</IfCondition>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="zaby_customTheft_override" is_function="0">
		<Variables>
			<Variable name="crimePivot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" />
			<Variable name="items" type="itemPrescriptor" values="" isPersistent="0" form="array" />
			<Variable name="majka" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="majkaGuid" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="owner" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="price" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="stealData" type="stealData" values="" isPersistent="0" form="single" />
			<Variable name="stolenItem" type="itemPrescriptor" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Sequence>
						<Selector>
							<Sequence>
								<GraphSearch Origin="$stimulus.pivot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;stealData&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;stealData&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									<Datalyzer Tag="&apos;stealData&apos;" Quantifiers="ForAll" Parent="" Child="" Data="$stealData" saveVersion="2" />
								</GraphSearch>
								<Expression expressions="$majka = $stealData.instance" />
							</Sequence>
							<Expression expressions="$majka = $stimulus.pivot" />
						</Selector>
						<Sequence>
							<Expression expressions="$majkaGuid = &apos;468011bd-3f8b-4d56-ad94-20df49af6f93&apos;" />
							<GetItemClassProperty ItemClass="&apos;468011bd-3f8b-4d56-ad94-20df49af6f93&apos;" Property="Price" Out="$price" />
							<Expression expressions="$stolenItem.instance = $majka &#10;$stolenItem.class = $majkaGuid &#10;$stolenItem.count = 1" />
						</Sequence>
						<Expression expressions="$items[0] = $stolenItem" />
					</Sequence>
					<Sequence>
						<GraphSearch Origin="$overrideQSO" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;majka_crimePivot&apos;" prune="true" negprune="unknown" Parent="" Child="$crimePivot" Data="" />
						</GraphSearch>
						<GraphSearch Origin="$crimePivot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;theftOwner&apos;" prune="true" negprune="unknown" Parent="" Child="$owner" Data="" />
						</GraphSearch>
						<CreateInformationWrapper Label="&apos;theft&apos;" PerceivedWuid="$crimePivot" PositionType="perceivedWuid" PositionVec3="" PositionWuid="" Information="$information" />
					</Sequence>
					<LockDynamicInformationValues Information="$information">
						<Sequence>
							<SetDynamicInformationValue Information="$information" Tag="&apos;theftMethod&apos;" Variable="$enum:crime_theftMethod.pick" Type="" Value="" />
							<SetDynamicInformationValue Information="$information" Tag="&apos;items&apos;" Variable="$items" Type="" Value="" />
							<SetDynamicInformationValue Information="$information" Tag="&apos;value&apos;" Variable="$price" Type="" Value="" />
							<SetDynamicInformationValue Information="$information" Tag="&apos;victim&apos;" Variable="$owner" Type="" Value="" />
							<SetDynamicInformationValue Information="$information" Tag="&apos;immediate&apos;" Variable="" Type="&apos;bool&apos;" Value="false" />
							<SetDynamicInformationValue Information="$information" Tag="&apos;relatedToEveryone&apos;" Variable="" Type="&apos;bool&apos;" Value="true" />
						</Sequence>
					</LockDynamicInformationValues>
					<Function_crime_addEyeWitness information="$information" npc="$this.id" nodeLabel="67228987" />
					<Function_callInterrupt_attack alreadyCriminal="false" assaultData="" defenceMode="false" escalatedFromFailedSurrender="false" freshlyAttributedCrime="false" ignorePriority="false" information="$information" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" priority="160" questBehavior="false" relationOverride="true" stimulusKind="$enum:crime_stimulusKind.theft" target="$__player" nodeLabel="23082263" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="crimePivot" comment="" />
				<Variable name="information" comment="" />
				<Variable name="items" comment="" />
				<Variable name="majka" comment="" />
				<Variable name="majkaGuid" comment="" />
				<Variable name="owner" comment="" />
				<Variable name="price" comment="" />
				<Variable name="stealData" comment="" />
				<Variable name="stolenItem" comment="" />
				<Variable name="overrideQSO" comment="" />
				<Variable name="stimulus" comment="" />
			</Variables>
			<ForwardDeclarations>
				<Variable name="overrideQSO" type="_wuid" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
				<Variable name="stimulus" type="switch:stimulus:theft" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
			</ForwardDeclarations>
			<Root hasInputBreakpoint="0" comment="We only get here when it&apos;s majka theft" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="For normally picked items (pivot == volume)" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
										</Datalyzer>
									</GraphSearch>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Selector>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<GetItemClassProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetItemClassProperty>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</Sequence>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<CreateInformationWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</CreateInformationWrapper>
						</Sequence>
						<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SetDynamicInformationValue>
								<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SetDynamicInformationValue>
								<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SetDynamicInformationValue>
								<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SetDynamicInformationValue>
								<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SetDynamicInformationValue>
								<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SetDynamicInformationValue>
							</Sequence>
						</LockDynamicInformationValues>
						<Function_crime_addEyeWitness hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_crime_addEyeWitness>
						<Function_callInterrupt_attack hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_callInterrupt_attack>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>