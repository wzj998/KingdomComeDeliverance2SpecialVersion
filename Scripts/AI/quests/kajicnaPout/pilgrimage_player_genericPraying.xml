<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="pilgrimage_player_genericPraying" is_function="1">
		<Variables>
			<Variable name="doInstantOut" type="_bool" values="true" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="dialogContext" type="_float" values="" isPersistent="0" form="associative" requirementType="In" optional="1" />
			<Variable name="finishedPrayingMonolog" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" optional="1" />
			<Variable name="locationObject" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="monologAlias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<EntityContextElement context="player_inPrayingUnstance" enabled="true">
								<UnstanceAction unstance="prayKneelingGround_player" locationObject="$locationObject" slaveObject="" />
							</EntityContextElement>
							<Parallel successMode="Any" failureMode="Any">
								<SuppressFailure>
									<Sequence>
										<Function_speech_schedulerMonolog alias="$monologAlias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="$dialogContext" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="73003119" />
										<Expression expressions="$finishedPrayingMonolog = true" />
									</Sequence>
								</SuppressFailure>
								<EntityContextBarrier context="player_inPrayingUnstance" target="" Negation="true" RunLogic="KeepRunning">
									<Sequence>
										<Expression expressions="$doInstantOut = false" />
										<Fail />
									</Sequence>
								</EntityContextBarrier>
								<ActorStateBarrier Who="" ToState="hit" NegateTo="false" RunLogic="KeepRunning">
									<Fail />
								</ActorStateBarrier>
								<ActorStateBarrier Who="" ToState="combat" NegateTo="false" RunLogic="KeepRunning">
									<Fail />
								</ActorStateBarrier>
							</Parallel>
							<UrgencyDecorator Urgency="Slow">
								<WaitAction />
							</UrgencyDecorator>
							<Expression expressions="$doInstantOut = false" />
						</Sequence>
					</Child>
					<OnSuccess canSkip="1">
						<IfCondition failOnCondition="false" condition="$doInstantOut">
							<UrgencyDecorator Urgency="Instant">
								<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
									<WaitAction />
								</AnyDecorator>
							</UrgencyDecorator>
						</IfCondition>
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="doInstantOut" comment="" />
				<Variable name="dialogContext" comment="" />
				<Variable name="finishedPrayingMonolog" comment="" />
				<Variable name="locationObject" comment="" />
				<Variable name="monologAlias" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
								</EntityContextElement>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Sequence>
									</SuppressFailure>
									<EntityContextBarrier hasInputBreakpoint="0" comment="Player can terminate unstance by himself" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Fail>
										</Sequence>
									</EntityContextBarrier>
									<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Fail>
									</ActorStateBarrier>
									<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Fail>
									</ActorStateBarrier>
								</Parallel>
								<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
								</UrgencyDecorator>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
						</Child>
						<OnSuccess>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</AnyDecorator>
								</UrgencyDecorator>
							</IfCondition>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>