<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="npc_wait" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="samuel_goToMother" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-80" editorPosY="-20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Move>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="licht_searchDocs" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<DistanceCondition Origin="$this.id" ReferencePt="$__object.id" Low="8.000000" High="8.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$__object.id" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					</DistanceCondition>
					<UnstanceAction unstance="chestCheck" locationObject="$__object.id" slaveObject="$__object.id" />
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
						</DistanceCondition>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_waitPlayer" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Loop count="-1">
						<Sequence>
							<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="3.000000" High="3.000000" Negation="false" ValueOnMiddle="false" failOnCondition="false">
								<Turn target="$__player" align="false" />
							</DistanceCondition>
							<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Loop>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Turn>
								</DistanceCondition>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Loop>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_moveToArea" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Move>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="looter_patrol" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$__object.id" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$__object.id" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="looter_standThenPatrol" is_function="0">
		<Variables>
			<Variable name="dialogEnded" type="_bool" values="false" isPersistent="1" form="single" />
			<Variable name="next" type="_wuid" values="" isPersistent="1" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="initiator" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="start" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData Signature="pogrom_dialogAndPatrol" EventSet="">
			<Variables>
				<Variable name="dialogEnded" comment="" />
				<Variable name="next" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="initiator" comment="" />
				<Variable name="start" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="looter_search" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
					<Loop count="-1">
						<Sequence>
							<UnstanceAction unstance="m42_ChestCheck" locationObject="$data" slaveObject="$data" />
							<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Loop>
				</EntityContextElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-60" editorPosY="20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Loop>
					</EntityContextElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sam_talkWithGuard" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="important" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="npcs" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="places" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$places[0]" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$places[0]" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Turn target="$npcs[0]" align="false" />
					<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
						<Child canSkip="1">
							<Function_speech_schedulerPolylog_initiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" participants="$npcs" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="99889194" />
						</Child>
						<OnSuccess canSkip="1">
							<Callback_empty EventName="&apos;Success&apos;" />
						</OnSuccess>
						<OnFail canSkip="1">
							<Callback_empty EventName="&apos;Fail&apos;" />
						</OnFail>
					</FuseBox>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="npcPolylog" EventSet="resultNotification">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="important" comment="" />
				<Variable name="npcs" comment="" />
				<Variable name="places" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Turn>
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerPolylog_initiator>
							</Child>
							<OnSuccess>
								<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Callback_empty>
							</OnSuccess>
							<OnFail>
								<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Callback_empty>
							</OnFail>
						</FuseBox>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_barricadeGate" is_function="0">
		<Variables>
			<Variable name="isBarricated" type="_bool" values="false" isPersistent="1" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alignObjectBarricade" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="fragmentBarricade" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="locationObjectGuard" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="tagsBarricade" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="unstanceGuard" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<IfCondition failOnCondition="false" condition="$isBarricated == false">
						<Sequence>
							<AnimationAction fragment="$fragmentBarricade" tags="$tagsBarricade" eventReferenceObject="" alignObject="$alignObjectBarricade" slaveObject="$alignObjectBarricade" />
							<Expression expressions="$isBarricated = true" />
						</Sequence>
					</IfCondition>
					<UnstanceAction unstance="$unstanceGuard" locationObject="$alignObject" slaveObject="$alignObject" />
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="pogrom_barricadeAndGuard" EventSet="">
			<Variables>
				<Variable name="isBarricated" comment="" />
				<Variable name="alignObjectBarricade" comment="" />
				<Variable name="fragmentBarricade" comment="" />
				<Variable name="locationObjectGuard" comment="" />
				<Variable name="tagsBarricade" comment="" />
				<Variable name="unstanceGuard" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<OutputBreakpoints />
								</AnimationAction>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
						</IfCondition>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sara_barkAbouAssault" is_function="0">
		<Variables>
			<Variable name="pathParams" type="pathFindingParams" values="useGeneratedNSO(true),usePaths(false)" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="monologueAlias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$pathParams" staminaPolicy="" pathInfo="" />
					<Parallel successMode="All" failureMode="Any">
						<UnstanceAction unstance="ScaredIdle" locationObject="$tagpoint" slaveObject="" />
						<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="4.000000" High="4.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
							<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
								<Child canSkip="1">
									<Function_speech_schedulerMonolog alias="$monologueAlias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$__player" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="79208695" />
								</Child>
								<OnSuccess canSkip="1">
									<Callback_empty EventName="&apos;OnFinished&apos;" />
								</OnSuccess>
							</FuseBox>
						</DistanceGate>
					</Parallel>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Loop count="-1">
				<Sequence>
					<Turn target="$__player" align="false" />
					<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Loop>
		</ForestContainer>
		<EditorData Signature="gotoAndBark" EventSet="endNotification">
			<Variables>
				<Variable name="pathParams" comment="" />
				<Variable name="monologueAlias" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Child>
										<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_schedulerMonolog>
									</Child>
									<OnSuccess>
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
									</OnSuccess>
								</FuseBox>
							</DistanceGate>
						</Parallel>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Loop editorPosX="710" editorPosY="-340" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Turn>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Loop>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_polylogInBackyard_initiator" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="initiatorTagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="receivers" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
						<Sequence>
							<ExactMove directionType="AlignWithEntity" directionSpecification="$initiatorTagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$initiatorTagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							<MeleeGuardAutomationDecorator GuardMode="forceEnable" active="true">
								<Sequence>
									<WaitAction />
									<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
										<Child canSkip="1">
											<Function_speech_schedulerPolylog_initiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" participants="$receivers" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="18259737" />
										</Child>
										<OnSuccess canSkip="1">
											<Callback_empty EventName="&apos;OnFinished&apos;" />
										</OnSuccess>
									</FuseBox>
								</Sequence>
							</MeleeGuardAutomationDecorator>
						</Sequence>
					</AnyDecorator>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="npcPolylogInitiator" EventSet="endNotification">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="initiatorTagpoint" comment="" />
				<Variable name="receivers" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-20" editorPosY="30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
								<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
										<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child>
												<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerPolylog_initiator>
											</Child>
											<OnSuccess>
												<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Callback_empty>
											</OnSuccess>
										</FuseBox>
									</Sequence>
								</MeleeGuardAutomationDecorator>
							</Sequence>
						</AnyDecorator>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="victim_callForHelp" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Loop count="-1">
					<Sequence>
						<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="84880676" />
						<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</Loop>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_schedulerMonolog>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Loop>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_run" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sam_runToMother" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveClosed">
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="2.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					</MoveParamsDecorator>
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="endNotification">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
						</MoveParamsDecorator>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="wait" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="guard_talkAndGuard" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<DistanceGate Origin="$this.id" ReferencePt="$participants[0]" Low="4.000000" High="4.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
						<Sequence>
							<Turn target="$participants[0]" align="false" />
							<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$alias" initiator="$participants[0]" numberOfParticipants="2" useIngameDialogPoseAndAnimations="false" nodeLabel="21802193" />
						</Sequence>
					</DistanceGate>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="forcePolylogData" EventSet="">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="participants" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Turn>
								<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerPolylog_receiver>
							</Sequence>
						</DistanceGate>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pogrom_patrol" is_function="0">
		<Variables>
			<Variable name="next" type="_wuid" values="" isPersistent="1" form="single" />
		</Variables>
		<Parameters>
			<Variable name="start" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="next" comment="" />
				<Variable name="start" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pogrom_runBackyard" is_function="0">
		<Variables>
			<Variable name="addParams" type="additionalMoveParams" values="destChangedThreshold(&apos;1s&apos;)" isPersistent="0" form="single" />
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
			<Variable name="pathParams" type="pathFindingParams" values="useGeneratedNSO(true),usePaths(false)" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="currentPoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="finalPoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="speed" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
					<Loop count="-1">
						<SuppressFailure>
							<Parallel successMode="Any" failureMode="Any">
								<Sequence>
									<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="3.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$currentPoint" destinationSpecification2="" destinationSpecification3="" speed="$speed" additionalParams="$addParams" pathFindingParams="$pathParams" staminaPolicy="" pathInfo="" />
									<IfElseCondition failOnCondition="false" condition="$currentPoint == $finalPoint" saveVersion="2">
										<Then canSkip="1">
											<Callback_empty EventName="&apos;OnFinished&apos;" />
										</Then>
										<Else canSkip="1">
											<Callback_empty EventName="&apos;OnPointReached&apos;" />
										</Else>
									</IfElseCondition>
								</Sequence>
								<Loop count="-1">
									<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
										<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength == $enum:HitReactionStrength.MinorInjury | &#10;$hitReaction.hitStrength == $enum:HitReactionStrength.MajorInjury">
											<Fail />
										</IfCondition>
									</ProcessMessage>
								</Loop>
							</Parallel>
						</SuppressFailure>
					</Loop>
				</EntityContextElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="pogrom_runAndChat" EventSet="pogrom_backyardRun">
			<Variables>
				<Variable name="addParams" comment="" />
				<Variable name="hitReaction" comment="" />
				<Variable name="pathParams" comment="" />
				<Variable name="currentPoint" comment="" />
				<Variable name="finalPoint" comment="" />
				<Variable name="speed" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Callback_empty>
											</Then>
											<Else>
												<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Callback_empty>
											</Else>
										</IfElseCondition>
									</Sequence>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Fail>
											</IfCondition>
										</ProcessMessage>
									</Loop>
								</Parallel>
							</SuppressFailure>
						</Loop>
					</EntityContextElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_runAndBark" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="monologueAlias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Parallel successMode="All" failureMode="Any">
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
						<Loop count="-1">
							<Sequence>
								<Function_speech_schedulerMonolog alias="$monologueAlias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="87418456" />
								<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</Loop>
					</Parallel>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="gotoAndBark" EventSet="">
			<Variables>
				<Variable name="monologueAlias" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Loop>
						</Parallel>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_drawWeapon" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Function_pogrom_drawWeapon weaponSet="$data" nodeLabel="57173788" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="stringData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_pogrom_drawWeapon hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_pogrom_drawWeapon>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_crouch" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="" stance="crouch" allowAny="false">
					<Sequence>
						<WaitAction />
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_scared" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<UnstanceAction unstance="ScaredIdle" locationObject="" slaveObject="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pogrom_waitInBattle" is_function="0">
		<Variables>
			<Variable name="combatPoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="countEnemies" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="enemies" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="enemy" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="fightTarget" type="_wuid" values="" isPersistent="1" form="single" />
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
			<Variable name="joinSkirmish" type="pogrom:joinSkirmish" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="lockName" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="moveTagpoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="state" type="_string" values="&apos;idle&apos;" isPersistent="1" form="single" />
			<Variable name="threatPoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="threated" type="_bool" values="false" isPersistent="1" form="single" />
			<Variable name="weaponType" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;combatPoint&apos;" prune="true" negprune="unknown" Parent="" Child="$combatPoint" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;threatPoint&apos;" prune="true" negprune="unknown" Parent="" Child="$threatPoint" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;movePoint&apos;" prune="true" negprune="unknown" Parent="" Child="$moveTagpoint" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$combatPoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;enemy&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$enemies" saveVersion="2" />
					</GraphSearch>
					<Expression expressions="$countEnemies = #enemies" />
					<Concatenation OutString="$lockName" Pattern="&apos;pogromLock;$countEnemies&apos;" />
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<ContinuousSwitch>
						<IfCondition failOnCondition="false" condition="$fightTarget == $__null">
							<Parallel successMode="Any" failureMode="Any">
								<ContinuousSwitch>
									<IfCondition failOnCondition="false" condition="$state == &apos;idle&apos;">
										<Sequence>
											<IfElseCondition failOnCondition="false" condition="$data" saveVersion="2">
												<Then canSkip="1">
													<IsWeaponDrawn who="$this.id" WeaponSet="Oversized" saveVersion="2">
														<Then canSkip="1">
															<Success />
														</Then>
														<Else canSkip="1">
															<DrawAction WeaponSet="Oversized" fullBody="false" tags="" useSelectedWeaponSet="false" />
														</Else>
													</IsWeaponDrawn>
												</Then>
												<Else canSkip="1">
													<IsWeaponDrawn who="$this.id" WeaponSet="Primary" saveVersion="2">
														<Then canSkip="1">
															<Success />
														</Then>
														<Else canSkip="1">
															<DrawAction WeaponSet="Primary" fullBody="false" tags="" useSelectedWeaponSet="false" />
														</Else>
													</IsWeaponDrawn>
												</Else>
											</IfElseCondition>
											<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="false" />
											<GetItemType WUID="$rightHand" OutCategory="" OutType="$weaponType" OutSubType="" />
											<Loop count="-1">
												<AnyDecorator preset="crime_keepItems" enabled="true">
													<MeleeGuardAutomationDecorator GuardMode="forceEnable" active="true">
														<Sequence>
															<WaitAction />
															<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
															<IfCondition failOnCondition="false" condition="$threatPoint ~= $__null">
																<IfCondition failOnCondition="false" condition="$threated == false">
																	<DistanceCondition Origin="$this.id" ReferencePt="$threatPoint" Low="2.000000" High="2.000000" Negation="false" ValueOnMiddle="false" failOnCondition="false">
																		<AtomicDecorator>
																			<Selector>
																				<Sequence>
																					<Invertor>
																						<GraphSearch Origin="$threatPoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																							<LinkTagFilter tag="&apos;reservee&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																						</GraphSearch>
																					</Invertor>
																					<AddLink From="$this.id" To="$threatPoint" Tag="&apos;reserver&apos;" Data="" LinkOpHandleMode="Success" />
																					<Expression expressions="$state = &apos;threat&apos; &#10;$threated = true" />
																				</Sequence>
																				<Success />
																			</Selector>
																		</AtomicDecorator>
																	</DistanceCondition>
																</IfCondition>
															</IfCondition>
															<LoopUntil until="Success" attemptCount="0">
																<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
																	<Child canSkip="1">
																		<Synchronize SemaphoreCount="$countEnemies" InsideTimerValue="&apos;2s&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$lockName&apos;" RunLogic="KeepRunning">
																			<Parallel successMode="Any" failureMode="Any">
																				<DisableCollisionAvoidance>
																					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$moveTagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
																				</DisableCollisionAvoidance>
																				<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
																			</Parallel>
																		</Synchronize>
																	</Child>
																	<OnFail canSkip="1">
																		<AtomicDecorator>
																			<Sequence>
																				<ForEach startIndex="0" step="1" array="$enemies" iterator="" value="$enemy" break="">
																					<IsDeadCheck SoulWUID="$enemy" FailSubtMissing="false" saveVersion="2">
																						<Then canSkip="1">
																							<EraseFromArray array="$enemies" condition="$__value == $enemy" />
																						</Then>
																						<Else canSkip="1">
																							<IsUnconsciousCheck SoulWUID="$enemy" FailSubtMissing="false" saveVersion="2">
																								<Then canSkip="1">
																									<EraseFromArray array="$enemies" condition="$__value == $enemy" />
																								</Then>
																							</IsUnconsciousCheck>
																						</Else>
																					</IsDeadCheck>
																				</ForEach>
																				<Expression expressions="$countEnemies = #enemies" />
																				<Concatenation OutString="$lockName" Pattern="&apos;pogromLock;$countEnemies&apos;" />
																			</Sequence>
																		</AtomicDecorator>
																	</OnFail>
																</FuseBox>
															</LoopUntil>
														</Sequence>
													</MeleeGuardAutomationDecorator>
												</AnyDecorator>
											</Loop>
										</Sequence>
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$state == &apos;threat&apos;">
										<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
											<Child canSkip="1">
												<Parallel successMode="Any" failureMode="Any">
													<AnyDecorator preset="crime_keepItems" enabled="true">
														<Sequence>
															<MeleeGuardAutomationDecorator GuardMode="forceEnable" active="true">
																<ExactMove directionType="AlignWithEntity" directionSpecification="$threatPoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$threatPoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
															</MeleeGuardAutomationDecorator>
															<Switch>
																<IfCondition failOnCondition="false" condition="$weaponType == &apos;sword&apos;">
																	<AnimationAction fragment="&apos;Quest_AssassinThreatSword&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
																</IfCondition>
																<IfCondition failOnCondition="false" condition="$weaponType == &apos;axe&apos;">
																	<AnimationAction fragment="&apos;Quest_AssassinThreatAxe&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
																</IfCondition>
																<IfCondition failOnCondition="false" condition="$weaponType == &apos;mace&apos;">
																	<AnimationAction fragment="&apos;Quest_AssassinThreatMace&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
																</IfCondition>
																<DefaultBranch>
																	<Success />
																</DefaultBranch>
															</Switch>
														</Sequence>
													</AnyDecorator>
													<Loop count="-1">
														<SuppressFailure>
															<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
																<Child canSkip="1">
																	<Synchronize SemaphoreCount="$countEnemies" InsideTimerValue="&apos;2s&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$lockName&apos;" RunLogic="KeepRunning">
																		<Success />
																	</Synchronize>
																</Child>
																<OnFail canSkip="1">
																	<AtomicDecorator>
																		<Sequence>
																			<ForEach startIndex="0" step="1" array="$enemies" iterator="" value="$enemy" break="">
																				<IsDeadCheck SoulWUID="$enemy" FailSubtMissing="false" saveVersion="2">
																					<Then canSkip="1">
																						<EraseFromArray array="$enemies" condition="$__value == $enemy" />
																					</Then>
																					<Else canSkip="1">
																						<IsUnconsciousCheck SoulWUID="$enemy" FailSubtMissing="false" saveVersion="2">
																							<Then canSkip="1">
																								<EraseFromArray array="$enemies" condition="$__value == $enemy" />
																							</Then>
																						</IsUnconsciousCheck>
																					</Else>
																				</IsDeadCheck>
																			</ForEach>
																			<Expression expressions="$countEnemies = #enemies" />
																			<Concatenation OutString="$lockName" Pattern="&apos;pogromLock;$countEnemies&apos;" />
																		</Sequence>
																	</AtomicDecorator>
																</OnFail>
															</FuseBox>
														</SuppressFailure>
													</Loop>
												</Parallel>
											</Child>
											<OnSuccess canSkip="1">
												<AtomicDecorator>
													<Sequence>
														<ReinitVariable variable="$state" />
														<RemoveLink From="$this.id" To="$threatPoint" Tag="&apos;reserver&apos;" LinkOpHandleMode="Success" />
													</Sequence>
												</AtomicDecorator>
											</OnSuccess>
										</FuseBox>
									</IfCondition>
								</ContinuousSwitch>
								<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="2.000000" High="2.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
									<AtomicDecorator>
										<Expression expressions="$fightTarget = $__player" />
									</AtomicDecorator>
								</DistanceGate>
								<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
									<Expression expressions="$fightTarget = $__player" />
								</ProcessMessage>
								<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$joinSkirmish" senderInfo="" inbox="&apos;pogrom_joinSkirmish&apos;" condition="" answerVar="">
									<Expression expressions="$fightTarget = $__player" />
								</ProcessMessage>
							</Parallel>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$fightTarget ~= $__null">
							<Parallel successMode="Any" failureMode="Any">
								<EntityContextElement context="combat_fightInQuestSkirmish" enabled="true">
									<MeleeOffenseAutomationDecorator active="true">
										<MeleeGuardAutomationDecorator GuardMode="automate" active="true">
											<WeaponAutomationDecorator WeaponChange="none" active="true">
												<CombatFollowerDecorator ProbablisticDrivenSweetSpot="true" RPGSweetSpotArcDriver="true" active="true">
													<CombatAction TargetNPC="$fightTarget" RelationOverride="None" />
												</CombatFollowerDecorator>
											</WeaponAutomationDecorator>
										</MeleeGuardAutomationDecorator>
									</MeleeOffenseAutomationDecorator>
								</EntityContextElement>
								<Loop count="-1">
									<SuppressFailure>
										<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
											<Child canSkip="1">
												<Synchronize SemaphoreCount="$countEnemies" InsideTimerValue="&apos;2s&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$lockName&apos;" RunLogic="KeepRunning">
													<Success />
												</Synchronize>
											</Child>
											<OnFail canSkip="1">
												<AtomicDecorator>
													<Sequence>
														<ForEach startIndex="0" step="1" array="$enemies" iterator="" value="$enemy" break="">
															<IsDeadCheck SoulWUID="$enemy" FailSubtMissing="false" saveVersion="2">
																<Then canSkip="1">
																	<EraseFromArray array="$enemies" condition="$__value == $enemy" />
																</Then>
																<Else canSkip="1">
																	<IsUnconsciousCheck SoulWUID="$enemy" FailSubtMissing="false" saveVersion="2">
																		<Then canSkip="1">
																			<EraseFromArray array="$enemies" condition="$__value == $enemy" />
																		</Then>
																	</IsUnconsciousCheck>
																</Else>
															</IsDeadCheck>
														</ForEach>
														<Expression expressions="$countEnemies = #enemies" />
														<Concatenation OutString="$lockName" Pattern="&apos;pogromLock;$countEnemies&apos;" />
													</Sequence>
												</AtomicDecorator>
											</OnFail>
										</FuseBox>
									</SuppressFailure>
								</Loop>
							</Parallel>
						</IfCondition>
					</ContinuousSwitch>
					<Loop count="-1">
						<DeadUnconsciousGate Who="$enemies" State="Any" Negation="false" RunLogic="KeepRunning">
							<AtomicDecorator>
								<ForEach startIndex="0" step="1" array="$enemies" iterator="" value="$enemy" break="">
									<IsDeadCheck SoulWUID="$enemy" FailSubtMissing="false" saveVersion="2">
										<Then canSkip="1">
											<Sequence>
												<EraseFromArray array="$enemies" condition="$__value == $enemy" />
												<Expression expressions="$countEnemies = #enemies" />
												<Concatenation OutString="$lockName" Pattern="&apos;pogromLock;$countEnemies&apos;" />
											</Sequence>
										</Then>
										<Else canSkip="1">
											<IsUnconsciousCheck SoulWUID="$enemy" FailSubtMissing="false" saveVersion="2">
												<Then canSkip="1">
													<Sequence>
														<EraseFromArray array="$enemies" condition="$__value == $enemy" />
														<Expression expressions="$countEnemies = #enemies" />
														<Concatenation OutString="$lockName" Pattern="&apos;pogromLock;$countEnemies&apos;" />
													</Sequence>
												</Then>
											</IsUnconsciousCheck>
										</Else>
									</IsDeadCheck>
								</ForEach>
							</AtomicDecorator>
						</DeadUnconsciousGate>
					</Loop>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer>
			<Loop count="-1">
				<Sequence>
					<Function_speech_schedulerMonolog alias="&apos;pogrom_combatBarkyProNepratele&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="10331981" />
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="&apos;10s&apos;" skipInLOD="false" />
				</Sequence>
			</Loop>
		</ForestContainer>
		<EditorData Signature="bool" EventSet="">
			<Variables>
				<Variable name="combatPoint" comment="" />
				<Variable name="countEnemies" comment="" />
				<Variable name="enemies" comment="" />
				<Variable name="enemy" comment="" />
				<Variable name="fightTarget" comment="" />
				<Variable name="hitReaction" comment="" />
				<Variable name="joinSkirmish" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="lockName" comment="" />
				<Variable name="moveTagpoint" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="state" comment="" />
				<Variable name="threatPoint" comment="" />
				<Variable name="threated" comment="" />
				<Variable name="weaponType" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Concatenation>
					</Sequence>
				</OnInit>
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</Then>
															<Else>
																<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</DrawAction>
															</Else>
														</IsWeaponDrawn>
													</Then>
													<Else>
														<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</Then>
															<Else>
																<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</DrawAction>
															</Else>
														</IsWeaponDrawn>
													</Else>
												</IfElseCondition>
												<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</GetWeaponsFromWeaponSet>
												<GetItemType hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</GetItemType>
												<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</WaitAction>
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
																<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<Invertor hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</LinkTagFilter>
																							</GraphSearch>
																						</Invertor>
																						<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</AddLink>
																						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Expression>
																					</Sequence>
																					<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Success>
																				</Selector>
																			</AtomicDecorator>
																		</DistanceCondition>
																	</IfCondition>
																</IfCondition>
																<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																		<Child>
																			<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<DisableCollisionAvoidance hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Move>
																					</DisableCollisionAvoidance>
																					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Wait>
																				</Parallel>
																			</Synchronize>
																		</Child>
																		<OnFail>
																			<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																							<OutputBreakpoints />
																							<Then>
																								<EraseFromArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</EraseFromArray>
																							</Then>
																							<Else>
																								<IsUnconsciousCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																									<OutputBreakpoints />
																									<Then>
																										<EraseFromArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</EraseFromArray>
																									</Then>
																								</IsUnconsciousCheck>
																							</Else>
																						</IsDeadCheck>
																					</ForEach>
																					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Expression>
																					<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Concatenation>
																				</Sequence>
																			</AtomicDecorator>
																		</OnFail>
																	</FuseBox>
																</LoopUntil>
															</Sequence>
														</MeleeGuardAutomationDecorator>
													</AnyDecorator>
												</Loop>
											</Sequence>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Child>
													<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</ExactMove>
																</MeleeGuardAutomationDecorator>
																<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</AnimationAction>
																	</IfCondition>
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</AnimationAction>
																	</IfCondition>
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</AnimationAction>
																	</IfCondition>
																	<DefaultBranch>
																		<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Success>
																	</DefaultBranch>
																</Switch>
															</Sequence>
														</AnyDecorator>
														<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Child>
																		<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Success>
																		</Synchronize>
																	</Child>
																	<OnFail>
																		<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																						<OutputBreakpoints />
																						<Then>
																							<EraseFromArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</EraseFromArray>
																						</Then>
																						<Else>
																							<IsUnconsciousCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																								<OutputBreakpoints />
																								<Then>
																									<EraseFromArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</EraseFromArray>
																								</Then>
																							</IsUnconsciousCheck>
																						</Else>
																					</IsDeadCheck>
																				</ForEach>
																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Expression>
																				<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Concatenation>
																			</Sequence>
																		</AtomicDecorator>
																	</OnFail>
																</FuseBox>
															</SuppressFailure>
														</Loop>
													</Parallel>
												</Child>
												<OnSuccess>
													<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</ReinitVariable>
															<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</RemoveLink>
														</Sequence>
													</AtomicDecorator>
												</OnSuccess>
											</FuseBox>
										</IfCondition>
									</ContinuousSwitch>
									<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</AtomicDecorator>
									</DistanceGate>
									<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</ProcessMessage>
									<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</ProcessMessage>
								</Parallel>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<CombatFollowerDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</CombatAction>
													</CombatFollowerDecorator>
												</WeaponAutomationDecorator>
											</MeleeGuardAutomationDecorator>
										</MeleeOffenseAutomationDecorator>
									</EntityContextElement>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Child>
													<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</Synchronize>
												</Child>
												<OnFail>
													<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Then>
																		<EraseFromArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</EraseFromArray>
																	</Then>
																	<Else>
																		<IsUnconsciousCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																			<OutputBreakpoints />
																			<Then>
																				<EraseFromArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</EraseFromArray>
																			</Then>
																		</IsUnconsciousCheck>
																	</Else>
																</IsDeadCheck>
															</ForEach>
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
															<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Concatenation>
														</Sequence>
													</AtomicDecorator>
												</OnFail>
											</FuseBox>
										</SuppressFailure>
									</Loop>
								</Parallel>
							</IfCondition>
						</ContinuousSwitch>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<EraseFromArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</EraseFromArray>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Concatenation>
												</Sequence>
											</Then>
											<Else>
												<IsUnconsciousCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<EraseFromArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</EraseFromArray>
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
															<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Concatenation>
														</Sequence>
													</Then>
												</IsUnconsciousCheck>
											</Else>
										</IsDeadCheck>
									</ForEach>
								</AtomicDecorator>
							</DeadUnconsciousGate>
						</Loop>
					</Parallel>
				</Behavior>
			</Root>
			<Forest>
				<Loop editorPosX="350" editorPosY="1470" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_schedulerMonolog>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Loop>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="victim_dialogInHouse" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<UnstanceElement unstance="Cower" locationObject="$this.id" slaveObject="">
					<Sequence>
						<UnstanceAction unstance="Cower" locationObject="$this.id" slaveObject="" />
						<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$string" initiator="$wuid" numberOfParticipants="2" useIngameDialogPoseAndAnimations="false" nodeLabel="31854993" />
					</Sequence>
				</UnstanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_schedulerPolylog_receiver>
						</Sequence>
					</UnstanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="attacker_dialogInHouse" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<IsWeaponDrawn who="$this.id" WeaponSet="Primary" saveVersion="2">
						<Then canSkip="1">
							<Success />
						</Then>
						<Else canSkip="1">
							<DrawAction WeaponSet="Primary" fullBody="false" tags="" />
						</Else>
					</IsWeaponDrawn>
					<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
						<Child canSkip="1">
							<Function_speech_schedulerPolylog_initiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" participants="$participants" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="76725313" />
						</Child>
						<OnSuccess canSkip="1">
							<Callback_empty EventName="&apos;OnFinished&apos;" />
						</OnSuccess>
					</FuseBox>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidArray_string" EventSet="endNotification">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="participants" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Then>
							<Else>
								<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</DrawAction>
							</Else>
						</IsWeaponDrawn>
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerPolylog_initiator>
							</Child>
							<OnSuccess>
								<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Callback_empty>
							</OnSuccess>
						</FuseBox>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="victim_cowerInHouse" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="Cower" locationObject="$this.id" slaveObject="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="attacker_runWithWeapon" is_function="0">
		<Variables>
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
						<Child canSkip="1">
							<Sequence>
								<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="false" />
								<IsWeaponDrawn who="$this.id" WeaponSet="Primary" saveVersion="2">
									<Then canSkip="1">
										<Success />
									</Then>
									<Else canSkip="1">
										<DrawAction WeaponSet="Primary" fullBody="false" tags="" useSelectedWeaponSet="false" />
									</Else>
								</IsWeaponDrawn>
								<IfElseCondition failOnCondition="false" condition="$leftHand == $__null" saveVersion="2">
									<Then canSkip="1">
										<HandContentElement hand="Right" item="$rightHand" allowAny="false" decisionLabel="Label1" useDecision="false" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<Success />
											</Search>
											<Exec canSkip="1">
												<Sequence>
													<WaitAction />
													<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
												</Sequence>
											</Exec>
										</HandContentElement>
									</Then>
									<Else canSkip="1">
										<HandContentElement hand="Left" item="$leftHand" allowAny="false" decisionLabel="Label1" useDecision="false" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<Success />
											</Search>
											<Exec canSkip="1">
												<Sequence>
													<WaitAction />
													<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
												</Sequence>
											</Exec>
										</HandContentElement>
									</Else>
								</IfElseCondition>
							</Sequence>
						</Child>
						<OnSuccess canSkip="1">
							<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
						</OnSuccess>
					</FuseBox>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetWeaponsFromWeaponSet>
									<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Then>
										<Else>
											<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</DrawAction>
										</Else>
									</IsWeaponDrawn>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Search>
												<Exec>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</WaitAction>
														<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ExactMove>
													</Sequence>
												</Exec>
											</HandContentElement>
										</Then>
										<Else>
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Search>
												<Exec>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</WaitAction>
														<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ExactMove>
													</Sequence>
												</Exec>
											</HandContentElement>
										</Else>
									</IfElseCondition>
								</Sequence>
							</Child>
							<OnSuccess>
								<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantCallback_empty>
							</OnSuccess>
						</FuseBox>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="takeAndUseTorch" is_function="0">
		<Variables>
			<Variable name="lightSource" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="slot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<DisableCollisionAvoidance>
							<HandContentElement hand="Left" item="$lightSource" allowAny="false" decisionLabel="lightSource" useDecision="true" saveVersion="2">
								<Search canSkip="1">
									<GetItemInSlot slot="$data" useHomeItem="true" item="$lightSource" />
								</Search>
								<Exec canSkip="1">
									<Move stopWithinDistance="1.000000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
								</Exec>
							</HandContentElement>
						</DisableCollisionAvoidance>
					</Child>
					<OnSuccess canSkip="1">
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="lightSource" comment="" />
				<Variable name="slot" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<DisableCollisionAvoidance hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetItemInSlot>
									</Search>
									<Exec>
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
									</Exec>
								</HandContentElement>
							</DisableCollisionAvoidance>
						</Child>
						<OnSuccess>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pogrom_npcPolylogWithTorch" is_function="0">
		<Variables>
			<Variable name="amIInitiator" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="lightSource" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="myPlace" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="myPlaceType" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="fastForwardIncludesMove" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="important" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="npcs" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="places" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<HandCheck who="$this.id" LeftHand="$leftHand" RightHand="$rightHand" />
					<Function_getNpcPolylogSettings npcs="$npcs" places="$places" amIInitiator="$amIInitiator" myPlace="$myPlace" nodeLabel="27630808" />
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<IfElseCondition failOnCondition="false" condition="$leftHand ~= $__null" saveVersion="2">
							<Then canSkip="1">
								<HandContentElement hand="Left" item="$lightSource" allowAny="false" decisionLabel="lightSource" useDecision="true" enabled="true" saveVersion="2">
									<Search canSkip="1">
										<GetLightSourceItem Item="$lightSource" />
									</Search>
									<Exec canSkip="1">
										<Sequence>
											<MoveParamsDecorator speed="AlertedWalk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
												<ExactMove directionType="AlignWithEntity" directionSpecification="$myPlace" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="$fastForwardIncludesMove" destinationSpecification="$myPlace" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
											</MoveParamsDecorator>
											<Function_speech_schedulerPolylog alias="$alias" amIInitiator="$amIInitiator" npcs="$npcs" nodeLabel="11625808" />
										</Sequence>
									</Exec>
								</HandContentElement>
							</Then>
							<Else canSkip="1">
								<Sequence>
									<MoveParamsDecorator speed="AlertedWalk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
										<ExactMove directionType="AlignWithEntity" directionSpecification="$myPlace" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="$fastForwardIncludesMove" destinationSpecification="$myPlace" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
									</MoveParamsDecorator>
									<Function_speech_schedulerPolylog alias="$alias" amIInitiator="$amIInitiator" npcs="$npcs" nodeLabel="56042613" />
								</Sequence>
							</Else>
						</IfElseCondition>
					</Child>
					<OnSuccess canSkip="1">
						<Callback_empty EventName="&apos;Success&apos;" />
					</OnSuccess>
					<OnFail canSkip="1">
						<Callback_empty EventName="&apos;Fail&apos;" />
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="npcPolylog" EventSet="resultNotification">
			<Variables>
				<Variable name="amIInitiator" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="lightSource" comment="" />
				<Variable name="myPlace" comment="" />
				<Variable name="myPlaceType" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="fastForwardIncludesMove" comment="" />
				<Variable name="important" comment="" />
				<Variable name="npcs" comment="" />
				<Variable name="places" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</HandCheck>
						<Function_getNpcPolylogSettings hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_getNpcPolylogSettings>
					</Sequence>
				</OnInit>
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Search>
											<GetLightSourceItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetLightSourceItem>
										</Search>
										<Exec>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ExactMove>
												</MoveParamsDecorator>
												<Function_speech_schedulerPolylog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerPolylog>
											</Sequence>
										</Exec>
									</HandContentElement>
								</Then>
								<Else>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</ExactMove>
										</MoveParamsDecorator>
										<Function_speech_schedulerPolylog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_schedulerPolylog>
									</Sequence>
								</Else>
							</IfElseCondition>
						</Child>
						<OnSuccess>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnSuccess>
						<OnFail>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="licht_searchChest" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="m42_ChestCheck" locationObject="$data" slaveObject="$data" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sam_barkOnSpot" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="monologueAlias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="4.000000" High="4.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
						<Parallel successMode="Any" failureMode="Any">
							<Loop count="-1">
								<Sequence>
									<Turn target="$__player" align="false" />
									<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Sequence>
							</Loop>
							<Loop count="-1">
								<Sequence>
									<Function_speech_schedulerMonolog alias="$monologueAlias" animationApproach="$enum:animationApproach.ingameDialogPoseAndAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="16409008" />
									<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Sequence>
							</Loop>
							<Loop count="-1">
								<Sequence>
									<AnimationAction fragment="&apos;GreetingsUpperBody&apos;" tags="&apos;waveSmall&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
									<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Sequence>
							</Loop>
						</Parallel>
					</DistanceGate>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="gotoAndBark" EventSet="">
			<Variables>
				<Variable name="monologueAlias" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Turn>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Loop>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_schedulerMonolog>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Loop>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AnimationAction>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Loop>
							</Parallel>
						</DistanceGate>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_unstanceOnSpot" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
					<UnstanceElement unstance="$string" locationObject="$wuid" slaveObject="" enabled="true">
						<Sequence>
							<WaitAction />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</UnstanceElement>
				</EntityContextElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</UnstanceElement>
					</EntityContextElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="groomHorse" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
					<Sequence>
						<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;pogrom_groomHorse&apos;" RunLogic="KeepRunning">
							<HasGenderCheck Gender="Female" SoulWUID="$this.id" FailSubtMissing="false" saveVersion="2">
								<Then canSkip="1">
									<JoinedUnstanceAction lockContext="$__object.id" lockName="&apos;pogrom_groomHorseUnstance&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" unstance="camper_horseGroomingRight_female" locationObject="$__object.id" slaveObject="" />
								</Then>
								<Else canSkip="1">
									<JoinedUnstanceAction lockContext="$__object.id" lockName="&apos;pogrom_groomHorseUnstance&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" unstance="camper_horseGroomingRight_female_horse" locationObject="$__object.id" slaveObject="" />
								</Else>
							</HasGenderCheck>
						</Synchronize>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</EntityContextElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="220" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</JoinedUnstanceAction>
									</Then>
									<Else>
										<JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</JoinedUnstanceAction>
									</Else>
								</HasGenderCheck>
							</Synchronize>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</EntityContextElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="kubenka_sharpeningSword" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$__object.id" stance="sitting" allowAny="false" enabled="true">
					<Sequence>
						<WaitAction />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pettingHorse" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<HasGenderCheck Gender="Male" SoulWUID="$this.id" FailSubtMissing="false" saveVersion="2">
						<Then canSkip="1">
							<EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
								<JoinedUnstanceAction lockContext="$__object.id" lockName="&apos;pogrom_pettingHorse&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" unstance="Quest_NPCPettingHorse" locationObject="$__object.id" slaveObject="" />
							</EntityContextElement>
						</Then>
						<Else canSkip="1">
							<JoinedUnstanceAction lockContext="$__object.id" lockName="&apos;pogrom_pettingHorse&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" unstance="Quest_PettingHorse" locationObject="$__object.id" slaveObject="" />
						</Else>
					</HasGenderCheck>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</JoinedUnstanceAction>
								</EntityContextElement>
							</Then>
							<Else>
								<JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</JoinedUnstanceAction>
							</Else>
						</HasGenderCheck>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_sittingUnstanceOnSpot" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextElement context="speech_readyForSwitchDialog">
					<StanceElement smartObject="$wuid" stance="sitting" allowAny="false">
						<UnstanceElement unstance="$string" locationObject="$wuid" slaveObject="">
							<Sequence>
								<WaitAction />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</UnstanceElement>
					</StanceElement>
				</EntityContextElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</UnstanceElement>
						</StanceElement>
					</EntityContextElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="moveWithTorch" is_function="0">
		<Variables>
			<Variable name="lightSource" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Left" item="$lightSource" allowAny="false" decisionLabel="lightSource" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<GetLightSourceItem Item="$lightSource" />
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="1.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="lightSource" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetLightSourceItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetLightSourceItem>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sara_barkAndPointsAtVictims" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="monologueAlias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Turn target="$tagpoint" align="false" />
					<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
						<Child canSkip="1">
							<Parallel successMode="All" failureMode="Any">
								<Function_speech_schedulerMonolog alias="$monologueAlias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$__player" metarole="" subtitlesDown="false" nodeLabel="46796230" />
								<AnimationAction fragment="&apos;Pointing&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
							</Parallel>
						</Child>
						<OnSuccess canSkip="1">
							<Callback_empty EventName="&apos;OnFinished&apos;" />
						</OnSuccess>
					</FuseBox>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="gotoAndBark" EventSet="endData">
			<Variables>
				<Variable name="monologueAlias" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Turn>
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
									<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AnimationAction>
								</Parallel>
							</Child>
							<OnSuccess>
								<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Callback_empty>
							</OnSuccess>
						</FuseBox>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sam_healing" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ForceLook LookTarget="$data" DisableVariations="true">
					<Sequence>
						<UnstanceAction unstance="Kneel" locationObject="" slaveObject="" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</ForceLook>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</ForceLook>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="move_noORCA" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="speed" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="stealth" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="successDistance" type="_float" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<DisableCollisionAvoidance>
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="$successDistance" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="$speed" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					</DisableCollisionAvoidance>
					<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="moveData" EventSet="endNotification">
			<Variables>
				<Variable name="destination" comment="" />
				<Variable name="speed" comment="" />
				<Variable name="stealth" comment="" />
				<Variable name="successDistance" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DisableCollisionAvoidance hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
						</DisableCollisionAvoidance>
						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantCallback_empty>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="test_animationCartTow" is_function="0">
		<Variables>
			<Variable name="point" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;point&apos;" prune="true" negprune="unknown" Parent="" Child="$point" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<UnstanceElement unstance="m42_CartTow" locationObject="$point" slaveObject="">
					<Sequence>
						<WaitAction />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</UnstanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="point" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</UnstanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="attacker_cruelPikeman" is_function="0">
		<Variables>
			<Variable name="fightTarget" type="_wuid" values="" isPersistent="1" form="single" />
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ContinuousSwitch>
					<IfCondition failOnCondition="false" condition="$fightTarget == $__null">
						<Parallel successMode="Any" failureMode="Any">
							<Sequence>
								<IsWeaponDrawn who="$this.id" WeaponSet="Oversized" saveVersion="2">
									<Then canSkip="1">
										<Success />
									</Then>
									<Else canSkip="1">
										<DrawAction WeaponSet="Oversized" fullBody="false" tags="" useSelectedWeaponSet="false" />
									</Else>
								</IsWeaponDrawn>
								<AnyDecorator preset="crime_keepItems" enabled="true">
									<UnstanceAction unstance="Quest_CruelPikeman" locationObject="" slaveObject="" />
								</AnyDecorator>
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
							<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="2.000000" High="2.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
								<AtomicDecorator>
									<Expression expressions="$fightTarget = $__player" />
								</AtomicDecorator>
							</DistanceGate>
							<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
								<Expression expressions="$fightTarget = $__player" />
							</ProcessMessage>
						</Parallel>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fightTarget ~= $__null">
						<EntityContextElement context="combat_fightInQuestSkirmish" enabled="true">
							<MeleeOffenseAutomationDecorator active="true">
								<MeleeGuardAutomationDecorator GuardMode="automate" active="true">
									<WeaponAutomationDecorator WeaponChange="none" active="true">
										<CombatFollowerDecorator ProbablisticDrivenSweetSpot="true" RPGSweetSpotArcDriver="true" active="true">
											<CombatAction TargetNPC="$fightTarget" RelationOverride="None" />
										</CombatFollowerDecorator>
									</WeaponAutomationDecorator>
								</MeleeGuardAutomationDecorator>
							</MeleeOffenseAutomationDecorator>
						</EntityContextElement>
					</IfCondition>
				</ContinuousSwitch>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="fightTarget" comment="" />
				<Variable name="hitReaction" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Then>
										<Else>
											<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</DrawAction>
										</Else>
									</IsWeaponDrawn>
									<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</UnstanceAction>
									</AnyDecorator>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
								<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</AtomicDecorator>
								</DistanceGate>
								<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</ProcessMessage>
							</Parallel>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<CombatFollowerDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</CombatAction>
											</CombatFollowerDecorator>
										</WeaponAutomationDecorator>
									</MeleeGuardAutomationDecorator>
								</MeleeOffenseAutomationDecorator>
							</EntityContextElement>
						</IfCondition>
					</ContinuousSwitch>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="attacker_unsureKiller" is_function="0">
		<Variables>
			<Variable name="fightTarget" type="_wuid" values="" isPersistent="1" form="single" />
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ContinuousSwitch>
					<IfCondition failOnCondition="false" condition="$fightTarget == $__null">
						<Parallel successMode="Any" failureMode="Any">
							<Sequence>
								<IsWeaponDrawn who="$this.id" WeaponSet="Primary" saveVersion="2">
									<Then canSkip="1">
										<Success />
									</Then>
									<Else canSkip="1">
										<DrawAction WeaponSet="Primary" fullBody="false" tags="" useSelectedWeaponSet="false" />
									</Else>
								</IsWeaponDrawn>
								<AnyDecorator preset="crime_keepItems" enabled="true">
									<UnstanceAction unstance="Quest_UnsureKiller" locationObject="" slaveObject="" />
								</AnyDecorator>
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
							<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="2.000000" High="2.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
								<AtomicDecorator>
									<Expression expressions="$fightTarget = $__player" />
								</AtomicDecorator>
							</DistanceGate>
							<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
								<Expression expressions="$fightTarget = $__player" />
							</ProcessMessage>
						</Parallel>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fightTarget ~= $__null">
						<EntityContextElement context="combat_fightInQuestSkirmish" enabled="true">
							<MeleeOffenseAutomationDecorator active="true">
								<MeleeGuardAutomationDecorator GuardMode="automate" active="true">
									<WeaponAutomationDecorator WeaponChange="none" active="true">
										<CombatFollowerDecorator ProbablisticDrivenSweetSpot="true" RPGSweetSpotArcDriver="true" active="true">
											<CombatAction TargetNPC="$fightTarget" RelationOverride="None" />
										</CombatFollowerDecorator>
									</WeaponAutomationDecorator>
								</MeleeGuardAutomationDecorator>
							</MeleeOffenseAutomationDecorator>
						</EntityContextElement>
					</IfCondition>
				</ContinuousSwitch>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="fightTarget" comment="" />
				<Variable name="hitReaction" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Then>
										<Else>
											<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</DrawAction>
										</Else>
									</IsWeaponDrawn>
									<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</UnstanceAction>
									</AnyDecorator>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
								<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</AtomicDecorator>
								</DistanceGate>
								<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</ProcessMessage>
							</Parallel>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<CombatFollowerDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</CombatAction>
											</CombatFollowerDecorator>
										</WeaponAutomationDecorator>
									</MeleeGuardAutomationDecorator>
								</MeleeOffenseAutomationDecorator>
							</EntityContextElement>
						</IfCondition>
					</ContinuousSwitch>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="attacker_waitInBattle" is_function="0">
		<Variables>
			<Variable name="assassinThreatVariation" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="fightTarget" type="_wuid" values="" isPersistent="1" form="single" />
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="weaponType" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="bool" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ContinuousSwitch>
					<IfCondition failOnCondition="false" condition="$fightTarget == $__null">
						<Parallel successMode="Any" failureMode="Any">
							<Sequence>
								<IfElseCondition failOnCondition="false" condition="$bool" saveVersion="2">
									<Then canSkip="1">
										<Function_pogrom_drawWeapon weaponSet="&apos;Oversized&apos;" nodeLabel="34602859" />
									</Then>
									<Else canSkip="1">
										<Function_pogrom_drawWeapon weaponSet="&apos;Primary&apos;" nodeLabel="28015376" />
									</Else>
								</IfElseCondition>
								<AnyDecorator preset="crime_keepItems" enabled="true">
									<MeleeGuardAutomationDecorator GuardMode="forceEnable" active="true">
										<Sequence>
											<WaitAction />
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
									</MeleeGuardAutomationDecorator>
								</AnyDecorator>
							</Sequence>
							<Parallel successMode="Any" failureMode="Any">
								<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="5.000000" High="5.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
									<AtomicDecorator>
										<Expression expressions="$fightTarget = $__player" />
									</AtomicDecorator>
								</DistanceGate>
								<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
									<Expression expressions="$fightTarget = $__player" />
								</ProcessMessage>
							</Parallel>
						</Parallel>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fightTarget ~= $__null">
						<Function_pogrom_attack fightTarget="$fightTarget" nodeLabel="27553981" />
					</IfCondition>
				</ContinuousSwitch>
			</Behavior>
		</Root>
		<ForestContainer>
			<AnyDecorator preset="crime_keepItems" enabled="true">
				<IfElseCondition failOnCondition="false" condition="$string == &apos;Quest_AssassinThreat&apos;" saveVersion="2">
					<Then canSkip="1">
						<UnstanceElement unstance="$string" locationObject="" slaveObject="" enabled="true">
							<Sequence>
								<WaitAction />
								<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
								<GetItemType WUID="$rightHand" OutCategory="" OutType="$weaponType" OutSubType="" />
								<Selector>
									<IfCondition failOnCondition="true" condition="$weaponType == &apos;sword&apos;">
										<Expression expressions="$assassinThreatVariation = &apos;Quest_AssassinThreatSword&apos;" />
									</IfCondition>
									<IfCondition failOnCondition="true" condition="$weaponType == &apos;axe&apos;">
										<Expression expressions="$assassinThreatVariation = &apos;Quest_AssassinThreatAxe&apos;" />
									</IfCondition>
									<IfCondition failOnCondition="true" condition="$weaponType == &apos;mace&apos;">
										<Expression expressions="$assassinThreatVariation = &apos;Quest_AssassinThreatMace&apos;" />
									</IfCondition>
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Selector>
								<Loop count="-1">
									<Sequence>
										<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="&apos;8s&apos;" />
										<AnimationAction fragment="$assassinThreatVariation" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
									</Sequence>
								</Loop>
							</Sequence>
						</UnstanceElement>
					</Then>
					<Else canSkip="1">
						<UnstanceAction unstance="$string" locationObject="" slaveObject="" />
					</Else>
				</IfElseCondition>
			</AnyDecorator>
		</ForestContainer>
		<EditorData Signature="stringBool" EventSet="">
			<Variables>
				<Variable name="assassinThreatVariation" comment="" />
				<Variable name="fightTarget" comment="" />
				<Variable name="hitReaction" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="weaponType" comment="" />
				<Variable name="bool" comment="" />
				<Variable name="string" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Function_pogrom_drawWeapon hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_pogrom_drawWeapon>
										</Then>
										<Else>
											<Function_pogrom_drawWeapon hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_pogrom_drawWeapon>
										</Else>
									</IfElseCondition>
									<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</MeleeGuardAutomationDecorator>
									</AnyDecorator>
								</Sequence>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</AtomicDecorator>
									</DistanceGate>
									<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</ProcessMessage>
								</Parallel>
							</Parallel>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_pogrom_attack hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_pogrom_attack>
						</IfCondition>
					</ContinuousSwitch>
				</Behavior>
			</Root>
			<Forest>
				<AnyDecorator editorPosX="1160" editorPosY="-750" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetWeaponsFromWeaponSet>
									<GetItemType hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetItemType>
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</IfCondition>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Selector>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
											<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AnimationAction>
										</Sequence>
									</Loop>
								</Sequence>
							</UnstanceElement>
						</Then>
						<Else>
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
						</Else>
					</IfElseCondition>
				</AnyDecorator>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_listeningInTunnel" is_function="0">
		<Variables>
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="lightSource" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="bool" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<HandCheck who="$this.id" LeftHand="$leftHand" RightHand="$rightHand" />
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
						<Child canSkip="1">
							<IfElseCondition failOnCondition="false" condition="$leftHand ~= $__null" saveVersion="2">
								<Then canSkip="1">
									<HandContentElement hand="Left" item="$lightSource" allowAny="false" decisionLabel="lightSource" useDecision="true" enabled="true" saveVersion="2">
										<Search canSkip="1">
											<GetLightSourceItem Item="$lightSource" />
										</Search>
										<Exec canSkip="1">
											<Sequence>
												<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="1.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
												<Parallel successMode="All" failureMode="Any">
													<IfCondition failOnCondition="false" condition="$string ~= &apos;None&apos;">
														<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$__player" metarole="" subtitlesDown="false" nodeLabel="51223180" />
													</IfCondition>
													<AnimationAction fragment="&apos;Quest_ListeningTorch&apos;" tags="&apos;l_torch&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
												</Parallel>
											</Sequence>
										</Exec>
									</HandContentElement>
								</Then>
								<Else canSkip="1">
									<Sequence>
										<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="1.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
										<AnimationAction fragment="&apos;Quest_ListeningCareful&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
									</Sequence>
								</Else>
							</IfElseCondition>
						</Child>
						<OnSuccess canSkip="1">
							<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
						</OnSuccess>
					</FuseBox>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_bool_string" EventSet="endNotification">
			<Variables>
				<Variable name="leftHand" comment="" />
				<Variable name="lightSource" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="bool" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</HandCheck>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Search>
												<GetLightSourceItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</GetLightSourceItem>
											</Search>
											<Exec>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Move>
													<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_speech_schedulerMonolog>
														</IfCondition>
														<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</AnimationAction>
													</Parallel>
												</Sequence>
											</Exec>
										</HandContentElement>
									</Then>
									<Else>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Move>
											<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AnimationAction>
										</Sequence>
									</Else>
								</IfElseCondition>
							</Child>
							<OnSuccess>
								<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantCallback_empty>
							</OnSuccess>
						</FuseBox>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="attacker_joinToBattle" is_function="0">
		<Variables>
			<Variable name="fightTarget" type="_wuid" values="" isPersistent="1" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ContinuousSwitch>
					<IfCondition failOnCondition="false" condition="$fightTarget == $__null">
						<Parallel successMode="Any" failureMode="Any">
							<Sequence>
								<IfElseCondition failOnCondition="false" condition="$data" saveVersion="2">
									<Then canSkip="1">
										<Function_pogrom_drawWeapon weaponSet="&apos;Oversized&apos;" nodeLabel="51734661" />
									</Then>
									<Else canSkip="1">
										<Function_pogrom_drawWeapon weaponSet="&apos;Primary&apos;" nodeLabel="30171905" />
									</Else>
								</IfElseCondition>
								<AnyDecorator preset="crime_keepItems" enabled="true">
									<MeleeGuardAutomationDecorator GuardMode="forceEnable" active="true">
										<Sequence>
											<WaitAction />
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										</Sequence>
									</MeleeGuardAutomationDecorator>
								</AnyDecorator>
							</Sequence>
							<Function_pogrom_reactionInBattle willJoinBattle="true" fightTarget="$fightTarget" nodeLabel="94712461" />
						</Parallel>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fightTarget ~= $__null">
						<Function_pogrom_attack fightTarget="$fightTarget" nodeLabel="97712809" />
					</IfCondition>
				</ContinuousSwitch>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="bool" EventSet="">
			<Variables>
				<Variable name="fightTarget" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Function_pogrom_drawWeapon hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_pogrom_drawWeapon>
										</Then>
										<Else>
											<Function_pogrom_drawWeapon hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_pogrom_drawWeapon>
										</Else>
									</IfElseCondition>
									<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</MeleeGuardAutomationDecorator>
									</AnyDecorator>
								</Sequence>
								<Function_pogrom_reactionInBattle hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_pogrom_reactionInBattle>
							</Parallel>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_pogrom_attack hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_pogrom_attack>
						</IfCondition>
					</ContinuousSwitch>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="equipBeforeBattle" is_function="0">
		<Variables>
			<Variable name="lightSource" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="participantsCount" type="_int" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="nebakovPruzkum_kapitanStraziAHracKostek" isPersistent="0" form="single" requirementType="In" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Switch>
						<IfCondition failOnCondition="false" condition="$alias == &apos;Torch&apos;">
							<HandContentElement hand="Left" item="$lightSource" allowAny="false" decisionLabel="lightSource" useDecision="true" enabled="true" saveVersion="2">
								<Search canSkip="1">
									<GetLightSourceItem Item="$lightSource" />
								</Search>
								<Exec canSkip="1">
									<WaitAction />
								</Exec>
							</HandContentElement>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$alias == &apos;Oversized&apos;">
							<IsWeaponDrawn who="$this.id" WeaponSet="Oversized" saveVersion="2">
								<Then canSkip="1">
									<Success />
								</Then>
								<Else canSkip="1">
									<DrawAction WeaponSet="Oversized" fullBody="false" tags="" useSelectedWeaponSet="false" />
								</Else>
							</IsWeaponDrawn>
						</IfCondition>
						<DefaultBranch>
							<IsWeaponDrawn who="$this.id" WeaponSet="Primary" saveVersion="2">
								<Then canSkip="1">
									<Success />
								</Then>
								<Else canSkip="1">
									<DrawAction WeaponSet="Primary" fullBody="false" tags="" useSelectedWeaponSet="false" />
								</Else>
							</IsWeaponDrawn>
						</DefaultBranch>
					</Switch>
					<Expression expressions="$participantsCount = #participants" />
					<Synchronize SemaphoreCount="$participantsCount" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$alias&apos;" RunLogic="KeepRunning">
						<IfElseCondition failOnCondition="false" condition="$participants[0] == $this.id" saveVersion="2">
							<Then canSkip="1">
								<Callback_empty EventName="&apos;OnFinished&apos;" />
							</Then>
							<Else canSkip="1">
								<Success />
							</Else>
						</IfElseCondition>
					</Synchronize>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidArray_string" EventSet="endNotification">
			<Variables>
				<Variable name="lightSource" comment="" />
				<Variable name="participantsCount" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="participants" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<GetLightSourceItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetLightSourceItem>
									</Search>
									<Exec>
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</Exec>
								</HandContentElement>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Then>
									<Else>
										<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</DrawAction>
									</Else>
								</IsWeaponDrawn>
							</IfCondition>
							<DefaultBranch>
								<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Then>
									<Else>
										<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</DrawAction>
									</Else>
								</IsWeaponDrawn>
							</DefaultBranch>
						</Switch>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
								</Then>
								<Else>
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</Else>
							</IfElseCondition>
						</Synchronize>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pogrom_wallAttack_agressor" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<IsWeaponDrawn who="$this.id" WeaponSet="Secondary" saveVersion="2">
						<Then canSkip="1">
							<Success />
						</Then>
						<Else canSkip="1">
							<DrawAction WeaponSet="Secondary" fullBody="false" tags="" useSelectedWeaponSet="false" />
						</Else>
					</IsWeaponDrawn>
					<AnyDecorator preset="crime_keepItems" enabled="true">
						<Sequence>
							<Synchronize SemaphoreCount="3" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;pogrom_wallAttack&apos;" RunLogic="KeepRunning">
								<Sequence>
									<Wait duration="$string" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
									<AnimationAction fragment="&apos;Fire&apos;" tags="&apos;l_bow&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
								</Sequence>
							</Synchronize>
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</AnyDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Then>
							<Else>
								<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</DrawAction>
							</Else>
						</IsWeaponDrawn>
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
										<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AnimationAction>
									</Sequence>
								</Synchronize>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</AnyDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pogrom_wallAttack_victim" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<EntityContextPresetElement contextPreset="switch_unresponsive" enabled="true">
							<Synchronize SemaphoreCount="3" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;pogrom_wallAttack&apos;" RunLogic="KeepRunning">
								<Parallel successMode="Any" failureMode="Any">
									<AnimationAction fragment="&apos;Quest_HitFallFromWall&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
									<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Parallel>
							</Synchronize>
						</EntityContextPresetElement>
					</Child>
					<OnFail canSkip="1">
						<KillNPC KillTarget="$this.id" Scream="false" />
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<EntityContextPresetElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AnimationAction>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Parallel>
								</Synchronize>
							</EntityContextPresetElement>
						</Child>
						<OnFail>
							<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</KillNPC>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="attacker_fightOnTheWall" is_function="0">
		<Variables>
			<Variable name="useMelee" type="_bool" values="false" isPersistent="1" form="single" />
		</Variables>
		<Parameters>
			<Variable name="bool" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="All" failureMode="Any">
					<AreaPresenceGate aiObjects="$__player" area="$wuid" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
						<Expression expressions="$useMelee = true" />
					</AreaPresenceGate>
					<IfCondition failOnCondition="false" condition="$bool">
						<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$__player" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="28638880" />
					</IfCondition>
					<Sequence>
						<Turn target="$__player" align="false" />
						<ContinuousSwitch>
							<IfCondition failOnCondition="false" condition="$useMelee == false">
								<WeaponAutomationDecorator WeaponChange="missile" active="true">
									<MeleeOffenseAutomationDecorator active="true">
										<CombatAction TargetNPC="$__player" RelationOverride="Hostile" />
									</MeleeOffenseAutomationDecorator>
								</WeaponAutomationDecorator>
							</IfCondition>
							<IfCondition failOnCondition="false" condition="$useMelee == true">
								<MeleeOffenseAutomationDecorator active="true">
									<MeleeGuardAutomationDecorator GuardMode="automate" active="true">
										<WeaponAutomationDecorator WeaponChange="melee" active="true">
											<CombatFollowerDecorator ProbablisticDrivenSweetSpot="true" RPGSweetSpotArcDriver="true" active="true">
												<CombatAction TargetNPC="$__player" RelationOverride="Hostile" />
											</CombatFollowerDecorator>
										</WeaponAutomationDecorator>
									</MeleeGuardAutomationDecorator>
								</MeleeOffenseAutomationDecorator>
							</IfCondition>
						</ContinuousSwitch>
					</Sequence>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_bool_string" EventSet="">
			<Variables>
				<Variable name="useMelee" comment="" />
				<Variable name="bool" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</AreaPresenceGate>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_schedulerMonolog>
						</IfCondition>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Turn>
							<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</CombatAction>
										</MeleeOffenseAutomationDecorator>
									</WeaponAutomationDecorator>
								</IfCondition>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<CombatFollowerDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</CombatAction>
												</CombatFollowerDecorator>
											</WeaponAutomationDecorator>
										</MeleeGuardAutomationDecorator>
									</MeleeOffenseAutomationDecorator>
								</IfCondition>
							</ContinuousSwitch>
						</Sequence>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_exhausted" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Loop count="-1">
					<Sequence>
						<AnimationAction fragment="&apos;Exhausted&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="&apos;5s&apos;" skipInLOD="false" />
					</Sequence>
				</Loop>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnimationAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Loop>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pogrom_pullWoman_femaleVictim" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextPreset preset="switch_unresponsive" target="$this.id">
					<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
						<Child canSkip="1">
							<UnstanceElement unstance="WoundedLyingWoman_noAlign" locationObject="" slaveObject="" enabled="true">
								<Parallel successMode="Any" failureMode="Any">
									<JoinedAnimationAction requiresMovement="true" lockContext="$__object.id" lockName="&apos;pogrom_pullDown&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="&apos;Quest_AttackOnFemalePullOnGround&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;victim&apos;" allowTorchForPlayer="false" />
									<NPCStateGate State="Stamina" Target="$this.id" Low="1.000000" High="100.000000" Negation="false" RunLogic="KeepRunning">
										<KillNPC KillTarget="$this.id" Scream="false" />
									</NPCStateGate>
								</Parallel>
							</UnstanceElement>
						</Child>
						<OnSuccess canSkip="1">
							<ActorStateCheck Who="$this.id" State="ragdoll" FailWithSubtreeMissing="false" saveVersion="2">
								<Then canSkip="1">
									<KillNPC KillTarget="$this.id" Scream="false" />
								</Then>
								<Else canSkip="1">
									<Sequence>
										<AddBuff SoulWUID="$this.id" BuffGUID="&apos;f8d60fe4-e2c1-420a-946a-213e1cd09264&apos;" />
										<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
										<AddBuff SoulWUID="$this.id" BuffGUID="&apos;bd22f98a-e61f-4d83-b39c-79d1d85b6b91&apos;" />
									</Sequence>
								</Else>
							</ActorStateCheck>
						</OnSuccess>
					</FuseBox>
				</EntityContextPreset>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</JoinedAnimationAction>
										<NPCStateGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</KillNPC>
										</NPCStateGate>
									</Parallel>
								</UnstanceElement>
							</Child>
							<OnSuccess>
								<ActorStateCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</KillNPC>
									</Then>
									<Else>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AddBuff>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
											<AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AddBuff>
										</Sequence>
									</Else>
								</ActorStateCheck>
							</OnSuccess>
						</FuseBox>
					</EntityContextPreset>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pogrom_pullWoman_agressor" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<UnstanceElement unstance="Loot" locationObject="" slaveObject="" enabled="true">
							<JoinedAnimationAction requiresMovement="true" lockContext="$__object.id" lockName="&apos;pogrom_pullDown&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="&apos;Quest_AttackOnFemalePullOnGround&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;agressor&apos;" allowTorchForPlayer="false" />
						</UnstanceElement>
					</Child>
					<OnSuccess canSkip="1">
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="endNotification">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</JoinedAnimationAction>
							</UnstanceElement>
						</Child>
						<OnSuccess>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="carryBasket" is_function="0">
		<Variables>
			<Variable name="basket" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="emptySlot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;emptySlot&apos;" prune="true" negprune="unknown" Parent="" Child="$emptySlot" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<HandContentElement hand="Right" item="$basket" allowAny="false" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<Function_findItemOnSlot linkName="&apos;slot&apos;" npc="$this.id" searchOrigin="$__object.id" item="$basket" nodeLabel="90984597" />
						</Search>
						<Exec canSkip="1">
							<PlaceAction item="$basket" slot="$emptySlot" />
						</Exec>
					</HandContentElement>
					<WaitAction />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="endNotification">
			<Variables>
				<Variable name="basket" comment="" />
				<Variable name="emptySlot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_findItemOnSlot>
							</Search>
							<Exec>
								<PlaceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</PlaceAction>
							</Exec>
						</HandContentElement>
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npcPolylogInTunnel" is_function="0">
		<Variables>
			<Variable name="amIInitiator" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="lightSource" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<IfCondition failOnCondition="false" condition="$participants[0] == $this.id">
					<Expression expressions="$amIInitiator = true" />
				</IfCondition>
			</OnInit>
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<IsTorchDrawn who="$this.id" saveVersion="2">
							<Then canSkip="1">
								<HandContentElement hand="Left" item="$lightSource" allowAny="false" decisionLabel="lightSource" useDecision="true" enabled="true" saveVersion="2">
									<Search canSkip="1">
										<GetLightSourceItem Item="$lightSource" />
									</Search>
									<Exec canSkip="1">
										<Function_speech_schedulerPolylog alias="$alias" amIInitiator="$amIInitiator" npcs="$participants" nodeLabel="86321482" />
									</Exec>
								</HandContentElement>
							</Then>
							<Else canSkip="1">
								<Function_speech_schedulerPolylog alias="$alias" amIInitiator="$amIInitiator" npcs="$participants" nodeLabel="20666215" />
							</Else>
						</IsTorchDrawn>
					</Child>
					<OnFail canSkip="1">
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidArray_string" EventSet="endNotification">
			<Variables>
				<Variable name="amIInitiator" comment="" />
				<Variable name="lightSource" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="participants" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</IfCondition>
				</OnInit>
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<IsTorchDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Search>
											<GetLightSourceItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetLightSourceItem>
										</Search>
										<Exec>
											<Function_speech_schedulerPolylog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerPolylog>
										</Exec>
									</HandContentElement>
								</Then>
								<Else>
									<Function_speech_schedulerPolylog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerPolylog>
								</Else>
							</IsTorchDrawn>
						</Child>
						<OnFail>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="equipTorch" is_function="0">
		<Variables>
			<Variable name="lightSource" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<IsTorchDrawn who="" saveVersion="2">
						<Then canSkip="1">
							<Success />
						</Then>
						<Else canSkip="1">
							<HandContentElement hand="Left" item="$lightSource" allowAny="false" decisionLabel="lightSource" useDecision="true" enabled="true" saveVersion="2">
								<Search canSkip="1">
									<GetLightSourceItem Item="$lightSource" />
								</Search>
								<Exec canSkip="1">
									<WaitAction />
								</Exec>
							</HandContentElement>
						</Else>
					</IsTorchDrawn>
					<Callback_empty EventName="&apos;OnFinished&apos;" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="endNotification">
			<Variables>
				<Variable name="lightSource" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-40" editorPosY="30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IsTorchDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Then>
							<Else>
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<GetLightSourceItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetLightSourceItem>
									</Search>
									<Exec>
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</Exec>
								</HandContentElement>
							</Else>
						</IsTorchDrawn>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_polylogInBackyard_receiver" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="aliasOrMetarole" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="initiator" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="numberOfParticipants" type="_int" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<MoveParamsDecorator speed="Run" pathFindingParams="" doorClosingPolicy="LeaveOpened">
						<ExactMove directionType="AlignWithEntity" directionSpecification="$wuid" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					</MoveParamsDecorator>
					<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$aliasOrMetarole" initiator="$initiator" numberOfParticipants="$numberOfParticipants" useIngameDialogPoseAndAnimations="false" nodeLabel="16001504" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuid_npcPolylog_receiverSynchro" EventSet="">
			<Variables>
				<Variable name="aliasOrMetarole" comment="" />
				<Variable name="initiator" comment="" />
				<Variable name="numberOfParticipants" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExactMove>
						</MoveParamsDecorator>
						<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_schedulerPolylog_receiver>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pogrom_attack" is_function="1">
		<Variables />
		<Parameters>
			<Variable name="fightTarget" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextElement context="combat_fightInQuestSkirmish" enabled="true">
					<MeleeOffenseAutomationDecorator active="true">
						<MeleeDefenseAutomationDecorator active="true">
							<MeleeGuardAutomationDecorator GuardMode="automate" active="true">
								<WeaponAutomationDecorator WeaponChange="none" active="true">
									<CombatFollowerDecorator ProbablisticDrivenSweetSpot="true" RPGSweetSpotArcDriver="true" active="true">
										<CombatAction TargetNPC="$fightTarget" RelationOverride="None" />
									</CombatFollowerDecorator>
								</WeaponAutomationDecorator>
							</MeleeGuardAutomationDecorator>
						</MeleeDefenseAutomationDecorator>
					</MeleeOffenseAutomationDecorator>
				</EntityContextElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="fightTarget" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<MeleeDefenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<CombatFollowerDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</CombatAction>
										</CombatFollowerDecorator>
									</WeaponAutomationDecorator>
								</MeleeGuardAutomationDecorator>
							</MeleeDefenseAutomationDecorator>
						</MeleeOffenseAutomationDecorator>
					</EntityContextElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pogrom_reactionInBattle" is_function="1">
		<Variables>
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
			<Variable name="joinSkirmish" type="pogrom:joinSkirmish" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="fightTarget" type="_wuid" values="" isPersistent="0" form="single" requirementType="Out" />
			<Variable name="willJoinBattle" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="3.000000" High="3.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
						<AtomicDecorator>
							<Expression expressions="$fightTarget = $__player" />
						</AtomicDecorator>
					</DistanceGate>
					<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
						<Expression expressions="$fightTarget = $__player" />
					</ProcessMessage>
					<IfGate atomic="false" condition="$willJoinBattle == true" RunLogic="KeepRunning">
						<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$joinSkirmish" senderInfo="" inbox="&apos;pogrom_joinSkirmish&apos;" condition="" answerVar="">
							<Expression expressions="$fightTarget = $__player" />
						</ProcessMessage>
					</IfGate>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="hitReaction" comment="" />
				<Variable name="joinSkirmish" comment="" />
				<Variable name="fightTarget" comment="" />
				<Variable name="willJoinBattle" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</AtomicDecorator>
						</DistanceGate>
						<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</ProcessMessage>
						<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</ProcessMessage>
						</IfGate>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pogrom_drawWeapon" is_function="1">
		<Variables />
		<Parameters>
			<Variable name="weaponSet" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<IsWeaponDrawn who="$this.id" WeaponSet="$weaponSet" saveVersion="2">
					<Then canSkip="1">
						<Success />
					</Then>
					<Else canSkip="1">
						<DrawAction WeaponSet="$weaponSet" fullBody="false" tags="" useSelectedWeaponSet="false" />
					</Else>
				</IsWeaponDrawn>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="weaponSet" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Then>
						<Else>
							<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</DrawAction>
						</Else>
					</IsWeaponDrawn>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_repeatBarkAtPoint" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="monologueAlias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Parallel successMode="Any" failureMode="Any">
						<Loop count="-1">
							<Sequence>
								<Function_speech_schedulerMonolog alias="$monologueAlias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="96397735" />
								<Wait duration="&apos;9s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</Loop>
						<ForceLook LookTarget="$__player" DisableVariations="true">
							<Loop count="-1">
								<Sequence>
									<Turn target="$__player" align="false" />
									<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</Loop>
						</ForceLook>
					</Parallel>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="gotoAndBark" EventSet="">
			<Variables>
				<Variable name="monologueAlias" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Loop>
							<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Turn>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Loop>
							</ForceLook>
						</Parallel>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sam_barkToMother" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="monologueAlias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Parallel successMode="All" failureMode="Any">
						<AnimationAction fragment="&apos;AngryStandWhisper5&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
						<Function_speech_schedulerMonolog alias="$monologueAlias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="47698395" />
					</Parallel>
					<Callback_empty EventName="&apos;OnFinished&apos;" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="gotoAndBark" EventSet="endNotification">
			<Variables>
				<Variable name="monologueAlias" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnimationAction>
							<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_schedulerMonolog>
						</Parallel>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sprintAndBark" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="monologueAlias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="crime_keepItems" enabled="true">
					<Sequence>
						<Parallel successMode="All" failureMode="Any">
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="1.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							<Function_speech_schedulerMonolog alias="$monologueAlias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" subtitlesDown="false" nodeLabel="74902428" />
						</Parallel>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="gotoAndBark" EventSet="">
			<Variables>
				<Variable name="monologueAlias" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
								<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerMonolog>
							</Parallel>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sara_waitInSafeZone" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="ScaredIdle" locationObject="$data" slaveObject="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sara_standNearDoor" is_function="0">
		<Variables>
			<Variable name="pathParams" type="pathFindingParams" values="useGeneratedNSO(true),usePaths(false)" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="monologueAlias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
					<Sequence>
						<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$pathParams" staminaPolicy="" pathInfo="" />
						<Sequence>
							<UnstanceAction unstance="standingNervous" locationObject="" slaveObject="" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</Sequence>
				</EntityContextElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="gotoAndBark" EventSet="">
			<Variables>
				<Variable name="pathParams" comment="" />
				<Variable name="monologueAlias" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExactMove>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Sequence>
					</EntityContextElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="defender_wait" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Function_pogrom_drawWeapon weaponSet="&apos;Primary&apos;" nodeLabel="87473800" />
					<AnyDecorator preset="crime_keepItems" enabled="true">
						<MeleeGuardAutomationDecorator GuardMode="forceEnable" active="true">
							<Sequence>
								<WaitAction />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</MeleeGuardAutomationDecorator>
					</AnyDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_pogrom_drawWeapon hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_pogrom_drawWeapon>
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</MeleeGuardAutomationDecorator>
						</AnyDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_carryChest" is_function="0">
		<Variables>
			<Variable name="placeSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="sack" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;placeSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$placeSlot" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<HandContentElement hand="Right" item="$sack" allowAny="false" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<Function_findItemOnSlot linkName="&apos;sourceSlot&apos;" npc="$this.id" searchOrigin="$__object.id" item="$sack" nodeLabel="90459348" />
						</Search>
						<Exec canSkip="1">
							<Sequence>
								<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="1.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$placeSlot" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
								<PlaceAction item="$sack" slot="$placeSlot" />
							</Sequence>
						</Exec>
					</HandContentElement>
					<WaitAction />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="placeSlot" comment="" />
				<Variable name="sack" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_findItemOnSlot>
							</Search>
							<Exec>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Move>
									<PlaceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</PlaceAction>
								</Sequence>
							</Exec>
						</HandContentElement>
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pogrom_waveAndGo" is_function="0">
		<Variables>
			<Variable name="animPoint" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;point&apos;" prune="true" negprune="unknown" Parent="" Child="$animPoint" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$animPoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$animPoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<AnimationAction fragment="&apos;Come&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="animPoint" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AnimationAction>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pogrom_runToSynagogue" is_function="0">
		<Variables>
			<Variable name="path" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;pathPogrom&apos;" prune="true" negprune="unknown" Parent="" Child="$path" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<DisableCollisionAvoidance>
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="1.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$path" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					</DisableCollisionAvoidance>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="path" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DisableCollisionAvoidance hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
						</DisableCollisionAvoidance>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_blockGateSlave" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="wuidArray" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<JoinedAnimationAction requiresMovement="true" lockContext="$__object.id" lockName="&apos;pogrom_blockGates&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="&apos;Quest_BlockadeFireSC04SynagogueSlave&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;blockadeGateSlave&apos;" allowTorchForPlayer="false" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidArray" EventSet="endNotification">
			<Variables>
				<Variable name="wuidArray" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-40" editorPosY="-20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</JoinedAnimationAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_blockGate" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<JoinedAnimationAction requiresMovement="true" lockContext="$__object.id" lockName="&apos;pogrom_blockGates&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="&apos;Quest_BlockadeFireSC04Synagogue&apos;" tags="" eventReferenceObject="$__object.id" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;blockadeGate&apos;" allowTorchForPlayer="false" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="endNotification">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</JoinedAnimationAction>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_hug" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="wuidData" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuidDataArray" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<Parallel successMode="All" failureMode="Any">
							<AreaPresenceGate aiObjects="$wuidDataArray" area="$wuidData" amount="All" presence="Present" RunLogic="KeepRunning">
								<HasGenderCheck Gender="Male" SoulWUID="$this.id" FailSubtMissing="false" saveVersion="2">
									<Then canSkip="1">
										<Function_speech_schedulerPolylog alias="&apos;pogrom_matkaASamuelSeSpoluBaviPoVycisteniBaraku&apos;" amIInitiator="false" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" areaForPlayer="" npcs="$wuidDataArray" nodeLabel="41047990" />
									</Then>
									<Else canSkip="1">
										<Function_speech_schedulerPolylog alias="&apos;pogrom_matkaASamuelSeSpoluBaviPoVycisteniBaraku&apos;" amIInitiator="true" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" areaForPlayer="" npcs="$wuidDataArray" nodeLabel="14079503" />
									</Else>
								</HasGenderCheck>
							</AreaPresenceGate>
							<MoveParamsDecorator speed="AlertedWalk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
								<JoinedAnimationAction requiresMovement="true" lockContext="$__object.id" lockName="&apos;pogrom_hug&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="&apos;Quest_HugShort&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;hug&apos;" allowTorchForPlayer="false" />
							</MoveParamsDecorator>
						</Parallel>
					</Child>
					<OnSuccess canSkip="1">
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidDataWuidDataArray" EventSet="endNotification">
			<Variables>
				<Variable name="wuidData" comment="" />
				<Variable name="wuidDataArray" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Function_speech_schedulerPolylog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerPolylog>
										</Then>
										<Else>
											<Function_speech_schedulerPolylog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerPolylog>
										</Else>
									</HasGenderCheck>
								</AreaPresenceGate>
								<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</JoinedAnimationAction>
								</MoveParamsDecorator>
							</Parallel>
						</Child>
						<OnSuccess>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_unstance" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<UnstanceElement unstance="$data" locationObject="" slaveObject="" enabled="true">
					<Sequence>
						<WaitAction />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</UnstanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="stringData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</UnstanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="samuel_polylogWithInjured" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="wuidData" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuidDataArray" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="All" failureMode="Any">
					<Sequence>
						<ExactMove directionType="AlignWithEntity" directionSpecification="$wuidData" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuidData" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
						<UnstanceAction unstance="Kneel" locationObject="" slaveObject="" />
					</Sequence>
					<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
						<Child canSkip="1">
							<DistanceGate Origin="$this.id" ReferencePt="$wuidData" Low="6.000000" High="6.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
								<Function_speech_schedulerPolylog alias="&apos;pogrom_samBarkujeNaHraceAbySelDal&apos;" amIInitiator="true" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" areaForPlayer="" npcs="$wuidDataArray" nodeLabel="22502966" />
							</DistanceGate>
						</Child>
						<OnSuccess canSkip="1">
							<Callback_empty EventName="&apos;OnFinished&apos;" />
						</OnSuccess>
					</FuseBox>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidDataWuidDataArray" EventSet="">
			<Variables>
				<Variable name="wuidData" comment="" />
				<Variable name="wuidDataArray" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExactMove>
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
						</Sequence>
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_speech_schedulerPolylog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerPolylog>
								</DistanceGate>
							</Child>
							<OnSuccess>
								<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Callback_empty>
							</OnSuccess>
						</FuseBox>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_polylogWithInjured" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="wuidData" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuidDataArray" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="Quest_SittingWounded" locationObject="$wuidData" slaveObject="" />
					<Function_speech_schedulerPolylog alias="&apos;pogrom_samBarkujeNaHraceAbySelDal&apos;" amIInitiator="false" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" areaForPlayer="" npcs="$wuidDataArray" nodeLabel="40804926" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidDataWuidDataArray" EventSet="">
			<Variables>
				<Variable name="wuidData" comment="" />
				<Variable name="wuidDataArray" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Function_speech_schedulerPolylog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_schedulerPolylog>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="move_openedDoor" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<MoveParamsDecorator speed="AlertedWalk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
					<EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
						<Sequence>
							<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</EntityContextElement>
				</MoveParamsDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</EntityContextElement>
					</MoveParamsDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_attackGate" is_function="0">
		<Variables>
			<Variable name="left" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="point" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="right" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;point&apos;" prune="true" negprune="unknown" Parent="" Child="$point" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$right" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_axe" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$left" RightHand="$right" UseTorchWhenAppropriate="true" />
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<WaitAction />
							<UnstanceAction unstance="GateAttack" locationObject="$point" slaveObject="" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="left" comment="" />
				<Variable name="point" comment="" />
				<Variable name="right" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetWeaponsFromWeaponSet>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="idle" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="QuestIdleWithoutVariations" locationObject="" slaveObject="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>