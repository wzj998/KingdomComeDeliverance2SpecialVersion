<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="sitAndRepeatPolylogInitiator" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="lockName" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="shouldDrinkBeer" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="tableToNotCleanDuringBehavior" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" optional="1" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
					<Parallel successMode="Any" failureMode="Any">
						<Function_searchForBeer shouldDrinkBeer="$shouldDrinkBeer" nodeLabel="39077139" />
						<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;beerInitializationDone&apos;" RunLogic="KeepRunning">
							<Function_sitAndRepeatPolylogInitiator_withoutBeer alias="$alias" lockName="$lockName" participants="$participants" tableToNotCleanDuringBehavior="$tableToNotCleanDuringBehavior" nodeLabel="89215297" />
						</ExternalLock>
					</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="kumaniNaTrosecku_tablePolylogInitiator" EventSet="">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="lockName" comment="" />
				<Variable name="participants" comment="" />
				<Variable name="shouldDrinkBeer" comment="" />
				<Variable name="tableToNotCleanDuringBehavior" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_searchForBeer hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_searchForBeer>
							<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_sitAndRepeatPolylogInitiator_withoutBeer hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_sitAndRepeatPolylogInitiator_withoutBeer>
							</ExternalLock>
						</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sitAndRepeatPolylogReceiver" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="shouldDrinkBeer" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuidData" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuidDataArray" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
					<Parallel successMode="Any" failureMode="Any">
						<Function_searchForBeer shouldDrinkBeer="$shouldDrinkBeer" nodeLabel="77298715" />
						<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;beerInitializationDone&apos;" RunLogic="KeepRunning">
							<Function_sitAndRepeatPolylogReceiver_withoutBeer alias="$alias" wuidData="$wuidData" wuidDataArray="$wuidDataArray" nodeLabel="21764412" />
						</ExternalLock>
					</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="kumaniNaTrosecku_tablePolylogReceiver" EventSet="">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="shouldDrinkBeer" comment="" />
				<Variable name="wuidData" comment="" />
				<Variable name="wuidDataArray" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_searchForBeer hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_searchForBeer>
							<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_sitAndRepeatPolylogReceiver_withoutBeer hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_sitAndRepeatPolylogReceiver_withoutBeer>
							</ExternalLock>
						</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sitOnBench" is_function="1">
		<Variables />
		<Parameters>
			<Variable name="bench" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$bench" stance="sitting" allowAny="false">
					<Sequence>
						<WaitAction />
						<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="bench" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sitAndRepeatMonolog" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="lockName" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="shouldDrinkBeer" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
					<Parallel successMode="Any" failureMode="Any">
						<Function_searchForBeer shouldDrinkBeer="$shouldDrinkBeer" nodeLabel="11041756" />
						<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;beerInitializationDone&apos;" RunLogic="KeepRunning">
							<Function_sitAndRepeatMonolog_withoutBeer alias="$alias" lockName="$lockName" nodeLabel="29872558" />
						</ExternalLock>
					</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="kumaniNaTrosecku_semaphoredMonologue" EventSet="">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="lockName" comment="" />
				<Variable name="shouldDrinkBeer" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-40" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_searchForBeer hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_searchForBeer>
							<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_sitAndRepeatMonolog_withoutBeer hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_sitAndRepeatMonolog_withoutBeer>
							</ExternalLock>
						</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="drunkFaint" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
						<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
							<Child canSkip="1">
								<Parallel successMode="All" failureMode="Any">
								<Function_speech_schedulerMonolog alias="&apos;kumaniNaTrosecku_barkyPriOmdleniKumanaCiVaska&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="36483503" />
									<AnimationAction fragment="&apos;Quest_DrunkFall&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
								</Parallel>
							</Child>
							<OnSuccess canSkip="1">
								<Callback_empty EventName="&apos;OnFinished&apos;" />
							</OnSuccess>
						</FuseBox>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="endNotification">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
							<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child>
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AnimationAction>
									</Parallel>
								</Child>
								<OnSuccess>
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
								</OnSuccess>
							</FuseBox>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="playerForcedChat" is_function="0">
		<Variables>
			<Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;playerForcedChat&apos;" prune="true" negprune="unknown" Parent="" Child="$npc" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<PushToArray array="$participants" value="$__player" direction="Back" />
					<PushToArray array="$participants" value="$npc" direction="Back" />
					<Loop count="-1">
						<IfElseCondition failOnCondition="false" condition="$npc ~= $__null" saveVersion="2">
							<Then canSkip="1">
								<Function_speech_schedulerPolylog_initiator alias="&apos;kumaniNaTrosecku_henrySeSnaziTakyZpivat&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" participants="$participants" participantsMetaroles="" preset="$enum:dialogPreset.chat" nodeLabel="52282109" />
							</Then>
							<Else canSkip="1">
								<ErrorNode Message="&apos;Trying to chat with NULL&apos;" />
							</Else>
						</IfElseCondition>
					</Loop>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="npc" comment="" />
				<Variable name="participants" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-10" editorPosY="-10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</PushToArray>
						<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</PushToArray>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerPolylog_initiator>
								</Then>
								<Else>
									<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ErrorNode>
								</Else>
							</IfElseCondition>
						</Loop>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="setUrgencyDependingOnDistance" is_function="1">
		<Variables>
			<Variable name="distance" type="_float" values="0.0" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="urgency" type="enum:urgency" values="$enum:urgency.default" isPersistent="0" form="single" requirementType="Out" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="30.000000" High="30.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
					<Expression expressions="$urgency = $enum:urgency.instant" />
				</DistanceCondition>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="distance" comment="" />
				<Variable name="urgency" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<DistanceCondition hasInputBreakpoint="0" comment="if used from MLOD, it can theoretically use default urgency, but this behavior is activated while player is far from tables, so instant urgency should work" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</DistanceCondition>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="checkDeadOrUnconscious" is_function="1">
		<Variables>
			<Variable name="break" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="soul" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alive" type="_bool" values="" isPersistent="0" form="single" requirementType="Out" />
			<Variable name="souls" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$alive = true" />
					<ForEach startIndex="0" step="1" array="$souls" iterator="" value="$soul" break="$break">
						<Sequence>
							<IsDeadCheck SoulWUID="$soul" FailSubtMissing="false" saveVersion="2">
								<Then canSkip="1">
									<Expression expressions="$alive = false &#10;$break = true" />
								</Then>
								<Else canSkip="1">
									<Success />
								</Else>
							</IsDeadCheck>
							<IsUnconsciousCheck SoulWUID="$soul" FailSubtMissing="false" saveVersion="2">
								<Then canSkip="1">
									<Expression expressions="$alive = false &#10;$break = true" />
								</Then>
								<Else canSkip="1">
									<Success />
								</Else>
							</IsUnconsciousCheck>
						</Sequence>
					</ForEach>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="break" comment="" />
				<Variable name="soul" comment="" />
				<Variable name="alive" comment="" />
				<Variable name="souls" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Then>
									<Else>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Else>
								</IsDeadCheck>
								<IsUnconsciousCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Then>
									<Else>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Else>
								</IsUnconsciousCheck>
							</Sequence>
						</ForEach>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="turnToTarget" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ForceLook LookTarget="$data" DisableVariations="false">
					<Sequence>
						<WaitAction />
						<Turn target="$data" align="false" />
						<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</ForceLook>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Turn>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</ForceLook>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="innkeeper_scoldPlayer" is_function="0">
		<Variables>
			<Variable name="moveParams" type="additionalMoveParams" values="destChangedThreshold(&apos;300ms&apos;)" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="0.000000" High="20.000000" Negation="false" ValueOnMiddle="false" failOnCondition="false">
						<Move stopWithinDistance="2.000000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="3.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$__player" destinationSpecification2="" destinationSpecification3="" speed="FastRun" additionalParams="$moveParams" pathFindingParams="" staminaPolicy="" pathInfo="" />
					</DistanceCondition>
					<Parallel successMode="All" failureMode="Any">
						<Function_speech_schedulerMonolog alias="&apos;kumaniNaTrosecku_hospodskaNadavaJindroviKvuliVznikleRvacce&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$__player" metarole="" subtitlesDown="false" nodeLabel="44982611" />
						<AnimationAction fragment="" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
					</Parallel>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="empty" EventSet="">
			<Variables>
				<Variable name="moveParams" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
						</DistanceCondition>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_schedulerMonolog>
							<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnimationAction>
						</Parallel>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="villager_pubFightEscalation" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="phase" type="enum:kumaniNaTrosecku_pubFightEscalation" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="vasko" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="vujtek" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
					<ContinuousSwitch>
						<IfCondition failOnCondition="false" condition="$phase == $enum:kumaniNaTrosecku_pubFightEscalation.BarkingFromTable | &#10;$phase == $enum:kumaniNaTrosecku_pubFightEscalation.CumansLeaving">
							<Function_turnToTargetIfStanding target="$vujtek" nodeLabel="78101067" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$phase == $enum:kumaniNaTrosecku_pubFightEscalation.ChasingOutCumans">
							<Sequence>
							<Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="&apos;300ms&apos;" skipInLOD="false" />
							<CrimeFollower Target="$vasko" Role="Assist" RelativeSpeedLimit="AlertedWalk" BlockWay="false" />
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$phase == $enum:kumaniNaTrosecku_pubFightEscalation.BarkingNearPubExit">
							<Parallel successMode="Any" failureMode="Any">
							<CrimeFollower Target="$vasko" Role="Assist" RelativeSpeedLimit="AlertedWalk" BlockWay="false" />
								<Loop count="-1">
									<Sequence>
									<Function_speech_schedulerMonolog alias="&apos;kumaniNaTrosecku_vesnicanNadavaNaVaska&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="69774930" />
									<Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
									</Sequence>
								</Loop>
								<Loop count="-1">
									<Function_randomizedChaseAwayAnimation meanWaitTime="&apos;200ms&apos;" variationWaitTime="&apos;200ms&apos;" nodeLabel="83918024" />
								</Loop>
							</Parallel>
						</IfCondition>
					</ContinuousSwitch>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="kumaniNaTrosecku_villagerPubEscalation" EventSet="">
			<Variables>
				<Variable name="phase" comment="" />
				<Variable name="vasko" comment="" />
				<Variable name="vujtek" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
						<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_turnToTargetIfStanding hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_turnToTargetIfStanding>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<CrimeFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</CrimeFollower>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<CrimeFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</CrimeFollower>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</Loop>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_randomizedChaseAwayAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_randomizedChaseAwayAnimation>
									</Loop>
								</Parallel>
							</IfCondition>
						</ContinuousSwitch>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="vujtek_pubFightEscalation" is_function="0">
		<Variables>
			<Variable name="isFollowingCumans" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="retryCount" type="_int" values="3" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="crimeFollwerTarget" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="dialogParticipants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="phase" type="enum:kumaniNaTrosecku_pubFightEscalation" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
					<Parallel successMode="Any" failureMode="Any">
						<Loop count="-1">
							<Sequence>
								<IfGate atomic="false" condition="$isFollowingCumans" RunLogic="Halt">
									<CrimeFollower Target="$crimeFollwerTarget" Mode="Default" Role="Main" RelativeSpeedLimit="AlertedWalk" DisableGhosting="false" />
								</IfGate>
								<WaitAction />
							</Sequence>
						</Loop>
						<ContinuousSwitch>
							<IfCondition failOnCondition="false" condition="$phase == $enum:kumaniNaTrosecku_pubFightEscalation.BarkingFromTable">
								<Sequence>
									<Parallel successMode="All" failureMode="Any">
										<SuppressFailure>
											<LoopUntil until="Success" attemptCount="$retryCount">
												<Function_speech_schedulerMonolog alias="&apos;kumaniNaTrosecku_fracekSpoustiBitkuUStolu&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="56802392" />
											</LoopUntil>
										</SuppressFailure>
										<Sequence>
											<Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="" />
											<Expression expressions="$isFollowingCumans = true" />
											<DistanceGate Origin="$this.id" ReferencePt="$crimeFollwerTarget" Low="3.000000" High="3.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
												<Function_randomizedChaseAwayAnimation meanWaitTime="&apos;200ms&apos;" variationWaitTime="&apos;200ms&apos;" nodeLabel="92482034" />
											</DistanceGate>
										</Sequence>
									</Parallel>
									<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
								</Sequence>
							</IfCondition>
							<IfCondition failOnCondition="false" condition="$phase == $enum:kumaniNaTrosecku_pubFightEscalation.CumansLeaving">
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</IfCondition>
							<IfCondition failOnCondition="false" condition="$phase == $enum:kumaniNaTrosecku_pubFightEscalation.ChasingOutCumans">
								<Parallel successMode="All" failureMode="Any">
									<Sequence>
										<SuppressFailure>
											<LoopUntil until="Success" attemptCount="$retryCount">
												<Function_speech_schedulerMonolog alias="&apos;kumaniNaTrosecku_vujtekVyhaneniKumanu&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="21622104" />
											</LoopUntil>
										</SuppressFailure>
										<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
									</Sequence>
									<Expression expressions="$isFollowingCumans = true" />
								</Parallel>
							</IfCondition>
							<IfCondition failOnCondition="false" condition="$phase == $enum:kumaniNaTrosecku_pubFightEscalation.BarkingNearPubExit">
								<Parallel successMode="Any" failureMode="Any">
									<Sequence>
										<SuppressFailure>
											<LoopUntil until="Success" attemptCount="$retryCount">
												<Function_npc_ingameDialogInitiator alias="&apos;kumaniNaTrosecku_vujtekSeHadaSVaskem&apos;" participants="$dialogParticipants" nodeLabel="87719149" />
											</LoopUntil>
										</SuppressFailure>
										<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
									</Sequence>
									<Loop count="-1">
										<Function_randomizedChaseAwayAnimation meanWaitTime="&apos;200ms&apos;" variationWaitTime="&apos;200ms&apos;" nodeLabel="30596746" />
									</Loop>
								</Parallel>
							</IfCondition>
						</ContinuousSwitch>
					</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="kumaniNaTrosecku_vujtekPubEscalation" EventSet="endNotification">
			<Variables>
				<Variable name="isFollowingCumans" comment="" />
				<Variable name="retryCount" comment="" />
				<Variable name="crimeFollwerTarget" comment="" />
				<Variable name="dialogParticipants" comment="" />
				<Variable name="phase" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<CrimeFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</CrimeFollower>
									</IfGate>
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
								</Sequence>
							</Loop>
							<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_speech_schedulerMonolog>
												</LoopUntil>
											</SuppressFailure>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
												<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_randomizedChaseAwayAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_randomizedChaseAwayAnimation>
												</DistanceGate>
											</Sequence>
										</Parallel>
										<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</InstantCallback_empty>
									</Sequence>
								</IfCondition>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</IfCondition>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_speech_schedulerMonolog>
												</LoopUntil>
											</SuppressFailure>
											<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</InstantCallback_empty>
										</Sequence>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Parallel>
								</IfCondition>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_npc_ingameDialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_npc_ingameDialogInitiator>
												</LoopUntil>
											</SuppressFailure>
											<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</InstantCallback_empty>
										</Sequence>
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_randomizedChaseAwayAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_randomizedChaseAwayAnimation>
										</Loop>
									</Parallel>
								</IfCondition>
							</ContinuousSwitch>
						</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="cuman_pubFightEscalation" is_function="0">
		<Variables>
			<Variable name="addMoveParams" type="additionalMoveParams" values="destChangedThreshold(&apos;500ms&apos;)" isPersistent="0" form="single" />
			<Variable name="isFollowingVasko" type="_bool" values="false" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="phase" type="enum:kumaniNaTrosecku_pubFightEscalation" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="vasko" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="vujtek" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
					<Parallel successMode="Any" failureMode="Any">
						<Loop count="-1">
							<IfGate atomic="false" condition="~$isFollowingVasko" RunLogic="Halt">
								<Function_turnToTargetIfStanding target="$vujtek" nodeLabel="39124752" />
							</IfGate>
						</Loop>
						<Loop count="-1">
							<IfGate atomic="false" condition="$isFollowingVasko" RunLogic="Halt">
								<CrimeFollower Target="$vasko" Mode="Default" Role="Main" RelativeSpeedLimit="Walk" DisableGhosting="false" />
							</IfGate>
						</Loop>
						<ContinuousSwitch>
							<IfCondition failOnCondition="false" condition="$phase == $enum:kumaniNaTrosecku_pubFightEscalation.BarkingFromTable">
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</IfCondition>
							<IfCondition failOnCondition="false" condition="$phase == $enum:kumaniNaTrosecku_pubFightEscalation.CumansLeaving">
								<Sequence>
									<Wait duration="&apos;1500ms&apos;" timeType="GameTime" doFail="false" variation="&apos;1000ms&apos;" />
									<Expression expressions="$isFollowingVasko = true" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</IfCondition>
							<IfCondition failOnCondition="false" condition="$phase == $enum:kumaniNaTrosecku_pubFightEscalation.ChasingOutCumans">
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</IfCondition>
							<IfCondition failOnCondition="false" condition="$phase == $enum:kumaniNaTrosecku_pubFightEscalation.BarkingNearPubExit">
								<Loop count="-1">
									<SuppressFailure>
										<Function_speech_schedulerMonolog alias="&apos;kumaniNaTrosecku_kumanNadavaNaVujtka&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="14985334" />
									</SuppressFailure>
								</Loop>
							</IfCondition>
						</ContinuousSwitch>
					</Parallel>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="kumaniNaTrosecku_generalPubEscalation" EventSet="">
			<Variables>
				<Variable name="addMoveParams" comment="" />
				<Variable name="isFollowingVasko" comment="" />
				<Variable name="phase" comment="" />
				<Variable name="vasko" comment="" />
				<Variable name="vujtek" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_turnToTargetIfStanding hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_turnToTargetIfStanding>
								</IfGate>
							</Loop>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<CrimeFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</CrimeFollower>
								</IfGate>
							</Loop>
							<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</IfCondition>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</IfCondition>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</IfCondition>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</SuppressFailure>
									</Loop>
								</IfCondition>
							</ContinuousSwitch>
						</Parallel>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="vasko_pubFightEscalation" is_function="0">
		<Variables>
			<Variable name="isDelayingMoveCancellation" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="isLeavingPub" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="isTurningToVujtek" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="pathFindingParams" type="pathFindingParams" values="usePaths(false)" isPersistent="0" form="single" />
			<Variable name="retryCount" type="_int" values="6" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="dialogParticipants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="leaveSpot" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="phase" type="enum:kumaniNaTrosecku_pubFightEscalation" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="vujtek" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
						<Parallel successMode="Any" failureMode="Any">
							<Loop count="-1">
								<IfGate atomic="false" condition="$isTurningToVujtek" RunLogic="Halt">
									<Sequence>
										<ForceLook LookTarget="$vujtek" DisableVariations="false">
											<Turn target="$vujtek" align="false" />
										</ForceLook>
										<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</IfGate>
							</Loop>
							<Loop count="-1">
								<IfGate atomic="false" condition="$isLeavingPub" RunLogic="Halt">
									<Sequence>
										<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$leaveSpot" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="$pathFindingParams" staminaPolicy="" pathInfo="" />
										<Expression expressions="$isLeavingPub = false &#10;$isTurningToVujtek = true" />
										<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</IfGate>
							</Loop>
							<ContinuousSwitch>
								<IfCondition failOnCondition="false" condition="$phase == $enum:kumaniNaTrosecku_pubFightEscalation.BarkingFromTable">
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$phase == $enum:kumaniNaTrosecku_pubFightEscalation.CumansLeaving">
									<Sequence>
										<Expression expressions="$isLeavingPub = true" />
										<SuppressFailure>
											<LoopUntil until="Success" attemptCount="$retryCount">
												<Selector>
													<Function_speech_schedulerMonolog alias="&apos;kumaniNaTrosecku_vaskoBarkujeKOdchodu&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="32797879" />
													<Sequence>
														<Wait duration="&apos;200ms&apos;" timeType="GameTime" doFail="false" variation="" />
														<Fail />
													</Sequence>
												</Selector>
											</LoopUntil>
										</SuppressFailure>
										<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
									</Sequence>
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$phase == $enum:kumaniNaTrosecku_pubFightEscalation.ChasingOutCumans">
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$phase == $enum:kumaniNaTrosecku_pubFightEscalation.BarkingNearPubExit">
									<Sequence>
										<LoopUntil until="Success" attemptCount="$retryCount">
											<SuppressFailure>
												<Function_npc_ingameDialogRecipient alias="&apos;kumaniNaTrosecku_vujtekSeHadaSVaskem&apos;" participants="$dialogParticipants" nodeLabel="53605556" />
											</SuppressFailure>
										</LoopUntil>
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</IfCondition>
							</ContinuousSwitch>
						</Parallel>
					</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer>
			<WaitAction />
		</ForestContainer>
		<EditorData Signature="kumaniNaTrosecku_vaskoPubEscalation" EventSet="endNotification">
			<Variables>
				<Variable name="isDelayingMoveCancellation" comment="" />
				<Variable name="isLeavingPub" comment="" />
				<Variable name="isTurningToVujtek" comment="" />
				<Variable name="pathFindingParams" comment="" />
				<Variable name="retryCount" comment="" />
				<Variable name="dialogParticipants" comment="" />
				<Variable name="leaveSpot" comment="" />
				<Variable name="phase" comment="" />
				<Variable name="vujtek" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Turn>
											</ForceLook>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</IfGate>
								</Loop>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Move>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</IfGate>
								</Loop>
								<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_speech_schedulerMonolog>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
															<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Fail>
														</Sequence>
													</Selector>
												</LoopUntil>
											</SuppressFailure>
											<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</InstantCallback_empty>
										</Sequence>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_npc_ingameDialogRecipient hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_npc_ingameDialogRecipient>
												</SuppressFailure>
											</LoopUntil>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</IfCondition>
								</ContinuousSwitch>
							</Parallel>
						</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="turnToTargetIfStanding" is_function="1">
		<Variables />
		<Parameters>
			<Variable name="target" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<StanceCheck soul="$this.id" stance="standing" smartObject="" negate="false" failOnCondition="false" saveVersion="2">
						<Then canSkip="1">
							<Sequence>
								<WaitAction />
								<ForceLook LookTarget="$target" DisableVariations="false">
									<Turn target="$target" align="false" />
								</ForceLook>
							</Sequence>
						</Then>
						<Else canSkip="1">
							<Success />
						</Else>
					</StanceCheck>
					<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<StanceCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Turn>
									</ForceLook>
								</Sequence>
							</Then>
							<Else>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Else>
						</StanceCheck>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="cumans_pubFightEscalation" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="randomizedChaseAwayAnimation" is_function="1">
		<Variables />
		<Parameters>
			<Variable name="meanWaitTime" type="_string" values="200ms" isPersistent="0" form="single" requirementType="In" />
			<Variable name="variationWaitTime" type="_string" values="200ms" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Wait duration="$meanWaitTime" timeType="GameTime" doFail="false" variation="$variationWaitTime" skipInLOD="false" />
					<RandomGate opensWithChance="0.200000" saveVersion="2">
						<Then canSkip="1">
							<PlayAdditiveAnimation Fragment="&apos;CrimeGoAwayHard&apos;" Tags="" />
						</Then>
						<Else canSkip="1">
							<PlayAdditiveAnimation Fragment="&apos;CrimeGoAwayMedium&apos;" Tags="" />
						</Else>
					</RandomGate>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence />
			<Wait duration="&apos;200ms&apos;" timeType="GameTime" doFail="false" variation="&apos;200ms&apos;" skipInLOD="false" />
			<PlayAdditiveAnimation Fragment="&apos;CrimeGoAwayHard&apos;" Tags="" />
			<RandomGate opensWithChance="0.200000" saveVersion="2" />
			<PlayAdditiveAnimation Fragment="&apos;CrimeGoAwayMedium&apos;" Tags="" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="meanWaitTime" comment="" />
				<Variable name="variationWaitTime" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</PlayAdditiveAnimation>
							</Then>
							<Else>
								<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</PlayAdditiveAnimation>
							</Else>
						</RandomGate>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="1690" editorPosY="820" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Sequence>
				<Wait editorPosX="1830" editorPosY="770" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Wait>
				<PlayAdditiveAnimation editorPosX="2080" editorPosY="780" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</PlayAdditiveAnimation>
				<RandomGate editorPosX="1850" editorPosY="890" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
				</RandomGate>
				<PlayAdditiveAnimation editorPosX="2090" editorPosY="940" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</PlayAdditiveAnimation>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="spookedBarkAndAnimation" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="crime_keepStateAndItems" enabled="true">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Parallel successMode="All" failureMode="Any">
							<AnimationAction fragment="&apos;CrimeScareMedium&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
								<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$__player" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="86613150" />
						</Parallel>
					</Child>
					<OnSuccess canSkip="1">
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</OnSuccess>
				</FuseBox>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="string" EventSet="endNotification">
			<Variables>
				<Variable name="string" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</AnimationAction>
								<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerMonolog>
							</Parallel>
						</Child>
						<OnSuccess>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnSuccess>
					</FuseBox>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="drunkVomit" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<AnimationAction fragment="&apos;VomitDrunk&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="&apos;2s&apos;" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AnimationAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="vomit" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="useTorch" is_function="0">
		<Variables>
			<Variable name="torch" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Left" item="$torch" allowAny="false" decisionLabel="lightSource" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<GetLightSourceItem Item="$torch" />
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<WaitAction />
							<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="torch" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetLightSourceItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetLightSourceItem>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_noActionMonolog" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.tryDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="74764232" />
					</Child>
					<OnSuccess canSkip="1">
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_schedulerMonolog>
						</Child>
						<OnSuccess>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="extraQuestGuard_moveToPlayer" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<CrimeFollower Target="$__player" Mode="Default" Role="Main" RelativeSpeedLimit="Dash" DisableGhosting="true" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<CrimeFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</CrimeFollower>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="waitWithCurrentEquip" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
					<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
						<Sequence>
							<WaitAction />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sitAndRepeatPolylogReceiver_withoutBeer" is_function="1">
		<Variables>
			<Variable name="areAllParticipantsReady" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="participantsCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="urgency" type="enum:urgency" values="$enum:urgency.default" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuidData" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuidDataArray" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Expression expressions="$participantsCount = #wuidDataArray" />
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<Function_setUrgencyDependingOnDistance urgency="$urgency" nodeLabel="45678536" />
					<UrgencyDecorator Urgency="$urgency">
						<Parallel successMode="Any" failureMode="Any">
							<Loop count="-1">
								<Sequence>
									<Function_checkDeadOrUnconscious souls="$wuidDataArray" alive="$areAllParticipantsReady" nodeLabel="47563760" />
									<StanceBarrier soul="$this.id" stance="sitting" smartObject="" negate="false" failOnCondition="false" RunLogic="Halt">
										<IfCondition failOnCondition="false" condition="$areAllParticipantsReady">
											<SuppressFailure>
												<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$alias" initiator="$wuidData" numberOfParticipants="$participantsCount" useIngameDialogPoseAndAnimations="false" nodeLabel="22635492" />
											</SuppressFailure>
										</IfCondition>
									</StanceBarrier>
									<Wait duration="&apos;20s&apos;" timeType="GameTime" doFail="false" variation="&apos;15s&apos;" />
									<VarOperation varName="$areAllParticipantsReady" targetVarName="" operation="Reinit" argument="" />
								</Sequence>
							</Loop>
							<Loop count="-1">
								<Function_sitOnBench bench="$__resource.id" nodeLabel="40297393" />
							</Loop>
						</Parallel>
					</UrgencyDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="areAllParticipantsReady" comment="" />
				<Variable name="participantsCount" comment="" />
				<Variable name="urgency" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="wuidData" comment="" />
				<Variable name="wuidDataArray" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_setUrgencyDependingOnDistance hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_setUrgencyDependingOnDistance>
						<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_checkDeadOrUnconscious hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_checkDeadOrUnconscious>
										<StanceBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_speech_schedulerPolylog_receiver>
												</SuppressFailure>
											</IfCondition>
										</StanceBarrier>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
										<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</VarOperation>
									</Sequence>
								</Loop>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_sitOnBench hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_sitOnBench>
								</Loop>
							</Parallel>
						</UrgencyDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sitAndRepeatPolylogInitiator_withoutBeer" is_function="1">
		<Variables>
			<Variable name="areAllParticipantsReady" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="urgency" type="enum:urgency" values="$enum:urgency.default" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="lockName" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="tableToNotCleanDuringBehavior" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" optional="1" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Function_setUrgencyDependingOnDistance urgency="$urgency" nodeLabel="38285221" />
					<UrgencyDecorator Urgency="$urgency">
						<Parallel successMode="Any" failureMode="Any">
							<Loop count="-1">
								<Sequence>
									<Function_checkDeadOrUnconscious souls="$participants" alive="$areAllParticipantsReady" nodeLabel="31144257" />
									<StanceBarrier soul="$this.id" stance="sitting" smartObject="" negate="false" failOnCondition="false" RunLogic="Halt">
										<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$lockName&apos;">
											<IfCondition failOnCondition="false" condition="$areAllParticipantsReady">
												<SuppressFailure>
													<Function_speech_schedulerPolylog_initiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" areaForPlayer="" context="" customParameters="" metarole="" participants="$participants" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="78825991" />
												</SuppressFailure>
											</IfCondition>
										</Semaphore>
									</StanceBarrier>
									<Wait duration="&apos;20s&apos;" timeType="GameTime" doFail="false" variation="&apos;15s&apos;" />
									<VarOperation varName="$areAllParticipantsReady" targetVarName="" operation="Reinit" argument="" />
								</Sequence>
							</Loop>
							<IfElseCondition failOnCondition="false" condition="$tableToNotCleanDuringBehavior ~= $__null" saveVersion="2">
								<Then canSkip="1">
									<ChangeBehaviorStateElement smartEntity="$tableToNotCleanDuringBehavior" behavior="&apos;use_bartender_cleaningTable&apos;" state="Disabled" allowAnyState="false" enabled="true">
										<Loop count="-1">
											<Function_sitOnBench bench="$__resource.id" nodeLabel="76530006" />
										</Loop>
									</ChangeBehaviorStateElement>
								</Then>
								<Else canSkip="1">
									<Loop count="-1">
										<Function_sitOnBench bench="$__resource.id" nodeLabel="43405469" />
									</Loop>
								</Else>
							</IfElseCondition>
						</Parallel>
					</UrgencyDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="areAllParticipantsReady" comment="" />
				<Variable name="urgency" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="lockName" comment="" />
				<Variable name="participants" comment="" />
				<Variable name="tableToNotCleanDuringBehavior" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_setUrgencyDependingOnDistance hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_setUrgencyDependingOnDistance>
						<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_checkDeadOrUnconscious hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_checkDeadOrUnconscious>
										<StanceBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_speech_schedulerPolylog_initiator>
													</SuppressFailure>
												</IfCondition>
											</Semaphore>
										</StanceBarrier>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
										<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</VarOperation>
									</Sequence>
								</Loop>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_sitOnBench hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_sitOnBench>
											</Loop>
										</ChangeBehaviorStateElement>
									</Then>
									<Else>
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_sitOnBench hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_sitOnBench>
										</Loop>
									</Else>
								</IfElseCondition>
							</Parallel>
						</UrgencyDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sitAndRepeatMonolog_withoutBeer" is_function="1">
		<Variables>
			<Variable name="urgency" type="enum:urgency" values="$enum:urgency.default" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="lockName" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Function_setUrgencyDependingOnDistance urgency="$urgency" nodeLabel="69946478" />
					<UrgencyDecorator Urgency="$urgency">
						<Parallel successMode="Any" failureMode="Any">
							<Loop count="-1">
								<Sequence>
									<StanceBarrier soul="$this.id" stance="sitting" smartObject="" negate="false" failOnCondition="false" RunLogic="Halt">
										<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$lockName&apos;">
											<Function_speech_schedulerMonolog alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="67809881" />
										</Semaphore>
									</StanceBarrier>
									<Wait duration="&apos;30s&apos;" timeType="GameTime" doFail="false" variation="&apos;15s&apos;" />
								</Sequence>
							</Loop>
							<Loop count="-1">
								<Function_sitOnBench bench="$__resource.id" nodeLabel="63047418" />
							</Loop>
						</Parallel>
					</UrgencyDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="urgency" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="lockName" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_setUrgencyDependingOnDistance hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_setUrgencyDependingOnDistance>
						<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<StanceBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerMonolog>
											</Semaphore>
										</StanceBarrier>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Loop>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_sitOnBench hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_sitOnBench>
								</Loop>
							</Parallel>
						</UrgencyDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="searchForBeer" is_function="1">
		<Variables>
			<Variable name="beerSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeerSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="lockName" type="_string" values="&apos;beerInitializationDone&apos;" isPersistent="0" form="single" />
			<Variable name="tankard" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="shouldDrinkBeer" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
						<IfCondition failOnCondition="false" condition="$shouldDrinkBeer">
							<Sequence>
								<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;guestBeer&apos;" prune="true" negprune="unknown" Parent="" Child="$beerSlot" Data="" />
								</GraphSearch>
								<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;guestHidden&apos;" prune="true" negprune="unknown" Parent="" Child="$hiddenBeerSlot" Data="" />
								</GraphSearch>
							</Sequence>
						</IfCondition>
			</OnInit>
			<Behavior canSkip="1">
						<IfElseCondition failOnCondition="false" condition="$shouldDrinkBeer" saveVersion="2">
							<Then canSkip="1">
								<AddLinkElement from="$this.id" to="$hiddenBeerSlot" tag="&apos;guestHidden&apos;" data="" enabled="true">
									<AddLinkElement from="$this.id" to="$beerSlot" tag="&apos;guestBeer&apos;" data="" enabled="true">
										<HandContentElement hand="Right" item="$tankard" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="tavern_stein" useDecision="false" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<GetItemInSlot slot="$hiddenBeerSlot" useHomeItem="true" item="$tankard" />
											</Search>
											<Exec canSkip="1">
												<ItemSetAsideElement item="$tankard" slot="$beerSlot" enabled="true">
													<Sequence>
														<SetExternalLock LockManagerType="Intellect" Locked="false" LockName="&apos;$lockName&apos;" />
														<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
													</Sequence>
												</ItemSetAsideElement>
											</Exec>
										</HandContentElement>
									</AddLinkElement>
								</AddLinkElement>
							</Then>
							<Else canSkip="1">
								<Sequence>
									<SetExternalLock LockManagerType="Intellect" Locked="false" LockName="&apos;$lockName&apos;" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</Else>
						</IfElseCondition>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="beerSlot" comment="" />
				<Variable name="hiddenBeerSlot" comment="" />
				<Variable name="lockName" comment="" />
				<Variable name="tankard" comment="" />
				<Variable name="shouldDrinkBeer" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
								</Sequence>
							</IfCondition>
				</OnInit>
				<Behavior>
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetItemInSlot>
												</Search>
												<Exec>
													<ItemSetAsideElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</SetExternalLock>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
													</ItemSetAsideElement>
												</Exec>
											</HandContentElement>
										</AddLinkElement>
									</AddLinkElement>
								</Then>
								<Else>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SetExternalLock>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Else>
							</IfElseCondition>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>