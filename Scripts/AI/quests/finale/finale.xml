<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="playerPraying" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Function_pilgrimage_player_genericPraying dialogContext="" locationObject="$wuid" monologAlias="$string" finishedPrayingMonolog="" nodeLabel="83235717" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="endNotification">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-110" editorPosY="110" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_pilgrimage_player_genericPraying hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_pilgrimage_player_genericPraying>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="katerina_praying" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="isPrayingDone" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="leavingBark" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="prayingBark" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<IfCondition failOnCondition="false" condition="~$isPrayingDone">
							<Sequence>
								<ExactMove directionType="AlignWithEntity" directionSpecification="$wuid" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
								<IfGate atomic="false" condition="~$isPrayingDone" RunLogic="Halt">
									<Loop count="-1">
										<Sequence>
											<UnstanceAction unstance="Quest_PrayingNearDead_noAlign" locationObject="" slaveObject="" />
											<Function_speech_schedulerMonolog alias="$prayingBark" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="95387596" />
											<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										</Sequence>
									</Loop>
								</IfGate>
								<WaitAction />
								<Function_speech_schedulerMonolog alias="$leavingBark" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="14682630" />
							</Sequence>
						</IfCondition>
					</Child>
					<OnSuccess canSkip="1">
						<IfCondition failOnCondition="false" condition="$isPrayingDone">
							<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
						</IfCondition>
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="katerina_praying" EventSet="endNotification">
			<Variables>
				<Variable name="isPrayingDone" comment="" />
				<Variable name="leavingBark" comment="" />
				<Variable name="prayingBark" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExactMove>
									<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</UnstanceAction>
												<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerMonolog>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</Loop>
									</IfGate>
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
								</Sequence>
							</IfCondition>
						</Child>
						<OnSuccess>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantCallback_empty>
							</IfCondition>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="runToThePoint_final" is_function="0">
		<Variables>
			<Variable name="left" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="right" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$right" allowAny="false" decisionLabel="battle_weapon" useDecision="true" saveVersion="2">
					<Search canSkip="1">
						<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$left" RightHand="$right" UseTorchWhenAppropriate="true" />
					</Search>
					<Exec canSkip="1">
						<HandContentElement hand="Left" item="$left" allowAny="false" decisionLabel="battle_shield" useDecision="true" saveVersion="2">
							<Search canSkip="1">
								<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$left" RightHand="$right" UseTorchWhenAppropriate="true" />
							</Search>
							<Exec canSkip="1">
								<Sequence>
									<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
									<Callback_empty EventName="&apos;OnFinished&apos;" />
								</Sequence>
							</Exec>
						</HandContentElement>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="endNotification">
			<Variables>
				<Variable name="left" comment="" />
				<Variable name="right" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetWeaponsFromWeaponSet>
						</Search>
						<Exec>
							<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Search>
									<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetWeaponsFromWeaponSet>
								</Search>
								<Exec>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
									</Sequence>
								</Exec>
							</HandContentElement>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="attackDoor" is_function="0">
		<Variables>
			<Variable name="left" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="point" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="right" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$right" allowAny="false" decisionLabel="battle_axe" useDecision="true" saveVersion="2">
					<Search canSkip="1">
						<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$left" RightHand="$right" UseTorchWhenAppropriate="true" />
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<WaitAction />
							<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;point&apos;" prune="true" negprune="unknown" Parent="" Child="$point" Data="" />
							</GraphSearch>
							<UnstanceAction unstance="GateAttack" locationObject="$point" slaveObject="" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="left" comment="" />
				<Variable name="point" comment="" />
				<Variable name="right" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetWeaponsFromWeaponSet>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<OutputBreakpoints />
								</UnstanceAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="guardIdle" is_function="0">
		<Variables>
			<Variable name="left" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="right" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="weaponLeft" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="weaponRight" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<HandCheck who="$this.id" LeftHand="$left" RightHand="$right" />
					<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$weaponLeft" RightHand="$weaponRight" UseTorchWhenAppropriate="true" />
					<IfCondition failOnCondition="false" condition="$right ~= $weaponRight">
						<DrawAction WeaponSet="Primary" fullBody="false" tags="" useSelectedWeaponSet="false" />
					</IfCondition>
					<AnyDecorator preset="crime_keepStateAndItems" enabled="true">
						<MeleeGuardAutomationDecorator GuardMode="freeBlock" active="true">
							<Sequence>
								<WaitAction />
								<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</MeleeGuardAutomationDecorator>
					</AnyDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="left" comment="" />
				<Variable name="right" comment="" />
				<Variable name="weaponLeft" comment="" />
				<Variable name="weaponRight" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</HandCheck>
						<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetWeaponsFromWeaponSet>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</DrawAction>
						</IfCondition>
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</MeleeGuardAutomationDecorator>
						</AnyDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="player_drawWeapon" is_function="0">
		<Variables>
			<Variable name="left" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="right" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<DrawAction WeaponSet="Primary" fullBody="false" tags="" useSelectedWeaponSet="false" />
					<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="endNotification">
			<Variables>
				<Variable name="left" comment="" />
				<Variable name="right" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</DrawAction>
						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantCallback_empty>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="horse_run" is_function="0">
		<Variables>
			<Variable name="additionalMoveParams" type="additionalMoveParams" values="destChangedThreshold(&apos;1s&apos;)" isPersistent="0" form="single" />
			<Variable name="pathFindingParams" type="pathFindingParams" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<AnimationAction fragment="&apos;Bucking&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" />
					<Expression expressions="$pathFindingParams.useGeneratedNSO = false &#10;$pathFindingParams.usePaths = false" />
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Dash" additionalParams="$additionalMoveParams" pathFindingParams="$pathFindingParams" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="endNotification">
			<Variables>
				<Variable name="additionalMoveParams" comment="" />
				<Variable name="pathFindingParams" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AnimationAction>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantCallback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="guardAndBarkAtPlayer" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Sequence>
						<SuppressFailure>
							<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="3.000000" High="4.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
								<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$__player" metarole="" subtitlesDown="false" nodeLabel="72905471" />
							</DistanceGate>
						</SuppressFailure>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
					<Sequence>
						<UnstanceAction unstance="guard" locationObject="$wuid" slaveObject="" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
								</DistanceGate>
							</SuppressFailure>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="zizka_leanByRail" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="leaningFront" locationObject="$data" slaveObject="" />
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="patrolOnHorse" is_function="0">
		<Variables>
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="point" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="points" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="sortedPoints" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="startPoint" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;point&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$points" saveVersion="2">
							<Child0 canSkip="1">
								<RangeSorter point="" SortOrder="Ascending" Source="Child" />
							</Child0>
						</Nodalyzer>
					</GraphSearch>
					<Expression expressions="$startPoint = $points[0]" />
					<PushToArray array="$sortedPoints" value="$startPoint" direction="Back" />
					<GraphSearch Origin="$startPoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;next&apos;" prune="true" negprune="unknown" Parent="" Child="$point" Data="" />
					</GraphSearch>
					<While doFail="false" propagateChildFail="false" condition="$point ~= $startPoint">
						<Sequence>
							<PushToArray array="$sortedPoints" value="$point" direction="Back" />
							<GraphSearch Origin="$point" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;next&apos;" prune="true" negprune="unknown" Parent="" Child="$point" Data="" />
							</GraphSearch>
						</Sequence>
					</While>
					<Selector>
						<HorseUsageElement horse="$horse" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
							<Search canSkip="1">
								<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
									<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
									<IsHorseAvailableFilter reservationHolder="" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
								</GraphSearch>
							</Search>
							<Exec canSkip="1">
								<StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
									<ForEach startIndex="0" step="1" array="$sortedPoints" iterator="" value="$point" break="">
										<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="2.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$point" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									</ForEach>
								</StanceElement>
							</Exec>
						</HorseUsageElement>
						<ForEach startIndex="0" step="1" array="$sortedPoints" iterator="" value="$point" break="">
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="2.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$point" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
						</ForEach>
					</Selector>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="horse" comment="" />
				<Variable name="point" comment="" />
				<Variable name="points" comment="" />
				<Variable name="sortedPoints" comment="" />
				<Variable name="startPoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child0>
									<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</RangeSorter>
								</Child0>
							</Nodalyzer>
						</GraphSearch>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</PushToArray>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</PushToArray>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
							</Sequence>
						</While>
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<HorseUsageElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Search>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SoulIsAliveFilter>
										<IsHorseAvailableFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</IsHorseAvailableFilter>
									</GraphSearch>
								</Search>
								<Exec>
									<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Move>
										</ForEach>
									</StanceElement>
								</Exec>
							</HorseUsageElement>
							<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
							</ForEach>
						</Selector>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="goOutAndFight" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<DrawAction WeaponSet="Primary" fullBody="false" tags="" useSelectedWeaponSet="false" />
					<AnyDecorator preset="crime_keepItems" enabled="true">
						<Sequence>
							<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;goingDown&apos;">
								<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Semaphore>
							<DisableCollisionAvoidance>
								<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="2.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							</DisableCollisionAvoidance>
							<MeleeOffenseAutomationDecorator active="true">
								<MeleeDefenseAutomationDecorator active="true">
									<MeleeGuardAutomationDecorator GuardMode="automate" active="true">
										<WeaponAutomationDecorator WeaponChange="melee" active="true">
											<CombatFollowerDecorator ProbablisticDrivenSweetSpot="true" RPGSweetSpotArcDriver="true" active="true">
												<CombatAction TargetNPC="$__player" RelationOverride="None" />
											</CombatFollowerDecorator>
										</WeaponAutomationDecorator>
									</MeleeGuardAutomationDecorator>
								</MeleeDefenseAutomationDecorator>
							</MeleeOffenseAutomationDecorator>
						</Sequence>
					</AnyDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</DrawAction>
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Semaphore>
								<DisableCollisionAvoidance hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Move>
								</DisableCollisionAvoidance>
								<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<MeleeDefenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<CombatFollowerDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</CombatAction>
												</CombatFollowerDecorator>
											</WeaponAutomationDecorator>
										</MeleeGuardAutomationDecorator>
									</MeleeDefenseAutomationDecorator>
								</MeleeOffenseAutomationDecorator>
							</Sequence>
						</AnyDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pretendDead" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
					<EntityContextElement context="crime_ignoredCorpse" enabled="true">
						<EntityContextPresetElement contextPreset="switch_unresponsive" enabled="true">
							<Sequence>
								<UnstanceAction unstance="deadBody_lyingOnPavise_01" locationObject="" slaveObject="" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</EntityContextPresetElement>
					</EntityContextElement>
				</EntityContextElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="30" editorPosY="-30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContextPresetElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</EntityContextPresetElement>
						</EntityContextElement>
					</EntityContextElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="lordsDialog" is_function="0">
		<Variables>
			<Variable name="currentAlias" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="dialogAnimationApproach" type="enum:animationApproach" values="enum:animationApproach.dontPlayDialogAnimations" isPersistent="0" form="single" />
			<Variable name="isBowing" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="isMoving" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="moveParams" type="additionalMoveParams" values="destChangedThreshold(&apos;500ms&apos;)" isPersistent="0" form="single" />
			<Variable name="selectedAlias" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="bowAlias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="dialogParticipant" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="isThisNpcInitiator" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="phase" type="enum:finale_lordsDialog" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="talkAlias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Loop count="-1">
						<Sequence>
							<IfGate atomic="false" condition="$isMoving" RunLogic="Halt">
								<Move stopWithinDistance="1.000000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="1.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$dialogParticipant" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="$moveParams" pathFindingParams="" staminaPolicy="" pathInfo="" />
							</IfGate>
							<UrgencyDecorator Urgency="Fast">
								<WaitAction />
							</UrgencyDecorator>
							<StopMovement waitUntilStopped="false" />
							<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
						</Sequence>
					</Loop>
					<Loop count="-1">
						<IfGate atomic="false" condition="$isBowing" RunLogic="Halt">
							<Sequence>
								<IfCondition failOnCondition="false" condition="~$isThisNpcInitiator">
									<Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</IfCondition>
								<AnimationAction fragment="" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
								<Expression expressions="$isBowing = false" />
							</Sequence>
						</IfGate>
					</Loop>
					<Loop count="-1">
						<IfGate atomic="false" condition="$currentAlias == $selectedAlias &amp; $currentAlias ~= &apos;&apos;" RunLogic="Halt">
							<Sequence>
								<IfElseCondition failOnCondition="false" condition="$isThisNpcInitiator" saveVersion="2">
									<Then canSkip="1">
										<Function_speech_schedulerPolylog_initiator alias="$currentAlias" animationApproach="$enum:animationApproach" areaForPlayer="" context="" customParameters="" metarole="" participants="$dialogParticipant" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="42367799" />
									</Then>
									<Else canSkip="1">
										<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$currentAlias" initiator="$dialogParticipant" numberOfParticipants="2" useIngameDialogPoseAndAnimations="false" nodeLabel="19999641" />
									</Else>
								</IfElseCondition>
								<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
							</Sequence>
						</IfGate>
					</Loop>
					<ContinuousSwitch>
						<IfCondition failOnCondition="false" condition="$phase == $enum:finale_lordsDialog.Approaching">
							<Expression expressions="$isMoving = true &#10;$isBowing = false &#10;$selectedAlias = &apos;&apos;" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$phase == $enum:finale_lordsDialog.Bowing">
							<Expression expressions="$isMoving = false &#10;$isBowing = true &#10;$selectedAlias = $bowAlias &#10;$dialogAnimationApproach = $enum:animationApproach.dontPlayDialogAnimations" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$phase == $enum:finale_lordsDialog.Talking">
							<Expression expressions="$isMoving = false &#10;$isBowing = false &#10;$selectedAlias = $talkAlias &#10;$dialogAnimationApproach = $enum:animationApproach.tryDialogAnimations" />
						</IfCondition>
					</ContinuousSwitch>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="finale_lordsDialog" EventSet="endNotification">
			<Variables>
				<Variable name="currentAlias" comment="" />
				<Variable name="dialogAnimationApproach" comment="" />
				<Variable name="isBowing" comment="" />
				<Variable name="isMoving" comment="" />
				<Variable name="moveParams" comment="" />
				<Variable name="selectedAlias" comment="" />
				<Variable name="bowAlias" comment="" />
				<Variable name="dialogParticipant" comment="" />
				<Variable name="isThisNpcInitiator" comment="" />
				<Variable name="phase" comment="" />
				<Variable name="talkAlias" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Move>
								</IfGate>
								<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
								</UrgencyDecorator>
								<StopMovement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</StopMovement>
								<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantCallback_empty>
							</Sequence>
						</Loop>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</IfCondition>
									<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AnimationAction>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
							</IfGate>
						</Loop>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerPolylog_initiator>
										</Then>
										<Else>
											<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerPolylog_receiver>
										</Else>
									</IfElseCondition>
									<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantCallback_empty>
								</Sequence>
							</IfGate>
						</Loop>
						<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ContinuousSwitch>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="finale_pushLadder" is_function="0">
		<Variables>
			<Variable name="dropSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="halbert" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ladderEntity" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ladderHeight" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="left" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="particle" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="placeSlot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$data" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;ladderSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$placeSlot" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$data" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;dropSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$dropSlot" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$data" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;ladder&apos;" prune="true" negprune="unknown" Parent="" Child="$ladderEntity" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$ladderEntity" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;ladderHeight&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$ladderHeight" />
					</GraphSearch>
					<SetVisibility ItemWUID="$ladderEntity" Visibility="false" />
					<DrawAction WeaponSet="Oversized" fullBody="false" tags="" useSelectedWeaponSet="false" />
					<MoveParamsDecorator speed="Run" pathFindingParams="" doorClosingPolicy="Automatic">
						<HandContentElement hand="Right" item="$halbert" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_halbert" useDecision="true" enabled="true" saveVersion="2">
							<Search canSkip="1">
								<IsWeaponDrawn who="$this.id" WeaponSet="Oversized" saveVersion="2">
									<Then canSkip="1">
										<HandCheck who="$this.id" LeftHand="$left" RightHand="$halbert" />
									</Then>
									<Else canSkip="1">
										<CreateItem ItemGUID="&apos;e5f25908-a843-456a-b095-c31db34aa577&apos;" Amount="1" CreatedItem="$halbert" Target="$this.id" NotifyUI="false" />
									</Else>
								</IsWeaponDrawn>
							</Search>
							<Exec canSkip="1">
								<Sequence>
									<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="1.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									<EntityContext context="combat_actorSupressHitreactionAnimation" target="$this.id">
										<Parallel successMode="Any" failureMode="Any">
											<AnimationAction fragment="&apos;GuardHlbrdPushAway&apos;" tags="$ladderHeight" eventReferenceObject="$data" alignObject="$data" slaveObject="" resourceOverride="" allowTorchForPlayer="false">
												<EventData_pickup Slot="$placeSlot" name="&apos;placeSlot&apos;" />
												<EventData_place Slot="$dropSlot" name="&apos;dropSlot&apos;" />
											</AnimationAction>
											<Sequence>
												<SuppressFailure>
													<Sequence>
														<Wait duration="&apos;4500&apos;" timeType="GameTime" doFail="false" variation="" />
														<GraphSearch Origin="$data" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<LinkTagFilter tag="&apos;particle&apos;" prune="true" negprune="unknown" Parent="" Child="$particle" Data="" />
														</GraphSearch>
														<ParticleEffectControl ParticleWuid="$particle" StartStopChoice="Start" />
														<Wait duration="&apos;400&apos;" timeType="GameTime" doFail="false" variation="" />
														<ExecuteSoundTrigger entity="$particle" triggerName="&apos;q_M11_gate_crash_open2&apos;" stop="false" />
													</Sequence>
												</SuppressFailure>
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</Parallel>
									</EntityContext>
								</Sequence>
							</Exec>
						</HandContentElement>
					</MoveParamsDecorator>
					<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="dropSlot" comment="" />
				<Variable name="halbert" comment="" />
				<Variable name="ladderEntity" comment="" />
				<Variable name="ladderHeight" comment="" />
				<Variable name="left" comment="" />
				<Variable name="particle" comment="" />
				<Variable name="placeSlot" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<SetVisibility hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SetVisibility>
						<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</DrawAction>
						<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Search>
									<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</HandCheck>
										</Then>
										<Else>
											<CreateItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</CreateItem>
										</Else>
									</IsWeaponDrawn>
								</Search>
								<Exec>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
										<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</EventData_pickup>
													<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</EventData_place>
												</AnimationAction>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
															<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
															</GraphSearch>
															<ParticleEffectControl hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</ParticleEffectControl>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
															<ExecuteSoundTrigger hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</ExecuteSoundTrigger>
														</Sequence>
													</SuppressFailure>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</Parallel>
										</EntityContext>
									</Sequence>
								</Exec>
							</HandContentElement>
						</MoveParamsDecorator>
						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantCallback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="runToTheGateAndWait" is_function="0">
		<Variables>
			<Variable name="left" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="point" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="right" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="weaponCategory" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="weaponSubtype" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="weaponType" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;point&apos;" prune="true" negprune="unknown" Parent="" Child="$point" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<DisableCollisionAvoidance>
					<AnyDecorator preset="crime_keepItems" enabled="true">
						<Sequence>
							<ExactMove directionType="AlignWithEntity" directionSpecification="$point" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$point" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$left" RightHand="$right" UseTorchWhenAppropriate="true" />
							<IfElseCondition failOnCondition="false" condition="$left ~= $__null" saveVersion="2">
								<Then canSkip="1">
									<UnstanceAction unstance="BattleShswShld" locationObject="" slaveObject="" />
								</Then>
								<Else canSkip="1">
									<Sequence>
										<GetItemType WUID="$right" OutCategory="$weaponCategory" OutType="$weaponType" OutSubType="$weaponSubtype" />
										<IfElseCondition failOnCondition="false" condition="$weaponType == &apos;longsword&apos;" saveVersion="2">
											<Then canSkip="1">
												<UnstanceAction unstance="BattleLngsw" locationObject="" slaveObject="" />
											</Then>
											<Else canSkip="1">
												<WaitAction />
											</Else>
										</IfElseCondition>
									</Sequence>
								</Else>
							</IfElseCondition>
							<Loop count="-1">
								<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="0.000000" High="10.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
									<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;barkOnPlayer&apos;">
										<Sequence>
											<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
											<Function_speech_schedulerMonolog alias="&apos;finale_vojaciNaMosteVolajiNaHraceAbyOtevrel&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="39171062" />
										</Sequence>
									</Semaphore>
								</DistanceGate>
							</Loop>
						</Sequence>
					</AnyDecorator>
				</DisableCollisionAvoidance>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="left" comment="" />
				<Variable name="point" comment="" />
				<Variable name="right" comment="" />
				<Variable name="weaponCategory" comment="" />
				<Variable name="weaponSubtype" comment="" />
				<Variable name="weaponType" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<DisableCollisionAvoidance hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
								<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetWeaponsFromWeaponSet>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</UnstanceAction>
									</Then>
									<Else>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GetItemType hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetItemType>
											<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</UnstanceAction>
												</Then>
												<Else>
													<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WaitAction>
												</Else>
											</IfElseCondition>
										</Sequence>
									</Else>
								</IfElseCondition>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
												<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerMonolog>
											</Sequence>
										</Semaphore>
									</DistanceGate>
								</Loop>
							</Sequence>
						</AnyDecorator>
					</DisableCollisionAvoidance>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bossChatOnPlayer" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="aliasChat" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="crime_keepStateAndItems" enabled="true">
					<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
						<Child canSkip="1">
							<Parallel successMode="Any" failureMode="Any">
								<ForceLook LookTarget="$__player" DisableVariations="false">
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</ForceLook>
								<LoopUntil until="Success" attemptCount="5">
									<Function_speech_dialogInitiator alias="$aliasChat" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="$__null" customParameters="$__null" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="65159091" />
								</LoopUntil>
							</Parallel>
						</Child>
						<OnSuccess canSkip="1">
							<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
						</OnSuccess>
					</FuseBox>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="chatOnPlayer" EventSet="endNotification">
			<Variables>
				<Variable name="aliasChat" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</ForceLook>
									<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_dialogInitiator>
									</LoopUntil>
								</Parallel>
							</Child>
							<OnSuccess>
								<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantCallback_empty>
							</OnSuccess>
						</FuseBox>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="getOnLadder" is_function="0">
		<Variables>
			<Variable name="ladder" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ladderBarkArea" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ladderSO" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;ladderSO&apos;" prune="true" negprune="unknown" Parent="" Child="$ladderSO" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$ladderSO" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;ladder&apos;" prune="true" negprune="unknown" Parent="" Child="$ladder" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;ladderBarkArea&apos;" prune="true" negprune="unknown" Parent="" Child="$ladderBarkArea" Data="" />
					</GraphSearch>
					<IsInsideArea Origin="$this.id" Area="$ladderBarkArea" FailSubtMissing="false" saveVersion="2">
						<Then canSkip="1">
							<Success />
						</Then>
						<Else canSkip="1">
							<AreaPresenceGate aiObjects="$this.id" area="$ladderBarkArea" amount="AtLeastOne" presence="NotThere" RunLogic="Halt">
								<AnyDecorator preset="crime_keepItems" enabled="true">
									<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="5.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$ladder" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
								</AnyDecorator>
							</AreaPresenceGate>
						</Else>
					</IsInsideArea>
					<Parallel successMode="Any" failureMode="Any">
						<Sequence>
							<SuppressFailure>
								<Function_speech_schedulerMonolog alias="&apos;finale_vojakBarkujeKdyzBeziNaZebrik&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="true" nodeLabel="72672132" />
							</SuppressFailure>
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
						<Sequence>
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="1.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$ladder" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							<MoveParamsDecorator speed="Run" pathFindingParams="" doorClosingPolicy="Automatic">
								<GetOnLadder Ladder="$ladder" />
							</MoveParamsDecorator>
							<ClimbLadder Speed="3.000000" />
							<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
						</Sequence>
					</Parallel>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="empty" EventSet="endNotification">
			<Variables>
				<Variable name="ladder" comment="" />
				<Variable name="ladderBarkArea" comment="" />
				<Variable name="ladderSO" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-150" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Then>
							<Else>
								<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
									</AnyDecorator>
								</AreaPresenceGate>
							</Else>
						</IsInsideArea>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
								</SuppressFailure>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
								<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetOnLadder hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetOnLadder>
								</MoveParamsDecorator>
								<ClimbLadder hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ClimbLadder>
								<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantCallback_empty>
							</Sequence>
						</Parallel>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="finaleTeleport" is_function="0">
		<Variables>
			<Variable name="point" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;deadPoint&apos;" prune="true" negprune="unknown" Parent="" Child="$point" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<TeleportAction Position="$point" EndInterruptOnActionStart="false" />
					<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="empty" EventSet="endNotification">
			<Variables>
				<Variable name="point" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</TeleportAction>
						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantCallback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="outsideRiders" is_function="0">
		<Variables>
			<Variable name="formation" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="point" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="riders" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
					<DisableCollisionAvoidance>
						<Selector>
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;leader&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								</GraphSearch>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;point&apos;" prune="true" negprune="unknown" Parent="" Child="$point" Data="" />
								</GraphSearch>
								<MakeFormation FormationName="&apos;finale_battle_riders&apos;" HandleVariable="$formation" />
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;rider&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									<Nodalyzer Quantifiers="ForAll" Parent="" Child="$riders" saveVersion="2" />
								</GraphSearch>
								<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								<SuppressFailure>
									<InstantMultiSendMessageToNPC targets="$riders" successMode="Any" failureMode="Any" variable="$formation" />
								</SuppressFailure>
								<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
									<Child canSkip="1">
										<Synchronize SemaphoreCount="20" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;riders_formation&apos;" RunLogic="KeepRunning">
											<While doFail="false" propagateChildFail="false" condition="$point ~= $__null">
												<Sequence>
													<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="5.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$point" destinationSpecification2="" destinationSpecification3="" speed="Dash" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
													<Selector>
														<GraphSearch Origin="$point" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<LinkTagFilter tag="&apos;next&apos;" prune="true" negprune="unknown" Parent="" Child="$point" Data="" />
														</GraphSearch>
														<Expression expressions="$point = $__null" />
													</Selector>
												</Sequence>
											</While>
										</Synchronize>
									</Child>
									<OnSuccess canSkip="1">
										<EndFormation FormationHandle="$formation" />
									</OnSuccess>
								</FuseBox>
							</Sequence>
							<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$formation" senderInfo="" inbox="&apos;battle_formationSetup&apos;" condition="" answerVar="">
								<Synchronize SemaphoreCount="20" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;riders_formation&apos;" RunLogic="KeepRunning">
									<FormationFollower FormationHandle="$formation" PreferredPositions="" FormationMode="MoveHistory" AllowRelocation="false" />
								</Synchronize>
							</ProcessMessage>
						</Selector>
					</DisableCollisionAvoidance>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="formation" comment="" />
				<Variable name="horse" comment="" />
				<Variable name="point" comment="" />
				<Variable name="riders" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DisableCollisionAvoidance hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<MakeFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</MakeFormation>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
										</Nodalyzer>
									</GraphSearch>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<InstantMultiSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</InstantMultiSendMessageToNPC>
									</SuppressFailure>
									<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Child>
											<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Move>
														<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
															</GraphSearch>
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</Selector>
													</Sequence>
												</While>
											</Synchronize>
										</Child>
										<OnSuccess>
											<EndFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</EndFormation>
										</OnSuccess>
									</FuseBox>
								</Sequence>
								<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<FormationFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</FormationFollower>
									</Synchronize>
								</ProcessMessage>
							</Selector>
						</DisableCollisionAvoidance>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="getOnHorseAndWait" is_function="0">
		<Variables>
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
					<Sequence>
						<WaitAction />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="horse" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bowAtPlayer" is_function="0">
		<Variables>
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHandItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
					<ForceLook LookTarget="$__player" DisableVariations="false">
						<Sequence>
							<Parallel successMode="Any" failureMode="Any">
								<Sequence>
									<HandCheck who="$this.id" LeftHand="$leftHandItem" RightHand="$rightHandItem" />
									<IfCondition failOnCondition="false" condition="$leftHandItem == $__null &amp; $rightHandItem == $__null">
										<AnimationAction fragment="&apos;Quest_StandSalute&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
									</IfCondition>
									<Turn target="$__player" align="false" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
								<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$__player" metarole="" subtitlesDown="false" nodeLabel="33301565" />
							</Parallel>
							<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
						</Sequence>
					</ForceLook>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="string" EventSet="endNotification">
			<Variables>
				<Variable name="leftHandItem" comment="" />
				<Variable name="rightHandItem" comment="" />
				<Variable name="string" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</HandCheck>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AnimationAction>
										</IfCondition>
										<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Turn>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
								</Parallel>
								<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantCallback_empty>
							</Sequence>
						</ForceLook>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>