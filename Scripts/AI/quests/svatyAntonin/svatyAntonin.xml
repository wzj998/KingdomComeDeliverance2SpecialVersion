<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="prank_surrender" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Function_speech_monolog alias="" canBeDelayed="false" context="" dramaticBark="false" lookAtId="$__null" metarole="&apos;NPC_SE_VZDAVA_PO_COMBATU&apos;" target="$this.id" wait="false" nodeLabel="42074906" />
					<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="5.000000" High="5.000000" Negation="true" OpenInMiddle="false" RunLogic="KeepRunning">
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</DistanceGate>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<WaitAction />
			<UnstanceAction unstance="Surrender" locationObject="$__null" />
		</ForestContainer>
		<EditorData Signature="empty" EventSet="endNotification">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_monolog>
						<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</DistanceGate>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<WaitAction editorPosX="90" editorPosY="290" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</WaitAction>
				<UnstanceAction editorPosX="50" editorPosY="180" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<OutputBreakpoints />
				</UnstanceAction>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="prank_dialogPose" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="nebakovPruzkum_kapitanStraziAHracKostek" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuidData" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuidDataArray" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<CallBehavior Target="$wuidData" BehaviorName="&apos;use&apos;" ignoreDropUnloading="false" nodeLabel="17192363" />
					<SuppressFailure>
						<Function_speech_polylogInitiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" participants="$wuidDataArray" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="68289699" />
					</SuppressFailure>
					<Wait duration="&apos;30s&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<UnstanceAction unstance="ingameDialogPoseOnSpot" locationObject="$wuidData" slaveObject="" />
		</ForestContainer>
		<EditorData Signature="wuid_wuidArray_string" EventSet="">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="wuidData" comment="" />
				<Variable name="wuidDataArray" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<CallBehavior hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</CallBehavior>
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_speech_polylogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_polylogInitiator>
						</SuppressFailure>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<UnstanceAction editorPosX="400" editorPosY="-360" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</UnstanceAction>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="innkeeper_barkAtOpenedDoors" is_function="0">
		<Variables>
			<Variable name="doorBarkSpot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;innkeeperDoorBarkSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$doorBarkSpot" Data="" />
							</GraphSearch>
							<Move stopWithinDistance="3.000000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="3.000000" changeNPCState="false" destinationSpecification="$doorBarkSpot" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							<Turn target="$__object.id" align="false" />
							<AtomicDecorator>
								<Selector>
									<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;svatyAntonin_barked&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									</GraphSearch>
									<Sequence>
										<Function_speech_monolog alias="&apos;svatyAntonin_hospodskyOtevreDvere&apos;" canBeDelayed="false" context="" important="false" lookAtId="" metarole="" target="" wait="false" nodeLabel="93257285" />
										<AddLink From="$this.id" To="$this.id" Tag="&apos;svatyAntonin_barked&apos;" Data="" LinkOpHandleMode="Error" />
									</Sequence>
								</Selector>
							</AtomicDecorator>
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Child>
					<OnSuccess canSkip="1">
						<RemoveLink From="$this.id" To="$this.id" Tag="&apos;svatyAntonin_barked&apos;" LinkOpHandleMode="Error" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="doorBarkSpot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
								<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Turn>
								<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_monolog>
											<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AddLink>
										</Sequence>
									</Selector>
								</AtomicDecorator>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Child>
						<OnSuccess>
							<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</RemoveLink>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="saint_chatOnPlayer" is_function="0">
		<Variables>
			<Variable name="crimeFollowerRole" type="enum:crimeFollowingRole" values="$enum:crimeFollowingRole.main" isPersistent="0" form="single" />
			<Variable name="participantsCount" type="_int" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuidData" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuidDataArray" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<IfCondition failOnCondition="false" condition="$wuidData ~= $this.id">
					<Expression expressions="$crimeFollowerRole = $enum:crimeFollowingRole.assist" />
				</IfCondition>
			</OnInit>
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Parallel successMode="Any" failureMode="Any">
							<While doFail="false" propagateChildFail="false" condition="true">
								<CrimeFollower Target="$__player" Role="$crimeFollowerRole" RelativeSpeedLimit="AlertedWalk" BlockWay="false" />
							</While>
							<Sequence>
								<IfElseCondition failOnCondition="false" condition="$wuidData == $this.id" saveVersion="2">
									<Then canSkip="1">
										<SuppressFailure>
											<Sequence>
												<Function_speech_schedulerPolylog_initiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" participants="$wuidDataArray" participantsMetaroles="" preset="$enum:dialogPreset.chat" nodeLabel="21496640" />
												<InstantCallback_empty EventName="&apos;OnDialogSuccess&apos;" />
											</Sequence>
										</SuppressFailure>
									</Then>
									<Else canSkip="1">
										<Sequence>
											<Expression expressions="$participantsCount = #wuidDataArray - 1" />
											<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$alias" initiator="$wuidData" numberOfParticipants="$participantsCount" useIngameDialogPoseAndAnimations="false" nodeLabel="65589063" />
										</Sequence>
									</Else>
								</IfElseCondition>
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
							<Sequence>
								<Wait duration="&apos;30s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								<InstantCallback_empty EventName="&apos;OnTimeout&apos;" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</Parallel>
					</Child>
					<OnFail canSkip="1">
						<IfCondition failOnCondition="false" condition="$wuidData == $this.id">
							<InstantCallback_empty EventName="&apos;OnFail&apos;" />
						</IfCondition>
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuid_wuidArray_string" EventSet="svatyAntonin_chatOnPlayer">
			<Variables>
				<Variable name="crimeFollowerRole" comment="" />
				<Variable name="participantsCount" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="wuidData" comment="" />
				<Variable name="wuidDataArray" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</IfCondition>
				</OnInit>
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<CrimeFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</CrimeFollower>
								</While>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_speech_schedulerPolylog_initiator>
													<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantCallback_empty>
												</Sequence>
											</SuppressFailure>
										</Then>
										<Else>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
												<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerPolylog_receiver>
											</Sequence>
										</Else>
									</IfElseCondition>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantCallback_empty>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Parallel>
						</Child>
						<OnFail>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantCallback_empty>
							</IfCondition>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="saint_cheering" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid_target" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Parallel successMode="All" failureMode="Any">
						<IsInsideArea Origin="$__player" Area="$wuid_target" FailSubtMissing="false" saveVersion="2">
							<Then canSkip="1">
								<Sequence>
									<DistanceCondition Origin="$this.id" ReferencePt="$wuid" Low="0.100000" High="0.100000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
										<ExactMove directionType="AlignWithEntity" directionSpecification="$wuid" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
									</DistanceCondition>
									<UnstanceAction unstance="cheering" locationObject="" slaveObject="" />
								</Sequence>
							</Then>
							<Else canSkip="1">
								<CrimeFollower Target="$__player" Role="Assist" RelativeSpeedLimit="Dash" BlockWay="false" />
							</Else>
						</IsInsideArea>
						<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;10s&apos;" LockManagerType="Local" SemaphoreName="&apos;svatyAntonin_cheeringBark&apos;">
							<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="89345631" />
						</Semaphore>
					</Parallel>
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="&apos;5s&apos;" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuid_wuid_string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
				<Variable name="wuid_target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</ExactMove>
										</DistanceCondition>
										<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</UnstanceAction>
									</Sequence>
								</Then>
								<Else>
									<CrimeFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</CrimeFollower>
								</Else>
							</IsInsideArea>
							<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerMonolog>
							</Semaphore>
						</Parallel>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="vlach_sittingForceDialog" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="AnyStance">
					<EntityContextElement context="tavern_customer">
						<Sequence>
							<WaitAction />
							<Function_speech_dialogInitiator alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="20387413" />
						</Sequence>
					</EntityContextElement>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_dialogInitiator>
							</Sequence>
						</EntityContextElement>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="wolf_eatAtReservedSpot" is_function="0">
		<Variables>
			<Variable name="gsWolfSpot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="wolfSpots" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<SubtreeDecorator saveVersion="2">
					<Init canSkip="1">
						<AtomicDecorator>
							<Sequence>
								<GraphSearch Origin="$this.id" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;wolfSpot&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;wolfSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$gsWolfSpot" Data="" />
									<NegationOp Results="true" Advance="true" EndOp="true" saveVersion="2">
										<Child0 canSkip="1">
											<ExistPath Origin="$gsWolfSpot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;reserver&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
											</ExistPath>
										</Child0>
									</NegationOp>
									<Nodalyzer Quantifiers="ForAll" Parent="" Child="$wolfSpots" saveVersion="2">
										<Child0 canSkip="1">
											<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
										</Child0>
									</Nodalyzer>
								</GraphSearch>
								<AddLink From="$wolfSpots[0]" To="$this.id" Tag="&apos;reserver&apos;" Data="" LinkOpHandleMode="Error" />
							</Sequence>
						</AtomicDecorator>
					</Init>
					<Subtree canSkip="1">
						<Sequence>
							<ExactMove directionType="AlignWithEntity" directionSpecification="$gsWolfSpot" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$wolfSpots[0]" destinationSpecification2="" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							<UnstanceAction unstance="dog_eatingStanding" locationObject="" slaveObject="" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</Subtree>
					<Cleanup canSkip="1">
						<RemoveLink From="$wolfSpots[0]" To="$this.id" Tag="&apos;reserver&apos;" LinkOpHandleMode="Error" />
					</Cleanup>
				</SubtreeDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="gsWolfSpot" comment="" />
				<Variable name="wolfSpots" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<SubtreeDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Init>
							<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<NegationOp hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child0>
												<ExistPath hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
												</ExistPath>
											</Child0>
										</NegationOp>
										<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child0>
												<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</RangeSorter>
											</Child0>
										</Nodalyzer>
									</GraphSearch>
									<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AddLink>
								</Sequence>
							</AtomicDecorator>
						</Init>
						<Subtree>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Subtree>
						<Cleanup>
							<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</RemoveLink>
						</Cleanup>
					</SubtreeDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="vlach_legalizeItemSteal" is_function="0">
		<Variables>
			<Variable name="item" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__player" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="&apos;inventory&apos;" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<ItemClassFilter ClassId="&apos;8325dc40-0ffc-4dfe-95dd-03f8a0735883&apos;" Category="" Source="Child" prune="true" negprune="unknown" Parent="" Child="$item" />
					</GraphSearch>
					<LegalizeItem Item="$item" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="item" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-40" editorPosY="40" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ItemClassFilter>
						</GraphSearch>
						<LegalizeItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LegalizeItem>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>