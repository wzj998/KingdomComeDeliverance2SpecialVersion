<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="katerina_treatmentAnim" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="ForceForbidAutoTorch" target="">
					<Sequence>
						<JoinedUnstanceAction lockContext="$__object.id" lockName="&apos;quest_treating_synchro&apos;" lockCount="2" timeout="&apos;10s&apos;" ignoreOthersLeaving="false" unstance="Quest_SynchroTreatingSittingWounded" locationObject="$__object.id" slaveObject="" />
						<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="&apos;3s&apos;" />
						<SuppressFailure>
							<Function_npc_ingameDialogInitiator alias="$string" participants="$wuid" nodeLabel="40735576" />
						</SuppressFailure>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</JoinedUnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_npc_ingameDialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_npc_ingameDialogInitiator>
							</SuppressFailure>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bohuta_prayingAnim" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="Quest_PrayingNearDead" locationObject="$__object.id" slaveObject="" />
					<SuppressFailure>
						<Function_speech_schedulerMonolog alias="&apos;vezniNaTroskach_bohutaSeModliNaMrtvolou&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" subtitlesDown="false" nodeLabel="24673228" />
					</SuppressFailure>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="-50" editorPosY="140" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_schedulerMonolog>
						</SuppressFailure>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="zizka_injuredAnimSynchro" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$__object.id" stance="sitting" allowAny="false" enabled="true">
					<Sequence>
						<JoinedUnstanceAction lockContext="$__object.id" lockName="&apos;quest_treating_synchro&apos;" lockCount="2" timeout="&apos;10s&apos;" ignoreOthersLeaving="false" unstance="Quest_SynchroSittingWounded" locationObject="$__object.id" slaveObject="" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</JoinedUnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="wait" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<WaitAction />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bohuta_doorBreakingAnim" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<MoveParamsDecorator speed="AlertedWalk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
						<Selector>
							<DistanceCondition Origin="$__object.id" ReferencePt="$this.id" Low="2.000000" High="4000.000000" Negation="false" ValueOnMiddle="false" failOnCondition="true">
								<UnstanceAction unstance="Quest_OpeningLockedDoorStepFromRight" locationObject="$__object.id" slaveObject="" />
							</DistanceCondition>
							<UnstanceAction unstance="Quest_OpeningLockedDoor" locationObject="$__object.id" slaveObject="" />
						</Selector>
					</MoveParamsDecorator>
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<DistanceCondition hasInputBreakpoint="0" comment="If close to the door, use different In animation in unstance" breakpointFlags="0">
									<OutputBreakpoints />
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
								</DistanceCondition>
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
							</Selector>
						</MoveParamsDecorator>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bohuta_takesLetter" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="barkArea" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="lettersFoundAlias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="searchingTime" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="stash" type="_wuid" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="All" failureMode="Any">
					<AreaPresenceGate aiObjects="$this.id" area="$barkArea" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
						<SuppressFailure>
							<Function_speech_schedulerMonolog alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="12872897" />
						</SuppressFailure>
					</AreaPresenceGate>
					<Sequence>
						<MoveParamsDecorator speed="AlertedWalk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
							<UnstanceAction unstance="SearchingChest" locationObject="$stash" slaveObject="$stash" />
						</MoveParamsDecorator>
						<Wait duration="$searchingTime" timeType="GameTime" doFail="false" variation="" />
						<IfCondition failOnCondition="false" condition="$lettersFoundAlias ~= &apos;&apos;">
							<SuppressFailure>
								<Function_speech_schedulerMonolog alias="$lettersFoundAlias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="95128261" />
							</SuppressFailure>
						</IfCondition>
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</Sequence>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="vezniNaTroskach_takingLettersInChamber" EventSet="endNotification">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="barkArea" comment="" />
				<Variable name="lettersFoundAlias" comment="" />
				<Variable name="searchingTime" comment="" />
				<Variable name="stash" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-20" editorPosY="40" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerMonolog>
							</SuppressFailure>
						</AreaPresenceGate>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
							</MoveParamsDecorator>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
								</SuppressFailure>
							</IfCondition>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</Sequence>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bohuta_waitNearCorridorGate" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<IsInsideArea Origin="$this.id" Area="$data" FailSubtMissing="false" saveVersion="2">
						<Then canSkip="1">
							<Success />
						</Then>
						<Else canSkip="1">
							<IncludeTree File="&apos;quests/vezninatroskach/vezninatroskach.xml&apos;" Name="&apos;escaper_fleeToPassageFromCastle&apos;" nodeLabel="88736115" />
						</Else>
					</IsInsideArea>
					<UnstanceAction unstance="LeaningBack" locationObject="$__resource.id" slaveObject="" />
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-40" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IsInsideArea hasInputBreakpoint="0" comment="If not near the gate, go there from castle by pre-defined path of tagpoints" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Then>
							<Else>
								<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</IncludeTree>
							</Else>
						</IsInsideArea>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="katerina_chatsOnPlayer" is_function="0">
		<Variables>
			<Variable name="lightSource" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="cooldown" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="dialogIsChat" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="spot" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Left" item="$lightSource" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="lightSource" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<GetLightSourceItem Item="$lightSource" />
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<MoveParamsDecorator speed="AlertedWalk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
								<ExactMove directionType="AlignWithEntity" directionSpecification="$spot" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$spot" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							</MoveParamsDecorator>
							<Parallel successMode="Any" failureMode="Any">
								<Loop count="-1">
									<ForceLook LookTarget="$__player" DisableVariations="true">
										<Sequence>
											<SuppressFailure>
												<IfElseCondition failOnCondition="false" condition="$dialogIsChat" saveVersion="2">
													<Then canSkip="1">
														<Function_speech_dialogInitiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="76111840" />
													</Then>
													<Else canSkip="1">
														<Function_speech_schedulerMonolog alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="83689809" />
													</Else>
												</IfElseCondition>
											</SuppressFailure>
											<Wait duration="$cooldown" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
									</ForceLook>
								</Loop>
								<Loop count="-1">
									<Sequence>
										<Turn target="$__player" align="false" />
										<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</Loop>
							</Parallel>
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="vezniNaTroskach_chatOnSpotInArea" EventSet="">
			<Variables>
				<Variable name="lightSource" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="cooldown" comment="" />
				<Variable name="dialogIsChat" comment="" />
				<Variable name="spot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-30" editorPosY="-100" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetLightSourceItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetLightSourceItem>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExactMove>
								</MoveParamsDecorator>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_speech_dialogInitiator>
														</Then>
														<Else>
															<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_speech_schedulerMonolog>
														</Else>
													</IfElseCondition>
												</SuppressFailure>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</ForceLook>
									</Loop>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Turn>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</Loop>
								</Parallel>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="katerina_nearCorridorExit" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bohuta_leansNearPassageExit" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<MoveParamsDecorator speed="AlertedWalk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
						<UnstanceAction unstance="LeaningBack" locationObject="$__resource.id" slaveObject="" />
					</MoveParamsDecorator>
					<DistanceCondition Origin="$__resource.id" ReferencePt="$__player" Low="5.000000" High="5.000000" Negation="false" ValueOnMiddle="false" failOnCondition="false">
						<ForceLook LookTarget="$__player" DisableVariations="false">
							<SuppressFailure>
								<Function_speech_schedulerMonolog alias="&apos;vezniNaTroskach_bohutaVyhaniJindru&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="80689683" />
							</SuppressFailure>
						</ForceLook>
					</DistanceCondition>
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="10" editorPosY="-80" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<OutputBreakpoints />
							</UnstanceAction>
						</MoveParamsDecorator>
						<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
								</SuppressFailure>
							</ForceLook>
						</DistanceCondition>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="escaper_fleeTour" is_function="0">
		<Variables>
			<Variable name="amIInitiator" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="dialogParticipant" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="doorClosingPolicy" type="enum:movementDoorClosingPolicy" values="" isPersistent="0" form="single" />
			<Variable name="formationLock" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="formationWUID" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="katerina" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="lightSource" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="myPlace" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="participantsAreClose" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="predefinedPath" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="formationLeader" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="formationPreferredPosition" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="npcs" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="passageArea" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;predefinedPath&apos;" prune="true" negprune="unknown" Parent="" Child="$predefinedPath" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;katerina&apos;" prune="true" negprune="unknown" Parent="" Child="$katerina" Data="" />
					</GraphSearch>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<IsInsideArea Origin="$this.id" Area="$passageArea" FailSubtMissing="false" saveVersion="2">
						<Then canSkip="1">
							<Success />
						</Then>
						<Else canSkip="1">
							<IncludeTree File="&apos;quests/vezninatroskach/vezninatroskach.xml&apos;" Name="&apos;escaper_fleeToPassageFromCastle&apos;" nodeLabel="44552597" />
						</Else>
					</IsInsideArea>
					<EntityContextPreset preset="crime_tourParticipant" target="">
						<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
							<Child canSkip="1">
								<Sequence>
									<IfElseCondition failOnCondition="false" condition="$this.id == $katerina" saveVersion="2">
										<Then canSkip="1">
											<Expression expressions="$doorClosingPolicy = $enum:movementDoorClosingPolicy.leaveClosed" />
										</Then>
										<Else canSkip="1">
											<Expression expressions="$doorClosingPolicy = $enum:movementDoorClosingPolicy.leaveOpened" />
										</Else>
									</IfElseCondition>
									<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="$doorClosingPolicy">
										<Sequence>
											<Expression expressions="$formationLock = &apos;vezniNaTroskach_fleeThroughPassage&apos;" />
											<AddLink From="$this.id" To="$formationLeader" Tag="&apos;vezniNaTroskach_readyToFlee&apos;" Data="" LinkOpHandleMode="Success" />
											<IfElseCondition failOnCondition="false" condition="$formationLeader == $this.id" saveVersion="2">
												<Then canSkip="1">
													<Parallel successMode="All" failureMode="Any">
														<SubtreeDecorator saveVersion="2">
															<Init canSkip="1">
																<MakeFormation FormationName="&apos;vezniNaTroskach_fleeThroughPassage&apos;" HandleVariable="$formationWUID" />
															</Init>
															<Subtree canSkip="1">
																<Sequence>
																	<SetExternalLock LockManagerType="Local" Locked="false" LockName="&apos;$formationLock&apos;" />
																	<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$predefinedPath" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
																</Sequence>
															</Subtree>
															<Cleanup canSkip="1">
																<Sequence>
																	<EndFormation FormationHandle="$formationWUID" />
																	<SetExternalLock LockManagerType="Global" Locked="true" LockName="&apos;$formationLock&apos;" />
																</Sequence>
															</Cleanup>
														</SubtreeDecorator>
														<Sequence>
															<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="&apos;3s&apos;" skipInLOD="false" />
															<LinkGate from="$npcs" to="$npcs[0]" tag="&apos;vezniNaTroskach_readyToFlee&apos;" amount="All" presence="Present" RunLogic="Halt">
																<SuppressFailure>
																	<Function_speech_polylogInitiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" participants="$npcs" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="87886709" />
																</SuppressFailure>
															</LinkGate>
														</Sequence>
													</Parallel>
												</Then>
												<Else canSkip="1">
													<HandContentElement hand="Left" item="$lightSource" allowAny="false" decisionLabel="lightSource" useDecision="true" saveVersion="2">
														<Search canSkip="1">
															<GetLightSourceItem Item="$lightSource" />
														</Search>
														<Exec canSkip="1">
															<While doFail="false" propagateChildFail="false" condition="true">
																<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;10m&apos;" LockManagerType="Local" SemaphoreName="&apos;$formationLock&apos;" RunLogic="KeepRunning">
																	<Sequence>
																		<GetMemberFormation MemberWUID="$formationLeader" FormationHandleOut="$formationWUID" />
																		<IfCondition failOnCondition="true" condition="$formationWUID~=$__null">
																			<FormationFollower FormationHandle="$formationWUID" PreferredPositions="$formationPreferredPosition" FormationMode="$enum:formationMode.MoveHistory" AllowRelocation="false" />
																		</IfCondition>
																	</Sequence>
																</ExternalLock>
															</While>
														</Exec>
													</HandContentElement>
												</Else>
											</IfElseCondition>
										</Sequence>
									</MoveParamsDecorator>
								</Sequence>
							</Child>
							<OnSuccess canSkip="1">
								<RemoveLink From="$this.id" To="$formationLeader" Tag="&apos;vezniNaTroskach_readyToFlee&apos;" LinkOpHandleMode="Success" />
							</OnSuccess>
						</FuseBox>
					</EntityContextPreset>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<EntityContext context="FollowableNPCCenter" target="">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<Parallel successMode="Any" failureMode="Any">
							<Sequence>
								<AddLink From="$this.id" To="$npcs[0]" Tag="&apos;vezniNaTroskach_readyToFlee&apos;" Data="" LinkOpHandleMode="Success" />
								<MoveParamsDecorator speed="AlertedWalk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
									<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="5.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$myPlace" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
								</MoveParamsDecorator>
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
							<IfElseCondition failOnCondition="false" condition="$amIInitiator" saveVersion="2">
								<Then canSkip="1">
									<While doFail="false" propagateChildFail="false" condition="true">
										<Sequence>
											<LinkGate from="$npcs" to="$npcs[0]" tag="&apos;vezniNaTroskach_readyToFlee&apos;" amount="All" presence="Present" RunLogic="Halt">
												<While doFail="false" propagateChildFail="false" condition="true">
													<Sequence>
														<FuseBox StatusPropagation="Success" OneCleanup="false" saveVersion="2">
															<Child canSkip="1">
																<ForEach startIndex="0" step="1" array="$npcs" iterator="" value="$dialogParticipant" break="">
																	<DistanceCondition Origin="$this.id" ReferencePt="$dialogParticipant" Low="15.000000" High="15.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
																		<Fail />
																	</DistanceCondition>
																</ForEach>
															</Child>
															<OnSuccess canSkip="1">
																<Expression expressions="$participantsAreClose = true" />
															</OnSuccess>
															<OnFail canSkip="1">
																<Expression expressions="$participantsAreClose = false" />
															</OnFail>
														</FuseBox>
														<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
													</Sequence>
												</While>
											</LinkGate>
											<Expression expressions="$participantsAreClose = false" />
										</Sequence>
									</While>
								</Then>
								<Else canSkip="1">
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Else>
							</IfElseCondition>
							<Sequence>
								<IfCondition failOnCondition="false" condition="$amIInitiator">
									<IfGate atomic="false" condition="$participantsAreClose" RunLogic="Halt">
										<SuppressFailure>
											<Function_speech_polylogInitiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" participants="$npcs" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="63444740" />
										</SuppressFailure>
									</IfGate>
								</IfCondition>
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</Parallel>
					</Child>
					<OnSuccess canSkip="1">
						<RemoveLink From="$this.id" To="$npcs[0]" Tag="&apos;vezniNaTroskach_readyToFlee&apos;" LinkOpHandleMode="Success" />
					</OnSuccess>
				</FuseBox>
			</EntityContext>
		</ForestContainer>
		<EditorData Signature="vezniNaTroskach_fleeThroughPassage" EventSet="">
			<Variables>
				<Variable name="amIInitiator" comment="" />
				<Variable name="dialogParticipant" comment="" />
				<Variable name="doorClosingPolicy" comment="" />
				<Variable name="formationLock" comment="" />
				<Variable name="formationWUID" comment="" />
				<Variable name="katerina" comment="" />
				<Variable name="lightSource" comment="" />
				<Variable name="myPlace" comment="" />
				<Variable name="participantsAreClose" comment="" />
				<Variable name="predefinedPath" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="formationLeader" comment="" />
				<Variable name="formationPreferredPosition" comment="" />
				<Variable name="npcs" comment="" />
				<Variable name="passageArea" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
					</Sequence>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IsInsideArea hasInputBreakpoint="0" comment="If not near the gate, go there from castle by pre-defined path of tagpoints" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Then>
							<Else>
								<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</IncludeTree>
							</Else>
						</IsInsideArea>
						<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Then>
											<Else>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Else>
										</IfElseCondition>
										<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
												<AddLink hasInputBreakpoint="0" comment="Adding link means that npc is near the gate and is about to go through the passage" breakpointFlags="0">
													<OutputBreakpoints />
												</AddLink>
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<SubtreeDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Init>
																	<MakeFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</MakeFormation>
																</Init>
																<Subtree>
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</SetExternalLock>
																		<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Move>
																	</Sequence>
																</Subtree>
																<Cleanup>
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<EndFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</EndFormation>
																		<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</SetExternalLock>
																	</Sequence>
																</Cleanup>
															</SubtreeDecorator>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
																<LinkGate hasInputBreakpoint="0" comment="Start ingame dialog only when all participants have been near gate" breakpointFlags="0">
																	<OutputBreakpoints />
																	<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Function_speech_polylogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_speech_polylogInitiator>
																	</SuppressFailure>
																</LinkGate>
															</Sequence>
														</Parallel>
													</Then>
													<Else>
														<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Search>
																<GetLightSourceItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</GetLightSourceItem>
															</Search>
															<Exec>
																<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<ExternalLock hasInputBreakpoint="0" comment="Waiting for leader to create formation" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<GetMemberFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</GetMemberFormation>
																			<IfCondition hasInputBreakpoint="0" comment="Formation already finished moving?" breakpointFlags="0">
																				<OutputBreakpoints />
																				<FormationFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</FormationFollower>
																			</IfCondition>
																		</Sequence>
																	</ExternalLock>
																</While>
															</Exec>
														</HandContentElement>
													</Else>
												</IfElseCondition>
											</Sequence>
										</MoveParamsDecorator>
									</Sequence>
								</Child>
								<OnSuccess>
									<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</RemoveLink>
								</OnSuccess>
							</FuseBox>
						</EntityContextPreset>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<EntityContext editorPosX="580" editorPosY="1650" hasInputBreakpoint="0" comment="Each tour participant is followable" breakpointFlags="0">
					<OutputBreakpoints />
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AddLink hasInputBreakpoint="0" comment="Adding link means that npc is near the gate and is about to go through the passage" breakpointFlags="0">
										<OutputBreakpoints />
									</AddLink>
									<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
									</MoveParamsDecorator>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkGate hasInputBreakpoint="0" comment="Start ingame dialog only when all participants have been near gate" breakpointFlags="0">
													<OutputBreakpoints />
													<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Child>
																	<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Fail>
																		</DistanceCondition>
																	</ForEach>
																</Child>
																<OnSuccess>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</OnSuccess>
																<OnFail>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</OnFail>
															</FuseBox>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
													</While>
												</LinkGate>
												<Expression hasInputBreakpoint="0" comment="Someone has lost the link (eg. got interrupted by an enemy), so stop the ingame dialog" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Sequence>
										</While>
									</Then>
									<Else>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Else>
								</IfElseCondition>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfGate hasInputBreakpoint="0" comment="Dialog is active only if participants are close to each other" breakpointFlags="0">
											<OutputBreakpoints />
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_speech_polylogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_polylogInitiator>
											</SuppressFailure>
										</IfGate>
									</IfCondition>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Parallel>
						</Child>
						<OnSuccess>
							<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</RemoveLink>
						</OnSuccess>
					</FuseBox>
				</EntityContext>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_patrolOnHorse" is_function="0">
		<Variables>
			<Variable name="followFormationParams" type="followFormationParams" values="" isPersistent="0" form="single" />
			<Variable name="formationLeader" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="formationLock" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="formationWUID" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="next" type="_wuid" values="" isPersistent="1" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$this.id" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;leader&apos;" prune="true" negprune="unknown" Parent="" Child="$formationLeader" Data="" />
					</GraphSearch>
					<IfCondition failOnCondition="false" condition="$next == $__null">
						<GraphSearch Origin="$this.id" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;startPatrolPoint&apos;" prune="true" negprune="unknown" Parent="" Child="$next" Data="" />
						</GraphSearch>
					</IfCondition>
					<Expression expressions="$followFormationParams.formation.leader = $formationLeader &#10;$followFormationParams.formation.type = &apos;vezniNaTroskach_patrolOnHorse&apos; &#10;$followFormationParams.formation.speedLimit = $enum:movementSpeed.run &#10;$followFormationParams.formation.policy = $enum:formationMode.KeepShape" />
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<StanceElement smartObject="$horse" stance="horse" allowAny="false">
					<Sequence>
						<WaitAction />
						<IfElseCondition failOnCondition="false" condition="$formationLeader == $this.id" saveVersion="2">
							<Then canSkip="1">
								<Sequence>
									<MakeFormation FormationName="$followFormationParams.formation.type" HandleVariable="$formationWUID" />
									<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
										<Child canSkip="1">
											<Sequence>
												<Concatenation OutString="$formationLock" Pattern="&apos;followNPC_leader_$this.id&apos;" />
												<SetExternalLock LockManagerType="Global" Locked="false" LockName="&apos;$formationLock&apos;" />
												<Loop count="-1">
													<Sequence>
														<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$next" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
														<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
														<GraphSearch Origin="$next" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<LinkTagFilter tag="&apos;next&apos;" prune="true" negprune="unknown" Parent="" Child="$next" Data="" />
														</GraphSearch>
													</Sequence>
												</Loop>
											</Sequence>
										</Child>
										<OnSuccess canSkip="1">
											<Sequence>
												<EndFormation FormationHandle="$formationWUID" />
												<SetExternalLock LockManagerType="Global" Locked="true" LockName="&apos;$formationLock&apos;" />
											</Sequence>
										</OnSuccess>
									</FuseBox>
								</Sequence>
							</Then>
							<Else canSkip="1">
								<Function_moveInFormation_slave followFormationParams="$followFormationParams" nodeLabel="13416530" />
							</Else>
						</IfElseCondition>
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="followFormationParams" comment="" />
				<Variable name="formationLeader" comment="" />
				<Variable name="formationLock" comment="" />
				<Variable name="formationWUID" comment="" />
				<Variable name="horse" comment="" />
				<Variable name="next" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
						</IfCondition>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</Sequence>
				</OnInit>
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MakeFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</MakeFormation>
										<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Concatenation>
													<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</SetExternalLock>
													<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Move>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
															<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
															</GraphSearch>
														</Sequence>
													</Loop>
												</Sequence>
											</Child>
											<OnSuccess>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<EndFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</EndFormation>
													<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</SetExternalLock>
												</Sequence>
											</OnSuccess>
										</FuseBox>
									</Sequence>
								</Then>
								<Else>
									<Function_moveInFormation_slave hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_moveInFormation_slave>
								</Else>
							</IfElseCondition>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bohuta_barkOnSpot" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="spot" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<MoveParamsDecorator speed="AlertedWalk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
						<Move stopWithinDistance="0.500000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$spot" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					</MoveParamsDecorator>
					<ForceLook LookTarget="$__player" DisableVariations="false">
						<Sequence>
							<WaitAction />
							<Parallel successMode="Any" failureMode="Any">
								<Loop count="-1">
									<Sequence>
										<SuppressFailure>
											<Function_speech_schedulerMonolog alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="94961622" />
										</SuppressFailure>
										<Wait duration="&apos;20s&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</Loop>
								<Loop count="-1">
									<Sequence>
										<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
										<Turn target="$__player" align="false" />
									</Sequence>
								</Loop>
							</Parallel>
						</Sequence>
					</ForceLook>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="vezniNaTroskach_dialogOnSpot" EventSet="">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="spot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
						</MoveParamsDecorator>
						<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerMonolog>
											</SuppressFailure>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</Loop>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
											<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Turn>
										</Sequence>
									</Loop>
								</Parallel>
							</Sequence>
						</ForceLook>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_patrol" is_function="0">
		<Variables>
			<Variable name="pathFindingParams" type="pathFindingParams" values="useGeneratedNSO(&apos;true&apos;)" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$__object.id" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$__object.id" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="$pathFindingParams" staminaPolicy="" pathInfo="" />
					<Wait duration="&apos;20s&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="pathFindingParams" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="This behavior is used in quest guard prefabs" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_sittingDialog" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Success" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<StanceElement smartObject="$__resource.id" stance="sitting" allowAny="false" enabled="true">
							<Sequence>
								<WaitAction />
								<IfElseCondition failOnCondition="false" condition="$participants[0] == $this.id" saveVersion="2">
									<Then canSkip="1">
										<Function_speech_schedulerPolylog_initiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" areaForPlayer="" context="" customParameters="" metarole="" participants="$participants" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="91779412" />
									</Then>
									<Else canSkip="1">
										<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$alias" initiator="$participants[0]" numberOfParticipants="2" useIngameDialogPoseAndAnimations="false" nodeLabel="49319250" />
									</Else>
								</IfElseCondition>
								<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="&apos;2s&apos;" />
							</Sequence>
						</StanceElement>
					</Child>
					<OnSuccess canSkip="1">
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="forcePolylogData" EventSet="endNotification">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="participants" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerPolylog_initiator>
										</Then>
										<Else>
											<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerPolylog_receiver>
										</Else>
									</IfElseCondition>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</StanceElement>
						</Child>
						<OnSuccess>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_sleepOnTable" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<EntityContextCheck context="crime_sleeping" target="" saveVersion="2">
						<Then canSkip="1">
							<StanceCheck soul="$this.id" stance="sitting" smartObject="$__resource.id" negate="true" failOnCondition="false" saveVersion="2">
								<Then canSkip="1">
									<IsFastForwarded failOnCondition="false" saveVersion="2">
										<Else canSkip="1">
											<WaitAction />
										</Else>
									</IsFastForwarded>
								</Then>
								<Else canSkip="1">
									<Success />
								</Else>
							</StanceCheck>
						</Then>
					</EntityContextCheck>
					<EntityContextPresetElement contextPreset="sleeping" enabled="true">
						<StanceElement smartObject="$__resource.id" stance="sitting" allowAny="false" enabled="true">
							<Sequence>
								<UnstanceAction unstance="SleepOnTable" locationObject="" slaveObject="" />
								<DecoratorBuff BuffId="&apos;cbbedb16-8ab8-4583-b740-a0e8a2521d95&apos;" SoulWUID="$this.id">
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</DecoratorBuff>
							</Sequence>
						</StanceElement>
					</EntityContextPresetElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextCheck hasInputBreakpoint="0" comment="KCD2-441302" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<StanceCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<IsFastForwarded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Else>
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
											</Else>
										</IsFastForwarded>
									</Then>
									<Else>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Else>
								</StanceCheck>
							</Then>
						</EntityContextCheck>
						<EntityContextPresetElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
									<DecoratorBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</DecoratorBuff>
								</Sequence>
							</StanceElement>
						</EntityContextPresetElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_waitOnSpot" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="gotoSpotHoldingTroch" is_function="1">
		<Variables>
			<Variable name="torch" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<Selector>
					<GetItem InventoryHost="$this.id" ItemGUID="&apos;4cea28a0-0814-405a-bf24-4fd711f7eb63&apos;" ItemCategory="" FailIfNotFound="true" ItemOut="$torch" AmountOut="" />
					<CreateItem ItemGUID="&apos;4cea28a0-0814-405a-bf24-4fd711f7eb63&apos;" Amount="1" CreatedItem="$torch" Target="$this.id" NotifyUI="false" />
				</Selector>
				<HandContentElement hand="Left" item="$torch" allowAny="false" decisionLabel="Label1" useDecision="true" saveVersion="2">
					<Search canSkip="1">
						<Success />
					</Search>
				</HandContentElement>
			</Sequence>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="torch" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</ExactMove>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="340" editorPosY="-370" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GetItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetItem>
						<CreateItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</CreateItem>
					</Selector>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Search>
					</HandContentElement>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_gotoOnHorse" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="moveData" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="speed" type="enum:movementSpeed" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
					<Sequence>
						<WaitAction />
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="1.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$moveData" destinationSpecification2="" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="$pathFindingParams" staminaPolicy="" pathInfo="" />
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="moveOnHorse" EventSet="endNotification">
			<Variables>
				<Variable name="horse" comment="" />
				<Variable name="moveData" comment="" />
				<Variable name="speed" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_mountAndWaitOnSpot" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="spot" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
					<Sequence>
						<WaitAction />
						<ExactMove directionType="AlignWithEntity" directionSpecification="$spot" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$spot" destinationSpecification2="" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="vezniNaTroskach_waitOnSpotOnHorse" EventSet="">
			<Variables>
				<Variable name="horse" comment="" />
				<Variable name="spot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExactMove>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="escaper_fleeToPassageFromCastle" is_function="0">
		<Variables>
			<Variable name="additionalMoveParams" type="additionalMoveParams" values="destChangedThreshold(&apos;250ms&apos;)" isPersistent="0" form="single" />
			<Variable name="currentMovePoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="followPredefinedPath" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="pathTP1" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="pathTP2" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="startAreaLower" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="startAreaStorage" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="startAreaUpper" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Sequence>
						<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;pathToPassageDefiner1&apos;" prune="true" negprune="unknown" Parent="" Child="$pathTP1" Data="" />
						</GraphSearch>
						<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;pathToPassageDefiner2&apos;" prune="true" negprune="unknown" Parent="" Child="$pathTP2" Data="" />
						</GraphSearch>
						<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;flee_startAreaUpper&apos;" prune="true" negprune="unknown" Parent="" Child="$startAreaUpper" Data="" />
						</GraphSearch>
						<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;flee_startAreaLower&apos;" prune="true" negprune="unknown" Parent="" Child="$startAreaLower" Data="" />
						</GraphSearch>
						<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;flee_startAreaStorage&apos;" prune="true" negprune="unknown" Parent="" Child="$startAreaStorage" Data="" />
						</GraphSearch>
						<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;flee_passageDestination&apos;" prune="true" negprune="unknown" Parent="" Child="$destination" Data="" />
						</GraphSearch>
					</Sequence>
					<Sequence>
						<Expression expressions="$currentMovePoint = $destination" />
						<Parallel successMode="Any" failureMode="Any">
							<MoveParamsDecorator speed="AlertedWalk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
								<While doFail="false" propagateChildFail="false" condition="$currentMovePoint ~= $__null">
									<Sequence>
										<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$currentMovePoint" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="$additionalMoveParams" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
										<GraphSearch Origin="$currentMovePoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;nextPt&apos;" prune="true" negprune="unknown" Parent="" Child="$currentMovePoint" Data="" />
										</GraphSearch>
									</Sequence>
								</While>
							</MoveParamsDecorator>
							<Sequence>
								<Parallel successMode="Any" failureMode="Any">
									<AreaPresenceGate aiObjects="$this.id" area="$startAreaUpper" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
										<Expression expressions="$currentMovePoint = $pathTP1" />
									</AreaPresenceGate>
									<AreaPresenceGate aiObjects="$this.id" area="$startAreaLower" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
										<Expression expressions="$currentMovePoint = $pathTP1" />
									</AreaPresenceGate>
									<AreaPresenceGate aiObjects="$this.id" area="$startAreaStorage" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
										<Expression expressions="$currentMovePoint = $pathTP2" />
									</AreaPresenceGate>
								</Parallel>
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</Parallel>
					</Sequence>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="additionalMoveParams" comment="" />
				<Variable name="currentMovePoint" comment="" />
				<Variable name="destination" comment="" />
				<Variable name="followPredefinedPath" comment="" />
				<Variable name="pathTP1" comment="" />
				<Variable name="pathTP2" comment="" />
				<Variable name="startAreaLower" comment="" />
				<Variable name="startAreaStorage" comment="" />
				<Variable name="startAreaUpper" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
						</Sequence>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="Initialize with last point on the predefined path of tagpoints (point near passage gate)" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Move>
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
											</GraphSearch>
										</Sequence>
									</While>
								</MoveParamsDecorator>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Parallel hasInputBreakpoint="0" comment="Based on which area npc goes through, decide which point on the path is most relevant" breakpointFlags="0">
										<OutputBreakpoints />
										<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</AreaPresenceGate>
										<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</AreaPresenceGate>
										<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</AreaPresenceGate>
									</Parallel>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Parallel>
						</Sequence>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="waitUnresponsive" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextPreset preset="switch_unresponsive" target="$this.id">
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</EntityContextPreset>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</EntityContextPreset>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bohuta_chatOrBarkInAreaOnSpot" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_polylogAtStart" is_function="0">
		<Variables>
			<Variable name="amIInitiator" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="myPlace" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="npcs" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="places" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Function_getNpcPolylogSettings npcs="$npcs" places="$places" amIInitiator="$amIInitiator" myPlace="$myPlace" nodeLabel="75627599" />
					<IfElseCondition failOnCondition="false" condition="$amIInitiator" saveVersion="2">
						<Then canSkip="1">
							<StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
								<Sequence>
									<WaitAction />
									<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$myPlace" destinationSpecification2="" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
										<Child canSkip="1">
											<Function_speech_schedulerPolylog_initiator alias="$alias" animationApproach="$enum:animationApproach.tryDialogAnimations" areaForPlayer="" context="" customParameters="" metarole="" participants="$npcs" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="62662971" />
										</Child>
										<OnSuccess canSkip="1">
											<Callback_empty EventName="&apos;Success&apos;" />
										</OnSuccess>
										<OnFail canSkip="1">
											<Callback_empty EventName="&apos;Fail&apos;" />
										</OnFail>
									</FuseBox>
								</Sequence>
							</StanceElement>
						</Then>
						<Else canSkip="1">
							<Sequence>
								<ExactMove directionType="AlignWithEntity" directionSpecification="$myPlace" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$myPlace" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
								<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$alias" initiator="$npcs[0]" numberOfParticipants="2" useIngameDialogPoseAndAnimations="false" nodeLabel="21591733" />
							</Sequence>
						</Else>
					</IfElseCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="vezniNaTroskach_polylogAtApolenaStart" EventSet="resultNotification">
			<Variables>
				<Variable name="amIInitiator" comment="" />
				<Variable name="myPlace" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="horse" comment="" />
				<Variable name="npcs" comment="" />
				<Variable name="places" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_getNpcPolylogSettings hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_getNpcPolylogSettings>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
										<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child>
												<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerPolylog_initiator>
											</Child>
											<OnSuccess>
												<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Callback_empty>
											</OnSuccess>
											<OnFail>
												<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Callback_empty>
											</OnFail>
										</FuseBox>
									</Sequence>
								</StanceElement>
							</Then>
							<Else>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExactMove>
									<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerPolylog_receiver>
								</Sequence>
							</Else>
						</IfElseCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_polylogAtStartReceiver" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bohuta_fleeTour" is_function="0">
		<Variables>
			<Variable name="formationWUID" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="formationName" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="npcs" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="predefinedPath" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextPreset preset="crime_tourParticipant" target="">
					<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
						<Child canSkip="1">
							<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
								<Sequence>
									<AddLink From="$this.id" To="$this.id" Tag="$formationName" Data="" LinkOpHandleMode="Success" />
									<Parallel successMode="All" failureMode="Any">
										<SubtreeDecorator saveVersion="2">
											<Init canSkip="1">
												<MakeFormation FormationName="$formationName" HandleVariable="$formationWUID" />
											</Init>
											<Subtree canSkip="1">
												<Sequence>
													<SetExternalLock LockManagerType="Local" Locked="false" LockName="&apos;$formationName&apos;" />
													<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="3.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$predefinedPath" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
													<Callback_empty EventName="&apos;OnFinished&apos;" />
												</Sequence>
											</Subtree>
											<Cleanup canSkip="1">
												<Sequence>
													<EndFormation FormationHandle="$formationWUID" />
													<SetExternalLock LockManagerType="Global" Locked="true" LockName="&apos;$formationName&apos;" />
												</Sequence>
											</Cleanup>
										</SubtreeDecorator>
										<Sequence>
											<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="&apos;3s&apos;" />
											<LinkGate from="$npcs" to="$this.id" tag="$formationName" amount="All" presence="Present" RunLogic="Halt">
												<SuppressFailure>
													<Function_speech_polylogInitiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" participants="$npcs" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="25151325" />
												</SuppressFailure>
											</LinkGate>
										</Sequence>
									</Parallel>
								</Sequence>
							</MoveParamsDecorator>
						</Child>
						<OnSuccess canSkip="1">
							<RemoveLink From="$this.id" To="$this.id" Tag="$formationName" LinkOpHandleMode="Success" />
						</OnSuccess>
					</FuseBox>
				</EntityContextPreset>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="vezniNaTroskach_fleeFromCastle_leader" EventSet="endNotification">
			<Variables>
				<Variable name="formationWUID" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="formationName" comment="" />
				<Variable name="npcs" comment="" />
				<Variable name="predefinedPath" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-70" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AddLink hasInputBreakpoint="0" comment="Adding link means that npc is near the gate and is about to go through the passage" breakpointFlags="0">
											<OutputBreakpoints />
										</AddLink>
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SubtreeDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Init>
													<MakeFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</MakeFormation>
												</Init>
												<Subtree>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</SetExternalLock>
														<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Move>
														<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Callback_empty>
													</Sequence>
												</Subtree>
												<Cleanup>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<EndFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</EndFormation>
														<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</SetExternalLock>
													</Sequence>
												</Cleanup>
											</SubtreeDecorator>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
												<LinkGate hasInputBreakpoint="0" comment="Start ingame dialog only when all participants have been near gate" breakpointFlags="0">
													<OutputBreakpoints />
													<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_speech_polylogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_speech_polylogInitiator>
													</SuppressFailure>
												</LinkGate>
											</Sequence>
										</Parallel>
									</Sequence>
								</MoveParamsDecorator>
							</Child>
							<OnSuccess>
								<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</RemoveLink>
							</OnSuccess>
						</FuseBox>
					</EntityContextPreset>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="katerina_fleeTour" is_function="0">
		<Variables>
			<Variable name="formationWUID" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="lightSource" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="doorClosingPolicy" type="enum:movementDoorClosingPolicy" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="formationLeader" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="formationName" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="formationPreferredPosition" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextPreset preset="crime_tourParticipant" target="">
					<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
						<Child canSkip="1">
							<Sequence>
								<AddLink From="$this.id" To="$formationLeader" Tag="$formationName" Data="" LinkOpHandleMode="Success" />
								<HandContentElement hand="Left" item="$lightSource" allowAny="false" decisionLabel="lightSource" useDecision="true" saveVersion="2">
									<Search canSkip="1">
										<GetLightSourceItem Item="$lightSource" />
									</Search>
									<Exec canSkip="1">
										<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="$doorClosingPolicy">
											<While doFail="false" propagateChildFail="false" condition="true">
												<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;10m&apos;" LockManagerType="Local" SemaphoreName="&apos;$formationName&apos;" RunLogic="KeepRunning">
													<Sequence>
														<GetMemberFormation MemberWUID="$formationLeader" FormationHandleOut="$formationWUID" />
														<IfCondition failOnCondition="true" condition="$formationWUID~=$__null">
															<FormationFollower FormationHandle="$formationWUID" PreferredPositions="$formationPreferredPosition" FormationMode="MoveHistory" AllowRelocation="false" />
														</IfCondition>
													</Sequence>
												</ExternalLock>
											</While>
										</MoveParamsDecorator>
									</Exec>
								</HandContentElement>
							</Sequence>
						</Child>
						<OnSuccess canSkip="1">
							<RemoveLink From="$this.id" To="$formationLeader" Tag="$formationName" LinkOpHandleMode="Success" />
						</OnSuccess>
					</FuseBox>
				</EntityContextPreset>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="vezniNaTroskach_fleeFromCastle_follower" EventSet="">
			<Variables>
				<Variable name="formationWUID" comment="" />
				<Variable name="lightSource" comment="" />
				<Variable name="doorClosingPolicy" comment="" />
				<Variable name="formationLeader" comment="" />
				<Variable name="formationName" comment="" />
				<Variable name="formationPreferredPosition" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-70" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AddLink hasInputBreakpoint="0" comment="Adding link means that npc is near the gate and is about to go through the passage" breakpointFlags="0">
										<OutputBreakpoints />
									</AddLink>
									<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Search>
											<GetLightSourceItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetLightSourceItem>
										</Search>
										<Exec>
											<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ExternalLock hasInputBreakpoint="0" comment="Waiting for leader to create formation" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GetMemberFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</GetMemberFormation>
															<IfCondition hasInputBreakpoint="0" comment="Formation already finished moving?" breakpointFlags="0">
																<OutputBreakpoints />
																<FormationFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</FormationFollower>
															</IfCondition>
														</Sequence>
													</ExternalLock>
												</While>
											</MoveParamsDecorator>
										</Exec>
									</HandContentElement>
								</Sequence>
							</Child>
							<OnSuccess>
								<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</RemoveLink>
							</OnSuccess>
						</FuseBox>
					</EntityContextPreset>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="zizka_fleeTour" is_function="0">
		<Variables>
			<Variable name="formationWUID" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="doorClosingPolicy" type="enum:movementDoorClosingPolicy" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="formationLeader" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="formationName" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="formationPreferredPosition" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextPreset preset="crime_tourParticipant" target="">
					<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
						<Child canSkip="1">
							<Sequence>
								<AddLink From="$this.id" To="$formationLeader" Tag="$formationName" Data="" LinkOpHandleMode="Success" />
								<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="$doorClosingPolicy">
									<While doFail="false" propagateChildFail="false" condition="true">
										<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;10m&apos;" LockManagerType="Local" SemaphoreName="&apos;$formationName&apos;" RunLogic="KeepRunning">
											<Sequence>
												<GetMemberFormation MemberWUID="$formationLeader" FormationHandleOut="$formationWUID" />
												<IfCondition failOnCondition="true" condition="$formationWUID~=$__null">
													<FormationFollower FormationHandle="$formationWUID" PreferredPositions="$formationPreferredPosition" FormationMode="MoveHistory" AllowRelocation="false" />
												</IfCondition>
											</Sequence>
										</ExternalLock>
									</While>
								</MoveParamsDecorator>
							</Sequence>
						</Child>
						<OnSuccess canSkip="1">
							<RemoveLink From="$this.id" To="$formationLeader" Tag="$formationName" LinkOpHandleMode="Success" />
						</OnSuccess>
					</FuseBox>
				</EntityContextPreset>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="vezniNaTroskach_fleeFromCastle_follower" EventSet="">
			<Variables>
				<Variable name="formationWUID" comment="" />
				<Variable name="doorClosingPolicy" comment="" />
				<Variable name="formationLeader" comment="" />
				<Variable name="formationName" comment="" />
				<Variable name="formationPreferredPosition" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-70" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AddLink hasInputBreakpoint="0" comment="Adding link means that npc is near the gate and is about to go through the passage" breakpointFlags="0">
										<OutputBreakpoints />
									</AddLink>
									<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ExternalLock hasInputBreakpoint="0" comment="Waiting for leader to create formation" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GetMemberFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetMemberFormation>
													<IfCondition hasInputBreakpoint="0" comment="Formation already finished moving?" breakpointFlags="0">
														<OutputBreakpoints />
														<FormationFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</FormationFollower>
													</IfCondition>
												</Sequence>
											</ExternalLock>
										</While>
									</MoveParamsDecorator>
								</Sequence>
							</Child>
							<OnSuccess>
								<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</RemoveLink>
							</OnSuccess>
						</FuseBox>
					</EntityContextPreset>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bohuta_tourToPassage" is_function="0">
		<Variables>
			<Variable name="currentNpcPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="currentNpcZ" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="currentPlayerPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="currentPlayerZ" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="doesSeePlayer" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="playerIsOnHigerLevel" type="_bool" values="true" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="currentCheckArea" type="_wuid" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="currentDestination" type="_wuid" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
					<Sequence>
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="4.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$currentDestination" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
						<Parallel successMode="Any" failureMode="Any">
							<Loop count="-1">
								<Sequence>
									<GetSpatialInfo In="$__player" Out="$currentPlayerPos" What="Position" />
									<GetSpatialInfo In="$this.id" Out="$currentNpcPos" What="Position" />
									<Round value="$currentPlayerPos.z" step="1.000000" operation="Down" result="$currentPlayerZ" />
									<Round value="$currentNpcPos.z" step="1.000000" operation="Down" result="$currentNpcZ" />
									<Expression expressions="$playerIsOnHigerLevel = $currentPlayerZ &gt;= $currentNpcZ" />
									<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Sequence>
							</Loop>
							<IfGate atomic="false" condition="$playerIsOnHigerLevel" RunLogic="Halt">
								<Parallel successMode="Any" failureMode="Any">
									<Function_continuousPlayerPerceptionCheck NPC="$this.id" loopTime="&apos;2s&apos;" doesSeePlayer="$doesSeePlayer" nodeLabel="93480524" />
									<Loop count="-1">
										<Sequence>
											<Turn target="$__player" align="false" />
											<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										</Sequence>
									</Loop>
									<Loop count="-1">
										<IfGate atomic="false" condition="$doesSeePlayer" RunLogic="KeepRunning">
											<Sequence>
												<SuppressFailure>
													<Function_speech_schedulerMonolog alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="65678226" />
												</SuppressFailure>
												<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
											</Sequence>
										</IfGate>
									</Loop>
									<AreaPresenceGate aiObjects="$__player" area="$currentCheckArea" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
										<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="5.000000" High="5.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
											<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="3.000000" High="4000.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
												<Success />
											</DistanceGate>
										</DistanceCondition>
									</AreaPresenceGate>
								</Parallel>
							</IfGate>
						</Parallel>
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</Sequence>
				</MoveParamsDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="vezniNaTroskach_tourToPassage" EventSet="endNotification">
			<Variables>
				<Variable name="currentNpcPos" comment="" />
				<Variable name="currentNpcZ" comment="" />
				<Variable name="currentPlayerPos" comment="" />
				<Variable name="currentPlayerZ" comment="" />
				<Variable name="doesSeePlayer" comment="" />
				<Variable name="playerIsOnHigerLevel" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="currentCheckArea" comment="" />
				<Variable name="currentDestination" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetSpatialInfo>
										<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetSpatialInfo>
										<Round hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Round>
										<Round hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Round>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Loop>
								<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_continuousPlayerPerceptionCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_continuousPlayerPerceptionCheck>
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Turn>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</Loop>
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_speech_schedulerMonolog>
													</SuppressFailure>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</IfGate>
										</Loop>
										<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</DistanceGate>
											</DistanceCondition>
										</AreaPresenceGate>
									</Parallel>
								</IfGate>
							</Parallel>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</Sequence>
					</MoveParamsDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="gotoAndWait" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="2.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Wait duration="&apos;20s&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="escaper_waitOnSpot" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_followPath" is_function="0">
		<Variables>
			<Variable name="pathFindingParams" type="pathFindingParams" values="" isPersistent="0" form="single" />
			<Variable name="predefinedPathParams" type="predefinedPathParams" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="approachFirstNode" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="path" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="reversePath" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Sequence>
						<Expression expressions="$predefinedPathParams.approachFirstNode = $approachFirstNode &#10;$predefinedPathParams.reversePath = $reversePath &#10;$pathFindingParams.useGeneratedNSO = true" />
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="3.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$path" destinationSpecification2="$predefinedPathParams" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="$pathFindingParams" staminaPolicy="" pathInfo="" />
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</Sequence>
					<Function_vezniNaTroskach_idleBarksInApolena nodeLabel="24220267" />
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="vezniNaTroskach_followPredefinedPath" EventSet="endNotification">
			<Variables>
				<Variable name="pathFindingParams" comment="" />
				<Variable name="predefinedPathParams" comment="" />
				<Variable name="approachFirstNode" comment="" />
				<Variable name="path" comment="" />
				<Variable name="reversePath" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</Sequence>
						<Function_vezniNaTroskach_idleBarksInApolena hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_vezniNaTroskach_idleBarksInApolena>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_wait" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_drinkingScene" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Success" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<Parallel successMode="All" failureMode="Any">
							<Function_speech_schedulerMonolog alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="73953608" />
							<UnstanceAction unstance="camper_wineDrinking" locationObject="$__resource.id" slaveObject="" />
						</Parallel>
					</Child>
					<OnSuccess canSkip="1">
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="vezniNaTroskach_drinkingScene" EventSet="endNotification">
			<Variables>
				<Variable name="alias" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerMonolog>
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
							</Parallel>
						</Child>
						<OnSuccess>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_whistle" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Loop count="-1">
					<Sequence>
						<Wait duration="&apos;20s&apos;" timeType="GameTime" doFail="false" variation="&apos;10s&apos;" skipInLOD="false" />
						<EntityContextCheck context="vezniNaTroskach_soldierIsPatroling" target="" saveVersion="2">
							<Then canSkip="1">
								<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="&apos;SAMOMLUVA&apos;" subtitlesDown="false" nodeLabel="10519186" />
							</Then>
						</EntityContextCheck>
					</Sequence>
				</Loop>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
								</Then>
							</EntityContextCheck>
						</Sequence>
					</Loop>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_warmingHands" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$__object.id" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$__object.id" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<AnimationAction fragment="&apos;WarmingHands&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AnimationAction>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_predefinedPatrolWithStop" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;path&apos;" prune="true" negprune="unknown" Parent="" Child="$path" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$path" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_followPathWithStop" is_function="0">
		<Variables>
			<Variable name="pathFindingParams" type="pathFindingParams" values="" isPersistent="0" form="single" />
			<Variable name="predefinedPathParams" type="predefinedPathParams" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="approachFirstNode" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="path" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="reversePath" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$predefinedPathParams.approachFirstNode = $approachFirstNode &#10;$predefinedPathParams.reversePath = $reversePath &#10;$pathFindingParams.useGeneratedNSO = true" />
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$path" destinationSpecification2="$predefinedPathParams" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="$pathFindingParams" staminaPolicy="" pathInfo="" />
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="vezniNaTroskach_followPredefinedPath" EventSet="endNotification">
			<Variables>
				<Variable name="pathFindingParams" comment="" />
				<Variable name="predefinedPathParams" comment="" />
				<Variable name="approachFirstNode" comment="" />
				<Variable name="path" comment="" />
				<Variable name="reversePath" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="Zmergovat s chovanim soldier_followPath " breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="vezniNaTroskach_idleBarksInApolena" is_function="1">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Loop count="-1">
					<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="50.000000" High="4000.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
						<SuppressFailure>
							<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Global" SemaphoreName="&apos;vezniNaTroskach_barkingInApolena&apos;">
								<Sequence>
									<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="&apos;5s&apos;" />
									<Function_speech_schedulerMonolog alias="&apos;vezniNaTroskach_strazeKrik&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" subtitlesDown="false" nodeLabel="55910973" />
								</Sequence>
							</Semaphore>
						</SuppressFailure>
					</DistanceGate>
				</Loop>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
										<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_schedulerMonolog>
									</Sequence>
								</Semaphore>
							</SuppressFailure>
						</DistanceGate>
					</Loop>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_checkTheCave" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Success" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							<Function_speech_schedulerMonolog alias="&apos;vezniNaTroskach_strazProhledavajiciTajnouChodbu&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="45473820" />
						</Sequence>
					</Child>
					<OnSuccess canSkip="1">
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
								<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerMonolog>
							</Sequence>
						</Child>
						<OnSuccess>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_interrogateMika" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="area" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="dialogReceiver" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="spot" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Success" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<ExactMove directionType="AlignWithEntity" directionSpecification="$spot" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$spot" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							<AreaPresenceGate aiObjects="$__player" area="$area" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
								<ForceLook LookTarget="$dialogReceiver" DisableVariations="true">
									<Sequence>
										<SuppressFailure>
											<Function_speech_polylogInitiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" participants="$dialogReceiver" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="76816784" />
										</SuppressFailure>
										<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</ForceLook>
							</AreaPresenceGate>
						</Sequence>
					</Child>
					<OnSuccess canSkip="1">
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="vezniNaTroskach_mikaInterrogation" EventSet="endNotification">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="area" comment="" />
				<Variable name="dialogReceiver" comment="" />
				<Variable name="spot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
								<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_speech_polylogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_polylogInitiator>
											</SuppressFailure>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</ForceLook>
								</AreaPresenceGate>
							</Sequence>
						</Child>
						<OnSuccess>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="teleportToDestination" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<TeleportAction Position="$destination" EndInterruptOnActionStart="false" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="teleport" EventSet="endNotification">
			<Variables>
				<Variable name="destination" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</TeleportAction>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_breakingInDoor" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="Quest_UnsuccessfulDoorBreak" locationObject="$__object.id" slaveObject="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_crouchingOnGround" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="viewingGround" locationObject="$__object.id" slaveObject="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_followPathLooped" is_function="0">
		<Variables>
			<Variable name="path" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="predefinedPathParams" type="predefinedPathParams" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;mypath&apos;" prune="true" negprune="unknown" Parent="" Child="$path" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$predefinedPathParams.approachFirstNode = false" />
					<Loop count="-1">
						<Sequence>
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="3.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$path" destinationSpecification2="$predefinedPathParams" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							<Expression expressions="$predefinedPathParams.approachFirstNode = true" />
						</Sequence>
					</Loop>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="path" comment="" />
				<Variable name="predefinedPathParams" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
						</Loop>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_lookingAtMap" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="Quest_Tailor" locationObject="$__object.id" slaveObject="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="horse_waitUninteractable" is_function="0">
		<Variables>
			<Variable name="spot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;spot&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;spot&apos;" prune="true" negprune="unknown" Parent="" Child="$spot" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<LuaWrapper onEnter="local e = XGenAIModule.GetEntityByWUID(data.this.id) &#10;e:SetMountableByPlayer(false) &#10;e:SetInspectableByPlayer(false)" onExit="local e = XGenAIModule.GetEntityByWUID(data.this.id) &#10;e:SetMountableByPlayer(true) &#10;e:SetInspectableByPlayer(true)">
					<Sequence>
						<IfCondition failOnCondition="false" condition="$spot ~= $__null">
							<ExactMove directionType="AlignWithEntity" directionSpecification="$spot" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$spot" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
						</IfCondition>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</LuaWrapper>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="spot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<LuaWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
							</IfCondition>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</LuaWrapper>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_checkingStash" is_function="0">
		<Variables>
			<Variable name="stash" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;stash&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;stash&apos;" prune="true" negprune="unknown" Parent="" Child="$stash" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="chestCheck" locationObject="$stash" slaveObject="$stash" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="stash" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pista_drawSword" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<SuppressFailure>
						<DrawAction WeaponSet="Primary" fullBody="false" tags="" useSelectedWeaponSet="false" />
					</SuppressFailure>
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</DrawAction>
						</SuppressFailure>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>