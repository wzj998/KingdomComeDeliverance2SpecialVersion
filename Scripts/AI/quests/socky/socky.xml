<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="DEPRICATED_socky_caponCarriesSack" is_function="0">
		<Variables>
			<Variable name="carrying" type="_bool" values="true" isPersistent="0" form="single" />
			<Variable name="dialogParameters" type="dialog:parameters:initiator" values="" isPersistent="0" form="single" />
			<Variable name="interrupted" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="lockName" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="sacksEnd" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="sacksStart" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Sequence>
						<IfGate atomic="false" condition="$carrying" RunLogic="Halt">
							<Loop count="-1">
								<Sequence>
									<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$sacksStart" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
									<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$sacksEnd" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
								</Sequence>
							</Loop>
						</IfGate>
						<Expression expressions="$interrupted = true" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
					<DistanceGate Origin="$this.id" ReferencePt="$npc" Low="10.000000" High="10.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
						<Sequence>
							<Expression expressions="$carrying = false" />
							<IfGate atomic="false" condition="$interrupted" RunLogic="KeepRunning">
								<Sequence>
									<Move stopWithinDistance="1.500000" stopDistanceVariation="0.000000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$npc" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="$addMoveParams" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
									<Callback_empty EventName="&apos;Success&apos;" />
									<Concatenation OutString="$lockName" Pattern="&apos;npcdialog_movetonpc;$this.id&apos;" />
									<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$lockName&apos;" RunLogic="KeepRunning">
										<Sequence>
											<Turn target="$npc" align="false" />
											<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
												<Child canSkip="1">
													<Function_speech_dialogInitiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="$dialogParameters" metarole="" preset="$enum:dialogPreset.ingame" recipient="$npc" recipientMetaroles="" nodeLabel="12100168" />
												</Child>
												<OnFail canSkip="1">
													<Callback_empty EventName="&apos;Fail&apos;" />
												</OnFail>
											</FuseBox>
										</Sequence>
									</Synchronize>
								</Sequence>
							</IfGate>
						</Sequence>
					</DistanceGate>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer>
			<AnimationAction fragment="&apos;ldal_t28791_s59621_0_p_ptacek_p_TmVV_gest&apos;" tags="&apos;Scope_Looking&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" />
			<Success />
		</ForestContainer>
		<EditorData Signature="socky_caponCarriesSack" EventSet="resultNotification">
			<Variables>
				<Variable name="carrying" comment="" />
				<Variable name="dialogParameters" comment="" />
				<Variable name="interrupted" comment="" />
				<Variable name="lockName" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="npc" comment="" />
				<Variable name="sacksEnd" comment="" />
				<Variable name="sacksStart" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
									</Sequence>
								</Loop>
							</IfGate>
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
						<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
										<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Concatenation>
										<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Turn>
												<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Child>
														<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_speech_dialogInitiator>
													</Child>
													<OnFail>
														<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Callback_empty>
													</OnFail>
												</FuseBox>
											</Sequence>
										</Synchronize>
									</Sequence>
								</IfGate>
							</Sequence>
						</DistanceGate>
					</Parallel>
				</Behavior>
			</Root>
			<Forest>
				<AnimationAction editorPosX="2040" editorPosY="810" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</AnimationAction>
				<Success editorPosX="1920" editorPosY="820" hasInputBreakpoint="0" comment="placeholder for sync animation" breakpointFlags="0">
					<OutputBreakpoints />
				</Success>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="socky_caponCarriesSack" is_function="0">
		<Variables>
			<Variable name="addMoveParams" type="additionalMoveParams" values="destChangedThreshold(&apos;500ms&apos;)" isPersistent="0" form="single" />
			<Variable name="dialogParameters" type="dialog:parameters:initiator" values="" isPersistent="0" form="single" />
			<Variable name="important" type="_bool" values="true" isPersistent="0" form="single" />
			<Variable name="lockName" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="waitForFreeDialogWindow" type="_bool" values="true" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="sacksEnd" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="sacksStart" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="1.500000" stopDistanceVariation="0.000000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$npc" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="$addMoveParams" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Callback_empty EventName="&apos;Success&apos;" />
					<IfCondition failOnCondition="false" condition="$waitForFreeDialogWindow">
						<DialogGate Who="$npc" Negation="true" EndDialogInRoot="false" WaitForTwins="false" Condition="InAny" RunLogic="KeepRunning">
							<Success />
						</DialogGate>
					</IfCondition>
					<Concatenation OutString="$lockName" Pattern="&apos;npcdialog_movetonpc;$this.id&apos;" />
					<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;10s&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$lockName&apos;" RunLogic="Halt">
						<Sequence>
							<Turn target="$npc" align="false" />
							<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
								<Child canSkip="1">
									<EntityContextElement context="speech_npcToNpcDialogActive">
										<Function_speech_dialogInitiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="$dialogParameters" metarole="" preset="$enum:dialogPreset.ingame" recipient="$npc" recipientMetaroles="" nodeLabel="35176805" />
									</EntityContextElement>
								</Child>
								<OnFail canSkip="1">
									<Callback_empty EventName="&apos;Fail&apos;" />
								</OnFail>
							</FuseBox>
						</Sequence>
					</Synchronize>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="socky_caponCarriesSack" EventSet="resultNotification">
			<Variables>
				<Variable name="addMoveParams" comment="" />
				<Variable name="dialogParameters" comment="" />
				<Variable name="important" comment="" />
				<Variable name="lockName" comment="" />
				<Variable name="waitForFreeDialogWindow" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="npc" comment="" />
				<Variable name="sacksEnd" comment="" />
				<Variable name="sacksStart" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DialogGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</DialogGate>
						</IfCondition>
						<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Concatenation>
						<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Turn>
								<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Child>
										<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_dialogInitiator>
										</EntityContextElement>
									</Child>
									<OnFail>
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
									</OnFail>
								</FuseBox>
							</Sequence>
						</Synchronize>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="socky_dummyWait" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<WaitAction />
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="&apos;3s&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="socky_arguingWithCapon" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="socky_dummyTeleportWait" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<TeleportAction Position="$destination" EndInterruptOnActionStart="false" />
					<WaitAction />
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="teleport" EventSet="">
			<Variables>
				<Variable name="destination" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</TeleportAction>
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="socky_constTruePredicate" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Expression expressions="$shouldOverride = true" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="knownInformations" comment="" />
				<Variable name="overrideEntity" comment="" />
				<Variable name="shouldOverride" comment="" />
			</Variables>
			<ForwardDeclarations>
				<Variable name="knownInformations" type="information" values="" isPersistent="0" form="array" requirementType="ForwardDeclaration" />
				<Variable name="overrideEntity" type="_wuid" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
				<Variable name="shouldOverride" type="_bool" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
			</ForwardDeclarations>
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="innkeeper_wineJug" is_function="0">
		<Variables>
			<Variable name="wineJug" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="firstWuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="secondWuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$wineJug" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="socky_wineJug" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<GetItemInSlot slot="$secondWuid" useHomeItem="true" item="$wineJug" />
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<WaitAction />
							<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;socky_dialogKaterinaInnkeeper&apos;" RunLogic="KeepRunning">
								<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
									<Child canSkip="1">
										<Function_speech_dialogInitiator alias="&apos;socky_ingameKaterinaSHospodskou&apos;" animationApproach="$enum:animationApproach.ingameDialogPoseAndAnimations" context="" customParameters="" metarole="" preset="$enum:dialogPreset.ingame" recipient="$firstWuid" recipientMetaroles="" nodeLabel="22386005" />
									</Child>
									<OnSuccess canSkip="1">
										<Callback_empty EventName="&apos;OnFinished&apos;" />
									</OnSuccess>
								</FuseBox>
							</Synchronize>
							<Callback_empty EventName="&apos;OnFinished&apos;" />
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="wineJug" comment="" />
				<Variable name="firstWuid" comment="" />
				<Variable name="secondWuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetItemInSlot>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Child>
											<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_dialogInitiator>
										</Child>
										<OnSuccess>
											<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Callback_empty>
										</OnSuccess>
									</FuseBox>
								</Synchronize>
								<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Callback_empty>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="katerina_wineJug" is_function="0">
		<Variables>
			<Variable name="lockName" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;socky_dialogKaterinaInnkeeper&apos;" RunLogic="Halt">
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Synchronize>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="lockName" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Synchronize>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_confiscateItems" is_function="0">
		<Variables>
			<Variable name="information" type="information" values="" isPersistent="0" form="array" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ResolveCrimeDecorator Information="$information">
						<Confiscate ConfiscateItems="All" ConfiscateFine="true" TargetStash="$data" />
					</ResolveCrimeDecorator>
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="information" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ResolveCrimeDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Confiscate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Confiscate>
						</ResolveCrimeDecorator>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>