<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="moveToListenToOrders" is_function="0">
		<Variables>
			<Variable name="decisionLabel" type="_string" values="&apos;battle_ranged&apos;" isPersistent="0" form="single" />
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="equipPavise" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="hand" type="enum:handType" values="" isPersistent="0" form="single" />
			<Variable name="itemToEquip" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;listeningOrdersSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$destination" Data="" />
					</GraphSearch>
					<SuppressFailure>
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;paviseMan&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Expression expressions="$equipPavise = true &#10;$decisionLabel = &apos;battle_shield&apos;" />
						</Sequence>
					</SuppressFailure>
					<HandContentElement hand="$hand" item="$itemToEquip" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="$decisionLabel" useDecision="false" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<IfElseCondition failOnCondition="false" condition="$equipPavise" saveVersion="2">
								<Then canSkip="1">
									<Sequence>
										<Function_findItemOnSlot linkName="&apos;placeSlot&apos;" npc="$this.id" searchOrigin="$this.id" item="$leftHandItem" nodeLabel="33953706" />
										<Expression expressions="$itemToEquip = $leftHandItem &#10;$hand = $enum:handType.left" />
									</Sequence>
								</Then>
								<Else canSkip="1">
									<Function_getRangedWeapon hand="$hand" weaponToEquip="$itemToEquip" nodeLabel="14219925" />
								</Else>
							</IfElseCondition>
						</Search>
						<Exec canSkip="1">
							<Sequence>
								<ExactMove directionType="AlignWithEntity" directionSpecification="$destination" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
								<ForceLook LookTarget="$data" DisableVariations="true">
									<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
								</ForceLook>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="decisionLabel" comment="" />
				<Variable name="destination" comment="" />
				<Variable name="equipPavise" comment="" />
				<Variable name="hand" comment="" />
				<Variable name="itemToEquip" comment="" />
				<Variable name="leftHandItem" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="20" editorPosY="-30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
						</SuppressFailure>
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_findItemOnSlot>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Sequence>
									</Then>
									<Else>
										<Function_getRangedWeapon hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_getRangedWeapon>
									</Else>
								</IfElseCondition>
							</Search>
							<Exec>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExactMove>
									<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</ForceLook>
								</Sequence>
							</Exec>
						</HandContentElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="cert_commandPaviseMen" is_function="0">
		<Variables>
			<Variable name="currentIsRepeatingBark" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
			<Variable name="lastCommandBarkAlias" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="playerIsInArea" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="rightHandItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="area" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="barkingAtPlayer" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="commandBarkAlias" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="commandSpot" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="cooldown" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="cooldownVariation" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="gateLookSpot" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="isRepeatingBark" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="playAnimationWhenBarking" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="playerBarkAlias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="triggerBark" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$rightHandItem" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHandItem" RightHand="$rightHandItem" UseTorchWhenAppropriate="false" />
					</Search>
					<Exec canSkip="1">
						<Loop count="-1">
							<Parallel successMode="Any" failureMode="Any">
								<Sequence>
									<ExactMove directionType="AlignWithEntity" directionSpecification="$commandSpot" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$commandSpot" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									<UnstanceElement unstance="BattleLngsw" locationObject="" slaveObject="" enabled="true">
										<Sequence>
											<WaitAction />
											<Parallel successMode="Any" failureMode="Any">
												<ContinuousSwitch>
													<IfCondition failOnCondition="false" condition="$playerIsInArea &amp; &#10;$lastCommandBarkAlias == $commandBarkAlias &amp; &#10;!$triggerBark">
														<Sequence>
															<Function_speech_schedulerMonolog alias="$playerBarkAlias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="true" nodeLabel="71665849" />
															<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="&apos;1s&apos;" />
														</Sequence>
													</IfCondition>
													<IfCondition failOnCondition="false" condition="$currentIsRepeatingBark &amp; &#10;!$playerIsInArea">
														<Sequence>
															<SetExternalLock LockManagerType="Local" Locked="true" LockName="&apos;repeatingBarkFinishedLock&apos;" />
															<Parallel successMode="All" failureMode="Any">
																<Function_speech_schedulerMonolog alias="$commandBarkAlias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="$barkingAtPlayer" nodeLabel="97939113" />
																<IfCondition failOnCondition="false" condition="$playAnimationWhenBarking">
																	<Sequence>
																		<Turn target="$commandSpot" align="true" />
																		<AnimationAction fragment="&apos;BattleCommand&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
																	</Sequence>
																</IfCondition>
															</Parallel>
															<SetExternalLock LockManagerType="Local" Locked="false" LockName="&apos;repeatingBarkFinishedLock&apos;" />
															<Wait duration="$cooldown" timeType="GameTime" doFail="false" variation="$cooldownVariation" />
														</Sequence>
													</IfCondition>
													<IfCondition failOnCondition="false" condition="true">
														<IfGate atomic="false" condition="$commandBarkAlias ~= &apos;none&apos;" RunLogic="KeepRunning">
															<Sequence>
																<SuppressFailure>
																	<Function_speech_schedulerMonolog alias="$commandBarkAlias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="$barkingAtPlayer" nodeLabel="69197349" />
																</SuppressFailure>
																<Expression expressions="$lastCommandBarkAlias = $commandBarkAlias" />
																<IfCondition failOnCondition="false" condition="$triggerBark">
																	<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
																</IfCondition>
																<IfGate atomic="false" condition="$lastCommandBarkAlias ~= $commandBarkAlias" RunLogic="KeepRunning">
																	<Success />
																</IfGate>
															</Sequence>
														</IfGate>
													</IfCondition>
												</ContinuousSwitch>
												<ContinuousSwitch>
													<IfCondition failOnCondition="false" condition="$barkingAtPlayer | &#10;$playerIsInArea">
														<ForceLook LookTarget="$__player" DisableVariations="true">
															<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
														</ForceLook>
													</IfCondition>
													<IfCondition failOnCondition="false" condition="true">
														<ForceLook LookTarget="$gateLookSpot" DisableVariations="true">
															<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
														</ForceLook>
													</IfCondition>
												</ContinuousSwitch>
												<While doFail="false" propagateChildFail="false" condition="true">
													<Sequence>
														<AreaPresenceGate aiObjects="$__player" area="$area" amount="AtLeastOne" presence="Present" RunLogic="Halt">
															<Sequence>
																<Expression expressions="$playerIsInArea = true" />
																<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
															</Sequence>
														</AreaPresenceGate>
														<Expression expressions="$playerIsInArea = false" />
													</Sequence>
												</While>
												<While doFail="false" propagateChildFail="false" condition="true">
													<Sequence>
														<Expression expressions="$currentIsRepeatingBark = $isRepeatingBark" />
														<While doFail="false" propagateChildFail="false" condition="$currentIsRepeatingBark == $isRepeatingBark">
															<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;5s&apos;" LockManagerType="Local" SemaphoreName="&apos;repeatingBarkFinishedLock&apos;" RunLogic="Halt">
																<IfGate atomic="false" condition="$currentIsRepeatingBark ~= $isRepeatingBark" RunLogic="KeepRunning">
																	<Success />
																</IfGate>
															</ExternalLock>
														</While>
													</Sequence>
												</While>
											</Parallel>
										</Sequence>
									</UnstanceElement>
								</Sequence>
								<LoopUntil until="Fail" attemptCount="0">
									<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
										<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt; $enum:HitReactionStrength.Unpleasant">
											<Fail />
										</IfCondition>
									</ProcessMessage>
								</LoopUntil>
							</Parallel>
						</Loop>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="zoufalaObranaZaBohutu_cert_commandPaviseMen" EventSet="endNotification">
			<Variables>
				<Variable name="currentIsRepeatingBark" comment="" />
				<Variable name="hitReaction" comment="" />
				<Variable name="lastCommandBarkAlias" comment="" />
				<Variable name="leftHandItem" comment="" />
				<Variable name="playerIsInArea" comment="" />
				<Variable name="rightHandItem" comment="" />
				<Variable name="area" comment="" />
				<Variable name="barkingAtPlayer" comment="" />
				<Variable name="commandBarkAlias" comment="" />
				<Variable name="commandSpot" comment="" />
				<Variable name="cooldown" comment="" />
				<Variable name="cooldownVariation" comment="" />
				<Variable name="gateLookSpot" comment="" />
				<Variable name="isRepeatingBark" comment="" />
				<Variable name="playAnimationWhenBarking" comment="" />
				<Variable name="playerBarkAlias" comment="" />
				<Variable name="triggerBark" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-10" editorPosY="20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetWeaponsFromWeaponSet>
						</Search>
						<Exec>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ExactMove>
										<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
												<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_schedulerMonolog>
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
															</Sequence>
														</IfCondition>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</SetExternalLock>
																<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_speech_schedulerMonolog>
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Turn>
																			<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</AnimationAction>
																		</Sequence>
																	</IfCondition>
																</Parallel>
																<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</SetExternalLock>
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
															</Sequence>
														</IfCondition>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_speech_schedulerMonolog>
																	</SuppressFailure>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</InstantCallback_empty>
																	</IfCondition>
																	<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Success>
																	</IfGate>
																</Sequence>
															</IfGate>
														</IfCondition>
													</ContinuousSwitch>
													<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
															</ForceLook>
														</IfCondition>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
															</ForceLook>
														</IfCondition>
													</ContinuousSwitch>
													<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																	<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Wait>
																</Sequence>
															</AreaPresenceGate>
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</Sequence>
													</While>
													<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
															<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Success>
																	</IfGate>
																</ExternalLock>
															</While>
														</Sequence>
													</While>
												</Parallel>
											</Sequence>
										</UnstanceElement>
									</Sequence>
									<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Fail>
											</IfCondition>
										</ProcessMessage>
									</LoopUntil>
								</Parallel>
							</Loop>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="prazan_jumpFromLadder" is_function="0">
		<Variables>
			<Variable name="ladder" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="ladderSO" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="situationState" type="enum:zoufalaObranaZaBohutu_prazanSituation" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$ladderSO" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;ladder&apos;" prune="true" negprune="unknown" Parent="" Child="$ladder" Data="" />
					</GraphSearch>
					<AddLinkElement from="$ladder" to="$this.id" tag="&apos;ladderClimber&apos;" data="" enabled="true">
						<Sequence>
							<WaitAction />
							<ActorStateCheck Who="" State="ladder" FailWithSubtreeMissing="false" saveVersion="2">
								<Then canSkip="1">
									<Success />
								</Then>
								<Else canSkip="1">
									<GetOnLadder Ladder="$ladder" />
								</Else>
							</ActorStateCheck>
							<ContinuousSwitch>
								<IfCondition failOnCondition="false" condition="$situationState == $enum:zoufalaObranaZaBohutu_prazanSituation.ClimbingLadder">
									<EntityContext context="combat_actorSupressHitreactionAnimation" target="">
										<Sequence>
											<DistanceCondition Origin="$this.id" ReferencePt="$ladderSO" Low="2.500000" High="2.500000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
												<Parallel successMode="Any" failureMode="Any">
													<ClimbLadder Speed="1.000000" />
													<DistanceGate Origin="$this.id" ReferencePt="$ladderSO" Low="2.500000" High="2.500000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
														<Success />
													</DistanceGate>
												</Parallel>
											</DistanceCondition>
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
									</EntityContext>
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$situationState == $enum:zoufalaObranaZaBohutu_prazanSituation.JumpingFromLadder">
									<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
										<Child canSkip="1">
											<Sequence>
												<SendAIConceptSignal_battleLadderClimber ladder="$ladderSO" success="true" />
												<ClimbLadder Speed="1.000000" />
												<ActorStateCheck Who="" State="hit" FailWithSubtreeMissing="false" saveVersion="2">
													<Then canSkip="1">
														<KillNPC KillTarget="" Scream="false" />
													</Then>
												</ActorStateCheck>
											</Sequence>
										</Child>
										<OnSuccess canSkip="1">
											<Sequence>
												<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
												<SendAIConceptSignal_battleLadderClimber ladder="$ladderSO" success="false" />
											</Sequence>
										</OnSuccess>
									</FuseBox>
								</IfCondition>
							</ContinuousSwitch>
						</Sequence>
					</AddLinkElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="zoufalaObranaZaBohutu_prazanSituation" EventSet="endNotification">
			<Variables>
				<Variable name="ladder" comment="" />
				<Variable name="ladderSO" comment="" />
				<Variable name="situationState" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="50" editorPosY="200" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<ActorStateCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Then>
									<Else>
										<GetOnLadder hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetOnLadder>
									</Else>
								</ActorStateCheck>
								<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<ClimbLadder hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ClimbLadder>
														<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</DistanceGate>
													</Parallel>
												</DistanceCondition>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</EntityContext>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<SendAIConceptSignal_battleLadderClimber hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</SendAIConceptSignal_battleLadderClimber>
													<ClimbLadder hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ClimbLadder>
													<ActorStateCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</KillNPC>
														</Then>
													</ActorStateCheck>
												</Sequence>
											</Child>
											<OnSuccess>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantCallback_empty>
													<SendAIConceptSignal_battleLadderClimber hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</SendAIConceptSignal_battleLadderClimber>
												</Sequence>
											</OnSuccess>
										</FuseBox>
									</IfCondition>
								</ContinuousSwitch>
							</Sequence>
						</AddLinkElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments>
				<Comment text="Kdyz_NPC_dostane_zasah,_tak_ClimbLadder_succedne" posX="1930" posY="710" width="480" height="127" resizeBorderWidth="300" resizeBorderHeight="100" color="0.65,0.65,0.65" author="aleks" />
			</Comments>
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_waitInBattleIdle" is_function="0">
		<Variables>
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHandItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$rightHandItem" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHandItem" RightHand="$rightHandItem" UseTorchWhenAppropriate="false" />
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<UnstanceAction unstance="BattleLngsw_WithLocationObject" locationObject="$data" slaveObject="" />
							<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="leftHandItem" comment="" />
				<Variable name="rightHandItem" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-20" editorPosY="-40" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetWeaponsFromWeaponSet>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_callForHelp" is_function="0">
		<Variables>
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHandItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<HandContentElement hand="Right" item="$rightHandItem" allowAny="false" decisionLabel="Label1" useDecision="true" saveVersion="2">
							<Search canSkip="1">
								<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHandItem" RightHand="$rightHandItem" UseTorchWhenAppropriate="false" />
							</Search>
							<Exec canSkip="1">
								<Sequence>
									<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
										<ExactMove directionType="AlignWithEntity" directionSpecification="$wuid" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
									</MoveParamsDecorator>
									<EntityContext context="zoufalaObranaZaBohutu_desperateSoldierIsCallingForHelp" target="">
										<Parallel successMode="All" failureMode="Any">
											<AnimationAction fragment="&apos;Commander_Urge&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" />
											<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="65130224" />
										</Parallel>
									</EntityContext>
								</Sequence>
							</Exec>
						</HandContentElement>
					</Child>
					<OnSuccess canSkip="1">
						<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="endNotification">
			<Variables>
				<Variable name="leftHandItem" comment="" />
				<Variable name="rightHandItem" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Search>
									<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetWeaponsFromWeaponSet>
								</Search>
								<Exec>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</ExactMove>
										</MoveParamsDecorator>
										<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</AnimationAction>
												<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerMonolog>
											</Parallel>
										</EntityContext>
									</Sequence>
								</Exec>
							</HandContentElement>
						</Child>
						<OnSuccess>
							<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantCallback_empty>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="cert_moveToSideWall" is_function="0">
		<Variables>
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHandItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$rightHandItem" allowAny="false" decisionLabel="Label1" useDecision="true" saveVersion="2">
					<Search canSkip="1">
						<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHandItem" RightHand="$rightHandItem" UseTorchWhenAppropriate="false" />
					</Search>
					<Exec canSkip="1">
						<MoveParamsDecorator speed="Run" pathFindingParams="" doorClosingPolicy="LeaveOpened">
							<Sequence>
								<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="true" successDistance="2.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
								<Callback_empty EventName="&apos;OnFinished&apos;" />
							</Sequence>
						</MoveParamsDecorator>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="leftHandItem" comment="" />
				<Variable name="rightHandItem" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetWeaponsFromWeaponSet>
						</Search>
						<Exec>
							<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Move>
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
								</Sequence>
							</MoveParamsDecorator>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="cert_chatOnNearbyPlayer" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
							<Sequence>
								<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="true" successDistance="3.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
								<ForceLook LookTarget="$__player" DisableVariations="true">
									<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="8.000000" High="8.000000" Negation="false" ValueOnMiddle="false" failOnCondition="false">
										<Parallel successMode="All" failureMode="Any">
											<Turn target="$__player" align="false" />
											<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" subtitlesDown="true" nodeLabel="29683372" />
										</Parallel>
									</DistanceCondition>
								</ForceLook>
							</Sequence>
						</AnyDecorator>
					</Child>
					<OnSuccess canSkip="1">
						<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="endNotification">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Move>
									<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Turn>
												<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerMonolog>
											</Parallel>
										</DistanceCondition>
									</ForceLook>
								</Sequence>
							</AnyDecorator>
						</Child>
						<OnSuccess>
							<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantCallback_empty>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="commander_startTheAttack" is_function="0">
		<Variables>
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHandItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$rightHandItem" allowAny="false" decisionLabel="Label1" useDecision="false" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHandItem" RightHand="$rightHandItem" UseTorchWhenAppropriate="false" />
					</Search>
					<Exec canSkip="1">
						<UnstanceElement unstance="BattleLngsw" locationObject="" slaveObject="" enabled="true">
							<Sequence>
								<Parallel successMode="All" failureMode="Any">
									<AnimationAction fragment="&apos;BattleCommand&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
									<Sequence>
										<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
										<Function_speech_schedulerMonolog alias="&apos;zoufalaObranaZaBohutu_prazskyVelitelVeliKUtoku&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" subtitlesDown="false" nodeLabel="80159807" />
									</Sequence>
								</Parallel>
								<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
								<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
							</Sequence>
						</UnstanceElement>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer>
			<UnstanceAction unstance="BattleLngsw" locationObject="" slaveObject="" />
			<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
			<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
			<UrgencyDecorator Urgency="Slow">
				<AnimationAction fragment="&apos;BattleFollowMe&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
			</UrgencyDecorator>
		</ForestContainer>
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="leftHandItem" comment="" />
				<Variable name="rightHandItem" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetWeaponsFromWeaponSet>
						</Search>
						<Exec>
							<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AnimationAction>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</Sequence>
									</Parallel>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantCallback_empty>
								</Sequence>
							</UnstanceElement>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest>
				<UnstanceAction editorPosX="1560" editorPosY="-340" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</UnstanceAction>
				<Wait editorPosX="1690" editorPosY="-230" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Wait>
				<InstantCallback_empty editorPosX="1480" editorPosY="-400" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</InstantCallback_empty>
				<UrgencyDecorator editorPosX="1640" editorPosY="-10" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</AnimationAction>
				</UrgencyDecorator>
			</Forest>
			<Comments>
				<Comment text="Trackview_recording_behavior_only" posX="20" posY="-190" width="319" height="127" resizeBorderWidth="300" resizeBorderHeight="100" color="0.65,0.65,0.65" author="" />
			</Comments>
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="shooter_shootThroughGate" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="barkOnSpot" is_function="1">
		<Variables />
		<Parameters>
			<Variable name="data" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ForceLook LookTarget="$__player" DisableVariations="true">
					<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
						<Child canSkip="1">
							<Sequence>
								<Parallel successMode="Any" failureMode="Any">
									<DialogGate Who="$__player" Negation="true" EndDialogInRoot="false" Condition="InMonolog" RunLogic="KeepRunning">
										<Success />
									</DialogGate>
									<Sequence>
										<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
										<Fail />
									</Sequence>
								</Parallel>
								<EntityContext context="zoufalaObranaZaBohutu_barkingAtPlayer" target="">
									<Function_speech_schedulerMonolog alias="$data" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" subtitlesDown="true" nodeLabel="24045215" />
								</EntityContext>
							</Sequence>
						</Child>
						<OnSuccess canSkip="1">
							<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
						</OnSuccess>
					</FuseBox>
				</ForceLook>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="stringData" EventSet="endNotification">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="40" editorPosY="40" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<DialogGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</DialogGate>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
											<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Fail>
										</Sequence>
									</Parallel>
									<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_schedulerMonolog>
									</EntityContext>
								</Sequence>
							</Child>
							<OnSuccess>
								<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantCallback_empty>
							</OnSuccess>
						</FuseBox>
					</ForceLook>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="shootFromSpotNPCsInArea" is_function="0">
		<Variables>
			<Variable name="break" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="forcedTarget" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="groupController" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="randomize" type="_bool" values="true" isPersistent="0" form="single" />
			<Variable name="rightHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="target" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="targets" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Parameters>
			<Variable name="wuidData" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuidDataArray" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Left" item="$leftHandItem" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_ranged" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHandItem" RightHand="$rightHandItem" UseTorchWhenAppropriate="true" />
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;shootingSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$destination" Data="" />
							</GraphSearch>
							<ExactMove directionType="AlignWithEntity" directionSpecification="$destination" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							<Parallel successMode="Any" failureMode="Any">
								<Loop count="-1">
									<LinkGate from="$wuidDataArray" to="" tag="&apos;battleEntity&apos;" amount="AtLeastOne" presence="Present" RunLogic="Halt">
										<Sequence>
											<ReinitVariable variable="$targets" />
											<ReinitVariable variable="$break" />
											<ReinitVariable variable="$forcedTarget" />
											<ForEach startIndex="0" step="1" array="$wuidDataArray" iterator="" value="$groupController" break="">
												<GraphSearch Origin="$groupController" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;battleEntity&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
													<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<Nodalyzer Quantifiers="ForAll" Parent="" Child="$targets" saveVersion="2" />
												</GraphSearch>
											</ForEach>
											<Selector>
												<IfCondition failOnCondition="true" condition="#targets &gt; 0">
													<Sequence>
														<ForEach startIndex="0" step="1" array="$targets" iterator="" value="$target" break="$break">
															<IsInsideArea Origin="$target" Area="$wuidData" FailSubtMissing="false" saveVersion="2">
																<Then canSkip="1">
																	<IsDeadCheck SoulWUID="$target" FailSubtMissing="false" saveVersion="2">
																		<Else canSkip="1">
																			<Expression expressions="$forcedTarget = $target &#10;$randomize = false &#10;$break = true" />
																		</Else>
																	</IsDeadCheck>
																</Then>
															</IsInsideArea>
														</ForEach>
														<IfCondition failOnCondition="true" condition="$forcedTarget ~= $__null">
															<Sequence>
																<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;shootingNPCsInAreaLock&apos;">
																	<Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="&apos;100ms&apos;" />
																</Semaphore>
																<RelationContext context="combat_forcedTarget" source="$this.id" target="$forcedTarget">
																	<EntityContext context="combat_missileAttackerIgnoreTrajectoryCollision" target="">
																		<EntityContext context="combat_unlimitedMissileRange" target="">
																			<MeleeOffenseAutomationDecorator active="true">
																				<WeaponAutomationDecorator WeaponChange="missile" active="true">
																					<Parallel successMode="Any" failureMode="Any">
																						<CombatAction TargetNPC="$target" RelationOverride="None" />
																						<DeadUnconsciousGate Who="$forcedTarget" State="Dead" Negation="false" RunLogic="KeepRunning">
																							<Expression expressions="$randomize = true" />
																						</DeadUnconsciousGate>
																						<IfGate atomic="false" condition="$randomize == true" RunLogic="KeepRunning">
																							<AreaPresenceGate aiObjects="$targets" area="$wuidData" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
																								<Success />
																							</AreaPresenceGate>
																						</IfGate>
																					</Parallel>
																				</WeaponAutomationDecorator>
																			</MeleeOffenseAutomationDecorator>
																		</EntityContext>
																	</EntityContext>
																</RelationContext>
															</Sequence>
														</IfCondition>
													</Sequence>
												</IfCondition>
												<Sequence>
													<ReinitVariable variable="$targets" />
													<IfGate atomic="false" condition="#targets == 0" RunLogic="Halt">
														<AreaPresenceListener aiObjects="" area="$wuidData" trackIn="true" trackOut="false" reportInitialState="false">
															<Expression expressions="$targets[0] = $__presenceObject" />
														</AreaPresenceListener>
													</IfGate>
												</Sequence>
											</Selector>
										</Sequence>
									</LinkGate>
								</Loop>
								<LoopUntil until="Fail" attemptCount="0">
									<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
										<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt; $enum:HitReactionStrength.Unpleasant">
											<Fail />
										</IfCondition>
									</ProcessMessage>
								</LoopUntil>
							</Parallel>
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidDataWuidDataArray" EventSet="">
			<Variables>
				<Variable name="break" comment="" />
				<Variable name="destination" comment="" />
				<Variable name="forcedTarget" comment="" />
				<Variable name="groupController" comment="" />
				<Variable name="hitReaction" comment="" />
				<Variable name="leftHandItem" comment="" />
				<Variable name="randomize" comment="" />
				<Variable name="rightHandItem" comment="" />
				<Variable name="target" comment="" />
				<Variable name="targets" comment="" />
				<Variable name="wuidData" comment="" />
				<Variable name="wuidDataArray" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetWeaponsFromWeaponSet>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ReinitVariable>
												<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ReinitVariable>
												<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ReinitVariable>
												<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
														<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</SoulIsAliveFilter>
														<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
														</Nodalyzer>
													</GraphSearch>
												</ForEach>
												<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Then>
																		<IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																			<OutputBreakpoints />
																			<Else>
																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Expression>
																			</Else>
																		</IsDeadCheck>
																	</Then>
																</IsInsideArea>
															</ForEach>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Wait>
																	</Semaphore>
																	<RelationContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</CombatAction>
																							<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</Expression>
																							</DeadUnconsciousGate>
																							<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</Success>
																								</AreaPresenceGate>
																							</IfGate>
																						</Parallel>
																					</WeaponAutomationDecorator>
																				</MeleeOffenseAutomationDecorator>
																			</EntityContext>
																		</EntityContext>
																	</RelationContext>
																</Sequence>
															</IfCondition>
														</Sequence>
													</IfCondition>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ReinitVariable>
														<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<AreaPresenceListener hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</AreaPresenceListener>
														</IfGate>
													</Sequence>
												</Selector>
											</Sequence>
										</LinkGate>
									</Loop>
									<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Fail>
											</IfCondition>
										</ProcessMessage>
									</LoopUntil>
								</Parallel>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="loadWeapon_function" is_function="1">
		<Variables>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hand" type="enum:handType" values="" isPersistent="0" form="single" />
			<Variable name="lookSpot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="weaponToEquip" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="wait" type="_bool" values="true" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;shootingSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$destination" Data="" />
					</GraphSearch>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;lookSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$lookSpot" Data="" />
					</GraphSearch>
					<HandContentElement hand="$hand" item="$weaponToEquip" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_ranged" useDecision="false" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<Function_getRangedWeapon hand="$hand" weaponToEquip="$weaponToEquip" nodeLabel="93833842" />
						</Search>
						<Exec canSkip="1">
							<Sequence>
								<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;loadingWeaponLock&apos;">
									<Wait duration="&apos;100ms&apos;" timeType="GameTime" doFail="false" variation="&apos;50ms&apos;" />
								</Semaphore>
								<Selector>
									<DistanceCondition Origin="$destination" ReferencePt="$this.id" Low="0.500000" High="0.500000" Negation="true" ValueOnMiddle="false" failOnCondition="true">
										<ExactMove directionType="AlignWithEntity" directionSpecification="$destination" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									</DistanceCondition>
									<Turn target="$destination" align="true" />
								</Selector>
								<SuppressFailure>
									<Sequence>
										<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;loadStanding&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
										</GraphSearch>
										<IsWeaponLoaded failOnCondition="false" saveVersion="2">
											<Then canSkip="1">
												<Success />
											</Then>
											<Else canSkip="1">
												<Sequence>
													<LoadWeaponAction />
													<ActorStateBarrier Who="" ToState="idle" NegateTo="false" RunLogic="KeepRunning">
														<Success />
													</ActorStateBarrier>
												</Sequence>
											</Else>
										</IsWeaponLoaded>
									</Sequence>
								</SuppressFailure>
								<StanceCheck soul="$this.id" stance="crouch" smartObject="" negate="false" failOnCondition="false" saveVersion="2">
									<Then canSkip="1">
										<Success />
									</Then>
									<Else canSkip="1">
										<UnstanceAction unstance="Quest_IdleWithWeapon" locationObject="" slaveObject="" />
									</Else>
								</StanceCheck>
								<UrgencyDecorator Urgency="Slow">
									<StanceElement smartObject="" stance="crouch" allowAny="false" enabled="true">
										<ForceLook LookTarget="$lookSpot" DisableVariations="true">
											<Sequence>
												<WaitAction />
												<IsWeaponLoaded failOnCondition="false" saveVersion="2">
													<Then canSkip="1">
														<Success />
													</Then>
													<Else canSkip="1">
														<Sequence>
															<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
															<LoadWeaponAction />
														</Sequence>
													</Else>
												</IsWeaponLoaded>
												<IfCondition failOnCondition="false" condition="$wait">
													<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="&apos;5s&apos;" />
												</IfCondition>
											</Sequence>
										</ForceLook>
									</StanceElement>
								</UrgencyDecorator>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="destination" comment="" />
				<Variable name="hand" comment="" />
				<Variable name="lookSpot" comment="" />
				<Variable name="weaponToEquip" comment="" />
				<Variable name="wait" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<Function_getRangedWeapon hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_getRangedWeapon>
							</Search>
							<Exec>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Semaphore>
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</ExactMove>
										</DistanceCondition>
										<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Turn>
									</Selector>
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
											</GraphSearch>
											<IsWeaponLoaded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Then>
												<Else>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LoadWeaponAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LoadWeaponAction>
														<ActorStateBarrier hasInputBreakpoint="0" comment="Probrat s Labutakem. LoadWeaponAction succedne, kdyz NPC jeste prehrava animaci nabijeni" breakpointFlags="0">
															<OutputBreakpoints />
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</ActorStateBarrier>
													</Sequence>
												</Else>
											</IsWeaponLoaded>
										</Sequence>
									</SuppressFailure>
									<StanceCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Then>
										<Else>
											<UnstanceAction hasInputBreakpoint="0" comment="Po polozeni pavezy je potreba aby se NPC dostalo do idlu, jinak se deji animacni nepeknosti" breakpointFlags="0">
												<OutputBreakpoints />
											</UnstanceAction>
										</Else>
									</StanceCheck>
									<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WaitAction>
													<IsWeaponLoaded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</Then>
														<Else>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
																<LoadWeaponAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LoadWeaponAction>
															</Sequence>
														</Else>
													</IsWeaponLoaded>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</IfCondition>
												</Sequence>
											</ForceLook>
										</StanceElement>
									</UrgencyDecorator>
								</Sequence>
							</Exec>
						</HandContentElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="withdrawAxe" is_function="0">
		<Variables>
			<Variable name="axe" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="shield" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<SyncWithTrackview NPC="$this.id" />
					<HandContentElement hand="Right" item="$axe" allowAny="false" decisionLabel="battle_axe" useDecision="true" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<Sequence>
								<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$shield" RightHand="$axe" UseTorchWhenAppropriate="true" />
								<IfCondition failOnCondition="false" condition="$shield ~= $__null">
									<CreateItem ItemGUID="&apos;818d0dde-d4f1-4bdb-b8d3-9754d52f5799&apos;" Amount="1" CreatedItem="$axe" Target="$this.id" NotifyUI="false" />
								</IfCondition>
							</Sequence>
						</Search>
						<Exec canSkip="1">
							<Sequence>
								<WaitAction />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</Exec>
					</HandContentElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="axe" comment="" />
				<Variable name="shield" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="140" editorPosY="300" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SyncWithTrackview hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SyncWithTrackview>
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetWeaponsFromWeaponSet>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<CreateItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</CreateItem>
									</IfCondition>
								</Sequence>
							</Search>
							<Exec>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Exec>
						</HandContentElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="moveWithWithdrawnWeapon" is_function="0">
		<Variables>
			<Variable name="decisionLabel" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="doorClosingPolicy" type="enum:movementDoorClosingPolicy" values="" isPersistent="0" form="single" />
			<Variable name="halberdSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hand" type="enum:handType" values="" isPersistent="0" form="single" />
			<Variable name="isSideKick" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="itemToEquip" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="sideKick" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="weaponSet" type="enum:weaponSet" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Selector>
						<Sequence>
							<GraphSearch Origin="$data" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;primaryWeaponSet&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								<WUIDFilter WUID="$this.id" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
							</GraphSearch>
							<Expression expressions="$weaponSet = $enum:weaponSet.primary &#10;$hand = $enum:handType.right &#10;$decisionLabel = &apos;battle_weapon&apos;" />
						</Sequence>
						<Sequence>
							<GraphSearch Origin="$data" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;oversizedWeaponSet&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								<WUIDFilter WUID="$this.id" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
							</GraphSearch>
							<GraphSearch Origin="$data" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;halberdSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$halberdSlot" Data="" />
							</GraphSearch>
							<Expression expressions="$weaponSet = $enum:weaponSet.oversized &#10;$hand = $enum:handType.right &#10;$decisionLabel = &apos;battle_halbert&apos;" />
						</Sequence>
						<Expression expressions="$weaponSet = $enum:weaponSet.secondary &#10;$hand = $enum:handType.left &#10;$decisionLabel = &apos;battle_ranged&apos;" />
					</Selector>
					<SyncWithTrackview NPC="$this.id" />
					<HandContentElement hand="$hand" item="$itemToEquip" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="$decisionLabel" useDecision="true" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<Sequence>
								<IfElseCondition failOnCondition="false" condition="$weaponSet == $enum:weaponSet.oversized" saveVersion="2">
									<Then canSkip="1">
										<GetItemInSlot slot="$halberdSlot" useHomeItem="true" item="$rightHandItem" />
									</Then>
									<Else canSkip="1">
										<GetWeaponsFromWeaponSet WeaponSet="$weaponSet" LeftHand="$leftHandItem" RightHand="$rightHandItem" UseTorchWhenAppropriate="false" />
									</Else>
								</IfElseCondition>
								<IfElseCondition failOnCondition="false" condition="$hand == $enum:handType.right" saveVersion="2">
									<Then canSkip="1">
										<Expression expressions="$itemToEquip = $rightHandItem" />
									</Then>
									<Else canSkip="1">
										<Expression expressions="$itemToEquip = $leftHandItem" />
									</Else>
								</IfElseCondition>
							</Sequence>
						</Search>
						<Exec canSkip="1">
							<Sequence>
								<Sequence>
									<GraphSearch Origin="$data" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;sideKick&apos;" prune="true" negprune="unknown" Parent="" Child="$sideKick" Data="" />
									</GraphSearch>
									<IfCondition failOnCondition="false" condition="$sideKick == $this.id">
										<Sequence>
											<Expression expressions="$isSideKick = true" />
											<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;5s&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;movementLock&apos;" RunLogic="KeepRunning">
												<Success />
											</Synchronize>
										</Sequence>
									</IfCondition>
								</Sequence>
								<Selector>
									<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;betweenSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$destination" Data="" />
									</GraphSearch>
									<Expression expressions="$destination = $data" />
								</Selector>
								<LoopUntil until="Fail" attemptCount="0">
									<Sequence>
										<Selector>
											<Sequence>
												<GraphSearch Origin="$destination" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;closeDoor&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
												</GraphSearch>
												<Expression expressions="$doorClosingPolicy = $enum:movementDoorClosingPolicy.leaveClosed" />
											</Sequence>
											<Expression expressions="$doorClosingPolicy = $enum:movementDoorClosingPolicy.automatic" />
										</Selector>
										<MoveParamsDecorator speed="Run" pathFindingParams="" doorClosingPolicy="$doorClosingPolicy">
											<Parallel successMode="Any" failureMode="Any">
												<IfElseCondition failOnCondition="false" condition="$leftHandItem ~= $__null &amp; &#10;$hand == $enum:handType.right" saveVersion="2">
													<Then canSkip="1">
														<HandContentElement hand="Left" item="$leftHandItem" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="Label1" useDecision="false" enabled="true" saveVersion="2">
															<Search canSkip="1">
																<Success />
															</Search>
															<Exec canSkip="1">
																<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="5.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
															</Exec>
														</HandContentElement>
													</Then>
													<Else canSkip="1">
														<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="5.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
													</Else>
												</IfElseCondition>
												<IfElseCondition failOnCondition="false" condition="!$isSideKick &amp; &#10;$sideKick ~= $__null" saveVersion="2">
													<Then canSkip="1">
														<DistanceGate Origin="$this.id" ReferencePt="$sideKick" Low="2.500000" High="2.500000" Negation="true" OpenInMiddle="false" RunLogic="KeepRunning">
															<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;movementLock&apos;" RunLogic="KeepRunning">
																<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
															</Synchronize>
														</DistanceGate>
													</Then>
													<Else canSkip="1">
														<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
													</Else>
												</IfElseCondition>
											</Parallel>
										</MoveParamsDecorator>
										<GraphSearch Origin="$destination" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;nextTp&apos;" prune="true" negprune="unknown" Parent="" Child="$destination" Data="" />
										</GraphSearch>
									</Sequence>
								</LoopUntil>
								<IfCondition failOnCondition="false" condition="!$isSideKick">
									<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
								</IfCondition>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="" />
			<DisableCollisionAvoidance />
		</ForestContainer>
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="decisionLabel" comment="" />
				<Variable name="destination" comment="" />
				<Variable name="doorClosingPolicy" comment="" />
				<Variable name="halberdSlot" comment="" />
				<Variable name="hand" comment="" />
				<Variable name="isSideKick" comment="" />
				<Variable name="itemToEquip" comment="" />
				<Variable name="leftHandItem" comment="" />
				<Variable name="rightHandItem" comment="" />
				<Variable name="sideKick" comment="" />
				<Variable name="weaponSet" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
									<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WUIDFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
									<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WUIDFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</Selector>
						<SyncWithTrackview hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SyncWithTrackview>
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetItemInSlot>
										</Then>
										<Else>
											<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetWeaponsFromWeaponSet>
										</Else>
									</IfElseCondition>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Then>
										<Else>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Else>
									</IfElseCondition>
								</Sequence>
							</Search>
							<Exec>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
												<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Synchronize>
											</Sequence>
										</IfCondition>
									</Sequence>
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Selector>
									<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
													</GraphSearch>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Sequence>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Selector>
											<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Search>
																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Success>
																</Search>
																<Exec>
																	<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Move>
																</Exec>
															</HandContentElement>
														</Then>
														<Else>
															<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Move>
														</Else>
													</IfElseCondition>
													<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Wait>
																</Synchronize>
															</DistanceGate>
														</Then>
														<Else>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Else>
													</IfElseCondition>
												</Parallel>
											</MoveParamsDecorator>
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
											</GraphSearch>
										</Sequence>
									</LoopUntil>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</InstantCallback_empty>
									</IfCondition>
								</Sequence>
							</Exec>
						</HandContentElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Semaphore editorPosX="1870" editorPosY="-290" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Semaphore>
				<DisableCollisionAvoidance editorPosX="1600" editorPosY="-310" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</DisableCollisionAvoidance>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="withdrawWeaponRideHorse" is_function="0">
		<Variables>
			<Variable name="formationLock" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="formationWUID" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="preferredPosition" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="rightHandItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="followFormationParams" type="followFormationParams" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="formationType" type="enum:formationType" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
					</GraphSearch>
					<StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
						<Sequence>
							<StanceCheck soul="$this.id" stance="horse" smartObject="$horse" negate="false" failOnCondition="false" saveVersion="2">
								<Then canSkip="1">
									<Success />
								</Then>
								<Else canSkip="1">
									<WaitAction />
								</Else>
							</StanceCheck>
							<IfElseCondition failOnCondition="false" condition="$followFormationParams.formation.leader == $this.id" saveVersion="2">
								<Then canSkip="1">
									<SubtreeDecorator saveVersion="2">
										<Init canSkip="1">
											<Sequence>
												<MakeFormation FormationName="$followFormationParams.formation.type" HandleVariable="$formationWUID" />
												<Concatenation OutString="$formationLock" Pattern="&apos;followNPC_leader_$this.id&apos;" />
											</Sequence>
										</Init>
										<Subtree canSkip="1">
											<Sequence>
												<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
												<Callback_empty EventName="&apos;OnRecordingReady&apos;" />
												<SetExternalLock LockManagerType="Global" Locked="false" LockName="&apos;$formationLock&apos;" />
												<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="$f" destinationSpecification3="" speed="SlowSprint" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
												<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
												<Callback_empty EventName="&apos;OnFinished&apos;" />
											</Sequence>
										</Subtree>
										<Cleanup canSkip="1">
											<Sequence>
												<EndFormation FormationHandle="$formationWUID" />
												<SetExternalLock LockManagerType="Global" Locked="true" LockName="&apos;$formationLock&apos;" />
											</Sequence>
										</Cleanup>
									</SubtreeDecorator>
								</Then>
								<Else canSkip="1">
									<Sequence>
										<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;test_string&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$preferredPosition" />
										</GraphSearch>
										<Expression expressions="$followFormationParams.formation.preferedPosition = $preferredPosition" />
										<Switch>
											<IfCondition failOnCondition="false" condition="$formationType == $enum:formationType.KeepDistance">
												<Expression expressions="$followFormationParams.formation.policy = $enum:formationMode.KeepDistance" />
											</IfCondition>
											<IfCondition failOnCondition="false" condition="$formationType == $enum:formationType.MoveHistory">
												<Expression expressions="$followFormationParams.formation.policy = $enum:formationMode.MoveHistory" />
											</IfCondition>
											<IfCondition failOnCondition="false" condition="$formationType == $enum:formationType.KeepShape">
												<Expression expressions="$followFormationParams.formation.policy = $enum:formationMode.KeepShape" />
											</IfCondition>
											<DefaultBranch>
												<Expression expressions="$followFormationParams.formation.policy = $enum:formationMode.Relaxed" />
											</DefaultBranch>
										</Switch>
										<Function_moveInFormation_slave followFormationParams="$followFormationParams" nodeLabel="32282780" />
									</Sequence>
								</Else>
							</IfElseCondition>
						</Sequence>
					</StanceElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<HandContentElement hand="Right" item="$rightHandItem" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
				<Search canSkip="1">
					<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHandItem" RightHand="$rightHandItem" UseTorchWhenAppropriate="true" />
				</Search>
				<Exec canSkip="1">
					<StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="true" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="SlowSprint" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					</StanceElement>
				</Exec>
			</HandContentElement>
		</ForestContainer>
		<EditorData Signature="zoufalaObranaZaBohutu_withdrawWeaponRideHorse" EventSet="zoufalaObranaZaBohutu_withdrawWeaponRideHorse">
			<Variables>
				<Variable name="formationLock" comment="" />
				<Variable name="formationWUID" comment="" />
				<Variable name="horse" comment="" />
				<Variable name="leftHandItem" comment="" />
				<Variable name="preferredPosition" comment="" />
				<Variable name="rightHandItem" comment="" />
				<Variable name="destination" comment="" />
				<Variable name="followFormationParams" comment="" />
				<Variable name="formationType" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<StanceCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Then>
									<Else>
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</Else>
								</StanceCheck>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<SubtreeDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Init>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<MakeFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</MakeFormation>
													<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Concatenation>
												</Sequence>
											</Init>
											<Subtree>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
													<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Callback_empty>
													<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</SetExternalLock>
													<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Move>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
													<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Callback_empty>
												</Sequence>
											</Subtree>
											<Cleanup>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<EndFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</EndFormation>
													<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</SetExternalLock>
												</Sequence>
											</Cleanup>
										</SubtreeDecorator>
									</Then>
									<Else>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
											</GraphSearch>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</IfCondition>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</IfCondition>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</IfCondition>
												<DefaultBranch>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</DefaultBranch>
											</Switch>
											<Function_moveInFormation_slave hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_moveInFormation_slave>
										</Sequence>
									</Else>
								</IfElseCondition>
							</Sequence>
						</StanceElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<HandContentElement editorPosX="80" editorPosY="-750" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Search>
						<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetWeaponsFromWeaponSet>
					</Search>
					<Exec>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
						</StanceElement>
					</Exec>
				</HandContentElement>
			</Forest>
			<Comments>
				<Comment text="Trackview_recording_behavior_only" posX="-20" posY="-230" width="319" height="127" resizeBorderWidth="300" resizeBorderHeight="100" color="0.65,0.65,0.65" author="aleks" />
			</Comments>
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="dieByBurningOil" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="true" isPersistent="0" form="single" />
			<Variable name="burningTp" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="desynchronize" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
					<Sequence>
						<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;finalTp&apos;" prune="true" negprune="unknown" Parent="" Child="$burningTp" Data="" />
						</GraphSearch>
						<SuppressFailure>
							<Sequence>
								<GraphSearch Origin="$burningTp" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;desynchronize&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$desynchronize" />
								</GraphSearch>
								<Wait duration="$desynchronize" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</SuppressFailure>
						<Selector>
							<Sequence>
								<GraphSearch Origin="$burningTp" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;oilDeath1&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								</GraphSearch>
								<UnstanceAction unstance="BattleOilDeath_01" locationObject="" slaveObject="" />
							</Sequence>
							<Sequence>
								<GraphSearch Origin="$burningTp" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;oilDeath2&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								</GraphSearch>
								<UnstanceAction unstance="BattleOilDeath_02" locationObject="" slaveObject="" />
							</Sequence>
							<Sequence>
								<GraphSearch Origin="$burningTp" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;oilDeath3&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								</GraphSearch>
								<UnstanceAction unstance="BattleOilDeath_03" locationObject="" slaveObject="" />
							</Sequence>
							<Sequence>
								<GraphSearch Origin="$burningTp" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;oilDeath4&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								</GraphSearch>
								<UnstanceAction unstance="BattleOilDeath_04" locationObject="" slaveObject="" />
							</Sequence>
							<Sequence>
								<GraphSearch Origin="$burningTp" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;oilDeath5&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								</GraphSearch>
								<UnstanceAction unstance="BattleOilDeath_05" locationObject="" slaveObject="" />
							</Sequence>
							<Sequence>
								<GraphSearch Origin="$burningTp" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;oilDeath6&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								</GraphSearch>
								<UnstanceAction unstance="BattleOilDeath_06" locationObject="" slaveObject="" />
							</Sequence>
						</Selector>
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
						<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer>
			<EntityContext context="combat_actorSupressHitreactionAnimation" target="">
				<EntityContext context="deadBody_allowActorAnimsForDeadNPC" target="" />
			</EntityContext>
			<Parallel successMode="All" failureMode="Any">
				<AnimationAction fragment="&apos;GateAttack_VAR&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
				<Sequence>
					<Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="&apos;200ms&apos;" />
					<KillNPC KillTarget="$this.id" Scream="false" />
				</Sequence>
			</Parallel>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="burningTp" comment="" />
				<Variable name="desynchronize" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="90" editorPosY="20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</SuppressFailure>
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
								</Sequence>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
								</Sequence>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
								</Sequence>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
								</Sequence>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
								</Sequence>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
								</Sequence>
							</Selector>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantSendMessageToNPC>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest>
				<EntityContext editorPosX="160" editorPosY="-1220" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</EntityContext>
				</EntityContext>
				<Parallel editorPosX="160" editorPosY="-980" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</AnimationAction>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</KillNPC>
					</Sequence>
				</Parallel>
			</Forest>
			<Comments>
				<Comment text="Trackview_recording_behavior_only" posX="0" posY="-160" width="319" height="127" resizeBorderWidth="300" resizeBorderHeight="100" color="0.65,0.65,0.65" author="aleks" />
			</Comments>
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="shootThroughGate" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="desynchronize" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="hitData" type="hitData" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="navigationPath" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="target" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="turningSpot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_ranged" useDecision="false" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="false" />
						</Search>
						<Exec canSkip="1">
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;shootingSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$destination" Data="" />
								</GraphSearch>
								<GraphSearch Origin="$destination" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;navigationPath&apos;" prune="true" negprune="unknown" Parent="" Child="$navigationPath" Data="" />
								</GraphSearch>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;target&apos;" prune="true" negprune="unknown" Parent="" Child="$target" Data="" />
								</GraphSearch>
								<EntityContext context="combat_missileAttackerIgnoreTrajectoryCollision" target="">
									<ForceLook LookTarget="$target" DisableVariations="false">
										<Sequence>
											<SuppressFailure>
												<Sequence>
													<GraphSearch Origin="$destination" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
														<LinkTagFilter tag="&apos;desynchronize&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$desynchronize" />
													</GraphSearch>
													<Wait duration="$desynchronize" timeType="GameTime" doFail="false" variation="" />
												</Sequence>
											</SuppressFailure>
											<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="3.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$navigationPath" destinationSpecification2="$f" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
											<ExactMove directionType="AlignWithEntity" directionSpecification="$destination" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
											<SuppressFailure>
												<Sequence>
													<GraphSearch Origin="$destination" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
														<LinkTagFilter tag="&apos;desynchronize&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$desynchronize" />
													</GraphSearch>
													<Wait duration="$desynchronize" timeType="GameTime" doFail="false" variation="" />
												</Sequence>
											</SuppressFailure>
											<InstantSetTarget Target="$target" />
											<Parallel successMode="Any" failureMode="Any">
												<MeleeOffenseAutomationDecorator active="true">
													<Sequence>
														<WaitAction />
														<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitData" senderInfo="" inbox="&apos;hitData&apos;" condition="" answerVar="">
															<Success />
														</ProcessMessage>
													</Sequence>
												</MeleeOffenseAutomationDecorator>
												<Loop count="-1">
													<Sequence>
														<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;barkingLock&apos;">
															<SuppressFailure>
																<Sequence>
																	<Function_speech_schedulerMonolog alias="&apos;zoufalaObranaZaBohutu_strelciStriliSkrzeMriz&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="91826173" />
																	<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="&apos;1s&apos;" />
																</Sequence>
															</SuppressFailure>
														</Semaphore>
														<Wait duration="&apos;6s&apos;" timeType="GameTime" doFail="false" variation="" />
													</Sequence>
												</Loop>
											</Parallel>
											<WaitAction />
										</Sequence>
									</ForceLook>
								</EntityContext>
							</Sequence>
						</Exec>
					</HandContentElement>
					<Expression expressions="$behaviorSuccess = true" />
					<GraphSearch Origin="$destination" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;turningSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$turningSpot" Data="" />
					</GraphSearch>
					<Turn target="$turningSpot" align="false" />
					<ActorStateBarrier Who="" ToState="idle" NegateTo="false" RunLogic="KeepRunning">
						<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
					</ActorStateBarrier>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<GraphSearch Origin="$destination" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
				<LinkTagFilter tag="&apos;waitSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$destination" Data="" />
			</GraphSearch>
			<LoopUntil until="Fail" attemptCount="0" />
			<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="destination" comment="" />
				<Variable name="desynchronize" comment="" />
				<Variable name="hitData" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="navigationPath" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="target" comment="" />
				<Variable name="turningSpot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetWeaponsFromWeaponSet>
							</Search>
							<Exec>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</LinkTagFilter>
														</GraphSearch>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Sequence>
												</SuppressFailure>
												<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Move>
												<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ExactMove>
												<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</LinkTagFilter>
														</GraphSearch>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Sequence>
												</SuppressFailure>
												<InstantSetTarget hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</InstantSetTarget>
												<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</WaitAction>
															<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</ProcessMessage>
														</Sequence>
													</MeleeOffenseAutomationDecorator>
													<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_speech_schedulerMonolog>
																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Wait>
																	</Sequence>
																</SuppressFailure>
															</Semaphore>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
													</Loop>
												</Parallel>
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
											</Sequence>
										</ForceLook>
									</EntityContext>
								</Sequence>
							</Exec>
						</HandContentElement>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Turn>
						<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantSendMessageToNPC>
						</ActorStateBarrier>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<GraphSearch editorPosX="1960" editorPosY="-270" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</LinkTagFilter>
				</GraphSearch>
				<LoopUntil editorPosX="860" editorPosY="350" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</LoopUntil>
				<Wait editorPosX="2570" editorPosY="-290" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Wait>
			</Forest>
			<Comments>
				<Comment text="Trackview_recording_behavior_only" posX="-60" posY="-130" width="319" height="127" resizeBorderWidth="300" resizeBorderHeight="100" color="0.65,0.65,0.65" author="aleks" />
			</Comments>
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="shootForcedTarget" is_function="0">
		<Variables>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="forcedTarget" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hand" type="enum:handType" values="" isPersistent="0" form="single" />
			<Variable name="lookSpot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="shootInCrouch" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="targets" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="weaponToEquip" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;shootingSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$destination" Data="" />
					</GraphSearch>
					<SuppressFailure>
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;shootInCrouch&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Expression expressions="$shootInCrouch = true" />
						</Sequence>
					</SuppressFailure>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;lookSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$lookSpot" Data="" />
					</GraphSearch>
					<HandContentElement hand="$hand" item="$weaponToEquip" allowAny="false" decisionLabel="battle_ranged" useDecision="false" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<Function_getRangedWeapon hand="$hand" weaponToEquip="$weaponToEquip" nodeLabel="41297523" />
						</Search>
						<Exec canSkip="1">
							<Sequence>
								<ForceLook LookTarget="$lookSpot" DisableVariations="true">
									<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;shootingOnGateLock&apos;">
										<Wait duration="&apos;300ms&apos;" timeType="GameTime" doFail="false" variation="&apos;100ms&apos;" skipInLOD="false" />
									</Semaphore>
								</ForceLook>
								<DistanceCondition Origin="$destination" ReferencePt="$this.id" Low="0.500000" High="0.500000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
									<ExactMove directionType="AlignWithEntity" directionSpecification="$destination" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
								</DistanceCondition>
								<EntityContext context="combat_disableAllSkirmishBarks" target="">
									<Parallel successMode="Any" failureMode="Any">
										<Loop count="-1">
											<Sequence>
												<LinkGate from="$data" to="" tag="&apos;battleEntity&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
													<Sequence>
														<ReinitVariable variable="$targets" />
														<GraphSearch Origin="$data" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<LinkTagFilter tag="&apos;battleEntity&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
															<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
															<Nodalyzer Quantifiers="ForAll" Parent="" Child="$targets" saveVersion="2" />
														</GraphSearch>
													</Sequence>
												</LinkGate>
												<RandomItem Array="$targets" Result="$forcedTarget" Clamp="-1" />
												<IfElseCondition failOnCondition="false" condition="$shootInCrouch" saveVersion="2">
													<Then canSkip="1">
														<StanceElement smartObject="" stance="crouch" allowAny="false" enabled="true">
															<RelationContext context="combat_forcedTarget" source="$this.id" target="$forcedTarget">
																<EntityContext context="combat_actorSupressHitreactionAnimation" target="">
																	<EntityContext context="combat_missileAttackerIgnoreTrajectoryCollision" target="">
																		<MeleeOffenseAutomationDecorator active="true">
																			<WeaponAutomationDecorator WeaponChange="missile" active="true">
																				<Parallel successMode="Any" failureMode="Any">
																					<CombatAction TargetNPC="$forcedTarget" RelationOverride="None" />
																					<DeadUnconsciousGate Who="$forcedTarget" State="Dead" Negation="false" RunLogic="KeepRunning">
																						<Success />
																					</DeadUnconsciousGate>
																				</Parallel>
																			</WeaponAutomationDecorator>
																		</MeleeOffenseAutomationDecorator>
																	</EntityContext>
																</EntityContext>
															</RelationContext>
														</StanceElement>
													</Then>
													<Else canSkip="1">
														<RelationContext context="combat_forcedTarget" source="$this.id" target="$forcedTarget">
															<EntityContext context="combat_actorSupressHitreactionAnimation" target="">
																<EntityContext context="combat_missileAttackerIgnoreTrajectoryCollision" target="">
																	<MeleeOffenseAutomationDecorator active="true">
																		<WeaponAutomationDecorator WeaponChange="missile" active="true">
																			<Parallel successMode="Any" failureMode="Any">
																				<CombatAction TargetNPC="$forcedTarget" RelationOverride="None" />
																				<DeadUnconsciousGate Who="$forcedTarget" State="Dead" Negation="false" RunLogic="KeepRunning">
																					<Success />
																				</DeadUnconsciousGate>
																			</Parallel>
																		</WeaponAutomationDecorator>
																	</MeleeOffenseAutomationDecorator>
																</EntityContext>
															</EntityContext>
														</RelationContext>
													</Else>
												</IfElseCondition>
											</Sequence>
										</Loop>
										<Loop count="-1">
											<Sequence>
												<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;shootingOnGateBarkingLock&apos;">
													<Sequence>
														<SuppressFailure>
															<Function_speech_schedulerMonolog alias="&apos;zoufalaObranaZaBohutu_barkyStrelcuPriUtokuNaBranu&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" subtitlesDown="false" nodeLabel="66605234" />
														</SuppressFailure>
														<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="&apos;2s&apos;" skipInLOD="false" />
													</Sequence>
												</Semaphore>
												<Wait duration="&apos;20s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
											</Sequence>
										</Loop>
									</Parallel>
								</EntityContext>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<AnyDecorator preset="AnyStance" enabled="true" />
		</ForestContainer>
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="destination" comment="" />
				<Variable name="forcedTarget" comment="" />
				<Variable name="hand" comment="" />
				<Variable name="lookSpot" comment="" />
				<Variable name="shootInCrouch" comment="" />
				<Variable name="targets" comment="" />
				<Variable name="weaponToEquip" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
						</SuppressFailure>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<Function_getRangedWeapon hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_getRangedWeapon>
							</Search>
							<Exec>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Semaphore>
									</ForceLook>
									<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ExactMove>
									</DistanceCondition>
									<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</ReinitVariable>
															<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
																<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</SoulIsAliveFilter>
																<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																</Nodalyzer>
															</GraphSearch>
														</Sequence>
													</LinkGate>
													<RandomItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</RandomItem>
													<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<RelationContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</CombatAction>
																						<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</Success>
																						</DeadUnconsciousGate>
																					</Parallel>
																				</WeaponAutomationDecorator>
																			</MeleeOffenseAutomationDecorator>
																		</EntityContext>
																	</EntityContext>
																</RelationContext>
															</StanceElement>
														</Then>
														<Else>
															<RelationContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</CombatAction>
																					<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Success>
																					</DeadUnconsciousGate>
																				</Parallel>
																			</WeaponAutomationDecorator>
																		</MeleeOffenseAutomationDecorator>
																	</EntityContext>
																</EntityContext>
															</RelationContext>
														</Else>
													</IfElseCondition>
												</Sequence>
											</Loop>
											<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_schedulerMonolog>
															</SuppressFailure>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
													</Semaphore>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</Loop>
										</Parallel>
									</EntityContext>
								</Sequence>
							</Exec>
						</HandContentElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<AnyDecorator editorPosX="770" editorPosY="668" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</AnyDecorator>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pushLadder" is_function="0">
		<Variables>
			<Variable name="dropSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="halberdSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ladderEntity" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ladderHeight" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="particle" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="placeSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHandItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<GraphSearch Origin="$wuid" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;ladderSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$placeSlot" Data="" />
							</GraphSearch>
							<GraphSearch Origin="$wuid" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;dropSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$dropSlot" Data="" />
							</GraphSearch>
							<GraphSearch Origin="$wuid" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;ladder&apos;" prune="true" negprune="unknown" Parent="" Child="$ladderEntity" Data="" />
							</GraphSearch>
							<GraphSearch Origin="$ladderEntity" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;ladderHeight&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$ladderHeight" />
							</GraphSearch>
							<MoveParamsDecorator speed="Run" pathFindingParams="" doorClosingPolicy="Automatic">
								<HandContentElement hand="Right" item="$rightHandItem" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_halbert" useDecision="true" enabled="true" saveVersion="2">
									<Search canSkip="1">
										<GetWeaponsFromWeaponSet WeaponSet="Oversized" LeftHand="$leftHandItem" RightHand="$rightHandItem" UseTorchWhenAppropriate="true" />
									</Search>
									<Exec canSkip="1">
										<Sequence>
											<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
												<Child canSkip="1">
													<Parallel successMode="All" failureMode="Any">
														<EntityContext context="combat_actorSupressHitreactionAnimation" target="">
															<EntityContext context="combat_disabledAsTarget" target="">
																<DecoratorBuff BuffId="&apos;0f6bc79a-fc67-4aab-a797-4a9d4e4c2dc5&apos;" SoulWUID="$this.id">
																	<Parallel successMode="All" failureMode="Any">
																		<AnimationAction fragment="&apos;GuardHlbrdPushAway&apos;" tags="$ladderHeight" eventReferenceObject="$wuid" alignObject="$wuid" slaveObject="" resourceOverride="" allowTorchForPlayer="false">
																			<EventData_pickup Slot="$placeSlot" name="&apos;placeSlot&apos;" />
																			<EventData_place Slot="$dropSlot" name="&apos;dropSlot&apos;" />
																		</AnimationAction>
																		<SuppressFailure>
																			<Sequence>
																				<GraphSearch Origin="$wuid" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																					<LinkTagFilter tag="&apos;particle&apos;" prune="true" negprune="unknown" Parent="" Child="$particle" Data="" />
																				</GraphSearch>
																				<LinkGate from="$dropSlot" to="" tag="&apos;SlotLink&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
																					<Sequence>
																						<ExecuteSoundTrigger entity="$particle" triggerName="&apos;q_M11_gate_crash_open2&apos;" stop="false" />
																						<ParticleEffectControl ParticleWuid="$particle" StartStopChoice="Start" />
																					</Sequence>
																				</LinkGate>
																			</Sequence>
																		</SuppressFailure>
																	</Parallel>
																</DecoratorBuff>
															</EntityContext>
														</EntityContext>
														<IfCondition failOnCondition="false" condition="$string ~= &apos;-&apos;">
															<SuppressFailure>
																<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="21944757" />
															</SuppressFailure>
														</IfCondition>
													</Parallel>
												</Child>
												<OnSuccess canSkip="1">
													<Callback_empty EventName="&apos;phaseChanged&apos;" />
												</OnSuccess>
											</FuseBox>
											<Selector>
												<Sequence>
													<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
														<LinkTagFilter tag="&apos;halberdSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$halberdSlot" Data="" />
													</GraphSearch>
													<PlaceAction item="$rightHandItem" slot="$halberdSlot" />
												</Sequence>
												<Success />
											</Selector>
										</Sequence>
									</Exec>
								</HandContentElement>
							</MoveParamsDecorator>
						</Sequence>
					</Child>
					<OnSuccess canSkip="1">
						<Callback_empty EventName="&apos;behaviorFinished&apos;" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="phaseChanged">
			<Variables>
				<Variable name="dropSlot" comment="" />
				<Variable name="halberdSlot" comment="" />
				<Variable name="ladderEntity" comment="" />
				<Variable name="ladderHeight" comment="" />
				<Variable name="leftHandItem" comment="" />
				<Variable name="particle" comment="" />
				<Variable name="placeSlot" comment="" />
				<Variable name="rightHandItem" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Search>
											<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetWeaponsFromWeaponSet>
										</Search>
										<Exec>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Child>
														<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<DecoratorBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</EventData_pickup>
																				<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</EventData_place>
																			</AnimationAction>
																			<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</LinkTagFilter>
																					</GraphSearch>
																					<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<ExecuteSoundTrigger hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</ExecuteSoundTrigger>
																							<ParticleEffectControl hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</ParticleEffectControl>
																						</Sequence>
																					</LinkGate>
																				</Sequence>
																			</SuppressFailure>
																		</Parallel>
																	</DecoratorBuff>
																</EntityContext>
															</EntityContext>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_speech_schedulerMonolog>
																</SuppressFailure>
															</IfCondition>
														</Parallel>
													</Child>
													<OnSuccess>
														<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Callback_empty>
													</OnSuccess>
												</FuseBox>
												<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</LinkTagFilter>
														</GraphSearch>
														<PlaceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</PlaceAction>
													</Sequence>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Selector>
											</Sequence>
										</Exec>
									</HandContentElement>
								</MoveParamsDecorator>
							</Sequence>
						</Child>
						<OnSuccess>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="waitWithHalberdInGuard" is_function="0">
		<Variables>
			<Variable name="helperInfo" type="helperInfo" values="" isPersistent="0" form="single" />
			<Variable name="killingAnimationStartPosition" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="killingSO" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHandItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;killingSO&apos;" prune="true" negprune="unknown" Parent="" Child="$killingSO" Data="" />
					</GraphSearch>
					<GetHelper smartObjectName="$killingSO" helperName="&apos;Quest_CombatAttackComboDeath&apos;" categoryName="" targetVar="$helperInfo" policy="Closest" />
					<GetHelperData smartObjectName="$killingSO" helperID="$helperInfo.id" positionTargetVar="$killingAnimationStartPosition" orientationTargetVar="" transformTargetVar="" fragmentTargetVar="" tagsTargetVar="" />
					<HandContentElement hand="Right" item="$rightHandItem" allowAny="false" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<GetWeaponsFromWeaponSet WeaponSet="Oversized" LeftHand="$leftHandItem" RightHand="$rightHandItem" UseTorchWhenAppropriate="true" />
						</Search>
						<Exec canSkip="1">
							<MeleeGuardAutomationDecorator GuardMode="forceEnable" active="true">
								<Sequence>
									<ExactMove directionType="FromVariable" directionSpecification="$killingSO" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$killingAnimationStartPosition" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Sequence>
							</MeleeGuardAutomationDecorator>
						</Exec>
					</HandContentElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="helperInfo" comment="" />
				<Variable name="killingAnimationStartPosition" comment="" />
				<Variable name="killingSO" comment="" />
				<Variable name="leftHandItem" comment="" />
				<Variable name="rightHandItem" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GetHelper hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetHelper>
						<GetHelperData hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetHelperData>
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetWeaponsFromWeaponSet>
							</Search>
							<Exec>
								<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ExactMove>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</MeleeGuardAutomationDecorator>
							</Exec>
						</HandContentElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_urgePlayerToCome" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ForceLook LookTarget="$__player" DisableVariations="false">
					<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
						<Child canSkip="1">
							<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
								<Sequence>
									<ExactMove directionType="AlignWithEntity" directionSpecification="$wuid" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									<Parallel successMode="All" failureMode="Any">
										<AnimationAction fragment="&apos;Commander_Urge&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
										<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" subtitlesDown="false" nodeLabel="99501671" />
									</Parallel>
								</Sequence>
							</AnyDecorator>
						</Child>
						<OnSuccess canSkip="1">
							<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
						</OnSuccess>
					</FuseBox>
				</ForceLook>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="endNotification">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ExactMove>
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AnimationAction>
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</Parallel>
									</Sequence>
								</AnyDecorator>
							</Child>
							<OnSuccess>
								<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantCallback_empty>
							</OnSuccess>
						</FuseBox>
					</ForceLook>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="anim_crossbowHitFallFromWall" is_function="0">
		<Variables>
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHandItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<HandContentElement hand="Left" item="$leftHandItem" allowAny="false" decisionLabel="battle_weapon" useDecision="true" saveVersion="2">
							<Search canSkip="1">
								<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHandItem" RightHand="$rightHandItem" UseTorchWhenAppropriate="true" />
							</Search>
							<Exec canSkip="1">
								<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
									<Child canSkip="1">
										<AnimationAction fragment="&apos;Quest_CrossbowHitFallFromWall&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
									</Child>
									<OnSuccess canSkip="1">
										<KillNPC KillTarget="$this.id" animation="" tags="" AnimationWUID="" Scream="false" />
									</OnSuccess>
								</FuseBox>
							</Exec>
						</HandContentElement>
					</Child>
					<OnSuccess canSkip="1">
						<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="endNotification">
			<Variables>
				<Variable name="leftHandItem" comment="" />
				<Variable name="rightHandItem" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Search>
									<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetWeaponsFromWeaponSet>
								</Search>
								<Exec>
									<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Child>
											<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AnimationAction>
										</Child>
										<OnSuccess>
											<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</KillNPC>
										</OnSuccess>
									</FuseBox>
								</Exec>
							</HandContentElement>
						</Child>
						<OnSuccess>
							<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantCallback_empty>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="loadWeaponStanding" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
						<IsWeaponLoaded failOnCondition="false" saveVersion="2">
							<Then canSkip="1">
								<Success />
							</Then>
							<Else canSkip="1">
								<LoadWeaponAction />
							</Else>
						</IsWeaponLoaded>
					</AnyDecorator>
					<ActorStateBarrier Who="" ToState="idle" NegateTo="false" RunLogic="KeepRunning">
						<Expression expressions="$behaviorSuccess = true" />
					</ActorStateBarrier>
					<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IsWeaponLoaded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</Then>
								<Else>
									<LoadWeaponAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LoadWeaponAction>
								</Else>
							</IsWeaponLoaded>
						</AnyDecorator>
						<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</ActorStateBarrier>
						<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantSendMessageToNPC>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments>
				<Comment text="Trackview_recording_behavior_only" posX="-100" posY="-180" width="319" height="127" resizeBorderWidth="300" resizeBorderHeight="100" color="0.65,0.65,0.65" author="aleks" />
			</Comments>
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="moveToBattlement" is_function="0">
		<Variables>
			<Variable name="battlements" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="behaviorHolders" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="lockCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="rightHandItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;battlement&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<IsMinigameAvailableFilter minigameType="BattleArchery" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$battlements" saveVersion="2">
							<Child0 canSkip="1">
								<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
							</Child0>
						</Nodalyzer>
					</GraphSearch>
					<AnyDecorator preset="bothHands_changeEquipment">
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="true" successDistance="1.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$battlements[0]" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					</AnyDecorator>
					<HandContentElement hand="Left" item="$leftHandItem" allowAny="false" decisionLabel="Label1" useDecision="false" saveVersion="2">
						<Search canSkip="1">
							<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHandItem" RightHand="$rightHandItem" UseTorchWhenAppropriate="true" />
						</Search>
						<Exec canSkip="1">
							<Sequence>
								<WaitAction />
								<MinigameElement minigameType="BattleArchery" minigameObject="$battlements[0]" decisionLabel="battle_archery" useDecision="true" saveVersion="2">
									<Search canSkip="1">
										<Success />
									</Search>
									<Exec canSkip="1">
										<Sequence>
											<WaitAction />
											<GetBehaviorHolders area="$__object.id" behaviors="&apos;moveToBattlement&apos;" targetVar="$behaviorHolders" />
											<Expression expressions="$lockCount = #behaviorHolders" />
											<Synchronize SemaphoreCount="$lockCount" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;battlementLock&apos;" RunLogic="KeepRunning">
												<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
											</Synchronize>
										</Sequence>
									</Exec>
								</MinigameElement>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="endNotification">
			<Variables>
				<Variable name="battlements" comment="" />
				<Variable name="behaviorHolders" comment="" />
				<Variable name="leftHandItem" comment="" />
				<Variable name="lockCount" comment="" />
				<Variable name="rightHandItem" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<IsMinigameAvailableFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</IsMinigameAvailableFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child0>
									<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</RangeSorter>
								</Child0>
							</Nodalyzer>
						</GraphSearch>
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
						</AnyDecorator>
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetWeaponsFromWeaponSet>
							</Search>
							<Exec>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<MinigameElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Search>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Search>
										<Exec>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
												<GetBehaviorHolders hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</GetBehaviorHolders>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
												<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantCallback_empty>
												</Synchronize>
											</Sequence>
										</Exec>
									</MinigameElement>
								</Sequence>
							</Exec>
						</HandContentElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="shootFromBattlement" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="barkingCooldown" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="battlementLinkSource" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="enemyGroupControllers" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="isShooting" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="shooterArea" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Function_battlementShooting battlementLinkSource="$battlementLinkSource" checkForCloseEnemies="$isShooting" enemyGroupControllers="$enemyGroupControllers" isShooting="$isShooting" shooterArea="$shooterArea" nodeLabel="80072700" />
					<Loop count="-1">
						<IfGate atomic="false" condition="$alias ~= &apos;-&apos; &amp; &#10;$barkingCooldown ~= &apos;-&apos; &amp; &#10;$isShooting" RunLogic="Halt">
							<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;battlementShootingBarkingLock&apos;">
								<Sequence>
									<SuppressFailure>
										<DialogGate Who="$this.id" Negation="true" EndDialogInRoot="false" Condition="InMonolog" RunLogic="KeepRunning">
											<EntityContext context="combat_disableAllSkirmishBarks" target="">
												<Function_speech_schedulerMonolog alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="13148583" />
											</EntityContext>
										</DialogGate>
									</SuppressFailure>
									<Wait duration="$barkingCooldown" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</Semaphore>
						</IfGate>
					</Loop>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="zoufalaObranaZaBohutu_shootFromBattlement" EventSet="">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="barkingCooldown" comment="" />
				<Variable name="battlementLinkSource" comment="" />
				<Variable name="enemyGroupControllers" comment="" />
				<Variable name="isShooting" comment="" />
				<Variable name="shooterArea" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_battlementShooting hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_battlementShooting>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DialogGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_speech_schedulerMonolog>
												</EntityContext>
											</DialogGate>
										</SuppressFailure>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Semaphore>
							</IfGate>
						</Loop>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="waitWithHalberd" is_function="0">
		<Variables>
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHandItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<WaitAction />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<HandContentElement hand="Right" item="$rightHandItem" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_halbert" useDecision="true" enabled="true" saveVersion="2">
				<Search canSkip="1">
					<GetWeaponsFromWeaponSet WeaponSet="Oversized" LeftHand="$leftHandItem" RightHand="$rightHandItem" UseTorchWhenAppropriate="true" />
				</Search>
			</HandContentElement>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="leftHandItem" comment="" />
				<Variable name="rightHandItem" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<HandContentElement editorPosX="270" editorPosY="-300" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Search>
						<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetWeaponsFromWeaponSet>
					</Search>
				</HandContentElement>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="waitInGuard" is_function="0">
		<Variables>
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="useLeftHand" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
					<MeleeGuardAutomationDecorator GuardMode="freeBlock" active="true">
						<Sequence>
							<WaitAction />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</MeleeGuardAutomationDecorator>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHandItem" RightHand="$rightHandItem" UseTorchWhenAppropriate="false" />
				<Expression expressions="$useLeftHand = $leftHandItem ~= $__null" />
				<HandContentElement hand="Right" item="$rightHandItem" allowAny="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<Success />
					</Search>
					<Exec canSkip="1">
						<HandContentElement hand="Left" item="$leftHandItem" allowAny="false" decisionLabel="battle_shield" useDecision="true" enabled="$useLeftHand" saveVersion="2">
							<Search canSkip="1">
								<Success />
							</Search>
						</HandContentElement>
					</Exec>
				</HandContentElement>
			</Sequence>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="leftHandItem" comment="" />
				<Variable name="rightHandItem" comment="" />
				<Variable name="useLeftHand" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</MeleeGuardAutomationDecorator>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="890" editorPosY="-660" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</GetWeaponsFromWeaponSet>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Search>
						<Exec>
							<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Search>
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</Search>
							</HandContentElement>
						</Exec>
					</HandContentElement>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="getRangedWeapon" is_function="1">
		<Variables>
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHandItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="hand" type="enum:handType" values="" isPersistent="0" form="single" requirementType="Out" />
			<Variable name="weaponToEquip" type="_wuid" values="" isPersistent="0" form="single" requirementType="Out" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHandItem" RightHand="$rightHandItem" UseTorchWhenAppropriate="true" />
					<IfElseCondition failOnCondition="false" condition="$rightHandItem == $__null" saveVersion="2">
						<Then canSkip="1">
							<Expression expressions="$weaponToEquip = $leftHandItem &#10;$hand = $enum:handType.left" />
						</Then>
						<Else canSkip="1">
							<Expression expressions="$weaponToEquip = $rightHandItem &#10;$hand = $enum:handType.right" />
						</Else>
					</IfElseCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="leftHandItem" comment="" />
				<Variable name="rightHandItem" comment="" />
				<Variable name="hand" comment="" />
				<Variable name="weaponToEquip" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetWeaponsFromWeaponSet>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Then>
							<Else>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Else>
						</IfElseCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="goToSpotWithHalberd" is_function="0">
		<Variables>
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHandItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<HandContentElement hand="Right" item="$rightHandItem" allowAny="false" decisionLabel="battle_halbert" useDecision="true" enabled="true" saveVersion="2">
				<Search canSkip="1">
					<GetWeaponsFromWeaponSet WeaponSet="Oversized" LeftHand="$leftHandItem" RightHand="$rightHandItem" UseTorchWhenAppropriate="true" />
				</Search>
				<Exec canSkip="1">
					<Sequence>
						<WaitAction />
					</Sequence>
				</Exec>
			</HandContentElement>
		</ForestContainer>
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="leftHandItem" comment="" />
				<Variable name="rightHandItem" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantCallback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<HandContentElement editorPosX="330" editorPosY="520" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Search>
						<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetWeaponsFromWeaponSet>
					</Search>
					<Exec>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
						</Sequence>
					</Exec>
				</HandContentElement>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="cert_leadPlayerToSideWalls" is_function="0">
		<Variables>
			<Variable name="addParams" type="additionalMoveParams" values="" isPersistent="0" form="single" />
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="myDistanceToDestination" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="nextDestination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="playerClose" type="_bool" values="true" isPersistent="0" form="single" />
			<Variable name="playerCloserToDestination" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="playerDistanceToDestination" type="_float" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
					<MoveParamsDecorator speed="Run" pathFindingParams="" doorClosingPolicy="LeaveOpened">
						<Sequence>
							<Expression expressions="$destination = $wuid" />
							<LoopUntil until="Fail" attemptCount="0">
								<Sequence>
									<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="6.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="FastRun" additionalParams="$addParams" pathFindingParams="" staminaPolicy="" pathInfo="" />
									<Selector>
										<Sequence>
											<GraphSearch Origin="$destination" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;nextTp&apos;" prune="true" negprune="unknown" Parent="" Child="$nextDestination" Data="" />
											</GraphSearch>
											<GraphSearch Origin="$nextDestination" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;playerCheck&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
											</GraphSearch>
											<DistanceCondition Origin="$__player" ReferencePt="$this.id" Low="7.500000" High="7.500000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
												<Sequence>
													<MeasureDistance position1="$nextDestination" position2="$__player" mode="ThreeDimensions" result="$playerDistanceToDestination" />
													<MeasureDistance position1="$nextDestination" position2="$this.id" mode="ThreeDimensions" result="$myDistanceToDestination" />
													<IfElseCondition failOnCondition="false" condition="$playerDistanceToDestination &lt; $myDistanceToDestination" saveVersion="2">
														<Then canSkip="1">
															<Success />
														</Then>
														<Else canSkip="1">
															<Parallel successMode="Any" failureMode="Any">
																<Sequence>
																	<ExactMove directionType="AlignWithEntity" directionSpecification="$destination" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
																	<ForceLook LookTarget="$__player" DisableVariations="true">
																		<Parallel successMode="Any" failureMode="Any">
																			<Loop count="-1">
																				<Sequence>
																					<Turn target="$__player" align="false" />
																					<Wait duration="&apos;6s&apos;" timeType="GameTime" doFail="false" variation="&apos;3s&apos;" />
																				</Sequence>
																			</Loop>
																			<Loop count="-1">
																				<Sequence>
																					<Parallel successMode="All" failureMode="Any">
																						<RandomGate opensWithChance="0.600000" saveVersion="2">
																							<Then canSkip="1">
																								<PlayAdditiveAnimation Fragment="&apos;BattleFollowMe&apos;" Tags="" />
																							</Then>
																							<Else canSkip="1">
																								<Success />
																							</Else>
																						</RandomGate>
																						<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="true" nodeLabel="88237670" />
																					</Parallel>
																					<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="&apos;2s&apos;" />
																				</Sequence>
																			</Loop>
																		</Parallel>
																	</ForceLook>
																</Sequence>
																<DistanceGate Origin="$__player" ReferencePt="$this.id" Low="7.500000" High="7.500000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
																	<Expression expressions="$addParams.turnBeforeMove = true" />
																</DistanceGate>
															</Parallel>
														</Else>
													</IfElseCondition>
												</Sequence>
											</DistanceCondition>
										</Sequence>
										<Expression expressions="$addParams.turnBeforeMove = false" />
									</Selector>
									<GraphSearch Origin="$destination" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;nextTp&apos;" prune="true" negprune="unknown" Parent="" Child="$destination" Data="" />
									</GraphSearch>
									<SuppressFailure>
										<Sequence>
											<GraphSearch Origin="$destination" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;finalTp&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
											</GraphSearch>
											<Expression expressions="$addParams.continueWhenHalting = true" />
										</Sequence>
									</SuppressFailure>
								</Sequence>
							</LoopUntil>
							<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
						</Sequence>
					</MoveParamsDecorator>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<IfCondition failOnCondition="false" condition="$playerCloserToDestination">
					<DistanceGate Origin="$this.id" ReferencePt="$destination" Low="$playerDistanceToDestination" High="$playerDistanceToDestination" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
						<Sequence>
							<MeasureDistance position1="$destination" position2="$__player" mode="ThreeDimensions" result="$playerDistanceToDestination" />
							<MeasureDistance position1="$destination" position2="$this.id" mode="ThreeDimensions" result="$myDistanceToDestination" />
							<Expression expressions="$playerCloserToDestination = $playerDistanceToDestination &lt; $myDistanceToDestination" />
						</Sequence>
					</DistanceGate>
				</IfCondition>
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
			</Sequence>
			<Parallel successMode="Any" failureMode="Any">
				<Loop count="-1">
					<IfGate atomic="false" condition="$destination == $wuid" RunLogic="Halt" />
				</Loop>
			</Parallel>
			<ContinuousSwitch>
				<IfCondition failOnCondition="false" condition="$playerClose">
					<DistanceGate Origin="$__player" ReferencePt="$this.id" Low="5.000000" High="5.000000" Negation="true" OpenInMiddle="false" RunLogic="KeepRunning">
						<Sequence>
							<MeasureDistance position1="$destination" position2="$__player" mode="ThreeDimensions" result="$playerDistanceToDestination" />
							<MeasureDistance position1="$destination" position2="$this.id" mode="ThreeDimensions" result="$myDistanceToDestination" />
							<Expression expressions="$playerClose = false &#10;$playerCloserToDestination = $playerDistanceToDestination &lt; $myDistanceToDestination" />
						</Sequence>
					</DistanceGate>
				</IfCondition>
				<IfCondition failOnCondition="false" condition="true">
					<Parallel successMode="Any" failureMode="Any">
						<DistanceGate Origin="$__player" ReferencePt="$this.id" Low="5.000000" High="5.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
							<Expression expressions="$playerClose = true" />
						</DistanceGate>
						<Loop count="-1">
							<Sequence>
								<DistanceGate Origin="$__player" ReferencePt="$destination" Low="$myDistanceToDestination" High="$myDistanceToDestination" Negation="false" OpenInMiddle="false" RunLogic="Halt">
									<Sequence>
										<Expression expressions="$playerCloserToDestination = true" />
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</DistanceGate>
								<MeasureDistance position1="$destination" position2="$this.id" mode="ThreeDimensions" result="$myDistanceToDestination" />
								<Expression expressions="$playerCloserToDestination = false" />
							</Sequence>
						</Loop>
					</Parallel>
				</IfCondition>
			</ContinuousSwitch>
			<Expression expressions="$playerClose = false &#10;$playerCloserToDestination = $playerDistanceToDestination &lt; $myDistanceToDestination" />
			<IfCondition failOnCondition="false" condition="$playerDistanceToDestination &lt; $myDistanceToDestination" />
			<ContinuousSwitch>
				<IfCondition failOnCondition="false" condition="$playerClose | &#10;$playerCloserToDestination" />
				<IfCondition failOnCondition="false" condition="true">
					<ForceLook LookTarget="$__player" DisableVariations="true">
						<Parallel successMode="Any" failureMode="Any">
							<Loop count="-1">
								<Sequence>
									<Turn target="$__player" align="false" />
									<Wait duration="&apos;6s&apos;" timeType="GameTime" doFail="false" variation="&apos;3s&apos;" />
								</Sequence>
							</Loop>
							<Loop count="-1">
								<Sequence>
									<Parallel successMode="All" failureMode="Any">
										<RandomGate opensWithChance="0.600000" saveVersion="2">
											<Then canSkip="1">
												<PlayAdditiveAnimation Fragment="&apos;BattleFollowMe&apos;" Tags="" />
											</Then>
											<Else canSkip="1">
												<Success />
											</Else>
										</RandomGate>
										<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="25874178" />
									</Parallel>
									<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="&apos;2s&apos;" />
								</Sequence>
							</Loop>
						</Parallel>
					</ForceLook>
				</IfCondition>
			</ContinuousSwitch>
		</ForestContainer>
		<EditorData Signature="wuidData_string" EventSet="endNotification">
			<Variables>
				<Variable name="addParams" comment="" />
				<Variable name="destination" comment="" />
				<Variable name="myDistanceToDestination" comment="" />
				<Variable name="nextDestination" comment="" />
				<Variable name="playerClose" comment="" />
				<Variable name="playerCloserToDestination" comment="" />
				<Variable name="playerDistanceToDestination" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
										<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
												</GraphSearch>
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
												</GraphSearch>
												<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<MeasureDistance hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</MeasureDistance>
														<MeasureDistance hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</MeasureDistance>
														<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</Then>
															<Else>
																<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</ExactMove>
																		<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Turn>
																						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Wait>
																					</Sequence>
																				</Loop>
																				<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																								<OutputBreakpoints />
																								<Then>
																									<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</PlayAdditiveAnimation>
																								</Then>
																								<Else>
																									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</Success>
																								</Else>
																							</RandomGate>
																							<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</Function_speech_schedulerMonolog>
																						</Parallel>
																						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Wait>
																					</Sequence>
																				</Loop>
																			</Parallel>
																		</ForceLook>
																	</Sequence>
																	<DistanceGate hasInputBreakpoint="0" comment="Checking whether player is close" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Expression>
																	</DistanceGate>
																</Parallel>
															</Else>
														</IfElseCondition>
													</Sequence>
												</DistanceCondition>
											</Sequence>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Selector>
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
												</GraphSearch>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Sequence>
										</SuppressFailure>
									</Sequence>
								</LoopUntil>
								<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantCallback_empty>
							</Sequence>
						</MoveParamsDecorator>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="370" editorPosY="1660" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DistanceGate hasInputBreakpoint="0" comment="Checking whether player is still closer to destination" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<MeasureDistance hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</MeasureDistance>
								<MeasureDistance hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</MeasureDistance>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
						</DistanceGate>
					</IfCondition>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Sequence>
				<Parallel editorPosX="720" editorPosY="1300" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</IfGate>
					</Loop>
				</Parallel>
				<ContinuousSwitch editorPosX="1960" editorPosY="2220" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DistanceGate hasInputBreakpoint="0" comment="Checking whether player is far" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<MeasureDistance hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</MeasureDistance>
								<MeasureDistance hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</MeasureDistance>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
						</DistanceGate>
					</IfCondition>
					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DistanceGate hasInputBreakpoint="0" comment="Checking whether player is close" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</DistanceGate>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<DistanceGate hasInputBreakpoint="0" comment="Cheching whether player is closer to destination" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</DistanceGate>
									<MeasureDistance hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</MeasureDistance>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
							</Loop>
						</Parallel>
					</IfCondition>
				</ContinuousSwitch>
				<Expression editorPosX="2680" editorPosY="-670" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Expression>
				<IfCondition editorPosX="2830" editorPosY="-480" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</IfCondition>
				<ContinuousSwitch editorPosX="1880" editorPosY="1510" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</IfCondition>
					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Turn>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Loop>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</PlayAdditiveAnimation>
												</Then>
												<Else>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Else>
											</RandomGate>
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</Parallel>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Loop>
							</Parallel>
						</ForceLook>
					</IfCondition>
				</ContinuousSwitch>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pushActiveLadder" is_function="0">
		<Variables>
			<Variable name="halberd" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="halberdAmount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="hasHalberd" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid_target" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<SuppressFailure>
						<Sequence>
							<GetItem InventoryHost="$this.id" ItemGUID="" ItemCategory="&apos;melee_weapon.halberd.*&apos;" FailIfNotFound="true" ItemOut="$halberd" AmountOut="$halberdAmount" />
							<DrawAction WeaponSet="Oversized" fullBody="false" tags="" useSelectedWeaponSet="false" />
							<Expression expressions="$hasHalberd = true" />
						</Sequence>
					</SuppressFailure>
					<SyncWithTrackview NPC="$this.id" />
					<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
						<Child canSkip="1">
							<AnyDecorator preset="bothHands_changeEquipment" enabled="$hasHalberd">
								<Parallel successMode="Any" failureMode="Any">
									<EntityContext context="combat_disabledAsTarget" target="">
										<Function_npc_pushLadder guardArea="$wuid" ladderSO="$wuid_target" nodeLabel="77835943" />
									</EntityContext>
									<Sequence>
										<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="5.000000" High="5.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
											<SuppressFailure>
												<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" subtitlesDown="false" nodeLabel="91007491" />
											</SuppressFailure>
										</DistanceGate>
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</Parallel>
							</AnyDecorator>
						</Child>
						<OnSuccess canSkip="1">
							<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
						</OnSuccess>
					</FuseBox>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuid_wuid_string" EventSet="endNotification">
			<Variables>
				<Variable name="halberd" comment="" />
				<Variable name="halberdAmount" comment="" />
				<Variable name="hasHalberd" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
				<Variable name="wuid_target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GetItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetItem>
								<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</DrawAction>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
						</SuppressFailure>
						<SyncWithTrackview hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SyncWithTrackview>
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_npc_pushLadder hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_npc_pushLadder>
										</EntityContext>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_speech_schedulerMonolog>
												</SuppressFailure>
											</DistanceGate>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</Parallel>
								</AnyDecorator>
							</Child>
							<OnSuccess>
								<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantCallback_empty>
							</OnSuccess>
						</FuseBox>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="waitForHalberdKill" is_function="0">
		<Variables>
			<Variable name="halberd" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="halberdSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="helperInfo" type="helperInfo" values="" isPersistent="0" form="single" />
			<Variable name="killingAnimationStartPosition" type="vec3" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid_target" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GetHelper smartObjectName="$wuid" helperName="&apos;Quest_CombatAttackComboDeath&apos;" categoryName="" targetVar="$helperInfo" policy="Closest" />
					<GetHelperData smartObjectName="$wuid" helperID="$helperInfo.id" positionTargetVar="$killingAnimationStartPosition" orientationTargetVar="" transformTargetVar="" fragmentTargetVar="" tagsTargetVar="" />
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;halberdSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$halberdSlot" Data="" />
					</GraphSearch>
					<MeleeGuardAutomationDecorator GuardMode="forceEnable" active="true">
						<HandContentElement hand="Right" item="$halberd" allowAny="false" decisionLabel="battle_halbert" useDecision="true" enabled="true" saveVersion="2">
							<Search canSkip="1">
								<GetItemInSlot slot="$halberdSlot" useHomeItem="true" item="$halberd" />
							</Search>
							<Exec canSkip="1">
								<Sequence>
									<ExactMove directionType="AlignWithEntity" directionSpecification="$wuid" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$killingAnimationStartPosition" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="4.000000" High="4.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
										<DistanceGate Origin="$this.id" ReferencePt="$wuid_target" Low="4.000000" High="4.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
											<ForceLook LookTarget="$__player" DisableVariations="false">
												<Sequence>
													<SuppressFailure>
														<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="25907896" />
													</SuppressFailure>
													<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
												</Sequence>
											</ForceLook>
										</DistanceGate>
									</DistanceGate>
								</Sequence>
							</Exec>
						</HandContentElement>
					</MeleeGuardAutomationDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuid_wuid_string" EventSet="">
			<Variables>
				<Variable name="halberd" comment="" />
				<Variable name="halberdSlot" comment="" />
				<Variable name="helperInfo" comment="" />
				<Variable name="killingAnimationStartPosition" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
				<Variable name="wuid_target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GetHelper hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetHelper>
						<GetHelperData hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetHelperData>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Search>
									<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetItemInSlot>
								</Search>
								<Exec>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ExactMove>
										<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_speech_schedulerMonolog>
														</SuppressFailure>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Sequence>
												</ForceLook>
											</DistanceGate>
										</DistanceGate>
									</Sequence>
								</Exec>
							</HandContentElement>
						</MeleeGuardAutomationDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="aim" is_function="0">
		<Variables>
			<Variable name="aimInCrouch" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hand" type="enum:handType" values="" isPersistent="0" form="single" />
			<Variable name="lookSpot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="weapon" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;shootingSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$destination" Data="" />
					</GraphSearch>
					<SuppressFailure>
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;shootInCrouch&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Expression expressions="$aimInCrouch = true" />
						</Sequence>
					</SuppressFailure>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;lookSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$lookSpot" Data="" />
					</GraphSearch>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<HandContentElement hand="$hand" item="$weapon" allowAny="false" decisionLabel="battle_ranged" useDecision="false" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<Function_getRangedWeapon hand="$hand" weaponToEquip="$weapon" nodeLabel="79199520" />
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<IsWeaponLoaded failOnCondition="false" saveVersion="2">
								<Then canSkip="1">
									<Success />
								</Then>
								<Else canSkip="1">
									<LoadWeaponAction />
								</Else>
							</IsWeaponLoaded>
							<ForceLook LookTarget="$lookSpot" DisableVariations="true">
								<Switch>
									<IfCondition failOnCondition="false" condition="$aimInCrouch">
										<StanceElement smartObject="" stance="crouch" allowAny="false" enabled="true">
											<UnstanceAction unstance="Quest_CrossbowCrouchIdleAim" locationObject="$destination" slaveObject="" />
										</StanceElement>
									</IfCondition>
									<DefaultBranch>
										<Sequence>
											<StanceCheck soul="$this.id" stance="crouch" smartObject="" negate="false" failOnCondition="false" saveVersion="2">
												<Then canSkip="1">
													<Sequence>
														<WaitAction />
														<ActorStateBarrier Who="$this.id" ToState="idle" NegateTo="false" RunLogic="KeepRunning">
															<Success />
														</ActorStateBarrier>
													</Sequence>
												</Then>
												<Else canSkip="1">
													<Success />
												</Else>
											</StanceCheck>
											<UnstanceAction unstance="Quest_CrossbowIdleAim" locationObject="$destination" slaveObject="" />
										</Sequence>
									</DefaultBranch>
								</Switch>
							</ForceLook>
							<Wait duration="&apos;8s&apos;" timeType="GameTime" doFail="false" variation="&apos;4s&apos;" skipInLOD="false" />
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="aimInCrouch" comment="" />
				<Variable name="destination" comment="" />
				<Variable name="hand" comment="" />
				<Variable name="lookSpot" comment="" />
				<Variable name="weapon" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
						</SuppressFailure>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
					</Sequence>
				</OnInit>
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<Function_getRangedWeapon hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_getRangedWeapon>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IsWeaponLoaded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Then>
									<Else>
										<LoadWeaponAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LoadWeaponAction>
									</Else>
								</IsWeaponLoaded>
								<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</UnstanceAction>
											</StanceElement>
										</IfCondition>
										<DefaultBranch>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<StanceCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</WaitAction>
															<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</ActorStateBarrier>
														</Sequence>
													</Then>
													<Else>
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</Else>
												</StanceCheck>
												<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</UnstanceAction>
											</Sequence>
										</DefaultBranch>
									</Switch>
								</ForceLook>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="interrupt_weaponSetup" is_function="0">
		<Variables>
			<Variable name="ladder" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="shield" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tagLadder" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="torch" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="torchItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;ladder&apos;" prune="true" negprune="unknown" Parent="" Child="$tagLadder" Data="" />
					</GraphSearch>
					<IfElseCondition failOnCondition="false" condition="$tagLadder == $__null" saveVersion="2">
						<Then canSkip="1">
							<Selector>
								<IfCondition failOnCondition="true" condition="$data == &apos;melee,torch&apos;">
									<UrgencyDecorator Urgency="Instant">
										<HandContentElement hand="Right" item="$rightHand" allowAny="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
											</Search>
											<Exec canSkip="1">
												<HandContentElement hand="Left" item="$torch" allowAny="false" decisionLabel="battle_torch" useDecision="true" enabled="true" saveVersion="2">
													<Search canSkip="1">
														<Selector>
															<Function_findItemOnSlot linkName="&apos;pickUpSlot&apos;" npc="$this.id" searchOrigin="$this.id" item="$torch" nodeLabel="70128437" />
															<GetItem InventoryHost="$this.id" ItemGUID="&apos;4cea28a0-0814-405a-bf24-4fd711f7eb63&apos;" ItemCategory="" FailIfNotFound="true" ItemOut="$torch" AmountOut="" />
															<CreateItem ItemGUID="&apos;4cea28a0-0814-405a-bf24-4fd711f7eb63&apos;" Amount="1" CreatedItem="$torchItem" Target="$this.id" NotifyUI="false" />
														</Selector>
													</Search>
													<Exec canSkip="1">
														<WaitAction />
													</Exec>
												</HandContentElement>
											</Exec>
										</HandContentElement>
									</UrgencyDecorator>
								</IfCondition>
								<IfCondition failOnCondition="true" condition="$data == &apos;melee&apos;">
									<Sequence>
										<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
										<IfElseCondition failOnCondition="false" condition="$leftHand == $__null" saveVersion="2">
											<Then canSkip="1">
												<HandContentElement hand="Right" item="$rightHand" allowAny="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
													<Search canSkip="1">
														<Success />
													</Search>
													<Exec canSkip="1">
														<WaitAction />
													</Exec>
												</HandContentElement>
											</Then>
											<Else canSkip="1">
												<HandContentElement hand="Right" item="$rightHand" allowAny="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
													<Search canSkip="1">
														<Success />
													</Search>
													<Exec canSkip="1">
														<HandContentElement hand="Left" item="$leftHand" allowAny="false" decisionLabel="battle_shield" useDecision="true" enabled="true" saveVersion="2">
															<Search canSkip="1">
																<Success />
															</Search>
															<Exec canSkip="1">
																<WaitAction />
															</Exec>
														</HandContentElement>
													</Exec>
												</HandContentElement>
											</Else>
										</IfElseCondition>
									</Sequence>
								</IfCondition>
								<IfCondition failOnCondition="true" condition="$data == &apos;shield&apos;">
									<UrgencyDecorator Urgency="Instant">
										<HandContentElement hand="Left" item="$shield" allowAny="false" decisionLabel="battle_shield" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<Selector>
													<Function_findItemOnSlot linkName="&apos;pickUpSlot&apos;" npc="$this.id" searchOrigin="$this.id" item="$shield" nodeLabel="25518881" />
													<Function_findItemOnSlot linkName="&apos;placeSlot&apos;" npc="$this.id" searchOrigin="$this.id" item="$shield" nodeLabel="50282546" />
												</Selector>
											</Search>
											<Exec canSkip="1">
												<WaitAction />
											</Exec>
										</HandContentElement>
									</UrgencyDecorator>
								</IfCondition>
								<IfCondition failOnCondition="true" condition="$data == &apos;ranged&apos;">
									<Selector>
										<HandContentElement hand="Left" item="$leftHand" allowAny="false" decisionLabel="battle_ranged" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
											</Search>
											<Exec canSkip="1">
												<WaitAction />
											</Exec>
										</HandContentElement>
										<HandContentElement hand="Right" item="$rightHand" allowAny="false" decisionLabel="battle_ranged" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
											</Search>
											<Exec canSkip="1">
												<WaitAction />
											</Exec>
										</HandContentElement>
									</Selector>
								</IfCondition>
								<IfCondition failOnCondition="true" condition="$data == &apos;torch&apos;">
									<UrgencyDecorator Urgency="Instant">
										<Sequence>
											<Selector>
												<Function_findItemOnSlot linkName="&apos;pickUpSlot&apos;" npc="$this.id" searchOrigin="$this.id" item="$torch" nodeLabel="64665306" />
												<GetItem InventoryHost="$this.id" ItemGUID="&apos;4cea28a0-0814-405a-bf24-4fd711f7eb63&apos;" ItemCategory="" FailIfNotFound="true" ItemOut="$torch" AmountOut="" />
											</Selector>
											<HandContentElement hand="Left" item="$torch" allowAny="false" decisionLabel="battle_torch" useDecision="true" enabled="true" saveVersion="2">
												<Search canSkip="1">
													<Success />
												</Search>
												<Exec canSkip="1">
													<WaitAction />
												</Exec>
											</HandContentElement>
										</Sequence>
									</UrgencyDecorator>
								</IfCondition>
								<IfCondition failOnCondition="true" condition="$data == &apos;halberd&apos;">
									<UrgencyDecorator Urgency="Instant">
										<HandContentElement hand="Right" item="$rightHand" allowAny="false" decisionLabel="battle_halbert" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<GetWeaponsFromWeaponSet WeaponSet="Oversized" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
											</Search>
											<Exec canSkip="1">
												<WaitAction />
											</Exec>
										</HandContentElement>
									</UrgencyDecorator>
								</IfCondition>
								<Success />
							</Selector>
						</Then>
						<Else canSkip="1">
							<UrgencyDecorator Urgency="Instant">
								<HandContentElement hand="Right" item="$ladder" allowAny="false" decisionLabel="battle_ladder" useDecision="true" enabled="true" saveVersion="2">
									<Search canSkip="1">
										<Function_findItemOnSlot linkName="&apos;placeSlot&apos;" npc="$this.id" searchOrigin="$this.id" item="$ladder" nodeLabel="77806894" />
									</Search>
									<Exec canSkip="1">
										<WaitAction />
									</Exec>
								</HandContentElement>
							</UrgencyDecorator>
						</Else>
					</IfElseCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="stringData" EventSet="">
			<Variables>
				<Variable name="ladder" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="shield" comment="" />
				<Variable name="tagLadder" comment="" />
				<Variable name="torch" comment="" />
				<Variable name="torchItem" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetWeaponsFromWeaponSet>
												</Search>
												<Exec>
													<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Search>
															<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_findItemOnSlot>
																<GetItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</GetItem>
																<CreateItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</CreateItem>
															</Selector>
														</Search>
														<Exec>
															<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</WaitAction>
														</Exec>
													</HandContentElement>
												</Exec>
											</HandContentElement>
										</UrgencyDecorator>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetWeaponsFromWeaponSet>
											<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Search>
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</Search>
														<Exec>
															<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</WaitAction>
														</Exec>
													</HandContentElement>
												</Then>
												<Else>
													<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Search>
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</Search>
														<Exec>
															<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Search>
																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Success>
																</Search>
																<Exec>
																	<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</WaitAction>
																</Exec>
															</HandContentElement>
														</Exec>
													</HandContentElement>
												</Else>
											</IfElseCondition>
										</Sequence>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_findItemOnSlot>
														<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_findItemOnSlot>
													</Selector>
												</Search>
												<Exec>
													<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WaitAction>
												</Exec>
											</HandContentElement>
										</UrgencyDecorator>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetWeaponsFromWeaponSet>
												</Search>
												<Exec>
													<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WaitAction>
												</Exec>
											</HandContentElement>
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetWeaponsFromWeaponSet>
												</Search>
												<Exec>
													<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WaitAction>
												</Exec>
											</HandContentElement>
										</Selector>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_findItemOnSlot>
													<GetItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetItem>
												</Selector>
												<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Search>
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</Search>
													<Exec>
														<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</WaitAction>
													</Exec>
												</HandContentElement>
											</Sequence>
										</UrgencyDecorator>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetWeaponsFromWeaponSet>
												</Search>
												<Exec>
													<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WaitAction>
												</Exec>
											</HandContentElement>
										</UrgencyDecorator>
									</IfCondition>
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</Selector>
							</Then>
							<Else>
								<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Search>
											<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_findItemOnSlot>
										</Search>
										<Exec>
											<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</WaitAction>
										</Exec>
									</HandContentElement>
								</UrgencyDecorator>
							</Else>
						</IfElseCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="waitInBattleIdle" is_function="0">
		<Variables>
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
					<Sequence>
						<Selector>
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;longSwordIdle&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								</GraphSearch>
								<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
									<Search canSkip="1">
										<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
									</Search>
									<Exec canSkip="1">
										<UnstanceAction unstance="BattleLngsw" locationObject="" slaveObject="" />
									</Exec>
								</HandContentElement>
							</Sequence>
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;kneelShieldUpIdle&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								</GraphSearch>
								<UnstanceAction unstance="BattleKneelShieldCover" locationObject="" slaveObject="" />
							</Sequence>
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;shieldUpIdle&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								</GraphSearch>
								<UnstanceAction unstance="BattleShswShld" locationObject="" slaveObject="" />
							</Sequence>
							<MeleeGuardAutomationDecorator GuardMode="freeBlock" active="true">
								<WaitAction />
							</MeleeGuardAutomationDecorator>
						</Selector>
						<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-60" editorPosY="70" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Search>
											<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetWeaponsFromWeaponSet>
										</Search>
										<Exec>
											<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</UnstanceAction>
										</Exec>
									</HandContentElement>
								</Sequence>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
								</Sequence>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
								</Sequence>
								<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
								</MeleeGuardAutomationDecorator>
							</Selector>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments>
				<Comment text="Trackview_recording_behavior_only" posX="40" posY="-170" width="319" height="127" resizeBorderWidth="300" resizeBorderHeight="100" color="0.65,0.65,0.65" author="" />
			</Comments>
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="soldier_waveAndBark" is_function="0">
		<Variables>
			<Variable name="turned" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid_target" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ForceLook LookTarget="$__player" DisableVariations="false">
					<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
						<Child canSkip="1">
							<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
								<Sequence>
									<ExactMove directionType="AlignWithEntity" directionSpecification="$wuid_target" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuid_target" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									<IsInsideArea Origin="$__player" Area="$wuid" FailSubtMissing="false" saveVersion="2">
										<Then canSkip="1">
											<Sequence>
												<Turn target="$__player" align="false" />
												<Expression expressions="$turned = true" />
											</Sequence>
										</Then>
									</IsInsideArea>
									<Parallel successMode="All" failureMode="Any">
										<IfCondition failOnCondition="false" condition="$turned">
											<AnimationAction fragment="&apos;BattleFollowMe&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
										</IfCondition>
										<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" subtitlesDown="false" nodeLabel="97253854" />
									</Parallel>
								</Sequence>
							</AnyDecorator>
						</Child>
						<OnSuccess canSkip="1">
							<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
						</OnSuccess>
					</FuseBox>
				</ForceLook>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuid_wuid_string" EventSet="endNotification">
			<Variables>
				<Variable name="turned" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
				<Variable name="wuid_target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ExactMove>
										<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Turn>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Sequence>
											</Then>
										</IsInsideArea>
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</AnimationAction>
											</IfCondition>
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</Parallel>
									</Sequence>
								</AnyDecorator>
							</Child>
							<OnSuccess>
								<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantCallback_empty>
							</OnSuccess>
						</FuseBox>
					</ForceLook>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="placePavise" is_function="0">
		<Variables>
			<Variable name="lockCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="shield" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="shieldSlot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="wuidArray" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Expression expressions="$lockCount = #wuidArray" />
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;placeSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$shieldSlot" Data="" />
					</GraphSearch>
					<Selector>
						<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;firstRow&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						</GraphSearch>
						<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;5s&apos;" LockManagerType="Local" SemaphoreName="&apos;placePaviseDesynchronizationExternalLock&apos;" RunLogic="KeepRunning">
							<Success />
						</ExternalLock>
					</Selector>
					<IfCondition failOnCondition="false" condition="$this.id ~= $wuidArray[0]">
						<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;placePaviseDesynchronizationSemaphoreLock&apos;">
							<Sequence>
								<Wait duration="&apos;600ms&apos;" timeType="GameTime" doFail="false" variation="&apos;300ms&apos;" />
								<SetExternalLock LockManagerType="Local" Locked="false" LockName="&apos;placePaviseDesynchronizationExternalLock&apos;" />
							</Sequence>
						</Semaphore>
					</IfCondition>
					<HandContentElement hand="Left" item="$shield" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_shield" useDecision="true" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<GetItemInSlot slot="$shieldSlot" useHomeItem="true" item="$shield" />
						</Search>
						<Exec canSkip="1">
							<DisableCollisionAvoidance>
								<PlaceAction item="$shield" slot="$shieldSlot" />
							</DisableCollisionAvoidance>
						</Exec>
					</HandContentElement>
					<Function_loadWeapon_function wait="false" nodeLabel="20970712" />
					<Synchronize SemaphoreCount="$lockCount" InsideTimerValue="&apos;20s&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;pavisePlacedAndWeaponLoadedLock&apos;" RunLogic="KeepRunning">
						<IfCondition failOnCondition="false" condition="$this.id == $wuidArray[0]">
							<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
						</IfCondition>
					</Synchronize>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidArray" EventSet="endNotification">
			<Variables>
				<Variable name="lockCount" comment="" />
				<Variable name="shield" comment="" />
				<Variable name="shieldSlot" comment="" />
				<Variable name="wuidArray" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</ExternalLock>
						</Selector>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</SetExternalLock>
								</Sequence>
							</Semaphore>
						</IfCondition>
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetItemInSlot>
							</Search>
							<Exec>
								<DisableCollisionAvoidance hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<PlaceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</PlaceAction>
								</DisableCollisionAvoidance>
							</Exec>
						</HandContentElement>
						<Function_loadWeapon_function hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_loadWeapon_function>
						<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantCallback_empty>
							</IfCondition>
						</Synchronize>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="celebrateSpilledOil" is_function="0">
		<Variables>
			<Variable name="lookSpot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="playAnimation" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;lookSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$lookSpot" Data="" />
					</GraphSearch>
					<Selector>
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;celebrateSpilledOil&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Expression expressions="$playAnimation = true" />
						</Sequence>
						<Success />
					</Selector>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<ForceLook LookTarget="$lookSpot" DisableVariations="true">
					<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
						<Loop count="-1">
							<Sequence>
								<Semaphore SemaphoreCount="2" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;celebrationBarkingFirstLock&apos;">
									<Sequence>
										<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;1s&apos;" LockManagerType="Local" SemaphoreName="&apos;celebrationBarkingSecondLock&apos;">
											<Sequence>
												<IfCondition failOnCondition="false" condition="$playAnimation">
													<WaitAction />
												</IfCondition>
												<Parallel successMode="All" failureMode="Any">
													<IfCondition failOnCondition="false" condition="$playAnimation">
														<AnimationAction fragment="&apos;BattleVictoryOil&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
													</IfCondition>
													<SuppressFailure>
														<Function_speech_schedulerMonolog alias="$data" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="65585336" />
													</SuppressFailure>
												</Parallel>
												<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
											</Sequence>
										</Semaphore>
										<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="&apos;1s&apos;" />
									</Sequence>
								</Semaphore>
								<Wait duration="&apos;12s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</Loop>
					</AnyDecorator>
				</ForceLook>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="stringData" EventSet="endNotification">
			<Variables>
				<Variable name="lookSpot" comment="" />
				<Variable name="playAnimation" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Selector>
					</Sequence>
				</OnInit>
				<Behavior>
					<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</WaitAction>
													</IfCondition>
													<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</AnimationAction>
														</IfCondition>
														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_speech_schedulerMonolog>
														</SuppressFailure>
													</Parallel>
													<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantCallback_empty>
												</Sequence>
											</Semaphore>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</Semaphore>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Loop>
						</AnyDecorator>
					</ForceLook>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="loadWeapon" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Function_loadWeapon_function wait="true" nodeLabel="75355506" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Function_loadWeapon_function hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_loadWeapon_function>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ladderPusher_getReady" is_function="0">
		<Variables>
			<Variable name="halberd" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="halberdSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="waitSpot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<SyncWithTrackview NPC="$this.id" />
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;halberdSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$halberdSlot" Data="" />
					</GraphSearch>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;waitSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$waitSpot" Data="" />
					</GraphSearch>
					<HandContentElement hand="Right" item="$halberd" allowAny="false" decisionLabel="battle_halbert" useDecision="true" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<GetItemInSlot slot="$halberdSlot" useHomeItem="true" item="$halberd" />
						</Search>
						<Exec canSkip="1">
							<Sequence>
								<ExactMove directionType="AlignWithEntity" directionSpecification="$waitSpot" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$waitSpot" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
								<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</Exec>
					</HandContentElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="halberd" comment="" />
				<Variable name="halberdSlot" comment="" />
				<Variable name="waitSpot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SyncWithTrackview hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SyncWithTrackview>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetItemInSlot>
							</Search>
							<Exec>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExactMove>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Exec>
						</HandContentElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="beExhausted" is_function="0">
		<Variables>
			<Variable name="first" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="lookSpot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;lookSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$lookSpot" Data="" />
					</GraphSearch>
					<SuppressFailure>
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;first&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Expression expressions="$first = true" />
						</Sequence>
					</SuppressFailure>
					<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
						<ForceLook LookTarget="$lookSpot" DisableVariations="true">
							<Sequence>
								<IfCondition failOnCondition="false" condition="!$first">
									<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;beingExhaustedLock&apos;">
										<Wait duration="&apos;1500ms&apos;" timeType="GameTime" doFail="false" variation="&apos;500ms&apos;" skipInLOD="false" />
									</Semaphore>
								</IfCondition>
								<AnimationAction fragment="&apos;BattleVictory&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
							</Sequence>
						</ForceLook>
					</AnyDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="first" comment="" />
				<Variable name="lookSpot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
						</SuppressFailure>
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Semaphore>
									</IfCondition>
									<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AnimationAction>
								</Sequence>
							</ForceLook>
						</AnyDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="shootFromBattlementBarkedNotification" is_function="0">
		<Variables>
			<Variable name="barkedRecently" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="barkingCooldown" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="battlementLinkSource" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="enemyGroupControllers" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="isShooting" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="shooterArea" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Function_battlementShooting battlementLinkSource="$battlementLinkSource" checkForCloseEnemies="$isShooting" enemyGroupControllers="$enemyGroupControllers" isShooting="$isShooting" shooterArea="$shooterArea" nodeLabel="18347146" />
					<Loop count="-1">
						<Sequence>
							<IfGate atomic="false" condition="$alias ~= &apos;-&apos;" RunLogic="Halt">
								<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;battlementShootingBarkingLock&apos;">
									<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
										<Child canSkip="1">
											<Sequence>
												<Parallel successMode="Any" failureMode="Any">
													<DialogGate Who="$__player" Negation="true" EndDialogInRoot="false" Condition="InMonolog" RunLogic="KeepRunning">
														<Success />
													</DialogGate>
													<Sequence>
														<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
														<Fail />
													</Sequence>
												</Parallel>
												<Sequence>
													<DialogGate Who="$this.id" Negation="true" EndDialogInRoot="false" Condition="InMonolog" RunLogic="KeepRunning">
														<EntityContext context="zoufalaObranaZaBohutu_barkingAtPlayer" target="">
															<EntityContext context="combat_disableAllSkirmishBarks" target="">
																<Function_speech_schedulerMonolog alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="true" nodeLabel="82064358" />
															</EntityContext>
														</EntityContext>
													</DialogGate>
													<Expression expressions="$barkedRecently = true" />
												</Sequence>
											</Sequence>
										</Child>
										<OnSuccess canSkip="1">
											<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
										</OnSuccess>
									</FuseBox>
								</Semaphore>
							</IfGate>
							<IfCondition failOnCondition="false" condition="$barkedRecently">
								<Sequence>
									<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="&apos;5s&apos;" />
									<ReinitVariable variable="$barkedRecently" />
								</Sequence>
							</IfCondition>
						</Sequence>
					</Loop>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="zoufalaObranaZaBohutu_shootFromBattlement" EventSet="endNotification">
			<Variables>
				<Variable name="barkedRecently" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="barkingCooldown" comment="" />
				<Variable name="battlementLinkSource" comment="" />
				<Variable name="enemyGroupControllers" comment="" />
				<Variable name="isShooting" comment="" />
				<Variable name="shooterArea" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_battlementShooting hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_battlementShooting>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<DialogGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</DialogGate>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
															<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Fail>
														</Sequence>
													</Parallel>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<DialogGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_speech_schedulerMonolog>
																</EntityContext>
															</EntityContext>
														</DialogGate>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Sequence>
												</Sequence>
											</Child>
											<OnSuccess>
												<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</InstantCallback_empty>
											</OnSuccess>
										</FuseBox>
									</Semaphore>
								</IfGate>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
										<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ReinitVariable>
									</Sequence>
								</IfCondition>
							</Sequence>
						</Loop>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="battlementShooting" is_function="1">
		<Variables>
			<Variable name="addParams" type="additionalMoveParams" values="" isPersistent="0" form="single" />
			<Variable name="battlements" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="break" type="_bool" values="" isPersistent="1" form="single" />
			<Variable name="enemiesInRange" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="enemyGroupController" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="enemyInRange" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHandItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="battlementLinkSource" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="checkForCloseEnemies" type="_bool" values="true" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="enemyGroupControllers" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="isShooting" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="shooterArea" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Expression expressions="$addParams.turnBeforeMove = true" />
			</OnInit>
			<Behavior canSkip="1">
				<EntityContext context="speech_readyForSwitchDialog" target="">
					<Sequence>
						<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
							<DistanceCondition Origin="$this.id" ReferencePt="$battlementLinkSource" Low="10.000000" High="10.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
								<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="6.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$battlementLinkSource" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="$addParams" pathFindingParams="" staminaPolicy="" pathInfo="" />
							</DistanceCondition>
						</AnyDecorator>
						<Parallel successMode="Any" failureMode="Any">
							<MoveParamsDecorator speed="Run" pathFindingParams="" doorClosingPolicy="Automatic">
								<HandContentElement hand="Left" item="$leftHandItem" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_ranged" useDecision="true" enabled="true" saveVersion="2">
									<Search canSkip="1">
										<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHandItem" RightHand="$rightHandItem" UseTorchWhenAppropriate="true" />
									</Search>
									<Exec canSkip="1">
										<MinigameElement minigameType="BattleArchery" minigameObject="$battlements[0]" decisionLabel="battle_archery" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<GraphSearch Origin="$battlementLinkSource" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<IsMinigameAvailableFilter minigameType="BattleArchery" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<NegationOp Results="true" Advance="true" EndOp="true" saveVersion="2">
														<Child0 canSkip="1">
															<LinkTagFilter tag="&apos;disable_battlement&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
														</Child0>
													</NegationOp>
													<Nodalyzer Quantifiers="ForAll" Parent="" Child="$battlements" saveVersion="2">
														<Child0 canSkip="1">
															<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
														</Child0>
													</Nodalyzer>
												</GraphSearch>
											</Search>
											<Exec canSkip="1">
												<Sequence>
													<IfCondition failOnCondition="false" condition="!$isShooting">
														<WaitAction />
													</IfCondition>
													<IfGate atomic="false" condition="$isShooting" RunLogic="KeepRunning">
														<EntityContext context="BattleShooter" target="">
															<EntityContext context="combat_missileAttackerIgnoreTrajectoryCollision" target="">
																<EntityContext context="combat_unlimitedMissileRange" target="">
																	<Loop count="-1">
																		<Parallel successMode="Any" failureMode="Any">
																			<MeleeOffenseAutomationDecorator active="true">
																				<WeaponAutomationDecorator WeaponChange="missile" active="true">
																					<BattleAction />
																				</WeaponAutomationDecorator>
																			</MeleeOffenseAutomationDecorator>
																			<ActorStateBarrier Who="" ToState="battleArcheryNpc" NegateTo="false" RunLogic="Halt">
																				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																			</ActorStateBarrier>
																		</Parallel>
																	</Loop>
																</EntityContext>
															</EntityContext>
														</EntityContext>
													</IfGate>
												</Sequence>
											</Exec>
										</MinigameElement>
									</Exec>
								</HandContentElement>
							</MoveParamsDecorator>
							<LoopUntil until="Success" attemptCount="0">
								<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
									<IfCondition failOnCondition="true" condition="$hitReaction.hitType == $enum:HitReactionType.Melee &amp; &#10;$hitReaction.hitStrength &gt; $enum:HitReactionStrength.Unpleasant">
										<Success />
									</IfCondition>
								</ProcessMessage>
							</LoopUntil>
							<LinkGate from="$enemyGroupControllers" to="" tag="&apos;battleEntity&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
								<While doFail="false" propagateChildFail="false" condition="!$break">
									<IfGate atomic="false" condition="!$break &amp; &#10;$checkForCloseEnemies" RunLogic="Halt">
										<Parallel successMode="Any" failureMode="Any">
											<AreaPresenceListener aiObjects="" area="$shooterArea" trackIn="true" trackOut="true" reportInitialState="false">
												<IfElseCondition failOnCondition="false" condition="$__presence" saveVersion="2">
													<Then canSkip="1">
														<ForEach startIndex="0" step="1" array="$enemyGroupControllers" iterator="" value="$enemyGroupController" break="">
															<Sequence>
																<GraphSearch Origin="$enemyGroupController" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																	<WUIDFilter WUID="$__presenceObject" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
																	<LinkTagFilter tag="&apos;battleEntity&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																</GraphSearch>
																<PushToArray array="$enemiesInRange" value="$__presenceObject" direction="Front" />
															</Sequence>
														</ForEach>
													</Then>
													<Else canSkip="1">
														<EraseFromArray array="$enemiesInRange" condition="$__value == $__presenceObject" />
													</Else>
												</IfElseCondition>
											</AreaPresenceListener>
											<Loop count="-1">
												<IfGate atomic="false" condition="#enemiesInRange &gt; 0" RunLogic="Halt">
													<Sequence>
														<ForEach startIndex="0" step="1" array="$enemiesInRange" iterator="" value="$enemyInRange" break="$break">
															<IsUnconsciousCheck SoulWUID="$enemyInRange" FailSubtMissing="false" saveVersion="2">
																<Else canSkip="1">
																	<IsDeadCheck SoulWUID="$enemyInRange" FailSubtMissing="false" saveVersion="2">
																		<Else canSkip="1">
																			<DistanceCondition Origin="$this.id" ReferencePt="$enemyInRange" Low="2.000000" High="2.000000" Negation="false" ValueOnMiddle="false" failOnCondition="false">
																				<Expression expressions="$break = true" />
																			</DistanceCondition>
																		</Else>
																	</IsDeadCheck>
																</Else>
															</IsUnconsciousCheck>
														</ForEach>
														<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
													</Sequence>
												</IfGate>
											</Loop>
											<Loop count="-1">
												<EntityContext context="combat_disabledAsTarget" target="">
													<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
												</EntityContext>
											</Loop>
										</Parallel>
									</IfGate>
								</While>
							</LinkGate>
						</Parallel>
					</Sequence>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer>
			<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="addParams" comment="" />
				<Variable name="battlements" comment="" />
				<Variable name="break" comment="" />
				<Variable name="enemiesInRange" comment="" />
				<Variable name="enemyGroupController" comment="" />
				<Variable name="enemyInRange" comment="" />
				<Variable name="hitReaction" comment="" />
				<Variable name="leftHandItem" comment="" />
				<Variable name="rightHandItem" comment="" />
				<Variable name="battlementLinkSource" comment="" />
				<Variable name="checkForCloseEnemies" comment="" />
				<Variable name="enemyGroupControllers" comment="" />
				<Variable name="isShooting" comment="" />
				<Variable name="shooterArea" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</OnInit>
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Move>
								</DistanceCondition>
							</AnyDecorator>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Search>
											<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetWeaponsFromWeaponSet>
										</Search>
										<Exec>
											<MinigameElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IsMinigameAvailableFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</IsMinigameAvailableFilter>
														<NegationOp hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Child0>
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
															</Child0>
														</NegationOp>
														<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Child0>
																<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</RangeSorter>
															</Child0>
														</Nodalyzer>
													</GraphSearch>
												</Search>
												<Exec>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</WaitAction>
														</IfCondition>
														<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<BattleAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</BattleAction>
																					</WeaponAutomationDecorator>
																				</MeleeOffenseAutomationDecorator>
																				<ActorStateBarrier hasInputBreakpoint="0" comment="Kdyz NPC dostane hit, tak ho hit reakce vyhodi  z minihry a je potreba aby udelal znova akci, aby se dostal zpet do minihry" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Wait>
																				</ActorStateBarrier>
																			</Parallel>
																		</Loop>
																	</EntityContext>
																</EntityContext>
															</EntityContext>
														</IfGate>
													</Sequence>
												</Exec>
											</MinigameElement>
										</Exec>
									</HandContentElement>
								</MoveParamsDecorator>
								<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</IfCondition>
									</ProcessMessage>
								</LoopUntil>
								<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<AreaPresenceListener hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</WUIDFilter>
																		<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</LinkTagFilter>
																	</GraphSearch>
																	<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</PushToArray>
																</Sequence>
															</ForEach>
														</Then>
														<Else>
															<EraseFromArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</EraseFromArray>
														</Else>
													</IfElseCondition>
												</AreaPresenceListener>
												<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<IsUnconsciousCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Else>
																		<IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																			<OutputBreakpoints />
																			<Else>
																				<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Expression>
																				</DistanceCondition>
																			</Else>
																		</IsDeadCheck>
																	</Else>
																</IsUnconsciousCheck>
															</ForEach>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
													</IfGate>
												</Loop>
												<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</EntityContext>
												</Loop>
											</Parallel>
										</IfGate>
									</While>
								</LinkGate>
							</Parallel>
						</Sequence>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest>
				<Wait editorPosX="3540" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Wait>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="interrupt_getHalberdFromSlot" is_function="0">
		<Variables>
			<Variable name="halberd" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$halberd" allowAny="false" decisionLabel="battle_halbert" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<GetItemInSlot slot="$data" useHomeItem="true" item="$halberd" />
					</Search>
					<Exec canSkip="1">
						<WaitAction />
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="halberd" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetItemInSlot>
						</Search>
						<Exec>
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="syncWithTrackviewAndWait" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<SyncWithTrackview NPC="$this.id" />
					<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
						<Sequence>
							<Selector>
								<Sequence>
									<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;idle_kneel&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									</GraphSearch>
									<UnstanceAction unstance="BattleKneelShieldCover" locationObject="" slaveObject="" />
								</Sequence>
								<UnstanceAction unstance="BattleShswShld" locationObject="" slaveObject="" />
							</Selector>
							<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</AnyDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SyncWithTrackview hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SyncWithTrackview>
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</UnstanceAction>
									</Sequence>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
								</Selector>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</AnyDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>