<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="teleportJezek" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<TeleportAction Position="$destination" EndInterruptOnActionStart="false" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="teleport" EventSet="endNotification">
			<Variables>
				<Variable name="destination" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</TeleportAction>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bathmaidHealing" is_function="0">
		<Variables>
			<Variable name="phase" type="_string" values="&apos;turning&apos;" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Loop count="-1">
						<IfGate atomic="false" condition="$data == true" RunLogic="Halt">
							<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="4.000000" High="4.000000" Negation="true" OpenInMiddle="false" RunLogic="Halt">
								<NPCStateGate State="Health" Target="$__player" Low="100.000000" High="100.000000" Negation="false" RunLogic="Halt">
									<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
										<Child canSkip="1">
											<Sequence>
												<Expression expressions="$phase = &apos;barking&apos;" />
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</Child>
										<OnFail canSkip="1">
											<Expression expressions="$phase = &apos;turning&apos;" />
										</OnFail>
									</FuseBox>
								</NPCStateGate>
							</DistanceGate>
						</IfGate>
					</Loop>
					<ContinuousSwitch>
						<IfCondition failOnCondition="false" condition="$phase == &apos;turning&apos;">
							<Loop count="-1">
								<Sequence>
									<Turn target="$__player" align="false" />
									<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</Loop>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$phase == &apos;barking&apos;">
							<Loop count="-1">
								<Sequence>
									<Parallel successMode="All" failureMode="Any">
										<Function_speech_schedulerMonolog alias="&apos;ztracenaCest_lazebniceBarkujeZeSeUNiDaLecit&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$__player" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="37986741" />
										<AnimationAction fragment="&apos;FollowMe&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
									</Parallel>
									<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</Loop>
						</IfCondition>
					</ContinuousSwitch>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="boolReference" EventSet="">
			<Variables>
				<Variable name="phase" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<NPCStateGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</Child>
											<OnFail>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</OnFail>
										</FuseBox>
									</NPCStateGate>
								</DistanceGate>
							</IfGate>
						</Loop>
						<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Turn>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Loop>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
											<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AnimationAction>
										</Parallel>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Loop>
							</IfCondition>
						</ContinuousSwitch>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="heroldTournament" is_function="0">
		<Variables>
			<Variable name="animationApproach" type="enum:animationApproach" values="$enum:animationApproach.ingameDialogPoseAndAnimations" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="phase" type="_int" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ContinuousSwitch>
					<IfCondition failOnCondition="false" condition="$phase == -2">
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$phase == -1">
						<Sequence>
							<Function_speech_schedulerMonolog alias="&apos;ztracenaCest_heroldKriciNaZdrhajicihoHrace&apos;" animationApproach="$animationApproach" context="" lookAtId="$__player" metarole="" skipInLod="false" subtitlesDown="true" nodeLabel="42603618" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$phase == 0">
						<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="30.000000" High="30.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
							<Sequence>
								<SuppressFailure>
									<LoopUntil until="Success" attemptCount="2">
										<Function_speech_schedulerMonolog alias="&apos;ztracenaCest_heroldVyhlasujeZacatekCelehoSouboje&apos;" animationApproach="$animationApproach" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="true" nodeLabel="90990439" />
									</LoopUntil>
								</SuppressFailure>
								<Callback_empty EventName="&apos;OnDuelStart&apos;" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</DistanceGate>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$phase == 1">
						<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="30.000000" High="30.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
							<Sequence>
								<Callback_empty EventName="&apos;OnHalberdStart&apos;" />
								<Function_speech_schedulerMonolog alias="&apos;ztracenaCest_heroldVyhlasujeZacatekDrevcu&apos;" animationApproach="$animationApproach" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="true" nodeLabel="45129932" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</DistanceGate>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$phase == 2">
						<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="30.000000" High="30.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
							<Sequence>
								<SuppressFailure>
									<LoopUntil until="Success" attemptCount="2">
										<Function_speech_schedulerMonolog alias="&apos;ztracenaCest_heroldVyhlasujeKonecDrevcu&apos;" animationApproach="$animationApproach" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="true" nodeLabel="24792753" />
									</LoopUntil>
								</SuppressFailure>
								<Callback_empty EventName="&apos;OnHalberdEnd&apos;" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</DistanceGate>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$phase == 3">
						<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="30.000000" High="30.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
							<Sequence>
								<Callback_empty EventName="&apos;OnOnehandStart&apos;" />
								<Function_speech_schedulerMonolog alias="&apos;ztracenaCest_heroldVyhlasujeZacatekJednoruckyAStitu&apos;" animationApproach="$animationApproach" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="true" nodeLabel="84236342" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</DistanceGate>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$phase == 4">
						<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="30.000000" High="30.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
							<Sequence>
								<SuppressFailure>
									<LoopUntil until="Success" attemptCount="2">
										<Function_speech_schedulerMonolog alias="&apos;ztracenaCest_heroldVyhlasujeKonecJednoruckyAStitu&apos;" animationApproach="$animationApproach" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="true" nodeLabel="46485730" />
									</LoopUntil>
								</SuppressFailure>
								<Callback_empty EventName="&apos;OnOnehandEnd&apos;" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</DistanceGate>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$phase == 5">
						<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="30.000000" High="30.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
							<Sequence>
								<Callback_empty EventName="&apos;OnLongswordStart&apos;" />
								<Function_speech_schedulerMonolog alias="&apos;ztracenaCest_heroldVyhlasujeZacatekLongswordu&apos;" animationApproach="$animationApproach" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="true" nodeLabel="20687974" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</DistanceGate>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$phase == 6">
						<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="30.000000" High="30.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
							<Sequence>
								<SuppressFailure>
									<LoopUntil until="Success" attemptCount="2">
										<Function_speech_schedulerMonolog alias="&apos;ztracenaCest_heroldVyhlasujeKonecLongswordu&apos;" animationApproach="$animationApproach" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="true" nodeLabel="44566215" />
									</LoopUntil>
								</SuppressFailure>
								<SuppressFailure>
									<LoopUntil until="Success" attemptCount="2">
										<Function_speech_schedulerMonolog alias="&apos;ztracenaCest_heroldVyhlasujeKonecCelehoSouboje&apos;" animationApproach="$animationApproach" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="true" nodeLabel="45629466" />
									</LoopUntil>
								</SuppressFailure>
								<Callback_empty EventName="&apos;OnDuelEnd&apos;" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</DistanceGate>
					</IfCondition>
				</ContinuousSwitch>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="ztracenaCest_herold" EventSet="heroldTournamet">
			<Variables>
				<Variable name="animationApproach" comment="" />
				<Variable name="phase" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-50" editorPosY="-20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerMonolog>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</LoopUntil>
									</SuppressFailure>
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</DistanceGate>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</DistanceGate>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</LoopUntil>
									</SuppressFailure>
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</DistanceGate>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</DistanceGate>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</LoopUntil>
									</SuppressFailure>
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</DistanceGate>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</DistanceGate>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</LoopUntil>
									</SuppressFailure>
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</LoopUntil>
									</SuppressFailure>
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</DistanceGate>
						</IfCondition>
					</ContinuousSwitch>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="turnToPlayer" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Loop count="-1">
					<Sequence>
						<Turn target="$__player" align="false" />
						<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</Loop>
			</Behavior>
		</Root>
		<ForestContainer>
			<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
		</ForestContainer>
		<EditorData Signature="empty" EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Turn>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Loop>
				</Behavior>
			</Root>
			<Forest>
				<Wait editorPosX="1060" editorPosY="322" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Wait>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="tentArenaMove" is_function="0">
		<Variables>
			<Variable name="pathfindParams" type="pathFindingParams" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="speed" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="stealth" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="successDistance" type="_float" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$pathfindParams.useGeneratedNSO = true" />
					<ExactMove directionType="AlignWithEntity" directionSpecification="$destination" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="$speed" additionalParams="" pathFindingParams="$pathfindParams" staminaPolicy="" pathInfo="" />
					<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
					<Loop count="-1">
						<Function_turnToTargetIfStanding target="$__player" nodeLabel="29070015" />
					</Loop>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="moveData" EventSet="endNotification">
			<Variables>
				<Variable name="pathfindParams" comment="" />
				<Variable name="destination" comment="" />
				<Variable name="speed" comment="" />
				<Variable name="stealth" comment="" />
				<Variable name="successDistance" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantCallback_empty>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_turnToTargetIfStanding hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_turnToTargetIfStanding>
						</Loop>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="halberdWait" is_function="0">
		<Variables>
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$rightHand" allowAny="false" decisionLabel="ztracenaCest_halberd" useDecision="true" saveVersion="2">
					<Search canSkip="1">
						<GetWeaponsFromWeaponSet WeaponSet="Oversized" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<WaitAction />
							<Turn target="$__player" align="false" />
							<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetWeaponsFromWeaponSet>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Turn>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="holsterHalberd" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<WaitAction />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="empty" EventSet="endNotification">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="50" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>