<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="followPlayer">
    <Variables>
      <Variable name="t_leader" type="wuid" values="" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <Expression expressions="$t_leader=$__player" />
          <IncludeTree File="&apos;final/questUtils.xml&apos;" Name="&apos;followNPC&apos;" nodeLabel="10016806" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData>
      <Variables>
        <Variable name="t_leader" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-40" editorPosY="-10" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence editorPosX="210" editorPosY="-10" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Expression editorPosX="370" editorPosY="-10" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
            <IncludeTree editorPosX="370" editorPosY="70" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </IncludeTree>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="followNPC" is_function="0">
    <Variables>
      <Variable name="addParams" type="additionalMoveParams" values="destChangedThreshold(&apos;500ms&apos;)" isPersistent="0" form="single" />
      <Variable name="followNpcParams" type="followNPC" values="" isPersistent="0" form="single" />
      <Variable name="pathInfo" type="pathInfo" values="" isPersistent="0" form="single" />
      <Variable name="pathfind_params" type="pathFindingParams" values="" isPersistent="0" form="single" />
      <Variable name="speed" type="_string" values="&apos;Run&apos;" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Expression expressions="$pathfind_params.useGeneratedNSO=true" />
      </OnInit>
      <Behavior canSkip="1">
        <Sequence>
          <VariableExistsGate VarToTest="$t_followNpcParams" VarIndexMode="Parents" FailSubtMissing="false" saveVersion="2">
            <Then canSkip="1">
              <VarOperation varName="$t_followNpcParams" targetVarName="$followNpcParams" operation="Copy" argument="" />
            </Then>
            <Else canSkip="1">
              <Success />
            </Else>
          </VariableExistsGate>
          <Parallel successMode="Any" failureMode="Any">
            <DisableMoveTransitions>
              <Loop count="-1">
                <Selector>
                  <Move stopWithinDistance="2.500000" stopDistanceVariation="0.000000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" destinationSpecification="$t_leader" destinationSpecification2="" destinationSpecification3="" speed="$speed" additionalParams="$addParams" pathFindingParams="$pathfind_params" staminaPolicy="" pathInfo="&apos;pathInfo&apos;" AnimationToPlay="" AnimationContext="" />
                  <Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                </Selector>
              </Loop>
            </DisableMoveTransitions>
            <Loop count="-1">
              <Sequence>
                <AtomicDecorator>
                  <Sequence>
                    <Switch>
                      <IfCondition failOnCondition="false" condition="$speed==&apos;Walk&apos;">
                        <Switch>
                          <IfCondition failOnCondition="false" condition="$pathInfo.distance&gt;$followNpcParams.walk2run">
                            <Expression expressions="$speed=&apos;Run&apos;" />
                          </IfCondition>
                          <IfCondition failOnCondition="false" condition="$pathInfo.distance&gt;$followNpcParams.walk2sprint">
                            <Expression expressions="$speed=&apos;Sprint&apos;" />
                          </IfCondition>
                          <DefaultBranch>
                            <Success />
                          </DefaultBranch>
                        </Switch>
                      </IfCondition>
                      <IfCondition failOnCondition="false" condition="$speed==&apos;Run&apos;">
                        <Switch>
                          <IfCondition failOnCondition="false" condition="$pathInfo.distance&lt;$followNpcParams.run2walk">
                            <Expression expressions="$speed=&apos;Walk&apos;" />
                          </IfCondition>
                          <IfCondition failOnCondition="false" condition="$pathInfo.distance&gt;$followNpcParams.run2sprint">
                            <Expression expressions="$speed=&apos;Sprint&apos;" />
                          </IfCondition>
                          <DefaultBranch>
                            <Success />
                          </DefaultBranch>
                        </Switch>
                      </IfCondition>
                      <IfCondition failOnCondition="false" condition="$speed==&apos;Sprint&apos;">
                        <Switch>
                          <IfCondition failOnCondition="false" condition="$pathInfo.distance&lt;$followNpcParams.sprint2walk">
                            <Expression expressions="$speed=&apos;Walk&apos;" />
                          </IfCondition>
                          <IfCondition failOnCondition="false" condition="$pathInfo.distance&lt;$followNpcParams.sprint2run">
                            <Expression expressions="$speed=&apos;Run&apos;" />
                          </IfCondition>
                          <DefaultBranch>
                            <Success />
                          </DefaultBranch>
                        </Switch>
                      </IfCondition>
                      <DefaultBranch>
                        <Success />
                      </DefaultBranch>
                    </Switch>
                    <VariableExistsGate VarToTest="$t_speedMap" VarIndexMode="All" FailSubtMissing="false" saveVersion="2">
                      <Then canSkip="1">
                        <VariableExistsGate VarToTest="$t_speedMap[$speed]" VarIndexMode="All" FailSubtMissing="false" saveVersion="2">
                          <Then canSkip="1">
                            <Expression expressions="$speed=$t_speedMap[$speed]" />
                          </Then>
                          <Else canSkip="1">
                            <Success />
                          </Else>
                        </VariableExistsGate>
                      </Then>
                      <Else canSkip="1">
                        <Success />
                      </Else>
                    </VariableExistsGate>
                  </Sequence>
                </AtomicDecorator>
                <Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
              </Sequence>
            </Loop>
          </Parallel>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="addParams" comment="" />
        <Variable name="followNpcParams" comment="" />
        <Variable name="pathInfo" comment="" />
        <Variable name="pathfind_params" comment="" />
        <Variable name="speed" comment="" />
        <Variable name="t_leader" comment="" />
      </Variables>
      <ForwardDeclarations>
        <Variable name="t_leader" type="wuid" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
      </ForwardDeclarations>
      <Root editorPosX="140" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Expression editorPosX="390" editorPosY="-310" hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Expression>
        </OnInit>
        <Behavior>
          <Sequence editorPosX="390" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <VariableExistsGate editorPosX="530" editorPosY="-230" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <VarOperation editorPosX="760" editorPosY="-230" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </VarOperation>
              </Then>
              <Else>
                <Success editorPosX="760" editorPosY="-130" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Success>
              </Else>
            </VariableExistsGate>
            <Parallel editorPosX="530" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <DisableMoveTransitions editorPosX="760" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Loop editorPosX="960" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Selector editorPosX="1110" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Move editorPosX="1260" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Move>
                    <Wait editorPosX="1260" editorPosY="240" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </Selector>
                </Loop>
              </DisableMoveTransitions>
              <Loop editorPosX="760" editorPosY="430" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence editorPosX="920" editorPosY="430" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <AtomicDecorator editorPosX="1080" editorPosY="430" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence editorPosX="1270" editorPosY="430" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Switch editorPosX="1420" editorPosY="430" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <IfCondition editorPosX="1560" editorPosY="430" hasInputBreakpoint="0" comment="Walk" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Switch editorPosX="1810" editorPosY="430" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <IfCondition editorPosX="1960" editorPosY="430" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <Expression editorPosX="2190" editorPosY="430" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Expression>
                            </IfCondition>
                            <IfCondition editorPosX="1960" editorPosY="510" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <Expression editorPosX="2190" editorPosY="510" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Expression>
                            </IfCondition>
                            <DefaultBranch>
                              <Success editorPosX="1820" editorPosY="510" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Success>
                            </DefaultBranch>
                          </Switch>
                        </IfCondition>
                        <IfCondition editorPosX="1560" editorPosY="670" hasInputBreakpoint="0" comment="Run" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Switch editorPosX="1810" editorPosY="670" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <IfCondition editorPosX="1960" editorPosY="670" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <Expression editorPosX="2190" editorPosY="670" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Expression>
                            </IfCondition>
                            <IfCondition editorPosX="1960" editorPosY="750" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <Expression editorPosX="2190" editorPosY="750" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Expression>
                            </IfCondition>
                            <DefaultBranch>
                              <Success editorPosX="1820" editorPosY="750" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Success>
                            </DefaultBranch>
                          </Switch>
                        </IfCondition>
                        <IfCondition editorPosX="1560" editorPosY="870" hasInputBreakpoint="0" comment="Sprint" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Switch editorPosX="1810" editorPosY="870" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <IfCondition editorPosX="1960" editorPosY="870" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <Expression editorPosX="2190" editorPosY="870" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Expression>
                            </IfCondition>
                            <IfCondition editorPosX="1960" editorPosY="950" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <Expression editorPosX="2190" editorPosY="950" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Expression>
                            </IfCondition>
                            <DefaultBranch>
                              <Success editorPosX="1820" editorPosY="950" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Success>
                            </DefaultBranch>
                          </Switch>
                        </IfCondition>
                        <DefaultBranch>
                          <Success editorPosX="1430" editorPosY="520" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Success>
                        </DefaultBranch>
                      </Switch>
                      <VariableExistsGate editorPosX="1430" editorPosY="1110" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                        <OutputBreakpoints />
                        <Then>
                          <VariableExistsGate editorPosX="1820" editorPosY="1110" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                            <OutputBreakpoints />
                            <Then>
                              <Expression editorPosX="2190" editorPosY="1110" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Expression>
                            </Then>
                            <Else>
                              <Success editorPosX="2190" editorPosY="1220" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Success>
                            </Else>
                          </VariableExistsGate>
                        </Then>
                        <Else>
                          <Success editorPosX="1640" editorPosY="1210" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Success>
                        </Else>
                      </VariableExistsGate>
                    </Sequence>
                  </AtomicDecorator>
                  <Wait editorPosX="1090" editorPosY="1210" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Wait>
                </Sequence>
              </Loop>
            </Parallel>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="getPlayerItemAmount">
    <Variables>
      <Variable name="inventory" type="wuid" values="" form="single" />
      <Variable name="item" type="wuid" values="" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Error" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false">
            <LinkTagFilter tag="&apos;inventory&apos;" prune="true" negprune="false" Parent="" Child="$inventory" Data="" />
          </GraphSearch>
          <Expression expressions="$item=$__null" />
          <GraphSearch Origin="$inventory" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false">
            <ItemClassFilter ClassId="$t_itemId" Category="" Source="Child" prune="true" negprune="false" Parent="" Child="$item" />
          </GraphSearch>
          <IfElseCondition failOnCondition="false" condition="$item~=$__null" saveVersion="2">
            <Then canSkip="1">
              <GetItemProperty itemId="$item" property="Amount" result="$t_itemAmount" />
            </Then>
            <Else canSkip="1">
              <Expression expressions="$t_itemAmount=0" />
            </Else>
          </IfElseCondition>
          <Expression expressions="$t_itemWUID=$item" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData>
      <Variables>
        <Variable name="inventory" comment="" />
        <Variable name="item" comment="" />
      </Variables>
      <ForwardDeclarations>
        <Variable name="t_itemAmount" type="_int" values="0" form="single" />
        <Variable name="t_itemId" type="_string" values="" form="single" />
        <Variable name="t_itemWUID" type="wuid" values="" form="single" />
      </ForwardDeclarations>
      <Root editorPosX="-20" editorPosY="10" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence editorPosX="210" editorPosY="10" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch editorPosX="340" editorPosY="-310" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter editorPosX="690" editorPosY="-310" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <Expression editorPosX="340" editorPosY="-80" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
            <GraphSearch editorPosX="340" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <ItemClassFilter editorPosX="690" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </ItemClassFilter>
            </GraphSearch>
            <IfElseCondition editorPosX="340" editorPosY="250" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <GetItemProperty editorPosX="560" editorPosY="250" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </GetItemProperty>
              </Then>
              <Else>
                <Expression editorPosX="560" editorPosY="340" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Else>
            </IfElseCondition>
            <Expression editorPosX="340" editorPosY="420" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="loadAllReferences" is_function="0">
    <Variables>
      <Variable name="iterator" type="wuid" values="" isPersistent="0" form="single" />
      <Variable name="loadAllReferences_params" type="loadAllReferences:params" values="" isPersistent="0" form="single" />
      <Variable name="value" type="_string" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <VariableExistsGate VarToTest="$t_loadAllReferences_params" VarIndexMode="All" FailSubtMissing="false" saveVersion="2">
            <Then canSkip="1">
              <Expression expressions="$loadAllReferences_params.origin=$t_loadAllReferences_params.origin" />
            </Then>
            <Else canSkip="1">
              <Expression expressions="$loadAllReferences_params.origin=$this.id" />
            </Else>
          </VariableExistsGate>
          <VariableExistsGate VarToTest="$t_assets" VarIndexMode="All" FailSubtMissing="false" saveVersion="2">
            <Then canSkip="1">
              <AtomicDecorator>
                <Sequence>
                  <VarOperation varName="$t_assets" targetVarName="" operation="Reinit" argument="" />
                  <GraphSearch Origin="$loadAllReferences_params.origin" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                    <LinkTagFilter tag="&apos;asset&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
                    <EvaLLyzer Expresion="$t_assets[$__link_asset]=$__to" Quantifiers="ForAll" saveVersion="2" />
                  </GraphSearch>
                </Sequence>
              </AtomicDecorator>
            </Then>
          </VariableExistsGate>
          <VariableExistsGate VarToTest="$t_locations" VarIndexMode="All" FailSubtMissing="false" saveVersion="2">
            <Then canSkip="1">
              <AtomicDecorator>
                <Sequence>
                  <VarOperation varName="$t_locations" targetVarName="" operation="Reinit" argument="" />
                  <GraphSearch Origin="$loadAllReferences_params.origin" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                    <LinkTagFilter tag="&apos;location&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
                    <EvaLLyzer Expresion="$t_locations[$__link_location]=$__to" Quantifiers="ForAll" saveVersion="2" />
                  </GraphSearch>
                </Sequence>
              </AtomicDecorator>
            </Then>
          </VariableExistsGate>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="iterator" comment="" />
        <Variable name="loadAllReferences_params" comment="" />
        <Variable name="value" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-280" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <VariableExistsGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Then>
              <Else>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Else>
            </VariableExistsGate>
            <VariableExistsGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </VarOperation>
                    <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </LinkTagFilter>
                      <EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                        <OutputBreakpoints />
                      </EvaLLyzer>
                    </GraphSearch>
                  </Sequence>
                </AtomicDecorator>
              </Then>
            </VariableExistsGate>
            <VariableExistsGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </VarOperation>
                    <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </LinkTagFilter>
                      <EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                        <OutputBreakpoints />
                      </EvaLLyzer>
                    </GraphSearch>
                  </Sequence>
                </AtomicDecorator>
              </Then>
            </VariableExistsGate>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="getMyQuestLocation" is_function="0">
    <Variables>
      <Variable name="questActorName" type="_string" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <WUIDFilter WUID="$this.id" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
            <LinkTagFilter tag="&apos;asset&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$questActorName" />
          </GraphSearch>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkDataFilter tag="&apos;location&apos;" condition="$__link_location.ctx == $t_locationContext &amp; $location.npc == $questActorName" prune="true" negprune="unknown" Parent="" Child="$t_destination" Data="" />
          </GraphSearch>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="questActorName" comment="" />
        <Variable name="t_destination" comment="" />
        <Variable name="t_locationContext" comment="" />
      </Variables>
      <ForwardDeclarations>
        <Variable name="t_destination" type="wuid" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
        <Variable name="t_locationContext" type="_string" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
      </ForwardDeclarations>
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </WUIDFilter>
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkDataFilter>
            </GraphSearch>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="getMyQuestName" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
          <WUIDFilter WUID="$this.id" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
          <LinkTagFilter tag="&apos;asset&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$t_assets" />
        </GraphSearch>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="t_assets" comment="" />
      </Variables>
      <ForwardDeclarations>
        <Variable name="t_assets" type="_string" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
      </ForwardDeclarations>
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </WUIDFilter>
            <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </LinkTagFilter>
          </GraphSearch>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="followNPC_inFormation" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <IfElseCondition failOnCondition="false" condition="$t_followFormationParams.formation.leader==$this.id" saveVersion="2">
          <Then canSkip="1">
            <IncludeTree File="&apos;quests/questutils.xml&apos;" Name="&apos;followNPC_leader&apos;" nodeLabel="65771819" />
          </Then>
          <Else canSkip="1">
            <IncludeTree File="&apos;quests/questutils.xml&apos;" Name="&apos;followNPC_slave&apos;" nodeLabel="15336198" />
          </Else>
        </IfElseCondition>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="t_followFormationParams" comment="" />
      </Variables>
      <ForwardDeclarations>
        <Variable name="t_followFormationParams" type="followFormationParams" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
      </ForwardDeclarations>
      <Root editorPosX="-110" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <IfElseCondition hasInputBreakpoint="0" comment="Is leader?" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Then>
              <IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </IncludeTree>
            </Then>
            <Else>
              <IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </IncludeTree>
            </Else>
          </IfElseCondition>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="followNPC_leader" is_function="0">
    <Variables>
      <Variable name="formationLock" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="formationName" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="formationWUID" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Sequence>
          <IfElseCondition failOnCondition="false" condition="$t_followFormationParams.formation.type==&apos;&apos;" saveVersion="2">
            <Then canSkip="1">
              <MakeFormation FormationName="&apos;followNPC&apos;" HandleVariable="$formationWUID" />
            </Then>
            <Else canSkip="1">
              <MakeFormation FormationName="$t_followFormationParams.formation.type" HandleVariable="$formationWUID" />
            </Else>
          </IfElseCondition>
        </Sequence>
      </OnInit>
      <Behavior canSkip="1">
        <FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
          <Child canSkip="1">
            <Sequence>
              <Concatenation OutString="$formationLock" Pattern="&apos;followNPC_leader_$this.id&apos;" />
              <SetExternalLock LockManagerType="Global" Locked="false" LockName="&apos;$formationLock&apos;" />
              <IfElseCondition failOnCondition="false" condition="$t_followFormationParams.leaderCallback.behavior~=&apos;&apos;" saveVersion="2">
                <Then canSkip="1">
                  <CallBehavior Target="$t_followFormationParams.leaderCallback.host" BehaviorName="$t_followFormationParams.leaderCallback.behavior" stopAfterFirstFound="true" ignoreDropUnloading="false" nodeLabel="61264244" />
                </Then>
                <Else canSkip="1">
                  <IncludeTree File="$t_followFormationParams.leaderCallback.file" Name="$t_followFormationParams.leaderCallback.tree" nodeLabel="93175514" />
                </Else>
              </IfElseCondition>
            </Sequence>
          </Child>
          <OnSuccess canSkip="1">
            <Sequence>
              <EndFormation FormationHandle="$formationWUID" />
              <SetExternalLock LockManagerType="Global" Locked="true" LockName="&apos;$formationLock&apos;" />
            </Sequence>
          </OnSuccess>
        </FuseBox>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="formationLock" comment="" />
        <Variable name="formationName" comment="" />
        <Variable name="formationWUID" comment="" />
        <Variable name="t_followFormationParams" comment="" />
      </Variables>
      <ForwardDeclarations>
        <Variable name="t_followFormationParams" type="followFormationParams" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
      </ForwardDeclarations>
      <Root editorPosX="-110" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <MakeFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </MakeFormation>
              </Then>
              <Else>
                <MakeFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </MakeFormation>
              </Else>
            </IfElseCondition>
          </Sequence>
        </OnInit>
        <Behavior>
          <FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Child>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Concatenation>
                <SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </SetExternalLock>
                <IfElseCondition hasInputBreakpoint="0" comment="What to do as a leader in formation?" breakpointFlags="0" saveVersion="2">
                  <OutputBreakpoints />
                  <Then>
                    <CallBehavior hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </CallBehavior>
                  </Then>
                  <Else>
                    <IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </IncludeTree>
                  </Else>
                </IfElseCondition>
              </Sequence>
            </Child>
            <OnSuccess>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <EndFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </EndFormation>
                <SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </SetExternalLock>
              </Sequence>
            </OnSuccess>
          </FuseBox>
        </Behavior>
      </Root>
      <Forest />
      <Comments>
        <Comment text="doCallback" posX="600" posY="180" width="440" height="247" resizeBorderWidth="440" resizeBorderHeight="220" color="0.65,0.65,0.65" author="" />
      </Comments>
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="followNPC_slave" is_function="0">
    <Variables>
      <Variable name="formationLock" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="formationWUID" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Concatenation OutString="$formationLock" Pattern="&apos;followNPC_leader_$t_followFormationParams.formation.leader&apos;" />
      </OnInit>
      <Behavior canSkip="1">
        <ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;10m&apos;" LockManagerType="Global" SemaphoreName="&apos;$formationLock&apos;" RunLogic="KeepRunning">
          <Sequence>
            <GetMemberFormation MemberWUID="$t_followFormationParams.formation.leader" FormationHandleOut="$formationWUID" />
            <IfCondition failOnCondition="true" condition="$formationWUID~=$__null">
              <FormationFollower FormationHandle="$formationWUID" PreferredPositions="$t_followFormationParams.formation.preferedPosition" FormationMode="$t_followFormationParams.formation.policy" AllowRelocation="$t_followFormationParams.formation.allowRelocation" />
            </IfCondition>
          </Sequence>
        </ExternalLock>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="formationLock" comment="" />
        <Variable name="formationWUID" comment="" />
        <Variable name="t_followFormationParams" comment="" />
      </Variables>
      <ForwardDeclarations>
        <Variable name="t_followFormationParams" type="followFormationParams" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
      </ForwardDeclarations>
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Concatenation>
        </OnInit>
        <Behavior>
          <ExternalLock hasInputBreakpoint="0" comment="Waiting for leader to create formation" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <GetMemberFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </GetMemberFormation>
              <IfCondition hasInputBreakpoint="0" comment="Formation already finished moving?" breakpointFlags="0">
                <OutputBreakpoints />
                <FormationFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </FormationFollower>
              </IfCondition>
            </Sequence>
          </ExternalLock>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="watchPlayer" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="&apos;1s&apos;" skipInLOD="false" />
          <Turn target="$__player" destinationType="FromVariable" align="false" stopWithinAngle="0.000000" randomMinAngle="0.000000" randomMaxAngle="0.000000" randomTurnRightChance="0.000000" stopRunninganimation="false" allowInstantSuccess="true" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root editorPosX="200" editorPosY="-10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
            <Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Turn>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>