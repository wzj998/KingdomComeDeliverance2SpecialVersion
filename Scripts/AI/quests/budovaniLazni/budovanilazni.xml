<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="girls_chatOnCarriage" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Wait>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="girls_waitForTrip" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Wait>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="girls_getOnCarriage" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Wait>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="wait" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Wait>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="citizen_waitForPlayer" is_function="0">
    <Variables>
      <Variable name="spot" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
          <LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;obcanSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$spot" Data="" />
        </GraphSearch>
      </OnInit>
      <Behavior canSkip="1">
        <Sequence>
          <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" destinationSpecification="$spot" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
          <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="spot" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-330" editorPosY="20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </LinkDataFilter>
          </GraphSearch>
        </OnInit>
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Move>
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="beta_talkingToCouncilor" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Wait>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="councilor_talkingToBeta" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Wait>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="councilor_waits" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Wait>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="councilor_startsTour" is_function="0">
    <Variables />
    <Parameters>
      <Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
          <Callback_empty EventName="&apos;OnFinished&apos;" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="goto" EventSet="endNotification">
      <Variables>
        <Variable name="tagpoint" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Move>
            <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Callback_empty>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="councilor_toursBathhouse" is_function="0">
    <Variables />
    <Parameters>
      <Variable name="monologueAlias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
          <Function_speech_monolog alias="$monologueAlias" canBeDelayed="false" context="" dramaticBark="false" lookAtId="" metarole="" target="" wait="true" nodeLabel="95862266" />
          <Callback_empty EventName="&apos;OnFinished&apos;" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="gotoAndBark" EventSet="endNotification">
      <Variables>
        <Variable name="monologueAlias" comment="" />
        <Variable name="tagpoint" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Move>
            <Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Function_speech_monolog>
            <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Callback_empty>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="zizka_waitForPlayer" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Wait duration="&apos;20s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Wait>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="krtek_waitForPlayer" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Wait duration="&apos;20s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Wait>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="jehoBracha_waitForPlayer" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Wait duration="&apos;20s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Wait>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="krtek_dontRideMyHorse" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <ExecuteLua code="local horse = XGenAIModule.GetEntityByWUID(entity.this.id) &#10;horse:SetMountableByPlayer(false)" />
          <Callback_empty EventName="&apos;OnFinished&apos;" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="empty" EventSet="endNotification">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </ExecuteLua>
            <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Callback_empty>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="jehoBracha_dontRideMyHorse" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <ExecuteLua code="local horse = XGenAIModule.GetEntityByWUID(entity.this.id) &#10;horse:SetMountableByPlayer(false)" />
          <Callback_empty EventName="&apos;OnFinished&apos;" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="empty" EventSet="endNotification">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </ExecuteLua>
            <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Callback_empty>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="councilor_toursBathhouse_wait" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Wait>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="_39,waitOnSpot" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="waitOnSpot" is_function="0">
    <Variables />
    <Parameters>
      <Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="doorClosing" type="enum:movementDoorClosingPolicy" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <DistanceCondition Origin="$this.id" ReferencePt="$data" Low="1.000000" High="1.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
            <MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="$doorClosing">
              <ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
            </MoveParamsDecorator>
          </DistanceCondition>
          <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="budovaniLazni_waitOnSpot" EventSet="">
      <Variables>
        <Variable name="data" comment="" />
        <Variable name="doorClosing" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </ExactMove>
              </MoveParamsDecorator>
            </DistanceCondition>
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="polner_sawMessNotification" is_function="0">
    <Variables>
      <Variable name="body" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="drunkardSeen" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="drunkards" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="guidOfSeenItem" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="keyOut" type="_int" values="" isPersistent="0" form="single" />
      <Variable name="perceptionInfo" type="perceptionInfo" values="" isPersistent="0" form="single" />
      <Variable name="seenItem" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="seenType" type="_string" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Parallel successMode="Any" failureMode="Any">
          <Loop count="-1">
            <ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$perceptionInfo" senderInfo="" inbox="&apos;perceptionInfo&apos;" condition="" answerVar="">
              <Sequence>
                <GetType WUID="$perceptionInfo.perceptible" OutString="$seenType" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
                <IfCondition failOnCondition="false" condition="$seenType == &apos;ITM&apos;">
                  <Sequence>
                    <GetItemProperty itemId="$perceptionInfo.perceptible" property="Guid" result="$guidOfSeenItem" />
                    <Selector>
                      <Switch>
                        <IfCondition failOnCondition="false" condition="$guidOfSeenItem == &apos;060b67f3-1d01-4bc3-ad19-d51f39cb50bc&apos;">
                          <Fail />
                        </IfCondition>
                        <IfCondition failOnCondition="false" condition="$guidOfSeenItem == &apos;24425968-42ff-4d92-8752-2a5fa6eebf20&apos;">
                          <Fail />
                        </IfCondition>
                        <IfCondition failOnCondition="false" condition="$guidOfSeenItem == &apos;3b7dd2f0-6a48-4fbd-807c-7f110110a7db&apos;">
                          <Fail />
                        </IfCondition>
                        <IfCondition failOnCondition="false" condition="$guidOfSeenItem == &apos;ef36d745-0626-4faf-beee-b36f56cd08c6&apos;">
                          <Fail />
                        </IfCondition>
                        <IfCondition failOnCondition="false" condition="$guidOfSeenItem == &apos;fb42f996-b1a5-4ecb-a801-a5604616611c&apos;">
                          <Fail />
                        </IfCondition>
                        <IfCondition failOnCondition="false" condition="$guidOfSeenItem == &apos;ffcc5e56-e448-48e0-b33d-8210e9431478&apos;">
                          <Fail />
                        </IfCondition>
                        <DefaultBranch>
                          <Success />
                        </DefaultBranch>
                      </Switch>
                      <SendAIConceptSignal_budovaniLazni_npcSawItem />
                    </Selector>
                  </Sequence>
                </IfCondition>
              </Sequence>
            </ProcessMessage>
          </Loop>
          <Sequence>
            <GraphSearch Origin="$QSO" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;drunkard&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
              <LinkTagFilter tag="&apos;drunkard&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
              <Nodalyzer Quantifiers="ForAll" Parent="" Child="$drunkards" saveVersion="2" />
            </GraphSearch>
            <Loop count="-1">
              <Sequence>
                <ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$perceptionInfo" senderInfo="" inbox="&apos;perceptionInfo&apos;" condition="" answerVar="">
                  <IfCondition failOnCondition="false" condition="($perceptionInfo.threshold == 1 | &#10;$perceptionInfo.threshold == 0.001 | &#10;$perceptionInfo.threshold == 0) &amp; &#10;$perceptionInfo.isInsideRecognitionBorder == true">
                    <SuppressFailure>
                      <Sequence>
                        <IfElseCondition failOnCondition="false" condition="$perceptionInfo.perceptible == $__player" saveVersion="2">
                          <Then canSkip="1">
                            <Sequence>
                              <GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                                <LinkTagFilter tag="&apos;carriedBody&apos;" prune="true" negprune="unknown" Parent="" Child="$body" Data="" />
                              </GraphSearch>
                              <FindInArray array="$drunkards" keyOut="$keyOut" condition="$__value == $body" />
                            </Sequence>
                          </Then>
                          <Else canSkip="1">
                            <Sequence>
                              <FindInArray array="$drunkards" keyOut="$keyOut" condition="$__value == $perceptionInfo.perceptible" />
                              <GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                                <LinkTagFilter tag="&apos;carriedBody&apos;" prune="true" negprune="unknown" Parent="" Child="$body" Data="" />
                              </GraphSearch>
                              <IfCondition failOnCondition="true" condition="$body == $perceptionInfo.perceptible">
                                <Success />
                              </IfCondition>
                            </Sequence>
                          </Else>
                        </IfElseCondition>
                        <Expression expressions="$drunkardSeen = true" />
                        <SendAIConceptSignal_budovaniLazni_npcSawDrunkard />
                      </Sequence>
                    </SuppressFailure>
                  </IfCondition>
                </ProcessMessage>
                <IfCondition failOnCondition="false" condition="$drunkardSeen">
                  <Sequence>
                    <Wait duration="&apos;20s&apos;" timeType="GameTime" doFail="false" variation="" />
                    <Expression expressions="$drunkardSeen = false" />
                  </Sequence>
                </IfCondition>
              </Sequence>
            </Loop>
          </Sequence>
        </Parallel>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="body" comment="" />
        <Variable name="drunkardSeen" comment="" />
        <Variable name="drunkards" comment="" />
        <Variable name="guidOfSeenItem" comment="" />
        <Variable name="keyOut" comment="" />
        <Variable name="perceptionInfo" comment="" />
        <Variable name="seenItem" comment="" />
        <Variable name="seenType" comment="" />
        <Variable name="QSO" comment="" />
      </Variables>
      <ForwardDeclarations>
        <Variable name="QSO" type="_wuid" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
      </ForwardDeclarations>
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </GetType>
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <GetItemProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </GetItemProperty>
                      <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <IfCondition hasInputBreakpoint="0" comment="budovaniLazni_slippers" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Fail>
                          </IfCondition>
                          <IfCondition hasInputBreakpoint="0" comment="budovaniLazni_hood" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Fail>
                          </IfCondition>
                          <IfCondition hasInputBreakpoint="0" comment="budovaniLazni_womensChemise" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Fail>
                          </IfCondition>
                          <IfCondition hasInputBreakpoint="0" comment="budovaniLazni_mensShirt" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Fail>
                          </IfCondition>
                          <IfCondition hasInputBreakpoint="0" comment="budovaniLazni_miparti" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Fail>
                          </IfCondition>
                          <IfCondition hasInputBreakpoint="0" comment="budovaniLazni_mug" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Fail>
                          </IfCondition>
                          <DefaultBranch>
                            <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Success>
                          </DefaultBranch>
                        </Switch>
                        <SendAIConceptSignal_budovaniLazni_npcSawItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </SendAIConceptSignal_budovaniLazni_npcSawItem>
                      </Selector>
                    </Sequence>
                  </IfCondition>
                </Sequence>
              </ProcessMessage>
            </Loop>
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </LinkTagFilter>
                <Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                  <OutputBreakpoints />
                </Nodalyzer>
              </GraphSearch>
              <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                            <OutputBreakpoints />
                            <Then>
                              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                                <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                  <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                    <OutputBreakpoints />
                                  </LinkTagFilter>
                                </GraphSearch>
                                <FindInArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </FindInArray>
                              </Sequence>
                            </Then>
                            <Else>
                              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                                <FindInArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </FindInArray>
                                <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                  <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                    <OutputBreakpoints />
                                  </LinkTagFilter>
                                </GraphSearch>
                                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                  <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                    <OutputBreakpoints />
                                  </Success>
                                </IfCondition>
                              </Sequence>
                            </Else>
                          </IfElseCondition>
                          <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Expression>
                          <SendAIConceptSignal_budovaniLazni_npcSawDrunkard hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </SendAIConceptSignal_budovaniLazni_npcSawDrunkard>
                        </Sequence>
                      </SuppressFailure>
                    </IfCondition>
                  </ProcessMessage>
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Wait>
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                    </Sequence>
                  </IfCondition>
                </Sequence>
              </Loop>
            </Sequence>
          </Parallel>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="waitOnSpot_lookAtTarget" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <DistanceCondition Origin="$this.id" ReferencePt="$data" Low="1.000000" High="1.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
            <ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
          </DistanceCondition>
          <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </ExactMove>
            </DistanceCondition>
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="lookAtTargetOnSpot" is_function="0">
    <Variables />
    <Parameters>
      <Variable name="spot" type="_wuid" values="" isPersistent="0" form="single" requirementType="ConstReference" />
      <Variable name="target" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <ForceLook LookTarget="$target" DisableVariations="true">
          <MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
            <Sequence>
              <DistanceCondition Origin="$this.id" ReferencePt="$spot" Low="1.000000" High="1.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
                <ExactMove directionType="AlignWithEntity" directionSpecification="$spot" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$spot" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
              </DistanceCondition>
              <Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
            </Sequence>
          </MoveParamsDecorator>
        </ForceLook>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="budovaniLazni_lookAtTargetOnSpot" EventSet="">
      <Variables>
        <Variable name="spot" comment="" />
        <Variable name="target" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </ExactMove>
                </DistanceCondition>
                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Wait>
              </Sequence>
            </MoveParamsDecorator>
          </ForceLook>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="mountCart" is_function="0">
    <Variables />
    <Parameters>
      <Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <CartStanceElement smartObject="$data" cartslot="driver">
          <Sequence>
            <WaitAction />
            <Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
          </Sequence>
        </CartStanceElement>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="wuidData" EventSet="">
      <Variables>
        <Variable name="data" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <CartStanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </WaitAction>
              <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Wait>
            </Sequence>
          </CartStanceElement>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="waitOnCart" is_function="0">
    <Variables>
      <Variable name="cartSlot" type="enum:cartSlotRequest" values="enum:cartSlotRequest.any" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="cart" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="isDriver" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <IfCondition failOnCondition="false" condition="$isDriver">
            <Expression expressions="$cartSlot = $enum:cartSlotRequest.driver" />
          </IfCondition>
          <CartStanceElement smartObject="$cart" cartslot="$cartSlot">
            <Sequence>
              <WaitAction />
              <Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
            </Sequence>
          </CartStanceElement>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="budovaniLazni_waitOnCart" EventSet="">
      <Variables>
        <Variable name="cartSlot" comment="" />
        <Variable name="cart" comment="" />
        <Variable name="isDriver" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <CartStanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </WaitAction>
                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Wait>
              </Sequence>
            </CartStanceElement>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="bathmaid_polylog" is_function="0">
    <Variables>
      <Variable name="amInitiator" type="_bool" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="alias" type="_string" values="nebakovPruzkum_kapitanStraziAHracKostek" isPersistent="0" form="single" requirementType="In" />
      <Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <StanceElement smartObject="$__resource.id" stance="sitting" allowAny="false" enabled="true">
          <Sequence>
            <WaitAction />
            <IfCondition failOnCondition="false" condition="$participants[0] == $this.id">
              <Expression expressions="$amInitiator = true" />
            </IfCondition>
            <DistanceGate Origin="$__player" ReferencePt="$this.id" Low="15.000000" High="15.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
              <SuppressFailure>
                <Function_speech_schedulerPolylog alias="$alias" amIInitiator="$amInitiator" animationApproach="$enum:animationApproach.ingameDialogPoseAndAnimations" areaForPlayer="" npcs="$participants" nodeLabel="23613639" />
              </SuppressFailure>
            </DistanceGate>
          </Sequence>
        </StanceElement>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="wuidArray_string" EventSet="">
      <Variables>
        <Variable name="amInitiator" comment="" />
        <Variable name="alias" comment="" />
        <Variable name="participants" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </WaitAction>
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </IfCondition>
              <DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Function_speech_schedulerPolylog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Function_speech_schedulerPolylog>
                </SuppressFailure>
              </DistanceGate>
            </Sequence>
          </StanceElement>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="followBathmaids" is_function="0">
    <Variables>
      <Variable name="bathmaid" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="it" type="_int" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="wuidArray" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <ForEach startIndex="0" step="1" array="$wuidArray" iterator="" value="$bathmaid" break="">
          <IsDeadCheck SoulWUID="$bathmaid" FailSubtMissing="false" saveVersion="2">
            <Then canSkip="1">
              <Success />
            </Then>
            <Else canSkip="1">
              <Parallel successMode="Any" failureMode="Any">
                <Function_followNpc leader="$bathmaid" run2sprint="30.000000" run2walk="10.000000" sprint2run="20.000000" sprint2walk="10.000000" startDistance="5.000000" stopDistance="2.500000" walk2run="20.000000" walk2sprint="30.000000" nodeLabel="46861138" />
                <DeadUnconsciousGate Who="$bathmaid" State="Dead" Negation="false" RunLogic="KeepRunning">
                  <Success />
                </DeadUnconsciousGate>
              </Parallel>
            </Else>
          </IsDeadCheck>
        </ForEach>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="wuidArray" EventSet="">
      <Variables>
        <Variable name="bathmaid" comment="" />
        <Variable name="it" comment="" />
        <Variable name="wuidArray" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Success>
              </Then>
              <Else>
                <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Function_followNpc hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Function_followNpc>
                  <DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Success>
                  </DeadUnconsciousGate>
                </Parallel>
              </Else>
            </IsDeadCheck>
          </ForEach>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="fleeFromEvent" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="bathmaid_duringAmbush" is_function="0">
    <Variables />
    <Parameters>
      <Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <ExactMove directionType="AlignWithEntity" directionSpecification="$wuid" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
          <Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="&apos;5s&apos;" skipInLOD="false" />
          <SuppressFailure>
            <Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;2s&apos;" LockManagerType="Local" SemaphoreName="&apos;budovaniLazni_bathmaidDuringAmbush&apos;">
              <Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="62951824" />
            </Semaphore>
          </SuppressFailure>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="wuidData_string" EventSet="">
      <Variables>
        <Variable name="string" comment="" />
        <Variable name="wuid" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="20" editorPosY="-80" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </ExactMove>
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
            <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Function_speech_schedulerMonolog>
              </Semaphore>
            </SuppressFailure>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="bathmaid_cleaningTable" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <AnimationAction fragment="&apos;Bartender_CleaningTable&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </AnimationAction>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="drunkad_lyingUnconscious" is_function="0">
    <Variables />
    <Parameters>
      <Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <AddBuffElement Buff="&apos;cbbedb16-8ab8-4583-b740-a0e8a2521d95&apos;" enabled="true">
          <Sequence>
            <UnstanceAction unstance="$string" locationObject="$wuid" slaveObject="" />
            <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
          </Sequence>
        </AddBuffElement>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="wuidData_string" EventSet="">
      <Variables>
        <Variable name="string" comment="" />
        <Variable name="wuid" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <AddBuffElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </UnstanceAction>
              <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Wait>
            </Sequence>
          </AddBuffElement>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="drunkard_overrideStimulusHit" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <AddBuff SoulWUID="$this.id" BuffGUID="&apos;c75aa0db-65ca-44d7-9001-e4b6d38c6875&apos;" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </AddBuff>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="polner_sawCarriedDrunkard" is_function="0">
    <Variables>
      <Variable name="perceptionInfo" type="perceptionInfo" values="" isPersistent="0" form="single" />
      <Variable name="seenType" type="_string" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Loop count="-1">
          <ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$perceptionInfo" senderInfo="" inbox="&apos;perceptionInfo&apos;" condition="" answerVar="">
            <IfCondition failOnCondition="false" condition="$perceptionInfo.perceptible == $__player &amp; &#10;$perceptionInfo.threshold == 1">
              <HasPerceivableState PerceivableState="&apos;carriedBody&apos;" PerceivedWUID="$__player" PerceptorWUID="" FailSubtMissing="false" saveVersion="2">
                <Then canSkip="1">
                  <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
                </Then>
              </HasPerceivableState>
            </IfCondition>
          </ProcessMessage>
        </Loop>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="perceptionInfo" comment="" />
        <Variable name="seenType" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <HasPerceivableState hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                  <OutputBreakpoints />
                  <Then>
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </Then>
                </HasPerceivableState>
              </IfCondition>
            </ProcessMessage>
          </Loop>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="bathmaid_polylogOnCart" is_function="0">
    <Variables>
      <Variable name="initiator" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="receiver" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="$QSO" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;receiver&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;receiver&apos;" prune="true" negprune="unknown" Parent="" Child="$receiver" Data="" />
          </GraphSearch>
          <GraphSearch Origin="$QSO" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;initiator&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;initiator&apos;" prune="true" negprune="unknown" Parent="" Child="$initiator" Data="" />
          </GraphSearch>
          <PushToArray array="$participants" value="$__player" direction="Back" />
          <PushToArray array="$participants" value="$initiator" direction="Back" />
          <PushToArray array="$participants" value="$receiver" direction="Back" />
          <IfElseCondition failOnCondition="false" condition="$initiator == $this.id" saveVersion="2">
            <Then canSkip="1">
              <FuseBox StatusPropagation="Success" OneCleanup="true" saveVersion="2">
                <Child canSkip="1">
                  <Function_speech_polylogInitiator alias="&apos;budovaniLazni_chatNaVozeSHolkama&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" participants="$participants" participantsMetaroles="" preset="$enum:dialogPreset.chat" nodeLabel="98182519" />
                </Child>
                <OnSuccess canSkip="1">
                  <SendAIConceptSignal_budovaniLazni_polylogOnCartEnded />
                </OnSuccess>
              </FuseBox>
            </Then>
            <Else canSkip="1">
              <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
            </Else>
          </IfElseCondition>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="initiator" comment="" />
        <Variable name="participants" comment="" />
        <Variable name="receiver" comment="" />
        <Variable name="QSO" comment="" />
      </Variables>
      <ForwardDeclarations>
        <Variable name="QSO" type="_wuid" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
      </ForwardDeclarations>
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </PushToArray>
            <PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </PushToArray>
            <PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </PushToArray>
            <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                  <OutputBreakpoints />
                  <Child>
                    <Function_speech_polylogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Function_speech_polylogInitiator>
                  </Child>
                  <OnSuccess>
                    <SendAIConceptSignal_budovaniLazni_polylogOnCartEnded hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </SendAIConceptSignal_budovaniLazni_polylogOnCartEnded>
                  </OnSuccess>
                </FuseBox>
              </Then>
              <Else>
                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Wait>
              </Else>
            </IfElseCondition>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>