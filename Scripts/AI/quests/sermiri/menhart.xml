<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="menhart_firstChallenge" is_function="0">
		<Variables>
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="point" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;menhart_firstPoint&apos;" prune="true" negprune="unknown" Parent="" Child="$point" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<DistanceCondition Origin="$this.id" ReferencePt="$point" Low="5.000000" High="5.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="5.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$point" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					</DistanceCondition>
					<EntityContextElement context="sermiri_menhartFirstConfrontation" enabled="true">
						<Loop count="-1">
							<Sequence>
								<RandomGate opensWithChance="0.500000" saveVersion="2">
									<Then canSkip="1">
										<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
											</Search>
											<Exec canSkip="1">
												<UnstanceAction unstance="sermiri_showOff" locationObject="$point" slaveObject="" />
											</Exec>
										</HandContentElement>
									</Then>
									<Else canSkip="1">
										<UnstanceAction unstance="sermiri_showOff_withoutWeapon" locationObject="$point" slaveObject="" />
									</Else>
								</RandomGate>
								<SuppressFailure>
									<Function_speech_schedulerMonolog alias="&apos;sermiri_menhartFirstChallenge&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="67575529" />
								</SuppressFailure>
								<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</Loop>
					</EntityContextElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="leftHand" comment="" />
				<Variable name="point" comment="" />
				<Variable name="rightHand" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
						</DistanceCondition>
						<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetWeaponsFromWeaponSet>
												</Search>
												<Exec>
													<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</UnstanceAction>
												</Exec>
											</HandContentElement>
										</Then>
										<Else>
											<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</UnstanceAction>
										</Else>
									</RandomGate>
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_schedulerMonolog>
									</SuppressFailure>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Loop>
						</EntityContextElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="menhart_prepareForFight" is_function="0">
		<Variables>
			<Variable name="sword" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__player" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<ItemClassFilter ClassId="&apos;8468933a-7d6b-4cf9-92f0-af5874d40a9b&apos;" Category="" Source="Child" prune="true" negprune="unknown" Parent="" Child="$sword" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<EquipItem item="$sword" Target="$__player" />
					<DrawAction WeaponSet="Primary" fullBody="false" tags="" useSelectedWeaponSet="false" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="empty" EventSet="endNotification">
			<Variables>
				<Variable name="sword" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ItemClassFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</EquipItem>
						<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</DrawAction>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="menhart_trainingFight" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Turn target="$__player" align="false" />
					<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="endNotification">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Turn>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="menhart_afterFight" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Turn target="$__player" align="false" />
					<Function_speech_monolog alias="&apos;sermiri_firstFightMenhart_menhart&apos;" canBeDelayed="false" context="$__null" important="false" lookAtId="$__null" metarole="" target="$this.id" wait="true" nodeLabel="20029816" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="empty" EventSet="endNotification">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Turn>
						<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_monolog>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="menhart_commnetFight" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="menhart_commentFight" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="1.000000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Turn target="$__player" align="false" />
					<Function_speech_monolog alias="&apos;sermiri_menhartCommentFight&apos;" canBeDelayed="true" context="" important="false" lookAtId="$__null" metarole="" target="$this.id" wait="true" nodeLabel="41282014" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Turn>
						<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_monolog>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="menhart_trainingHenry" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Sequence>
						<Turn target="$__player" align="false" />
						<Function_speech_dialogInitiator alias="&apos;sermiri_prijetiArneFightChat&apos;" context="$__null" customParameters="$__null" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" nodeLabel="28456467" />
					</Sequence>
					<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="5.000000" High="5.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</DistanceGate>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="empty" EventSet="endNotification">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="-30" editorPosY="20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Turn>
							<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_dialogInitiator>
						</Sequence>
						<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</DistanceGate>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="menhart_goOutOfKkut" is_function="0">
		<Variables>
			<Variable name="arne" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="formation" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="message" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="point" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;outOfKkutPoint&apos;" prune="true" negprune="unknown" Parent="" Child="$point" Data="" />
							</GraphSearch>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;arne&apos;" prune="true" negprune="unknown" Parent="" Child="$arne" Data="" />
							</GraphSearch>
							<MakeFormation FormationName="&apos;sermiri_arneHorse&apos;" HandleVariable="$formation" />
							<Parallel successMode="Any" failureMode="Any">
								<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;sermiri_goOutOfKkut&apos;" RunLogic="KeepRunning">
									<Sequence>
										<InstantSendMessageToNPC target="$arne" variable="$formation" />
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</Synchronize>
								<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
									<Selector>
										<HorseUsageElement horse="$horse" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
													<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<IsHorseAvailableFilter reservationHolder="" Source="Child" prune="true" negprune="unknown" Parent="" Child="$horse" />
												</GraphSearch>
											</Search>
											<Exec canSkip="1">
												<IsUnconsciousCheck SoulWUID="$horse" FailSubtMissing="false" saveVersion="2">
													<Then canSkip="1">
														<Fail />
													</Then>
													<Else canSkip="1">
														<StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
															<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$point" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
														</StanceElement>
													</Else>
												</IsUnconsciousCheck>
											</Exec>
										</HorseUsageElement>
										<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$point" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									</Selector>
								</MoveParamsDecorator>
							</Parallel>
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</Child>
					<OnSuccess canSkip="1">
						<EndFormation FormationHandle="$formation" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer>
			<DistanceGate Origin="$this.id" ReferencePt="$point" Low="80.000000" High="80.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
				<Sequence>
					<ChangeFormation NewName="&apos;sermiri_arneHorse&apos;" Formation="$formation" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</DistanceGate>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="arne" comment="" />
				<Variable name="formation" comment="" />
				<Variable name="horse" comment="" />
				<Variable name="message" comment="" />
				<Variable name="point" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<MakeFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</MakeFormation>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</InstantSendMessageToNPC>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</Synchronize>
									<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<HorseUsageElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
														<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</SoulIsAliveFilter>
														<IsHorseAvailableFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</IsHorseAvailableFilter>
													</GraphSearch>
												</Search>
												<Exec>
													<IsUnconsciousCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Fail>
														</Then>
														<Else>
															<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Move>
															</StanceElement>
														</Else>
													</IsUnconsciousCheck>
												</Exec>
											</HorseUsageElement>
											<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Move>
										</Selector>
									</MoveParamsDecorator>
								</Parallel>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Child>
						<OnSuccess>
							<EndFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</EndFormation>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest>
				<DistanceGate editorPosX="880" editorPosY="680" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ChangeFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ChangeFormation>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</DistanceGate>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="arne_goOutOfKkut" is_function="0">
		<Variables>
			<Variable name="formation" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="menhart" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="point" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tavernKkut" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;outOfKkutPoint&apos;" prune="true" negprune="unknown" Parent="" Child="$point" Data="" />
					</GraphSearch>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;menhart&apos;" prune="true" negprune="unknown" Parent="" Child="$menhart" Data="" />
					</GraphSearch>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernKkut&apos;" prune="true" negprune="unknown" Parent="" Child="$tavernKkut" Data="" />
					</GraphSearch>
					<Parallel successMode="Any" failureMode="Any">
						<Loop count="-1">
							<EntityContext context="FollowableNPCCenter" target="">
								<IfElseCondition failOnCondition="false" condition="$formation == $__null" saveVersion="2">
									<Then canSkip="1">
										<IfGate atomic="false" condition="$formation == $__null" RunLogic="Halt">
											<Selector>
												<HorseUsageElement horse="$horse" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
													<Search canSkip="1">
														<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
															<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
															<IsHorseAvailableFilter reservationHolder="" Source="Child" prune="true" negprune="unknown" Parent="" Child="$horse" />
														</GraphSearch>
													</Search>
													<Exec canSkip="1">
														<IsUnconsciousCheck SoulWUID="$horse" FailSubtMissing="false" saveVersion="2">
															<Then canSkip="1">
																<Fail />
															</Then>
															<Else canSkip="1">
																<StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
																	<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$point" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
																</StanceElement>
															</Else>
														</IsUnconsciousCheck>
													</Exec>
												</HorseUsageElement>
												<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$point" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
											</Selector>
										</IfGate>
									</Then>
									<Else canSkip="1">
										<Selector>
											<HorseUsageElement horse="$horse" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
												<Search canSkip="1">
													<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
														<LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
														<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
														<IsHorseAvailableFilter reservationHolder="" Source="Child" prune="true" negprune="unknown" Parent="" Child="$horse" />
													</GraphSearch>
												</Search>
												<Exec canSkip="1">
													<IsUnconsciousCheck SoulWUID="$horse" FailSubtMissing="false" saveVersion="2">
														<Then canSkip="1">
															<Fail />
														</Then>
														<Else canSkip="1">
															<StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
																<Sequence>
																	<WaitAction />
																	<DistanceCondition Origin="$this.id" ReferencePt="$tavernKkut" Low="5.000000" High="4000.000000" Negation="false" ValueOnMiddle="false" failOnCondition="false">
																		<StanceBarrier soul="$menhart" stance="horse" smartObject="" negate="false" failOnCondition="false" RunLogic="KeepRunning">
																			<DistanceCondition Origin="$this.id" ReferencePt="$menhart" Low="3.000000" High="4000.000000" Negation="false" ValueOnMiddle="false" failOnCondition="false">
																				<Wait duration="&apos;6s&apos;" timeType="GameTime" doFail="false" variation="" />
																			</DistanceCondition>
																		</StanceBarrier>
																	</DistanceCondition>
																	<FormationFollower FormationHandle="$formation" PreferredPositions="" FormationMode="MoveHistory" AllowRelocation="false" />
																</Sequence>
															</StanceElement>
														</Else>
													</IsUnconsciousCheck>
												</Exec>
											</HorseUsageElement>
											<FormationFollower FormationHandle="$formation" PreferredPositions="" FormationMode="MoveHistory" AllowRelocation="false" />
										</Selector>
									</Else>
								</IfElseCondition>
							</EntityContext>
						</Loop>
						<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;sermiri_goOutOfKkut&apos;" RunLogic="KeepRunning">
							<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$formation" senderInfo="" inbox="&apos;battle_formationSetup&apos;" condition="" answerVar="">
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</ProcessMessage>
						</Synchronize>
					</Parallel>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="formation" comment="" />
				<Variable name="horse" comment="" />
				<Variable name="menhart" comment="" />
				<Variable name="point" comment="" />
				<Variable name="tavernKkut" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<HorseUsageElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Search>
															<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
																<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</SoulIsAliveFilter>
																<IsHorseAvailableFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</IsHorseAvailableFilter>
															</GraphSearch>
														</Search>
														<Exec>
															<IsUnconsciousCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Fail>
																</Then>
																<Else>
																	<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Move>
																	</StanceElement>
																</Else>
															</IsUnconsciousCheck>
														</Exec>
													</HorseUsageElement>
													<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Move>
												</Selector>
											</IfGate>
										</Then>
										<Else>
											<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<HorseUsageElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Search>
														<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</LinkTagFilter>
															<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</SoulIsAliveFilter>
															<IsHorseAvailableFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</IsHorseAvailableFilter>
														</GraphSearch>
													</Search>
													<Exec>
														<IsUnconsciousCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Fail>
															</Then>
															<Else>
																<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</WaitAction>
																		<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<StanceBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Wait>
																				</DistanceCondition>
																			</StanceBarrier>
																		</DistanceCondition>
																		<FormationFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</FormationFollower>
																	</Sequence>
																</StanceElement>
															</Else>
														</IsUnconsciousCheck>
													</Exec>
												</HorseUsageElement>
												<FormationFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</FormationFollower>
											</Selector>
										</Else>
									</IfElseCondition>
								</EntityContext>
							</Loop>
							<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</ProcessMessage>
							</Synchronize>
						</Parallel>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="menhart_crimeCheck" is_function="0">
		<Variables>
			<Variable name="crimeFound" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="information" type="information" values="" isPersistent="0" form="array" />
			<Variable name="information_val" type="information" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="souls" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<AtomicDecorator>
						<Sequence>
							<GetKnownInformationsFromGroup OutArray="$information" Holders="$souls" />
							<ForEach startIndex="0" step="1" array="$information" iterator="" value="$information_val" break="$crimeFound">
								<IfCondition failOnCondition="false" condition="$data:crime[$information_val.label].isCrime">
									<Sequence>
										<Expression expressions="$crimeFound = true" />
										<InstantCallback_empty EventName="&apos;CrimeFound&apos;" />
									</Sequence>
								</IfCondition>
							</ForEach>
							<IfCondition failOnCondition="false" condition="~$crimeFound">
								<InstantCallback_empty EventName="&apos;CrimeNotFound&apos;" />
							</IfCondition>
						</Sequence>
					</AtomicDecorator>
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="sermiri_souls" EventSet="sermiri_crimeCheck">
			<Variables>
				<Variable name="crimeFound" comment="" />
				<Variable name="information" comment="" />
				<Variable name="information_val" comment="" />
				<Variable name="souls" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GetKnownInformationsFromGroup hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetKnownInformationsFromGroup>
								<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</InstantCallback_empty>
										</Sequence>
									</IfCondition>
								</ForEach>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantCallback_empty>
								</IfCondition>
							</Sequence>
						</AtomicDecorator>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="menhart_afterFightBarking" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<Function_speech_monolog alias="&apos;sermiri_menhartBarkNaKonciFightu&apos;" canBeDelayed="false" context="" dramaticBark="false" lookAtId="$__player" metarole="" target="" wait="false" nodeLabel="80308822" />
							<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</Child>
					<OnSuccess canSkip="1">
						<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
					</OnSuccess>
					<OnFail canSkip="1">
						<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="endNotificationAtomic">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_monolog>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Child>
						<OnSuccess>
							<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantCallback_empty>
						</OnSuccess>
						<OnFail>
							<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantCallback_empty>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>