<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="trainer_waitForPlayerInArena" is_function="0">
		<Variables>
			<Variable name="pathFindingParams" type="pathFindingParams" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$pathFindingParams.useGeneratedNSO = true &#10;$pathFindingParams.useSmartObjects = true &#10;$pathFindingParams.enableSecondTryWithGenNSO = true" />
					<Sequence>
						<DistanceCondition Origin="$this.id" ReferencePt="$tagpoint" Low="3.000000" High="3.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
							<EntityContext context="speech_greyOutE" target="">
								<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="$pathFindingParams" staminaPolicy="" pathInfo="" />
							</EntityContext>
						</DistanceCondition>
						<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
						<UnstanceAction unstance="Quest_SoldierBored" locationObject="$tagpoint" slaveObject="" />
						<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="pathFindingParams" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExactMove>
								</EntityContext>
							</DistanceCondition>
							<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantCallback_empty>
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="trainer_combatTutorialWait" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="speech_greyOutE" target="">
					<Sequence>
						<DrawAction WeaponSet="Primary" fullBody="false" tags="" useSelectedWeaponSet="false" />
						<EntityContext context="tutorial_npcReadyForCombat" target="">
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</EntityContext>
					</Sequence>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="KCD2-438716" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</DrawAction>
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</EntityContext>
						</Sequence>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="player_drawWeapon" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<EntityContextCheck context="combat_playerDrawOversized" target="" saveVersion="2">
						<Then canSkip="1">
							<DrawAction WeaponSet="Oversized" fullBody="false" tags="" />
						</Then>
						<Else canSkip="1">
							<DrawAction WeaponSet="Primary" fullBody="false" tags="" />
						</Else>
					</EntityContextCheck>
					<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="endNotification">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</DrawAction>
							</Then>
							<Else>
								<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</DrawAction>
							</Else>
						</EntityContextCheck>
						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantCallback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="trainer_waitOutsideArena" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<UnstanceAction unstance="Quest_SoldierBored" locationObject="$tagpoint" slaveObject="" />
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>