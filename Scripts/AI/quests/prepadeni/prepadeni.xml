<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="npc_formationLeader" is_function="0">
		<Variables>
			<Variable name="t_followFormationParams" type="followFormationParams" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="callbackBehavior" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$t_followFormationParams.formation.leader = $this.id &#10;$t_followFormationParams.formation.type = &apos;prepadeni_ptaceksGroup&apos; &#10;$t_followFormationParams.leaderCallback.host = $__object.id &#10;$t_followFormationParams.leaderCallback.behavior = &apos;npc_goToCutscene&apos;" />
					<IncludeTree File="&apos;quests/questutils.xml&apos;" Name="&apos;followNPC_inFormation&apos;" nodeLabel="85155651" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="formationLeader" EventSet="">
			<Variables>
				<Variable name="t_followFormationParams" comment="" />
				<Variable name="callbackBehavior" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-40" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</IncludeTree>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_formationFollower" is_function="0">
		<Variables>
			<Variable name="t_followFormationParams" type="followFormationParams" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="leader" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="preferedPosition" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$t_followFormationParams.formation.leader = $leader &#10;$t_followFormationParams.formation.preferedPosition = $this.name" />
					<IncludeTree File="&apos;quests/questutils.xml&apos;" Name="&apos;followNPC_inFormation&apos;" nodeLabel="98595866" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="formationFollower" EventSet="">
			<Variables>
				<Variable name="t_followFormationParams" comment="" />
				<Variable name="leader" comment="" />
				<Variable name="preferedPosition" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-10" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</IncludeTree>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_goToCutscene" is_function="0">
		<Variables>
			<Variable name="goToCutscene" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;goToCutscene&apos;" prune="true" negprune="unknown" Parent="" Child="$goToCutscene" Data="" />
					</GraphSearch>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" destinationSpecification="$goToCutscene" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="goToCutscene" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-60" editorPosY="20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments>
				<Comment text="smazat" posX="180" posY="-160" width="300" height="127" resizeBorderWidth="300" resizeBorderHeight="100" color="0.65,0.65,0.65" author="petr.malac" />
			</Comments>
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_formationFollower" is_function="0">
		<Variables>
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="context" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="followFormationParams" type="followFormationParams" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="formationType" type="enum:formationType" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="phase" type="enum:prepadeni_ptacekInFormation" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;useHorse&apos;" condition="$__link_useHorse==$context" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
					</GraphSearch>
					<Switch>
						<IfCondition failOnCondition="false" condition="$formationType == $enum:formationType.KeepDistance">
							<Expression expressions="$followFormationParams.formation.policy = $enum:formationMode.KeepDistance" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$formationType == $enum:formationType.MoveHistory">
							<Expression expressions="$followFormationParams.formation.policy = $enum:formationMode.MoveHistory" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$formationType == $enum:formationType.KeepShape">
							<Expression expressions="$followFormationParams.formation.policy = $enum:formationMode.KeepShape" />
						</IfCondition>
						<DefaultBranch>
							<Expression expressions="$followFormationParams.formation.policy = $enum:formationMode.Relaxed" />
						</DefaultBranch>
					</Switch>
					<StanceElement smartObject="$horse" stance="horse" allowAny="false">
						<Sequence>
							<WaitAction />
							<Parallel successMode="Any" failureMode="Any">
								<Function_moveInFormation_inFormation changeNPCState="false" destination="$__null" followEnabled="false" followFormationParams="$followFormationParams" pathOffset="0.000000" successDistance="0.000000" nodeLabel="73560406" />
								<ContinuousSwitch>
									<IfCondition failOnCondition="false" condition="$phase == $enum:prepadeni_ptacekInFormation.None">
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$phase == $enum:prepadeni_ptacekInFormation.Chat">
										<Sequence>
											<SuppressFailure>
												<Function_speech_dialogInitiator alias="&apos;prepadeni_rideToCutscene&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="$__null" customParameters="$__null" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="57004688" />
											</SuppressFailure>
											<Callback_empty EventName="&apos;OnChatEnd&apos;" />
										</Sequence>
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$phase == $enum:prepadeni_ptacekInFormation.Polylog">
										<Sequence>
											<SuppressFailure>
												<Function_speech_polylogInitiator alias="&apos;prepadeni_dialogBetweenRiders&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="$__null" metarole="" participants="$participants" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="62452271" />
											</SuppressFailure>
											<Callback_empty EventName="&apos;OnPolylogEnd&apos;" />
										</Sequence>
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$phase == $enum:prepadeni_ptacekInFormation.Complete">
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
									</IfCondition>
								</ContinuousSwitch>
							</Parallel>
						</Sequence>
					</StanceElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="prepadeni_ptacekInFormation" EventSet="prepadeni_ptacekInFormation">
			<Variables>
				<Variable name="horse" comment="" />
				<Variable name="context" comment="" />
				<Variable name="followFormationParams" comment="" />
				<Variable name="formationType" comment="" />
				<Variable name="participants" comment="" />
				<Variable name="phase" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<Switch hasInputBreakpoint="0" comment="" comment_box="prozkoumat" comment_box_color="222,222,222,222" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<DefaultBranch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</DefaultBranch>
						</Switch>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_moveInFormation_inFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_moveInFormation_inFormation>
									<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_speech_dialogInitiator>
												</SuppressFailure>
												<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Callback_empty>
											</Sequence>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_speech_polylogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_speech_polylogInitiator>
												</SuppressFailure>
												<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Callback_empty>
											</Sequence>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</IfCondition>
									</ContinuousSwitch>
								</Parallel>
							</Sequence>
						</StanceElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="voves_prepareMeal" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$__resource.id" stance="sitting" allowAny="false">
					<Sequence>
						<WaitAction />
						<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments>
				<Comment text="smazat" posX="240" posY="-160" width="300" height="127" resizeBorderWidth="300" resizeBorderHeight="100" color="0.65,0.65,0.65" author="petr.malac" />
			</Comments>
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="voves_driveAwayDog" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$__resource.id" stance="sitting" allowAny="false" enabled="true">
					<Sequence>
						<UnstanceAction unstance="Quest_ExpellingDog" locationObject="" slaveObject="" />
						<Selector>
							<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="8.000000" High="8.000000" Negation="true" ValueOnMiddle="false" failOnCondition="true">
								<EntityContext context="speech_greyOutE" target="$this.id">
									<Function_speech_monolog alias="&apos;prepadeni_driveAwayDog&apos;" canBeDelayed="false" context="$__null" dramaticBark="false" lookAtId="$__null" metarole="" target="$this.id" wait="true" nodeLabel="70661159" />
								</EntityContext>
							</DistanceCondition>
							<EntityContext context="speech_greyOutE" target="$this.id">
								<Function_speech_monolog alias="&apos;prepadeni_vovesCallOnPlayer&apos;" canBeDelayed="false" context="$__null" dramaticBark="false" lookAtId="$__null" metarole="" target="$this.id" wait="true" nodeLabel="37776339" />
							</EntityContext>
						</Selector>
						<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_monolog>
									</EntityContext>
								</DistanceCondition>
								<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_monolog>
								</EntityContext>
							</Selector>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="voves_aboutStopBarking" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$__resource.id" stance="sitting" allowAny="false">
					<Sequence>
						<WaitAction />
						<Function_monologRepeat alias="&apos;prepadeni_aboutStopBarking&apos;" cooldown="&apos;0&apos;" repeat="1" nodeLabel="99962885" />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="empty" EventSet="endNotification">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Function_monologRepeat hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_monologRepeat>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sedivka_autopilot" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExecuteLua code="player.actor:StartFollow(XGenAIModule.GetEntityByWUID(data.data).id)" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<SetPlayerHorseSpeed speed="Sprint" />
		</ForestContainer>
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExecuteLua>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<SetPlayerHorseSpeed editorPosX="750" editorPosY="-140" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</SetPlayerHorseSpeed>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_waitForPlayerInArea" is_function="0">
		<Variables>
			<Variable name="pathFindingParams" type="pathFindingParams" values="useGeneratedNSO(true)" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="$pathFindingParams" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
					<ForceLook LookTarget="$__player" DisableVariations="false">
						<Loop count="-1">
							<Sequence>
								<Turn target="$__player" align="false" />
								<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</Loop>
					</ForceLook>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="endNotification">
			<Variables>
				<Variable name="pathFindingParams" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
						<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Turn>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Loop>
						</ForceLook>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_waitToPlayerInArean" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pivec_dialogWithKonrad" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="place" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="recipient" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$__resource.id" stance="sitting" allowAny="false" enabled="true">
					<EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
						<Sequence>
							<WaitAction />
							<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</EntityContextElement>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer>
			<EntityContextBarrier context="activity_leaning" target="$recipient" Negation="false" RunLogic="KeepRunning">
				<Function_speech_dialogInitiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="$__null" customParameters="$__null" metarole="" preset="$enum:dialogPreset.ingame" recipient="$recipient" recipientMetaroles="" nodeLabel="55848579" />
			</EntityContextBarrier>
		</ForestContainer>
		<EditorData Signature="dialogInitiatorAtTable" EventSet="">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="place" comment="" />
				<Variable name="recipient" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</EntityContextElement>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest>
				<EntityContextBarrier editorPosX="1290" editorPosY="-10" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_speech_dialogInitiator>
				</EntityContextBarrier>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_fanAtTrainnigGround" is_function="0">
		<Variables>
			<Variable name="bark" type="prepadeni:bark" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="locationObject" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="unstance" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ForceLook LookTarget="$__player" DisableVariations="false">
					<Sequence>
						<UnstanceAction unstance="$unstance" locationObject="$locationObject" slaveObject="" />
						<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$bark" senderInfo="" inbox="&apos;prepadeni_bark&apos;" condition="" answerVar="">
							<IfCondition failOnCondition="false" condition="$bark.alias ~= &apos;&apos;">
								<Sequence>
									<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
									<Function_speech_schedulerMonolog alias="$bark.alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="67851598" />
								</Sequence>
							</IfCondition>
						</ProcessMessage>
					</Sequence>
				</ForceLook>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="prepadeni_barkingAtTrainingGround" EventSet="">
			<Variables>
				<Variable name="bark" comment="" />
				<Variable name="locationObject" comment="" />
				<Variable name="unstance" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
										<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_schedulerMonolog>
									</Sequence>
								</IfCondition>
							</ProcessMessage>
						</Sequence>
					</ForceLook>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_atFireplace" is_function="0">
		<Variables>
			<Variable name="bowl" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="phaseValue" type="_float" values="1" isPersistent="0" form="single" />
			<Variable name="slotBowl" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Left" item="$bowl" allowAny="false" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<Sequence>
							<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;bowl&apos;" prune="true" negprune="unknown" Parent="" Child="$slotBowl" Data="" />
							</GraphSearch>
							<GetItemInSlot slot="$slotBowl" useHomeItem="true" item="$bowl" />
							<SetItemProperty itemId="$bowl" property="Phase" sourceVar="$phaseValue" isRelative="false" />
						</Sequence>
					</Search>
					<Exec canSkip="1">
						<StanceElement smartObject="$__resource.id" stance="sitting" allowAny="false" enabled="true">
							<Sequence>
								<UnstanceAction unstance="eatingMashSitting" locationObject="$__resource.id" slaveObject="" />
								<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</StanceElement>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="bowl" comment="" />
				<Variable name="phaseValue" comment="" />
				<Variable name="slotBowl" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetItemInSlot>
								<SetItemProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SetItemProperty>
							</Sequence>
						</Search>
						<Exec>
							<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</StanceElement>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_aboutCrouch" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="" />
					<StanceElement smartObject="" stance="crouch" allowAny="false" enabled="true">
						<Sequence>
							<WaitAction />
							<Parallel successMode="Any" failureMode="Any">
								<Loop count="-1">
									<StanceBarrier soul="$__player" stance="standing" smartObject="" negate="false" failOnCondition="false" RunLogic="KeepRunning">
										<Sequence>
											<Function_speech_monolog alias="&apos;prepadeni_aboutCrouch&apos;" canBeDelayed="true" context="$__null" dramaticBark="false" lookAtId="$__player" metarole="" target="$this.id" wait="true" nodeLabel="31145962" />
											<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
									</StanceBarrier>
								</Loop>
								<Loop count="-1">
									<StanceBarrier soul="$__player" stance="crouch" smartObject="" negate="false" failOnCondition="false" RunLogic="KeepRunning">
										<Callback_empty EventName="&apos;OnFinished&apos;" />
									</StanceBarrier>
								</Loop>
							</Parallel>
						</Sequence>
					</StanceElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="empty" EventSet="endNotification">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<StanceBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_monolog>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</StanceBarrier>
									</Loop>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<StanceBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Callback_empty>
										</StanceBarrier>
									</Loop>
								</Parallel>
							</Sequence>
						</StanceElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_goThroughReeds" is_function="0">
		<Variables>
			<Variable name="canWalk" type="_bool" values="true" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="area" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" optional="1" />
			<Variable name="crouchBarkAlias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="distanceBarkAlias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="maxDistance" type="_float" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="predefinedPath" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="" stance="crouch" allowAny="false" enabled="true">
					<Sequence>
						<WaitAction />
						<Parallel successMode="Any" failureMode="Any">
							<Loop count="-1">
								<IfElseCondition failOnCondition="false" condition="$canWalk" saveVersion="2">
									<Then canSkip="1">
										<IfGate atomic="false" condition="$canWalk" RunLogic="Halt">
											<Sequence>
												<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="2.000000" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$predefinedPath" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
												<IfCondition failOnCondition="false" condition="$area ~= $__null">
													<AreaPresenceGate aiObjects="$__player" area="$area" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
														<Success />
													</AreaPresenceGate>
												</IfCondition>
												<Callback_empty EventName="&apos;OnFinished&apos;" />
											</Sequence>
										</IfGate>
									</Then>
									<Else canSkip="1">
										<Sequence>
											<Turn target="$__player" align="false" />
											<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										</Sequence>
									</Else>
								</IfElseCondition>
							</Loop>
							<Loop count="-1">
								<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="$maxDistance" High="$maxDistance" Negation="true" OpenInMiddle="false" RunLogic="KeepRunning">
									<Sequence>
										<Expression expressions="$canWalk = false" />
										<Function_speech_monolog alias="$distanceBarkAlias" canBeDelayed="true" context="$__null" dramaticBark="false" lookAtId="$__player" metarole="" target="$this.id" wait="true" nodeLabel="96492006" />
										<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
									</Sequence>
								</DistanceGate>
							</Loop>
							<Loop count="-1">
								<StanceBarrier soul="$__player" stance="crouch" smartObject="" negate="true" failOnCondition="false" RunLogic="KeepRunning">
									<Sequence>
										<Expression expressions="$canWalk = false" />
										<Function_speech_monolog alias="$crouchBarkAlias" canBeDelayed="true" context="$__null" dramaticBark="false" lookAtId="$__player" metarole="" target="$this.id" wait="true" nodeLabel="11531544" />
										<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
									</Sequence>
								</StanceBarrier>
							</Loop>
							<Loop count="-1">
								<IfGate atomic="false" condition="$canWalk == false" RunLogic="KeepRunning">
									<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="$maxDistance" High="$maxDistance" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
										<StanceBarrier soul="$__player" stance="crouch" smartObject="" negate="false" failOnCondition="false" RunLogic="KeepRunning">
											<Expression expressions="$canWalk = true" />
										</StanceBarrier>
									</DistanceGate>
								</IfGate>
							</Loop>
						</Parallel>
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="prepadeniStealthWithPtacek" EventSet="endNotification">
			<Variables>
				<Variable name="canWalk" comment="" />
				<Variable name="area" comment="" />
				<Variable name="crouchBarkAlias" comment="" />
				<Variable name="distanceBarkAlias" comment="" />
				<Variable name="maxDistance" comment="" />
				<Variable name="predefinedPath" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Move>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</AreaPresenceGate>
													</IfCondition>
													<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Callback_empty>
												</Sequence>
											</IfGate>
										</Then>
										<Else>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Turn>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</Else>
									</IfElseCondition>
								</Loop>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_monolog>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</DistanceGate>
								</Loop>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<StanceBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_monolog>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</StanceBarrier>
								</Loop>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<StanceBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</StanceBarrier>
										</DistanceGate>
									</IfGate>
								</Loop>
							</Parallel>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_goThroughFreeSpace" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="path" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="waitForPlayerInReeds" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="" stance="crouch" allowAny="false" enabled="true">
					<Sequence>
						<SuppressFailure>
							<Function_speech_monolog alias="&apos;prepadeni_goThroughFreeSpace&apos;" canBeDelayed="false" context="$__null" dramaticBark="false" lookAtId="$__null" metarole="" target="$this.id" wait="true" nodeLabel="40791860" />
						</SuppressFailure>
						<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$path" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
						<Parallel successMode="Any" failureMode="Any">
							<Loop count="-1">
								<Sequence>
									<Turn target="$__player" align="false" />
									<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</Loop>
							<AreaPresenceGate aiObjects="$__player" area="$waitForPlayerInReeds" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
								<Callback_empty EventName="&apos;OnFinished&apos;" />
							</AreaPresenceGate>
						</Parallel>
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="prepadeni_pathSelect" EventSet="endNotification">
			<Variables>
				<Variable name="path" comment="" />
				<Variable name="waitForPlayerInReeds" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_monolog>
							</SuppressFailure>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Turn>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Loop>
								<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
								</AreaPresenceGate>
							</Parallel>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_aboutGuard" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="" stance="crouch" allowAny="false" enabled="true">
					<Sequence>
						<WaitAction />
						<Turn target="$data" align="false" />
						<Loop count="-1">
							<EntityContextBarrier context="crime_interruptScan" target="$data" Negation="true" RunLogic="KeepRunning">
								<EntityContextBarrier context="crime_interrupt" target="$data" Negation="true" RunLogic="Halt">
									<EntityContextBarrier context="crime_interruptLookAround" target="$data" Negation="true" RunLogic="KeepRunning">
										<Sequence>
											<Wait duration="&apos;30s&apos;" timeType="GameTime" doFail="false" variation="" />
											<Function_speech_monolog alias="&apos;prepadeni_throwing&apos;" canBeDelayed="true" context="$__null" dramaticBark="false" lookAtId="$__null" metarole="" target="$this.id" wait="true" nodeLabel="77154624" />
										</Sequence>
									</EntityContextBarrier>
								</EntityContextBarrier>
							</EntityContextBarrier>
						</Loop>
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Turn>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
												<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_monolog>
											</Sequence>
										</EntityContextBarrier>
									</EntityContextBarrier>
								</EntityContextBarrier>
							</Loop>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="debug_goto" is_function="0">
		<Variables>
			<Variable name="goto" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;debugGuardPosition&apos;" prune="true" negprune="unknown" Parent="" Child="$goto" Data="" />
					</GraphSearch>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" destinationSpecification="$goto" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="goto" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_aboutGirls" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="" stance="crouch" allowAny="false">
					<Sequence>
						<WaitAction />
						<Function_speech_monolog alias="&apos;prepadeni_aboutGirls&apos;" canBeDelayed="false" context="$__null" dramaticBark="false" lookAtId="$__null" metarole="" target="$this.id" wait="true" nodeLabel="53489967" />
						<Callback_empty EventName="&apos;OnFinished&apos;" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_monolog>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments>
				<Comment text="npc_bark" posX="120" posY="-280" width="300" height="127" resizeBorderWidth="300" resizeBorderHeight="100" color="0.65,0.65,0.65" author="petr.malac" />
			</Comments>
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_runThroughWoods" is_function="0">
		<Variables>
			<Variable name="pathFindingParams" type="pathFindingParams" values="useGeneratedNSO(true)" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="2.000000" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$pathFindingParams" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="pathFindingParams" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_lookAtBandit" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_lookAtBandits" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" destinationSpecification="" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="debug_teleport" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<TeleportAction Position="$tagpoint" EndInterruptOnActionStart="false" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="endNotification">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</TeleportAction>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bandit_guardOnSpot" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_patroling" is_function="1">
		<Variables>
			<Variable name="predefinedPathParams" type="predefinedPathParams" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="path" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="startPath" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" destinationSpecification="$startPath" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Loop count="-1">
						<Sequence>
							<Expression expressions="$predefinedPathParams.reversePath = false" />
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" destinationSpecification="$path" destinationSpecification2="$predefinedPathParams" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							<Expression expressions="$predefinedPathParams.reversePath = true" />
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" destinationSpecification="$path" destinationSpecification2="$predefinedPathParams" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
						</Sequence>
					</Loop>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="prepadeni_patrolPath" EventSet="">
			<Variables>
				<Variable name="predefinedPathParams" comment="" />
				<Variable name="path" comment="" />
				<Variable name="startPath" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
							</Sequence>
						</Loop>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bandit_goToGuardSpotAndBarking" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="All" failureMode="Any">
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Loop count="-1">
						<Function_speech_monolog alias="&apos;prepadeni_barkingAtRock&apos;" canBeDelayed="false" context="" dramaticBark="false" important="false" lookAtId="" metarole="" target="$this.id" wait="true" nodeLabel="83139678" />
					</Loop>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_monolog>
						</Loop>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_mountHorse" is_function="0">
		<Variables>
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;useHorse&apos;" condition="$__link_useHorse==&apos;prepadeni&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
					</GraphSearch>
					<StanceElement smartObject="$horse" stance="horse" allowAny="false">
						<Sequence>
							<WaitAction />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</StanceElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="horse" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</StanceElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bandit_shootOnTarget" is_function="0">
		<Variables>
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AreaPresenceGate aiObjects="$__player" area="$data" amount="AtLeastOne" presence="Present" RunLogic="Halt">
					<HandContentElement hand="Left" item="$leftHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="Label1" useDecision="false" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
						</Search>
						<Exec canSkip="1">
							<Parallel successMode="Any" failureMode="Any">
								<AddToSkirmish TargetNPC="$__player" RelationOverride="Hostile" />
								<MeleeGuardAutomationDecorator GuardMode="automate" active="true">
									<Sequence>
										<WaitAction />
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</MeleeGuardAutomationDecorator>
							</Parallel>
						</Exec>
					</HandContentElement>
				</AreaPresenceGate>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetWeaponsFromWeaponSet>
							</Search>
							<Exec>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AddToSkirmish hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AddToSkirmish>
									<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</WaitAction>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</MeleeGuardAutomationDecorator>
								</Parallel>
							</Exec>
						</HandContentElement>
					</AreaPresenceGate>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bandit_barkingAtPond" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AreaPresenceGate aiObjects="$__player" area="$data" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
					<Function_speech_monolog alias="&apos;prepadeni_atPondCommands&apos;" canBeDelayed="false" context="" dramaticBark="false" important="false" lookAtId="" metarole="" target="$this.id" wait="true" nodeLabel="48817250" />
				</AreaPresenceGate>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_monolog>
					</AreaPresenceGate>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_goToUseLedge" is_function="0">
		<Variables>
			<Variable name="pathFindingParams" type="pathFindingParams" values="useGeneratedNSO(true),usePaths(false)" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$pathFindingParams" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="9.000000" High="9.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
						<Function_speech_monolog alias="&apos;prepadeni_atFallenTree&apos;" canBeDelayed="false" context="$__null" dramaticBark="false" lookAtId="$__null" metarole="" target="$this.id" wait="true" nodeLabel="64740560" />
					</DistanceGate>
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="pathFindingParams" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_monolog>
						</DistanceGate>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bandit_shootOnTargetWithNotification" is_function="0">
		<Variables>
			<Variable name="archerPosition" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hitData" type="hitData" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tree" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Sequence>
						<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;tree&apos;" prune="true" negprune="unknown" Parent="" Child="$tree" Data="" />
						</GraphSearch>
						<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;archerPosition&apos;" prune="true" negprune="unknown" Parent="" Child="$archerPosition" Data="" />
						</GraphSearch>
						<ExactMove directionType="AlignWithEntity" directionSpecification="$archerPosition" animationTriggerDist="0.150000" precise="false" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$archerPosition" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
						<HandContentElement hand="Left" item="$leftHand" allowAny="false" decisionLabel="Label1" useDecision="false" enabled="true" saveVersion="2">
							<Search canSkip="1">
								<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
							</Search>
							<Exec canSkip="1">
								<Sequence>
									<InstantSetTarget Target="$tree" />
									<MeleeOffenseAutomationDecorator active="true">
										<Sequence>
											<WaitAction />
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										</Sequence>
									</MeleeOffenseAutomationDecorator>
								</Sequence>
							</Exec>
						</HandContentElement>
					</Sequence>
					<Loop count="-1">
						<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitData" senderInfo="" inbox="&apos;hitData&apos;" condition="" answerVar="">
							<IfCondition failOnCondition="false" condition="$hitData.projectile ~= $__null">
								<Sequence>
									<Function_speech_monolog alias="&apos;prepadeni_afterShoot&apos;" canBeDelayed="true" context="$__null" dramaticBark="false" lookAtId="$__null" metarole="" target="$this.id" wait="false" nodeLabel="20578653" />
									<Callback_empty EventName="&apos;OnFinished&apos;" />
								</Sequence>
							</IfCondition>
						</ProcessMessage>
					</Loop>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="endNotification">
			<Variables>
				<Variable name="archerPosition" comment="" />
				<Variable name="hitData" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="tree" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExactMove>
							<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Search>
									<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetWeaponsFromWeaponSet>
								</Search>
								<Exec>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<InstantSetTarget hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</InstantSetTarget>
										<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</MeleeOffenseAutomationDecorator>
									</Sequence>
								</Exec>
							</HandContentElement>
						</Sequence>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_monolog>
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
									</Sequence>
								</IfCondition>
							</ProcessMessage>
						</Loop>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_waitForPlayerAtArea" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ForceLook LookTarget="$__player" DisableVariations="false">
					<EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
						<Sequence>
							<WaitAction />
							<Turn target="$__player" align="false" />
							<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</EntityContextElement>
				</ForceLook>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Turn>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</EntityContextElement>
					</ForceLook>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bandit_barking" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Function_speech_monolog alias="$data" canBeDelayed="false" context="" dramaticBark="false" lookAtId="" metarole="" target="$this.id" wait="true" nodeLabel="77756292" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="stringData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_speech_monolog>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_bark" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<Function_speech_monolog alias="$data" canBeDelayed="false" context="" dramaticBark="false" important="false" lookAtId="" metarole="" target="$this.id" wait="true" nodeLabel="56547680" />
					</Child>
					<OnSuccess canSkip="1">
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="stringData" EventSet="endNotification">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_monolog>
						</Child>
						<OnSuccess>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="player_mountHorse" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExecuteLua code="local rider = XGenAIModule.GetEntityByWUID(entity.this.id) &#10;player.player:SetPlayerHorse(XGenAIModule.GetEntityByWUID(data.data).id); &#10;rider.human:ForceMount(XGenAIModule.GetEntityByWUID(data.data).id)" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExecuteLua>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_schedulerWaitOnHorse" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$data" stance="horse" allowAny="false">
					<Sequence>
						<WaitAction />
						<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_soldierBored" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<UnstanceAction unstance="Quest_SoldierBored" locationObject="" slaveObject="" />
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_sneaking" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="" stance="crouch" allowAny="false">
					<Sequence>
						<WaitAction />
						<Parallel successMode="All" failureMode="Any">
							<AnimationAction fragment="&apos;Quest_CaponSneaking&apos;" tags="&apos;stealth&apos;" eventReferenceObject="" alignObject="$data" slaveObject="" />
							<Sequence>
								<Wait duration="&apos;2500ms&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								<Function_speech_monolog alias="&apos;prepadeni_aboutGirls&apos;" canBeDelayed="false" context="$__null" dramaticBark="false" lookAtId="$__null" metarole="" target="$this.id" wait="false" nodeLabel="24902006" />
							</Sequence>
						</Parallel>
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<OutputBreakpoints />
								</AnimationAction>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_monolog>
								</Sequence>
							</Parallel>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_turnToAndBark" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<ForceLook LookTarget="$wuid" DisableVariations="false">
							<Parallel successMode="Any" failureMode="Any">
								<Loop count="-1">
									<Sequence>
										<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										<Turn target="$wuid" align="false" />
									</Sequence>
								</Loop>
								<Function_speech_monolog alias="$string" canBeDelayed="false" context="" dramaticBark="false" lookAtId="" metarole="" target="$this.id" wait="true" nodeLabel="84369487" />
							</Parallel>
						</ForceLook>
					</Child>
					<OnSuccess canSkip="1">
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
											<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Turn>
										</Sequence>
									</Loop>
									<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_monolog>
								</Parallel>
							</ForceLook>
						</Child>
						<OnSuccess>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_animationAtFirstCrossroad" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Parallel successMode="All" failureMode="Any">
						<AnimationAction fragment="&apos;Quest_CaponPass&apos;" tags="" eventReferenceObject="" alignObject="" />
						<Sequence>
							<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							<Function_speech_monolog alias="&apos;prepadeni_escapeToSecondPlace&apos;" canBeDelayed="true" context="$__null" dramaticBark="false" important="false" lookAtId="$__null" metarole="" target="$this.id" wait="false" nodeLabel="77150547" />
						</Sequence>
						<Sequence>
							<Wait duration="&apos;8s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							<Function_speech_monolog alias="&apos;prepadeni_escapeToThirdPlace&apos;" canBeDelayed="true" context="$__null" dramaticBark="false" important="false" lookAtId="$__null" metarole="" target="$this.id" wait="false" nodeLabel="43614742" />
						</Sequence>
					</Parallel>
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="endNotification">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<OutputBreakpoints />
							</AnimationAction>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
								<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_monolog>
							</Sequence>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
								<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_monolog>
							</Sequence>
						</Parallel>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments>
				<Comment text="EVENTY" posX="560" posY="-410" width="300" height="127" resizeBorderWidth="300" resizeBorderHeight="100" color="0.65,0.65,0.65" author="petr.malac" />
			</Comments>
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_animationAtSecondCrossroad" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Parallel successMode="All" failureMode="Any">
						<AnimationAction fragment="&apos;Quest_CaponLookAround&apos;" tags="" eventReferenceObject="" alignObject="" />
						<Sequence>
							<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							<Function_speech_monolog alias="&apos;prepadeni_barkAtRocks&apos;" canBeDelayed="true" context="$__null" dramaticBark="false" important="false" lookAtId="$__null" metarole="" target="$this.id" wait="false" nodeLabel="67399466" />
						</Sequence>
					</Parallel>
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<OutputBreakpoints />
							</AnimationAction>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
								<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_monolog>
							</Sequence>
						</Parallel>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="womanGuard_guarding" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<UnstanceAction unstance="prepadeni_doingLaundry_inRiver" locationObject="$tagpoint" slaveObject="" />
					<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="guard_searching" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="womanGuard_searching" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Parallel successMode="All" failureMode="Any">
						<UnstanceAction unstance="search_bush" locationObject="$tagpoint" slaveObject="" />
						<SuppressFailure>
							<Function_speech_monolog alias="&apos;prepadeni_hlidackaReagujeNaKamen&apos;" canBeDelayed="false" context="$__null" dramaticBark="false" lookAtId="$__null" metarole="" target="$this.id" wait="true" nodeLabel="59283387" />
						</SuppressFailure>
					</Parallel>
					<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_monolog>
							</SuppressFailure>
						</Parallel>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bandit_patrolingAndBarking" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="path" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="startPath" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="All" failureMode="Any">
					<Loop count="-1">
						<Function_speech_monolog alias="&apos;prepadeni_banditaBarkujePoSkonceniRozmluvy&apos;" canBeDelayed="false" context="$__null" dramaticBark="false" important="true" lookAtId="$__null" metarole="" target="$this.id" wait="true" nodeLabel="99083142" />
					</Loop>
					<Function_npc_patroling path="$path" startPath="$startPath" nodeLabel="57476523" />
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="prepadeni_patrolPath" EventSet="">
			<Variables>
				<Variable name="path" comment="" />
				<Variable name="startPath" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_monolog>
						</Loop>
						<Function_npc_patroling hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_npc_patroling>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bandit_patroling" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_patrol" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bandit_pursuitAndBarking" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Loop count="-1">
						<Function_speech_monolog alias="&apos;prepadeni_banditaBarkujePriPronasledovani&apos;" canBeDelayed="false" context="" dramaticBark="false" important="false" lookAtId="" metarole="" target="$this.id" wait="true" nodeLabel="80368477" />
					</Loop>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_monolog>
						</Loop>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="konrad_leaning" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;prepadeni_dialogBetweenKonradAndPivec&apos;" RunLogic="KeepRunning">
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Synchronize>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Synchronize>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="horseWithRiderTeleport" is_function="0">
		<Variables>
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="position" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;useHorse&apos;" condition="$__link_useHorse==&apos;prepadeni&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
					</GraphSearch>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;teleportWithHorse&apos;" condition="$__link_teleportWithHorse==&apos;prepadeni&apos;" prune="true" negprune="unknown" Parent="" Child="$position" Data="" />
					</GraphSearch>
					<StanceElement smartObject="$horse" stance="horse" allowAny="false">
						<Sequence>
							<TeleportAction Position="$position" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</StanceElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="horse" comment="" />
				<Variable name="position" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</TeleportAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</StanceElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_teleport" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="" stance="standing" allowAny="false">
					<Sequence>
						<TeleportAction Position="$tagpoint" />
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</TeleportAction>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_combatTutorialWait" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<WaitAction />
					<EntityContext context="tutorial_npcReadyForCombat" target="">
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</EntityContext>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</EntityContext>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="woman_doingLaundryInRiver" is_function="0">
		<Variables>
			<Variable name="item" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="slot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$item" allowAny="false" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<Sequence>
							<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;prepadeni_laundryBundle&apos;" prune="true" negprune="unknown" Parent="" Child="$slot" Data="" />
							</GraphSearch>
							<GetItemInSlot slot="$slot" useHomeItem="true" item="$item" />
						</Sequence>
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							<UnstanceAction unstance="prepadeni_doingLaundry_inRiver" locationObject="$tagpoint" slaveObject="" />
							<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="item" comment="" />
				<Variable name="slot" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetItemInSlot>
							</Sequence>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="woman_doingLaundryOnPier" is_function="0">
		<Variables>
			<Variable name="item" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="slot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$item" allowAny="false" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<Sequence>
							<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;prepadeni_laundryBundle&apos;" prune="true" negprune="unknown" Parent="" Child="$slot" Data="" />
							</GraphSearch>
							<GetItemInSlot slot="$slot" useHomeItem="true" item="$item" />
						</Sequence>
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							<UnstanceAction unstance="prepadeni_doingLaundry_onPier" locationObject="$tagpoint" slaveObject="" />
							<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="item" comment="" />
				<Variable name="slot" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetItemInSlot>
							</Sequence>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="deer_runningAlongPredefinedPath" is_function="0">
		<Variables>
			<Variable name="jindrichAndPtacek" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="path" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="predefinedPathParams" type="predefinedPathParams" values="" isPersistent="0" form="single" />
			<Variable name="ptacek" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="scareDeerAwayArea" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;ptacek&apos;" prune="true" negprune="unknown" Parent="" Child="$ptacek" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;deerPath&apos;" prune="true" negprune="unknown" Parent="" Child="$path" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;scareDeerAwayArea&apos;" prune="true" negprune="unknown" Parent="" Child="$scareDeerAwayArea" Data="" />
					</GraphSearch>
					<PushToArray array="$jindrichAndPtacek" value="$__player" direction="Back" />
					<PushToArray array="$jindrichAndPtacek" value="$ptacek" direction="Back" />
					<Expression expressions="$predefinedPathParams.approachFirstNode = true" />
					<AreaPresenceGate aiObjects="$jindrichAndPtacek" area="$scareDeerAwayArea" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$path" destinationSpecification2="$predefinedPathParams" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					</AreaPresenceGate>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="jindrichAndPtacek" comment="" />
				<Variable name="path" comment="" />
				<Variable name="predefinedPathParams" comment="" />
				<Variable name="ptacek" comment="" />
				<Variable name="scareDeerAwayArea" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</PushToArray>
						<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</PushToArray>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
						</AreaPresenceGate>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_throughForrest" is_function="0">
		<Variables>
			<Variable name="barkAboutBanditsAtRocksDone" type="_bool" values="" isPersistent="1" form="single" />
			<Variable name="dotProductGlobalResult" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="dotProductResult" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="jindrichWasSpoted" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="pathfindingParams" type="pathFindingParams" values="" isPersistent="0" form="single" />
			<Variable name="ptacekAndJindrich" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="ptacekContinuesToFallenTree" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="slideAndBandit" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="aroundBoulder" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="atEntranceToMaze" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="atTheEndOfMaze" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="banditBehindBoulderStartsDialog" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="banditGoesBackToRock" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="banditLeaderStartsMonolog" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="banditsAtRocksInArea" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="banditsBehindRock" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="banditsBehindRockStartMoving" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="banditsOnEndOfFallenTree" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="crossroadJindrichGoesWrongDirection" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="crossroadJindrichIsFasterThenPtacek" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="crouchToCrossroad" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="ptacekSeesBanditsAtRock" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="state" type="enum:prepadeni_throughForrest" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="teleportBeforeExitFromMaze" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="temporaryPlaceInMaze" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="toFallenTree" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="toTheEndOfBoulders" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="toTheRockPath" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="toTheRockPathCrouch" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="toTheTreeAtHill" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="walkToCrossroad" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;slideAndBandit&apos;" prune="true" negprune="unknown" Parent="" Child="$slideAndBandit" Data="" />
					</GraphSearch>
					<PushToArray array="$ptacekAndJindrich" value="$this.id" direction="Back" />
					<PushToArray array="$ptacekAndJindrich" value="$__player" direction="Back" />
					<Expression expressions="$pathfindingParams.useGeneratedNSO = true" />
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<AreaPresenceGate aiObjects="$__player" area="$banditsBehindRockStartMoving" amount="All" presence="Present" RunLogic="KeepRunning">
						<Sequence>
							<Expression expressions="$ptacekContinuesToFallenTree = true" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</AreaPresenceGate>
					<IfGate atomic="false" condition="$state ~= $enum:prepadeni_throughForrest.ToTheFirstCrossroad | &#10;$state ~= $enum:prepadeni_throughForrest.CrouchToTheFirstCrossroad" RunLogic="KeepRunning">
						<Parallel successMode="Any" failureMode="Any">
							<AreaPresenceGate aiObjects="$__player" area="$crossroadJindrichGoesWrongDirection" amount="All" presence="Present" RunLogic="KeepRunning">
								<Sequence>
									<SuppressFailure>
										<Function_speech_schedulerMonolog alias="&apos;prepadeni_ptacekUpozorniJindrichaZeJdeSpatne&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="36577270" />
									</SuppressFailure>
									<Callback_empty EventName="&apos;PtacekGoesBehindBoulder&apos;" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</AreaPresenceGate>
							<AreaPresenceGate aiObjects="$__player" area="$crossroadJindrichIsFasterThenPtacek" amount="All" presence="Present" RunLogic="KeepRunning">
								<Sequence>
									<Callback_empty EventName="&apos;BanditLeaderStartsMonolog&apos;" />
									<Callback_empty EventName="&apos;PtacekGoesBehindBoulder&apos;" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</AreaPresenceGate>
						</Parallel>
					</IfGate>
					<IfGate atomic="false" condition="$state ~= $enum:prepadeni_throughForrest.OverTheFallenTree | &#10;$state ~= $enum:prepadeni_throughForrest.ToTheRockPath | &#10;$state ~= $enum:prepadeni_throughForrest.ThroughTheRockPath" RunLogic="KeepRunning">
						<AreaPresenceGate aiObjects="$ptacekAndJindrich" area="$banditGoesBackToRock" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
							<Sequence>
								<Callback_empty EventName="&apos;BanditGoesBackToRock&apos;" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</AreaPresenceGate>
					</IfGate>
					<Loop count="-1">
						<IfGate atomic="false" condition="$state ~= $enum:prepadeni_throughForrest.ToTheEndOfBoulders &amp; &#10;$state ~= $enum:prepadeni_throughForrest.OverTheFallenTree &amp; &#10;$state ~= $enum:prepadeni_throughForrest.ToTheRockPath &amp; &#10;$state ~= $enum:prepadeni_throughForrest.ThroughTheRockPath &amp; &#10;$state ~= $enum:prepadeni_throughForrest.ToTheMaze &amp; &#10;$state ~= $enum:prepadeni_throughForrest.AtEntranceToMaze &amp; &#10;$state ~= $enum:prepadeni_throughForrest.AtTheMazeGuarding &amp; &#10;$state ~= $enum:prepadeni_throughForrest.AtTheEndOfMaze &amp; &#10;$state ~= $enum:prepadeni_throughForrest.ToTheEndOfRoad &amp; &#10;$state ~= $enum:prepadeni_throughForrest.Slide" RunLogic="KeepRunning">
							<Sequence>
								<CalculateLookDotProduct npc="$this.id" position="$__player" result="$dotProductGlobalResult" />
								<IfCondition failOnCondition="false" condition="$dotProductGlobalResult &gt; 0">
									<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="2.000000" High="5.000000" Negation="false" ValueOnMiddle="true" failOnCondition="false">
										<Sequence>
											<SuppressFailure>
												<Function_speech_schedulerMonolog alias="&apos;prepadeni_ptacekReagujeNaPredbihajicihoJindricha&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="true" nodeLabel="69960924" />
											</SuppressFailure>
											<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
									</DistanceCondition>
								</IfCondition>
								<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</IfGate>
					</Loop>
					<ContinuousSwitch>
						<IfCondition failOnCondition="false" condition="$state == $enum:prepadeni_throughForrest.None">
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$state == $enum:prepadeni_throughForrest.ToTheFirstCrossroad">
							<EntityContext context="crime_escalationLevel_investigating" target="$this.id">
								<Sequence>
									<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="8.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$walkToCrossroad" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									<Function_speech_monolog alias="&apos;prepadeni_ptacekSpatriBandity&apos;" canBeDelayed="false" context="" dramaticBark="false" lookAtId="" metarole="" target="$this.id" wait="false" nodeLabel="98564084" />
									<Callback_empty EventName="&apos;PtacekSeesLightAtCrossroad&apos;" />
								</Sequence>
							</EntityContext>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$state == $enum:prepadeni_throughForrest.CrouchToTheFirstCrossroad">
							<StanceElement smartObject="" stance="crouch" allowAny="false" enabled="true">
								<Parallel successMode="Any" failureMode="Any">
									<Sequence>
										<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$crouchToCrossroad" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
									<AreaPresenceGate aiObjects="$ptacekAndJindrich" area="$banditLeaderStartsMonolog" amount="All" presence="Present" RunLogic="KeepRunning">
										<Sequence>
											<Callback_empty EventName="&apos;BanditLeaderStartsMonolog&apos;" />
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
									</AreaPresenceGate>
								</Parallel>
							</StanceElement>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$state == $enum:prepadeni_throughForrest.AroundBoulder">
							<Parallel successMode="Any" failureMode="Any">
								<StanceElement smartObject="" stance="crouch" allowAny="false" enabled="true">
									<Sequence>
										<SuppressFailure>
											<Function_speech_schedulerMonolog alias="&apos;prepadeni_ptacekVeliJitKolemBalvanu&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="81790752" />
										</SuppressFailure>
										<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="2.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$aroundBoulder" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
										<SuppressFailure>
											<Function_speech_schedulerMonolog alias="&apos;prepadeni_ptacekPripravujeHraceNaAkci&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="95248007" />
										</SuppressFailure>
										<AreaPresenceGate aiObjects="$ptacekAndJindrich" area="$banditBehindBoulderStartsDialog" amount="All" presence="Present" RunLogic="KeepRunning">
											<Callback_empty EventName="&apos;BanditBehindBoulderStartsDialog&apos;" />
										</AreaPresenceGate>
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</StanceElement>
								<AreaPresenceGate aiObjects="$__player" area="$banditsBehindRockStartMoving" amount="All" presence="Present" RunLogic="KeepRunning">
									<Loop count="-1">
										<Sequence>
											<GameContextCheck context="crime_escalationLevel_script_global_confrontingGeneral" saveVersion="2">
												<Then canSkip="1">
													<Expression expressions="$jindrichWasSpoted = true" />
												</Then>
												<Else canSkip="1">
													<Expression expressions="$jindrichWasSpoted = false" />
												</Else>
											</GameContextCheck>
											<IfElseCondition failOnCondition="false" condition="$jindrichWasSpoted" saveVersion="2">
												<Then canSkip="1">
													<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
												</Then>
												<Else canSkip="1">
													<Sequence>
														<Callback_empty EventName="&apos;BanditBehindBoulderStartsDialog&apos;" />
														<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
													</Sequence>
												</Else>
											</IfElseCondition>
										</Sequence>
									</Loop>
								</AreaPresenceGate>
							</Parallel>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$state == $enum:prepadeni_throughForrest.ToTheEndOfBoulders">
							<StanceElement smartObject="" stance="crouch" allowAny="false" enabled="true">
								<Sequence>
									<SuppressFailure>
										<Function_speech_monolog alias="&apos;prepadeni_ptacekReagujeNaBandituKteryPrestalStrazit&apos;" canBeDelayed="false" context="" dramaticBark="false" lookAtId="" metarole="" target="$this.id" wait="false" nodeLabel="51257331" />
									</SuppressFailure>
									<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$toTheEndOfBoulders" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									<SuppressFailure>
										<Function_speech_schedulerMonolog alias="&apos;prepadeni_ptacekNaKonciBalvanu&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="61338024" />
									</SuppressFailure>
									<IfGate atomic="false" condition="$ptacekContinuesToFallenTree" RunLogic="KeepRunning">
										<Callback_empty EventName="&apos;BanditsBehindRockStartMoving&apos;" />
									</IfGate>
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</StanceElement>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$state == $enum:prepadeni_throughForrest.ToTheFallenTree">
							<StanceElement smartObject="" stance="crouch" allowAny="false" enabled="true">
								<AreaPresenceListener aiObjects="$banditsBehindRock" area="$banditsAtRocksInArea" trackIn="true" trackOut="true" reportInitialState="true">
									<IfElseCondition failOnCondition="false" condition="$__presence == true &amp; $barkAboutBanditsAtRocksDone == false" saveVersion="2">
										<Then canSkip="1">
											<AreaPresenceGate aiObjects="$banditsBehindRock" area="$ptacekSeesBanditsAtRock" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
												<Sequence>
													<SuppressFailure>
														<Function_speech_schedulerMonolog alias="&apos;prepadeni_ptacekReagujeNaBandityVychazejiciZpozaSkaly&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="42308880" />
													</SuppressFailure>
													<Expression expressions="$barkAboutBanditsAtRocksDone = true" />
												</Sequence>
											</AreaPresenceGate>
										</Then>
										<Else canSkip="1">
											<Sequence>
												<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="2.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$toFallenTree" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
												<SuppressFailure>
													<Function_speech_schedulerMonolog alias="&apos;prepadeni_ptacekPripravujeHraceNaAkci2&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="42713105" />
												</SuppressFailure>
												<ForceLook LookTarget="$banditsBehindRock[0]" DisableVariations="false">
													<AreaPresenceGate aiObjects="$banditsBehindRock" area="$banditsOnEndOfFallenTree" amount="All" presence="Present" RunLogic="KeepRunning">
														<SuppressFailure>
															<Function_speech_monolog alias="&apos;prepadeni_ptacekVeliPreskocitSpadenyStromABezet&apos;" canBeDelayed="false" context="" dramaticBark="false" lookAtId="" metarole="" target="$this.id" wait="false" nodeLabel="11484780" />
														</SuppressFailure>
													</AreaPresenceGate>
												</ForceLook>
												<Callback_empty EventName="&apos;PtacekAtFallenTree&apos;" />
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</Else>
									</IfElseCondition>
								</AreaPresenceListener>
							</StanceElement>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$state == $enum:prepadeni_throughForrest.OverTheFallenTree">
							<StanceElement smartObject="" stance="crouch" allowAny="false" enabled="true">
								<Sequence>
									<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="8.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$toTheRockPathCrouch" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$pathfindingParams" staminaPolicy="" pathInfo="" />
									<DistanceGate Origin="$this.id" ReferencePt="$toTheRockPathCrouch" Low="2.000000" High="2.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
										<Sequence>
											<CalculateLookDotProduct npc="$this.id" position="$__player" result="$dotProductResult" />
											<IfCondition failOnCondition="false" condition="$dotProductResult &lt; 0">
												<Sequence>
													<Turn target="$__player" align="false" />
													<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="4.000000" High="4.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
														<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="4.000000" High="4.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
															<Success />
														</DistanceGate>
													</DistanceCondition>
												</Sequence>
											</IfCondition>
										</Sequence>
									</DistanceGate>
									<SuppressFailure>
										<Function_speech_schedulerMonolog alias="&apos;prepadeni_ptacekPobiziJindricha&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="69553044" />
									</SuppressFailure>
									<Callback_empty EventName="&apos;PtacekSprintsToRockPath&apos;" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</StanceElement>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$state == $enum:prepadeni_throughForrest.ToTheRockPath">
							<StanceElement smartObject="" stance="standing" allowAny="false" enabled="true">
								<Sequence>
									<MoveParamsDecorator speed="Sprint" pathFindingParams="$pathfindingParams" doorClosingPolicy="Automatic">
										<UnstanceAction unstance="prepadeni_caponLookAround" locationObject="$toTheRockPath" slaveObject="" />
									</MoveParamsDecorator>
									<Callback_empty EventName="&apos;PtacekSeesBanditsInForest&apos;" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</StanceElement>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$state == $enum:prepadeni_throughForrest.ThroughTheRockPath">
							<StanceElement smartObject="" stance="standing" allowAny="false" enabled="true">
								<Sequence>
									<Expression expressions="$pathfindingParams.usePaths = false" />
									<Parallel successMode="All" failureMode="Any">
										<MoveParamsDecorator speed="Sprint" pathFindingParams="$pathfindingParams" doorClosingPolicy="Automatic">
											<UnstanceAction unstance="prepadeni_caponBreathing" locationObject="$toTheTreeAtHill" slaveObject="" />
										</MoveParamsDecorator>
										<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
											<Child canSkip="1">
												<SuppressFailure>
													<Function_speech_monolog alias="&apos;prepadeni_barkAtRocks&apos;" canBeDelayed="false" context="" dramaticBark="false" lookAtId="" metarole="" target="" wait="false" nodeLabel="43118790" />
												</SuppressFailure>
											</Child>
											<OnSuccess canSkip="1">
												<Sequence>
													<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
													<Callback_empty EventName="&apos;SecondGroupOfBanditsGoToRockPath&apos;" />
												</Sequence>
											</OnSuccess>
										</FuseBox>
									</Parallel>
									<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="9.000000" High="9.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
										<SuppressFailure>
											<Function_speech_monolog alias="&apos;prepadeni_atFallenTree&apos;" canBeDelayed="false" context="$__null" dramaticBark="false" lookAtId="$__null" metarole="" target="$this.id" wait="true" nodeLabel="70146409" />
										</SuppressFailure>
									</DistanceGate>
									<Callback_empty EventName="&apos;BanditArcherStartsShootingOnJindrich&apos;" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</StanceElement>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$state == $enum:prepadeni_throughForrest.ToTheMaze">
							<Sequence>
								<SuppressFailure>
									<Function_speech_monolog alias="&apos;prepadeni_escapeToCliff&apos;" canBeDelayed="false" context="$__null" dramaticBark="false" lookAtId="$__null" metarole="" target="$this.id" wait="false" nodeLabel="39752958" />
								</SuppressFailure>
								<UrgencyDecorator Urgency="Slow">
									<ExactMove directionType="AlignWithEntity" directionSpecification="$atEntranceToMaze" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$atEntranceToMaze" destinationSpecification2="" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
								</UrgencyDecorator>
								<Callback_empty EventName="&apos;PtacekIsWaitingAtEntranceToMaze&apos;" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$state == $enum:prepadeni_throughForrest.AtEntranceToMaze">
							<Loop count="-1">
								<Sequence>
									<UnstanceAction unstance="prepadeni_exhaustedLean" locationObject="$atEntranceToMaze" slaveObject="" />
									<SuppressFailure>
										<Function_speech_schedulerMonolog alias="&apos;prepadeni_ptacekUVstupuDoBludiste&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="88957552" />
									</SuppressFailure>
									<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</Loop>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$state == $enum:prepadeni_throughForrest.AtTheMazeGuarding">
							<Sequence>
								<DistanceCondition Origin="$this.id" ReferencePt="$atEntranceToMaze" Low="0.500000" High="0.500000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
									<UrgencyDecorator Urgency="Fast">
										<ExactMove directionType="AlignWithEntity" directionSpecification="$atEntranceToMaze" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$atEntranceToMaze" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									</UrgencyDecorator>
								</DistanceCondition>
								<UnstanceAction unstance="prepadeni_exhaustedLean" locationObject="$atEntranceToMaze" slaveObject="" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$state == $enum:prepadeni_throughForrest.TemporaryPlace">
							<Sequence>
								<TeleportAction Position="$temporaryPlaceInMaze" EndInterruptOnActionStart="false" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$state == $enum:prepadeni_throughForrest.BeforeEndOfMaze">
							<Sequence>
								<TeleportAction Position="$teleportBeforeExitFromMaze" EndInterruptOnActionStart="false" />
								<Callback_empty EventName="&apos;PtacekSeesJindrichAtTheEndOfMaze&apos;" />
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$state == $enum:prepadeni_throughForrest.AtTheEndOfMaze">
							<Sequence>
								<TeleportAction Position="$atTheEndOfMaze" EndInterruptOnActionStart="false" />
								<StanceElement smartObject="" stance="crouch" allowAny="false" enabled="true">
									<ExactMove directionType="AlignWithEntity" directionSpecification="$atTheEndOfMaze" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$atTheEndOfMaze" destinationSpecification2="" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
								</StanceElement>
								<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="6.000000" High="6.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
									<Callback_empty EventName="&apos;PtacekSeesJindrichAtTheEndOfMaze&apos;" />
								</DistanceGate>
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$state == $enum:prepadeni_throughForrest.ToTheEndOfRoad">
							<Sequence>
								<SuppressFailure>
									<Function_speech_monolog alias="&apos;prepadeni_ptacekNaKonciBludiste&apos;" canBeDelayed="false" context="$__null" dramaticBark="false" lookAtId="$__null" metarole="" target="$this.id" wait="false" nodeLabel="82327129" />
								</SuppressFailure>
								<MoveParamsDecorator speed="FastRun" pathFindingParams="$pathfindingParams" doorClosingPolicy="Automatic">
									<UnstanceAction unstance="prepadeni_caponSlide" locationObject="$slideAndBandit" slaveObject="" />
								</MoveParamsDecorator>
								<Callback_empty EventName="&apos;PtacekIsWaitingAtLastFallenTree&apos;" />
								<Loop count="-1">
									<Sequence>
										<SuppressFailure>
											<Function_speech_schedulerMonolog alias="&apos;prepadeni_ptacekBarkujePredKoncemTamhleSlezeme&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="30706532" />
										</SuppressFailure>
										<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</Loop>
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$state == $enum:prepadeni_throughForrest.Slide">
							<Sequence>
								<UnstanceElement unstance="prepadeni_caponSlide" locationObject="$slideAndBandit" slaveObject="" enabled="true">
									<AnimationAction fragment="&apos;CaponSlideOut&apos;" tags="" eventReferenceObject="" alignObject="$slideAndBandit" slaveObject="" resourceOverride="&apos;capon&apos;" allowTorchForPlayer="false" />
								</UnstanceElement>
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$state == $enum:prepadeni_throughForrest.Done">
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</IfCondition>
					</ContinuousSwitch>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="prepadeni_throughForrest" EventSet="prepadeni_throughForrest">
			<Variables>
				<Variable name="barkAboutBanditsAtRocksDone" comment="" />
				<Variable name="dotProductGlobalResult" comment="" />
				<Variable name="dotProductResult" comment="" />
				<Variable name="jindrichWasSpoted" comment="" />
				<Variable name="pathfindingParams" comment="" />
				<Variable name="ptacekAndJindrich" comment="" />
				<Variable name="ptacekContinuesToFallenTree" comment="" />
				<Variable name="slideAndBandit" comment="" />
				<Variable name="aroundBoulder" comment="" />
				<Variable name="atEntranceToMaze" comment="" />
				<Variable name="atTheEndOfMaze" comment="" />
				<Variable name="banditBehindBoulderStartsDialog" comment="" />
				<Variable name="banditGoesBackToRock" comment="" />
				<Variable name="banditLeaderStartsMonolog" comment="" />
				<Variable name="banditsAtRocksInArea" comment="" />
				<Variable name="banditsBehindRock" comment="" />
				<Variable name="banditsBehindRockStartMoving" comment="" />
				<Variable name="banditsOnEndOfFallenTree" comment="" />
				<Variable name="crossroadJindrichGoesWrongDirection" comment="" />
				<Variable name="crossroadJindrichIsFasterThenPtacek" comment="" />
				<Variable name="crouchToCrossroad" comment="" />
				<Variable name="ptacekSeesBanditsAtRock" comment="" />
				<Variable name="state" comment="" />
				<Variable name="teleportBeforeExitFromMaze" comment="" />
				<Variable name="temporaryPlaceInMaze" comment="" />
				<Variable name="toFallenTree" comment="" />
				<Variable name="toTheEndOfBoulders" comment="" />
				<Variable name="toTheRockPath" comment="" />
				<Variable name="toTheRockPathCrouch" comment="" />
				<Variable name="toTheTreeAtHill" comment="" />
				<Variable name="walkToCrossroad" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</PushToArray>
						<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</PushToArray>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</Sequence>
				</OnInit>
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</AreaPresenceGate>
						<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</SuppressFailure>
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</AreaPresenceGate>
								<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</AreaPresenceGate>
							</Parallel>
						</IfGate>
						<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</AreaPresenceGate>
						</IfGate>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<CalculateLookDotProduct hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</CalculateLookDotProduct>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_speech_schedulerMonolog>
												</SuppressFailure>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</DistanceCondition>
									</IfCondition>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</IfGate>
						</Loop>
						<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" comment_box="ke_krizovatce" comment_box_color="222,222,222,222" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
										<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_monolog>
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
									</Sequence>
								</EntityContext>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" comment_box="Ptacek_spatri_bandity" comment_box_color="222,222,222,222" breakpointFlags="0">
								<OutputBreakpoints />
								<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Move>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
										<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Callback_empty>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</AreaPresenceGate>
									</Parallel>
								</StanceElement>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" comment_box="k_balvanu" comment_box_color="222,222,222,222" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerMonolog>
											</SuppressFailure>
											<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Move>
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerMonolog>
											</SuppressFailure>
											<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Callback_empty>
											</AreaPresenceGate>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</StanceElement>
									<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GameContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Then>
													<Else>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Else>
												</GameContextCheck>
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Then>
													<Else>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Callback_empty>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
													</Else>
												</IfElseCondition>
											</Sequence>
										</Loop>
									</AreaPresenceGate>
								</Parallel>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" comment_box="na_konec_balvanu" comment_box_color="222,222,222,222" breakpointFlags="0">
								<OutputBreakpoints />
								<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_monolog>
										</SuppressFailure>
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</SuppressFailure>
										<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Callback_empty>
										</IfGate>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</StanceElement>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" comment_box="ke_spadenemu_stromu" comment_box_color="222,222,222,222" breakpointFlags="0">
								<OutputBreakpoints />
								<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AreaPresenceListener hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_speech_schedulerMonolog>
														</SuppressFailure>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Sequence>
												</AreaPresenceGate>
											</Then>
											<Else>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Move>
													<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_speech_schedulerMonolog>
													</SuppressFailure>
													<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_monolog>
															</SuppressFailure>
														</AreaPresenceGate>
													</ForceLook>
													<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Callback_empty>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</Else>
										</IfElseCondition>
									</AreaPresenceListener>
								</StanceElement>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" comment_box="ptacek_skace_pres_spadeny_strom" comment_box_color="222,222,222,222" breakpointFlags="0">
								<OutputBreakpoints />
								<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
										<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<CalculateLookDotProduct hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</CalculateLookDotProduct>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Turn>
														<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</DistanceGate>
														</DistanceCondition>
													</Sequence>
												</IfCondition>
											</Sequence>
										</DistanceGate>
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</SuppressFailure>
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</StanceElement>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" comment_box="do_skal" comment_box_color="222,222,222,222" breakpointFlags="0">
								<OutputBreakpoints />
								<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</UnstanceAction>
										</MoveParamsDecorator>
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</StanceElement>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" comment_box="zkrz_skalni_cestu" comment_box_color="222,222,222,222" breakpointFlags="0">
								<OutputBreakpoints />
								<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</UnstanceAction>
											</MoveParamsDecorator>
											<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Child>
													<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_speech_monolog>
													</SuppressFailure>
												</Child>
												<OnSuccess>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
														<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Callback_empty>
													</Sequence>
												</OnSuccess>
											</FuseBox>
										</Parallel>
										<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_monolog>
											</SuppressFailure>
										</DistanceGate>
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</StanceElement>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_monolog>
									</SuppressFailure>
									<UrgencyDecorator hasInputBreakpoint="0" comment="zkusit bez" breakpointFlags="0">
										<OutputBreakpoints />
										<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ExactMove>
									</UrgencyDecorator>
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</UnstanceAction>
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</SuppressFailure>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Loop>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</ExactMove>
										</UrgencyDecorator>
									</DistanceCondition>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</TeleportAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</TeleportAction>
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</TeleportAction>
									<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ExactMove>
									</StanceElement>
									<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
									</DistanceGate>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_monolog>
									</SuppressFailure>
									<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</UnstanceAction>
									</MoveParamsDecorator>
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerMonolog>
											</SuppressFailure>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</Loop>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AnimationAction>
									</UnstanceElement>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</IfCondition>
						</ContinuousSwitch>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_barkAfterDuel" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ForceLook LookTarget="$__player" DisableVariations="false">
					<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
						<Child canSkip="1">
							<Sequence>
								<Function_speech_monolog alias="$data" canBeDelayed="true" context="" dramaticBark="false" lookAtId="$__player" metarole="" target="" wait="false" nodeLabel="82733892" />
								<Parallel successMode="Any" failureMode="Any">
									<Loop count="-1">
										<Sequence>
											<Turn target="$__player" align="false" />
											<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										</Sequence>
									</Loop>
									<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="6.000000" High="6.000000" Negation="true" OpenInMiddle="false" RunLogic="KeepRunning">
										<Success />
									</DistanceGate>
								</Parallel>
							</Sequence>
						</Child>
						<OnSuccess canSkip="1">
							<Callback_empty EventName="&apos;OnFinished&apos;" />
						</OnSuccess>
					</FuseBox>
				</ForceLook>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="stringData" EventSet="endNotification">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_monolog>
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Turn>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</Loop>
										<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</DistanceGate>
									</Parallel>
								</Sequence>
							</Child>
							<OnSuccess>
								<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Callback_empty>
							</OnSuccess>
						</FuseBox>
					</ForceLook>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="player_stoppedByBandit" is_function="0">
		<Variables>
			<Variable name="slideAndBandit" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;slideAndBandit&apos;" prune="true" negprune="unknown" Parent="" Child="$slideAndBandit" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<UrgencyDecorator Urgency="Instant">
					<EntityContext context="item_pickupAnimEventNonTemporal" target="">
						<Sequence>
							<JoinedAnimationAction requiresMovement="false" lockContext="$slideAndBandit" lockName="&apos;prepadeni_stoppedByBandit&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="true" fragment="&apos;Quest_Prepadeni_StoppedByBandit_Player&apos;" tags="" eventReferenceObject="$slideAndBandit" alignObject="$slideAndBandit" slaveObject="" resourceOverride="&apos;player&apos;" allowTorchForPlayer="false" />
							<Callback_empty EventName="&apos;OnFinished&apos;" />
						</Sequence>
					</EntityContext>
				</UrgencyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="slideAndBandit" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="4" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</JoinedAnimationAction>
								<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Callback_empty>
							</Sequence>
						</EntityContext>
					</UrgencyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bandit_stopsPlayer" is_function="0">
		<Variables>
			<Variable name="assaultData" type="crime:assaultData" values="" isPersistent="0" form="single" />
			<Variable name="helper" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="slideAndBandit" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="transform" type="transform" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;slideAndBandit&apos;" prune="true" negprune="unknown" Parent="" Child="$slideAndBandit" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<Sequence>
						<GetHelper smartObjectName="$slideAndBandit" helperName="&apos;prepadeni_slideAndBandit&apos;" categoryName="" targetVar="$helper" policy="Name" />
						<GetAnimationHelperData smartObject="$slideAndBandit" helperID="$helper" fragment="&apos;Quest_Prepadeni_StoppedByBandit_Bandit&apos;" tags="" positionTargetVar="" orientationTargetVar="" transformTargetVar="$transform" />
						<SetSpatialInfo In="$this.id" Val="$transform" What="Transform" />
					</Sequence>
					<UrgencyDecorator Urgency="Instant">
						<EntityContext context="item_pickupAnimEventNonTemporal" target="">
							<JoinedAnimationAction requiresMovement="false" lockContext="$slideAndBandit" lockName="&apos;prepadeni_stoppedByBandit&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="true" fragment="&apos;Quest_Prepadeni_StoppedByBandit_Bandit&apos;" tags="" eventReferenceObject="$slideAndBandit" alignObject="$slideAndBandit" slaveObject="" resourceOverride="&apos;bandit&apos;" allowTorchForPlayer="false" />
						</EntityContext>
					</UrgencyDecorator>
					<Expression expressions="$assaultData.attacker = $__player &#10;$assaultData.victim = $this.id" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Function_callInterrupt_attack alreadyCriminal="false" assaultData="" defenceMode="false" escalatedFromFailedSurrender="false" freshlyAttributedCrime="false" ignorePriority="true" information="" initiator="$enum:switch_interruptInitiator.concept" previousReaction="$enum:crime_reactionKind.unknown" priority="233" questBehavior="true" relationOverride="true" stimulusKind="$enum:crime_stimulusKind.enemy" target="$__player" nodeLabel="87744715" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="assaultData" comment="" />
				<Variable name="helper" comment="" />
				<Variable name="slideAndBandit" comment="" />
				<Variable name="transform" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="4" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GetHelper hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetHelper>
							<GetAnimationHelperData hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetAnimationHelperData>
							<SetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</SetSpatialInfo>
						</Sequence>
						<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</JoinedAnimationAction>
							</EntityContext>
						</UrgencyDecorator>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Function_callInterrupt_attack editorPosX="360" editorPosY="590" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Function_callInterrupt_attack>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="player_teleportOnHorse" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$data" stance="horse" allowAny="false" enabled="true">
					<Sequence>
						<WaitAction />
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_atFireplace" is_function="0">
		<Variables>
			<Variable name="result" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$__resource.id" stance="sitting" allowAny="false" enabled="true">
					<Parallel successMode="Any" failureMode="Any">
						<Sequence>
							<WaitAction />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
						<Sequence>
							<Loop count="-1">
								<Sequence>
									<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
									<NotSeenByPlayer target="$this.id" timespan="&apos;3s&apos;" result="$result" />
									<IfCondition failOnCondition="false" condition="$result">
										<Sequence>
											<Callback_empty EventName="&apos;OnFinished&apos;" />
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										</Sequence>
									</IfCondition>
								</Sequence>
							</Loop>
						</Sequence>
					</Parallel>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="endNotification">
			<Variables>
				<Variable name="result" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
										<NotSeenByPlayer hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</NotSeenByPlayer>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Callback_empty>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</IfCondition>
									</Sequence>
								</Loop>
							</Sequence>
						</Parallel>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_sprintsToEndOfMaze" is_function="0">
		<Variables>
			<Variable name="pathfindingParams" type="pathFindingParams" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$pathfindingParams.useGeneratedNSO = true &#10;$pathfindingParams.usePaths = false" />
					<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="$pathfindingParams" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<StanceElement smartObject="" stance="crouch" allowAny="false" enabled="true">
						<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					</StanceElement>
					<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="6.000000" High="6.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</DistanceGate>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="pathfindingParams" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExactMove>
						</StanceElement>
						<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</DistanceGate>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bandit_goesBackAndForth" is_function="0">
		<Variables>
			<Variable name="predefinedPathParams" type="predefinedPathParams" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$predefinedPathParams.reversePath = true &#10;$predefinedPathParams.approachFirstNode = true" />
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuid" destinationSpecification2="$predefinedPathParams" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="81008523" />
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="76987447" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="predefinedPathParams" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_schedulerMonolog>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_schedulerMonolog>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="voves_cooking" is_function="0">
		<Variables>
			<Variable name="fireplace" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;fireplace&apos;" prune="true" negprune="unknown" Parent="" Child="$fireplace" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="camper_cooking" locationObject="$fireplace" slaveObject="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="fireplace" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="horse_goto" is_function="0">
		<Variables>
			<Variable name="waitingSpot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;waitingSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$waitingSpot" Data="" />
					</GraphSearch>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$waitingSpot" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$waitingSpot" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="waitingSpot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_barkingOn" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="lookAt" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" optional="1" />
			<Variable name="subtitlesDown" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Loop count="-1">
						<Sequence>
							<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
							<Turn target="$lookAt" align="false" />
						</Sequence>
					</Loop>
					<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
						<Child canSkip="1">
							<Function_speech_schedulerMonolog alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$lookAt" metarole="" skipInLod="false" subtitlesDown="$subtitlesDown" nodeLabel="28460071" />
						</Child>
						<OnSuccess canSkip="1">
							<Callback_empty EventName="&apos;OnFinished&apos;" />
						</OnSuccess>
					</FuseBox>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="aliasSchedulerMonolog" EventSet="endNotification">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="lookAt" comment="" />
				<Variable name="subtitlesDown" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
								<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Turn>
							</Sequence>
						</Loop>
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerMonolog>
							</Child>
							<OnSuccess>
								<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Callback_empty>
							</OnSuccess>
						</FuseBox>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bandit_goesAlongPredefinedPath" is_function="0">
		<Variables>
			<Variable name="predefinedPathParams" type="predefinedPathParams" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="$predefinedPathParams" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="predefinedPathParams" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>