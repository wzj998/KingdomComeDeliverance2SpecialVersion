<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="cry" is_function="0">
    <Variables>
      <Variable name="crySpot" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="intRef" type="_int" values="" isPersistent="0" form="single" requirementType="ConstReference" />
      <Variable name="stringRef" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;veprCrySpot&apos;" prune="true" negprune="unknown" Parent="" Child="$crySpot" Data="" />
          </GraphSearch>
          <ExactMove directionType="AlignWithEntity" directionSpecification="$crySpot" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$crySpot" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
          <UnstanceElement unstance="s60_staryMistr_villagerNervousMale" locationObject="" slaveObject="" enabled="true">
            <ContinuousSwitch>
              <IfCondition failOnCondition="false" condition="$intRef == 0 | $intRef == 2 | $intRef == 3">
                <Loop count="-1">
                  <DistanceGate Origin="$this.id" ReferencePt="$__player" Low="4.500000" High="4.500000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
                    <Sequence>
                      <WaitAction />
                      <IfElseCondition failOnCondition="false" condition="$intRef == 0" saveVersion="2">
                        <Then canSkip="1">
                          <Function_speech_schedulerMonolog alias="$stringRef" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="89415905" />
                        </Then>
                        <Else canSkip="1">
                          <Function_speech_schedulerMonolog alias="$stringRef" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$__player" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="85146289" />
                        </Else>
                      </IfElseCondition>
                      <Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
                    </Sequence>
                  </DistanceGate>
                </Loop>
              </IfCondition>
              <IfCondition failOnCondition="false" condition="$intRef == 1">
                <Sequence>
                  <Turn target="$__player" align="false" />
                  <Function_speech_schedulerMonolog alias="$stringRef" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$__player" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="35198389" />
                  <Loop count="-1">
                    <Sequence>
                      <WaitAction />
                      <Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
                    </Sequence>
                  </Loop>
                </Sequence>
              </IfCondition>
            </ContinuousSwitch>
          </UnstanceElement>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="intRef_stringRef" EventSet="">
      <Variables>
        <Variable name="crySpot" comment="" />
        <Variable name="intRef" comment="" />
        <Variable name="stringRef" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </ExactMove>
            <UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </WaitAction>
                        <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                          <OutputBreakpoints />
                          <Then>
                            <Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Function_speech_schedulerMonolog>
                          </Then>
                          <Else>
                            <Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Function_speech_schedulerMonolog>
                          </Else>
                        </IfElseCondition>
                        <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Wait>
                      </Sequence>
                    </DistanceGate>
                  </Loop>
                </IfCondition>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Turn>
                    <Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Function_speech_schedulerMonolog>
                    <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </WaitAction>
                        <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Wait>
                      </Sequence>
                    </Loop>
                  </Sequence>
                </IfCondition>
              </ContinuousSwitch>
            </UnstanceElement>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="HeyHenry" is_function="0">
    <Variables>
      <Variable name="isPlayerInArea" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="soulsInArea" type="_wuid" values="" isPersistent="0" form="array" />
    </Variables>
    <Parameters>
      <Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <PushToArray array="$soulsInArea" value="$__player" direction="Back" />
          <Parallel successMode="Any" failureMode="Any">
            <Loop count="-1">
              <AreaPresenceGate aiObjects="$soulsInArea" area="$wuid" amount="AtLeastOne" presence="Present" RunLogic="Halt">
                <DistanceGate Origin="$this.id" ReferencePt="$__player" Low="10.000000" High="10.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
                  <FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
                    <Child canSkip="1">
                      <Sequence>
                        <Expression expressions="$isPlayerInArea = true" />
                        <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
                      </Sequence>
                    </Child>
                    <OnSuccess canSkip="1">
                      <Expression expressions="$isPlayerInArea = false" />
                    </OnSuccess>
                  </FuseBox>
                </DistanceGate>
              </AreaPresenceGate>
            </Loop>
            <UnstanceElement unstance="LeaningBack" locationObject="$__resource.id" slaveObject="" enabled="true">
              <ContinuousSwitch>
                <IfCondition failOnCondition="false" condition="$isPlayerInArea == false">
                  <Sequence>
                    <WaitAction />
                    <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
                  </Sequence>
                </IfCondition>
                <IfCondition failOnCondition="false" condition="$isPlayerInArea == true">
                  <Loop count="-1">
                    <Sequence>
                      <Parallel successMode="All" failureMode="Any">
                        <AnimationAction fragment="&apos;GreetingsUpperBody&apos;" tags="&apos;waveSmall&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
                        <Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$__player" metarole="" subtitlesDown="false" nodeLabel="26129997" />
                      </Parallel>
                      <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
                    </Sequence>
                  </Loop>
                </IfCondition>
              </ContinuousSwitch>
            </UnstanceElement>
          </Parallel>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="wuidData_string" EventSet="">
      <Variables>
        <Variable name="isPlayerInArea" comment="" />
        <Variable name="soulsInArea" comment="" />
        <Variable name="string" comment="" />
        <Variable name="wuid" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </PushToArray>
            <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                      <OutputBreakpoints />
                      <Child>
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Expression>
                          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Wait>
                        </Sequence>
                      </Child>
                      <OnSuccess>
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                      </OnSuccess>
                    </FuseBox>
                  </DistanceGate>
                </AreaPresenceGate>
              </Loop>
              <UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </WaitAction>
                      <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Wait>
                    </Sequence>
                  </IfCondition>
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </AnimationAction>
                          <Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Function_speech_schedulerMonolog>
                        </Parallel>
                        <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Wait>
                      </Sequence>
                    </Loop>
                  </IfCondition>
                </ContinuousSwitch>
              </UnstanceElement>
            </Parallel>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="teleport" is_function="0">
    <Variables />
    <Parameters>
      <Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <TeleportAction Position="$destination" EndInterruptOnActionStart="false" />
          <Callback_empty EventName="&apos;OnFinished&apos;" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="teleport" EventSet="endNotification">
      <Variables>
        <Variable name="destination" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </TeleportAction>
            <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Callback_empty>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>