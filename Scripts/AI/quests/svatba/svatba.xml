<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="npc_goToTagpoint" is_function="0">
		<Variables>
			<Variable name="tagpointDirection" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="tagpointName" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="tagpointPosition" type="vec3" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="phase" type="_int" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
					<Sequence>
						<Concatenation OutString="$tagpointName" Pattern="&apos;svatba_;$this.name;_phase_;$phase&apos;" />
						<ExecuteLua code="local tagpointPosAndDir = System.GetEntityPositionAndDirection(data.tagpointName) &#10;data.tagpointPosition  = tagpointPosAndDir[0] &#10;data.tagpointDirection  = tagpointPosAndDir[1]" />
						<ExactMove directionType="FromVariable" directionSpecification="$tagpointDirection" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$tagpointPosition" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</EntityContextElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="intData" EventSet="">
			<Variables>
				<Variable name="tagpointDirection" comment="" />
				<Variable name="tagpointName" comment="" />
				<Variable name="tagpointPosition" comment="" />
				<Variable name="phase" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Concatenation>
							<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExecuteLua>
							<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExactMove>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</EntityContextElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_drinking" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_dancing" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<DistanceCondition Origin="$this.id" ReferencePt="$wuid" Low="0.000000" High="1.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
						<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
							<ExactMove directionType="AlignWithEntity" directionSpecification="$wuid" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
						</MoveParamsDecorator>
					</DistanceCondition>
					<UnstanceAction unstance="$string" locationObject="$wuid" slaveObject="" />
					<Wait duration="&apos;7s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
							</MoveParamsDecorator>
						</DistanceCondition>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_waiting" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="guard_atToilet" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Parallel successMode="All" failureMode="Any">
						<SuppressFailure>
							<Function_speech_schedulerMonolog alias="&apos;svatba_jaSePochciju&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="45281788" />
						</SuppressFailure>
						<Sequence>
							<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							<UnstanceAction unstance="npc_nervous2" locationObject="" slaveObject="" />
						</Sequence>
					</Parallel>
					<Function_speech_schedulerMonolog alias="&apos;svatba_straznyCekaNaZachod&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="78446687" />
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerMonolog>
							</SuppressFailure>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExactMove hasInputBreakpoint="0" comment="prerusuje unstance?" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
							</Sequence>
						</Parallel>
						<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_schedulerMonolog>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="guard_smokeBreak" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<ForceLook LookTarget="$__player" DisableVariations="false">
						<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
					</ForceLook>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</ForceLook>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="guard_stepAside" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_chat" is_function="0">
		<Variables>
			<Variable name="chatDistance" type="_float" values="5" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="$chatDistance" High="$chatDistance" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
					<ForceLook LookTarget="$__player" DisableVariations="false">
						<Sequence>
							<Function_speech_dialogInitiator alias="$data" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="$__null" customParameters="$__null" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="94049194" />
							<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</ForceLook>
				</DistanceGate>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="stringData" EventSet="">
			<Variables>
				<Variable name="chatDistance" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_dialogInitiator>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</ForceLook>
					</DistanceGate>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_ingameDialogInitiator" is_function="1">
		<Variables>
			<Variable name="count" type="_int" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$count = #participants" />
					<Synchronize SemaphoreCount="$count" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$alias&apos;" RunLogic="KeepRunning">
						<Function_speech_polylogInitiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="$__null" customParameters="$__null" metarole="" participants="$participants" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="93809856" />
					</Synchronize>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="forcePolylogData" EventSet="">
			<Variables>
				<Variable name="count" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="participants" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_speech_polylogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_polylogInitiator>
						</Synchronize>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_ingameDialogRecipient" is_function="1">
		<Variables>
			<Variable name="count" type="_int" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$count = #participants" />
					<Synchronize SemaphoreCount="$count" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$alias&apos;" RunLogic="KeepRunning">
						<Success />
					</Synchronize>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="forcePolylogData" EventSet="">
			<Variables>
				<Variable name="count" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="participants" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Synchronize>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_ingameSittingDialogInitiator" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$__resource.id" stance="sitting" allowAny="false">
					<Sequence>
						<WaitAction />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						<Function_npc_ingameDialogInitiator alias="$alias" participants="$participants" nodeLabel="46306324" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="forcePolylogData" EventSet="">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="participants" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<Function_npc_ingameDialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_npc_ingameDialogInitiator>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_ingameSittingDialogRecipient" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$__resource.id" stance="sitting" allowAny="false">
					<Sequence>
						<WaitAction />
						<Function_npc_ingameDialogRecipient alias="$alias" participants="$participants" nodeLabel="96971122" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="forcePolylogData" EventSet="">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="participants" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Function_npc_ingameDialogRecipient hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_npc_ingameDialogRecipient>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_waitingSitting" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$__resource.id" stance="sitting" allowAny="false" enabled="true">
					<Sequence>
						<WaitAction />
						<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_drunked" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="svatba_drawWeapon" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<DrawAction WeaponSet="Primary" fullBody="false" tags="" useSelectedWeaponSet="false" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="endNotification">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</DrawAction>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_chatStanding" is_function="0">
		<Variables>
			<Variable name="chatDistance" type="_float" values="5" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Parallel successMode="Any" failureMode="Any">
						<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="$chatDistance" High="$chatDistance" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
							<Function_speech_dialogInitiator alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="$__null" customParameters="$__null" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="20288258" />
						</DistanceGate>
						<Loop count="-1">
							<Sequence>
								<Turn target="$__player" align="false" />
								<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</Loop>
					</Parallel>
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="chatDistance" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_dialogInitiator>
							</DistanceGate>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Turn>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Loop>
						</Parallel>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_crying" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$wuid" stance="sitting" allowAny="false" enabled="true">
					<Sequence>
						<MoveParamsDecorator speed="Run" pathFindingParams="" doorClosingPolicy="Automatic">
							<UnstanceAction unstance="specialSittingActivity_female_noTable_crying" locationObject="" slaveObject="" />
						</MoveParamsDecorator>
						<Loop count="-1">
							<Sequence>
								<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" subtitlesDown="false" nodeLabel="28921113" />
								<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</Loop>
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
							</MoveParamsDecorator>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Loop>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="svatba_playerPoisoned" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					<ExecuteLua code="local ent = XGenAIModule.GetEntityByWUID(entity.this.id) &#10;ent.soul:DealDamage(0, 0, entity.this.id, false)" />
					<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="-80" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExecuteLua>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_removeWeapon" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<IfCondition failOnCondition="false" condition="~$data" />
					</Child>
					<OnSuccess canSkip="1">
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="bool" EventSet="endNotification">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</IfCondition>
						</Child>
						<OnSuccess>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_cheering" is_function="0">
		<Variables>
			<Variable name="index" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="unstance" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$wuid" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Wait duration="&apos;0s&apos;" timeType="GameTime" doFail="false" variation="&apos;5s&apos;" />
					<Loop count="-1">
						<Sequence>
							<HasGenderCheck Gender="Female" SoulWUID="$this.id" FailSubtMissing="false" saveVersion="2">
								<Then canSkip="1">
									<GenerateRandomInteger lowerBoundary="1" upperBoundary="2" result="$index" />
								</Then>
								<Else canSkip="1">
									<GenerateRandomInteger lowerBoundary="1" upperBoundary="5" result="$index" />
								</Else>
							</HasGenderCheck>
							<Concatenation OutString="$unstance" Pattern="&apos;tournamentCrowd_standing_;$index&apos;" />
							<UnstanceAction unstance="$unstance" locationObject="$wuid" slaveObject="" />
							<UnstanceElement unstance="$unstance" locationObject="$wuid" slaveObject="" enabled="true">
								<Parallel successMode="All" failureMode="Any">
									<RandomGate opensWithChance="0.500000" saveVersion="2">
										<Then canSkip="1">
											<AnimationAction fragment="&apos;TournamentCrowdHappy&apos;" tags="$unstance" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
										</Then>
										<Else canSkip="1">
											<AnimationAction fragment="&apos;TournamentCrowdSad&apos;" tags="$unstance" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
										</Else>
									</RandomGate>
									<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="53180361" />
								</Parallel>
							</UnstanceElement>
						</Sequence>
					</Loop>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="index" comment="" />
				<Variable name="unstance" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<GenerateRandomInteger hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GenerateRandomInteger>
									</Then>
									<Else>
										<GenerateRandomInteger hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GenerateRandomInteger>
									</Else>
								</HasGenderCheck>
								<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Concatenation>
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
								<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</AnimationAction>
											</Then>
											<Else>
												<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</AnimationAction>
											</Else>
										</RandomGate>
										<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_schedulerMonolog>
									</Parallel>
								</UnstanceElement>
							</Sequence>
						</Loop>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_barking" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="duration" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$__resource.id" stance="sitting" allowAny="false">
					<Sequence>
						<WaitAction />
						<Function_speech_schedulerMonolog alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="59808594" />
						<Wait duration="$duration" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="svatba_barking" EventSet="">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="duration" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_schedulerMonolog>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="test_equipWeapon" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="" stance="standing" allowAny="false">
					<Sequence>
						<WaitAction />
						<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_chatAndIngameDialog" is_function="0">
		<Variables>
			<Variable name="chatDistance" type="_float" values="5" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="aliasChat" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="aliasPolylog" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					<Function_npc_ingameDialogInitiator alias="$aliasPolylog" participants="$participants" nodeLabel="22251301" />
					<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="$chatDistance" High="$chatDistance" Negation="false" ValueOnMiddle="false" failOnCondition="false">
						<Function_speech_dialogInitiator alias="$aliasChat" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="$__null" customParameters="$__null" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="77294319" />
					</DistanceCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="svatba_chatAndIngameDialog" EventSet="">
			<Variables>
				<Variable name="chatDistance" comment="" />
				<Variable name="aliasChat" comment="" />
				<Variable name="aliasPolylog" comment="" />
				<Variable name="participants" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<Function_npc_ingameDialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_npc_ingameDialogInitiator>
						<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_dialogInitiator>
						</DistanceCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="doubravka_chatAndMonolog" is_function="0">
		<Variables>
			<Variable name="chatDistance" type="_float" values="5" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="aliasChat" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="aliasMonolog" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Parallel successMode="Any" failureMode="Any">
						<Loop count="-1">
							<Sequence>
								<Turn target="$__player" align="false" />
								<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</Loop>
						<ForceLook LookTarget="$__player" DisableVariations="false">
							<Sequence>
								<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="$chatDistance" High="$chatDistance" Negation="false" ValueOnMiddle="false" failOnCondition="false">
									<Function_speech_dialogInitiator alias="$aliasChat" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="$__null" customParameters="$__null" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="48325322" />
								</DistanceCondition>
								<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
								<Function_speech_schedulerMonolog alias="$aliasMonolog" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" subtitlesDown="false" nodeLabel="24823989" />
								<Wait duration="&apos;30s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</ForceLook>
					</Parallel>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="svatba_chatAndMonolog" EventSet="">
			<Variables>
				<Variable name="chatDistance" comment="" />
				<Variable name="aliasChat" comment="" />
				<Variable name="aliasMonolog" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-110" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Turn>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Loop>
							<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_dialogInitiator>
									</DistanceCondition>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</ForceLook>
						</Parallel>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="komori_searchingForConcubine" is_function="0">
		<Variables>
			<Variable name="choosingNextTagpoint" type="_bool" values="true" isPersistent="0" form="single" />
			<Variable name="currentTagpoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="nextTagpoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="previousTagpoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="searchingPoints" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;currentTagpoint&apos;" prune="true" negprune="unknown" Parent="" Child="$currentTagpoint" Data="" />
							</GraphSearch>
							<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;previousTagpoint&apos;" prune="true" negprune="unknown" Parent="" Child="$previousTagpoint" Data="" />
							</GraphSearch>
							<IfCondition failOnCondition="false" condition="$currentTagpoint ~= $__null">
								<Sequence>
									<ExactMove directionType="AlignWithEntity" directionSpecification="$currentTagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$currentTagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
									<Parallel successMode="All" failureMode="Any">
										<UnstanceAction unstance="LookingAround" locationObject="$currentTagpoint" slaveObject="" />
										<Function_speech_schedulerMonolog alias="&apos;svatba_komoriHledaKurtyzanu&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="52875838" />
									</Parallel>
								</Sequence>
							</IfCondition>
							<While doFail="false" propagateChildFail="false" condition="$choosingNextTagpoint">
								<Sequence>
									<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;searchingPoint&apos;" prune="true" negprune="unknown" Parent="" Child="$nextTagpoint" Data="" />
									</GraphSearch>
									<IfCondition failOnCondition="false" condition="$nextTagpoint ~= $currentTagpoint &amp; $nextTagpoint ~= $previousTagpoint">
										<AtomicDecorator>
											<Sequence>
												<IfCondition failOnCondition="false" condition="$currentTagpoint ~= $__null">
													<RemoveLink From="$this.id" To="$currentTagpoint" Tag="&apos;currentTagpoint&apos;" LinkOpHandleMode="Error" />
												</IfCondition>
												<IfCondition failOnCondition="false" condition="$previousTagpoint ~= $__null">
													<RemoveLink From="$this.id" To="$previousTagpoint" Tag="&apos;previousTagpoint&apos;" LinkOpHandleMode="Error" />
												</IfCondition>
												<Expression expressions="$previousTagpoint = $currentTagpoint &#10;$currentTagpoint = $nextTagpoint &#10;$choosingNextTagpoint = false" />
												<IfCondition failOnCondition="false" condition="$previousTagpoint ~= $__null">
													<AddLink From="$this.id" To="$previousTagpoint" Tag="&apos;previousTagpoint&apos;" Data="" LinkOpHandleMode="Error" />
												</IfCondition>
												<AddLink From="$this.id" To="$currentTagpoint" Tag="&apos;currentTagpoint&apos;" Data="" LinkOpHandleMode="Error" />
											</Sequence>
										</AtomicDecorator>
									</IfCondition>
								</Sequence>
							</While>
						</Sequence>
					</Child>
					<OnFail canSkip="1">
						<Sequence>
							<IfCondition failOnCondition="false" condition="$currentTagpoint ~= $__null">
								<RemoveLink From="$this.id" To="$currentTagpoint" Tag="&apos;currentTagpoint&apos;" LinkOpHandleMode="Error" />
							</IfCondition>
							<IfCondition failOnCondition="false" condition="$previousTagpoint ~= $__null">
								<RemoveLink From="$this.id" To="$previousTagpoint" Tag="&apos;previousTagpoint&apos;" LinkOpHandleMode="Error" />
							</IfCondition>
						</Sequence>
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="choosingNextTagpoint" comment="" />
				<Variable name="currentTagpoint" comment="" />
				<Variable name="nextTagpoint" comment="" />
				<Variable name="previousTagpoint" comment="" />
				<Variable name="searchingPoints" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ExactMove>
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<OutputBreakpoints />
											</UnstanceAction>
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</Parallel>
									</Sequence>
								</IfCondition>
								<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</RemoveLink>
													</IfCondition>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</RemoveLink>
													</IfCondition>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</AddLink>
													</IfCondition>
													<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</AddLink>
												</Sequence>
											</AtomicDecorator>
										</IfCondition>
									</Sequence>
								</While>
							</Sequence>
						</Child>
						<OnFail>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</RemoveLink>
								</IfCondition>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</RemoveLink>
								</IfCondition>
							</Sequence>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_nervous" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<UnstanceAction unstance="npc_nervous2" locationObject="" slaveObject="" />
					<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="myska_goTo" is_function="0">
		<Variables>
			<Variable name="lookingAtJindrich" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="myskaLookingAtJindrichArea" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
					<Sequence>
						<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;myskaLookingAtJindrich&apos;" prune="true" negprune="unknown" Parent="" Child="$myskaLookingAtJindrichArea" Data="" />
						</GraphSearch>
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
						<Turn target="$tagpoint" align="true" />
						<Loop count="-1">
							<Sequence>
								<AreaPresenceGate aiObjects="$__player" area="$myskaLookingAtJindrichArea" amount="AtLeastOne" presence="Present" RunLogic="Halt">
									<ForceLook LookTarget="$__player" DisableVariations="false">
										<Sequence>
											<Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="" />
											<Loop count="-1">
												<Sequence>
													<Turn target="$__player" align="false" />
													<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
												</Sequence>
											</Loop>
										</Sequence>
									</ForceLook>
								</AreaPresenceGate>
								<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
								<Turn target="$tagpoint" align="true" />
							</Sequence>
						</Loop>
					</Sequence>
				</MoveParamsDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="lookingAtJindrich" comment="" />
				<Variable name="myskaLookingAtJindrichArea" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
							<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Turn>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
												<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Turn>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Sequence>
												</Loop>
											</Sequence>
										</ForceLook>
									</AreaPresenceGate>
									<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Move>
									<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Turn>
								</Sequence>
							</Loop>
						</Sequence>
					</MoveParamsDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_bark" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<WaitAction />
					<Function_speech_schedulerMonolog alias="$data" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="37466153" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="stringData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_schedulerMonolog>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="huntsman_sittingOnBench" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$data" stance="sitting" allowAny="false">
					<Sequence>
						<WaitAction />
						<Function_speech_schedulerMonolog alias="&apos;svatba_hajnyNaNohach&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="84741609" />
						<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_schedulerMonolog>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="huntsman_standUp" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_searchingForNpc" is_function="0">
		<Variables>
			<Variable name="choosingNextTagpoint" type="_bool" values="true" isPersistent="0" form="single" />
			<Variable name="currentTagpoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="nextTagpoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="previousTagpoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="searchingPoints" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="searchingPointName" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;currentTagpoint&apos;" prune="true" negprune="unknown" Parent="" Child="$currentTagpoint" Data="" />
							</GraphSearch>
							<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;previousTagpoint&apos;" prune="true" negprune="unknown" Parent="" Child="$previousTagpoint" Data="" />
							</GraphSearch>
							<IfCondition failOnCondition="false" condition="$currentTagpoint ~= $__null">
								<Sequence>
									<ExactMove directionType="AlignWithEntity" directionSpecification="$currentTagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$currentTagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
									<Parallel successMode="All" failureMode="Any">
										<HasGenderCheck Gender="Male" SoulWUID="$this.id" FailSubtMissing="false" saveVersion="2">
											<Then canSkip="1">
												<UnstanceAction unstance="LookingAround" locationObject="$currentTagpoint" slaveObject="" />
											</Then>
										</HasGenderCheck>
										<Function_speech_schedulerMonolog alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="34408689" />
									</Parallel>
								</Sequence>
							</IfCondition>
							<While doFail="false" propagateChildFail="false" condition="$choosingNextTagpoint">
								<Sequence>
									<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="$searchingPointName" prune="true" negprune="unknown" Parent="" Child="$nextTagpoint" Data="" />
									</GraphSearch>
									<IfCondition failOnCondition="false" condition="$nextTagpoint ~= $currentTagpoint &amp; $nextTagpoint ~= $previousTagpoint">
										<AtomicDecorator>
											<Sequence>
												<IfCondition failOnCondition="false" condition="$currentTagpoint ~= $__null">
													<RemoveLink From="$this.id" To="$currentTagpoint" Tag="&apos;currentTagpoint&apos;" LinkOpHandleMode="Error" />
												</IfCondition>
												<IfCondition failOnCondition="false" condition="$previousTagpoint ~= $__null">
													<RemoveLink From="$this.id" To="$previousTagpoint" Tag="&apos;previousTagpoint&apos;" LinkOpHandleMode="Error" />
												</IfCondition>
												<Expression expressions="$previousTagpoint = $currentTagpoint &#10;$currentTagpoint = $nextTagpoint &#10;$choosingNextTagpoint = false" />
												<IfCondition failOnCondition="false" condition="$previousTagpoint ~= $__null">
													<AddLink From="$this.id" To="$previousTagpoint" Tag="&apos;previousTagpoint&apos;" Data="" LinkOpHandleMode="Error" />
												</IfCondition>
												<AddLink From="$this.id" To="$currentTagpoint" Tag="&apos;currentTagpoint&apos;" Data="" LinkOpHandleMode="Error" />
											</Sequence>
										</AtomicDecorator>
									</IfCondition>
								</Sequence>
							</While>
						</Sequence>
					</Child>
					<OnFail canSkip="1">
						<Sequence>
							<IfCondition failOnCondition="false" condition="$currentTagpoint ~= $__null">
								<RemoveLink From="$this.id" To="$currentTagpoint" Tag="&apos;currentTagpoint&apos;" LinkOpHandleMode="Error" />
							</IfCondition>
							<IfCondition failOnCondition="false" condition="$previousTagpoint ~= $__null">
								<RemoveLink From="$this.id" To="$previousTagpoint" Tag="&apos;previousTagpoint&apos;" LinkOpHandleMode="Error" />
							</IfCondition>
						</Sequence>
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="svatba_searchingForNpc" EventSet="">
			<Variables>
				<Variable name="choosingNextTagpoint" comment="" />
				<Variable name="currentTagpoint" comment="" />
				<Variable name="nextTagpoint" comment="" />
				<Variable name="previousTagpoint" comment="" />
				<Variable name="searchingPoints" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="searchingPointName" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ExactMove>
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<OutputBreakpoints />
													</UnstanceAction>
												</Then>
											</HasGenderCheck>
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</Parallel>
									</Sequence>
								</IfCondition>
								<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</RemoveLink>
													</IfCondition>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</RemoveLink>
													</IfCondition>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</AddLink>
													</IfCondition>
													<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</AddLink>
												</Sequence>
											</AtomicDecorator>
										</IfCondition>
									</Sequence>
								</While>
							</Sequence>
						</Child>
						<OnFail>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</RemoveLink>
								</IfCondition>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</RemoveLink>
								</IfCondition>
							</Sequence>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="cook_tableCheck" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="foodOnTables" type="_int" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="tagpointIndex" type="_int" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="tagpoints" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<While doFail="false" propagateChildFail="false" condition="$tagpointIndex &lt; #tagpoints">
						<Sequence>
							<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoints[$tagpointIndex]" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoints[$tagpointIndex]" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							<IfElseCondition failOnCondition="false" condition="$foodOnTables[$tagpointIndex] == 0" saveVersion="2">
								<Then canSkip="1">
									<Function_speech_monolog alias="&apos;svatba_plnyStul&apos;" canBeDelayed="false" context="" dramaticBark="false" lookAtId="" metarole="" target="$this.id" wait="false" nodeLabel="39730718" />
								</Then>
								<Else canSkip="1">
									<Function_speech_schedulerMonolog alias="&apos;svatba_prazdnyStul&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="87008727" />
								</Else>
							</IfElseCondition>
							<Callback_empty EventName="&apos;phaseChanged&apos;" />
						</Sequence>
					</While>
					<Callback_empty EventName="&apos;behaviorFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="svatba_tableCheck" EventSet="phaseChanged">
			<Variables>
				<Variable name="foodOnTables" comment="" />
				<Variable name="tagpointIndex" comment="" />
				<Variable name="tagpoints" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_monolog>
									</Then>
									<Else>
										<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_schedulerMonolog>
									</Else>
								</IfElseCondition>
								<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Callback_empty>
							</Sequence>
						</While>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="cook_expelsPlayer" is_function="0">
		<Variables>
			<Variable name="doorClosingPolicy" type="enum:movementDoorClosingPolicy" values="" isPersistent="0" form="single" />
			<Variable name="forceDialog" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="inStorage" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="perception" type="perceptionInfo" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="" stance="standing" allowAny="false">
					<Sequence>
						<WaitAction />
						<Parallel successMode="Any" failureMode="Any">
							<AreaPresenceListener aiObjects="$__player" area="$data" trackIn="true" trackOut="true" reportInitialState="true">
								<IfElseCondition failOnCondition="false" condition="$__presence" saveVersion="2">
									<Then canSkip="1">
										<Expression expressions="$doorClosingPolicy = $enum:movementDoorClosingPolicy.leaveOpened &#10;$inStorage = true" />
									</Then>
									<Else canSkip="1">
										<Expression expressions="$doorClosingPolicy = $enum:movementDoorClosingPolicy.automatic &#10;$inStorage = false" />
									</Else>
								</IfElseCondition>
							</AreaPresenceListener>
							<Loop count="-1">
								<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="3.000000" High="3.000000" Negation="true" OpenInMiddle="false" RunLogic="KeepRunning">
									<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="$doorClosingPolicy">
										<Sequence>
											<Move stopWithinDistance="2.000000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$__player" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
											<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="3.000000" High="3.000000" Negation="false" ValueOnMiddle="false" failOnCondition="false">
												<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="3.000000" High="3.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
													<Loop count="-1">
														<Sequence>
															<Turn target="$__player" align="false" />
															<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
														</Sequence>
													</Loop>
												</DistanceGate>
											</DistanceCondition>
										</Sequence>
									</MoveParamsDecorator>
								</DistanceGate>
							</Loop>
							<ForceLook LookTarget="$__player" DisableVariations="false">
								<Loop count="-1">
									<IfElseCondition failOnCondition="false" condition="$inStorage" saveVersion="2">
										<Then canSkip="1">
											<Function_speech_schedulerMonolog alias="&apos;svatba_vModremTresspassu&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="16381723" />
										</Then>
										<Else canSkip="1">
											<Function_speech_schedulerMonolog alias="&apos;svatba_vNeviditelnemTresspassu&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="44277634" />
										</Else>
									</IfElseCondition>
								</Loop>
							</ForceLook>
							<While doFail="false" propagateChildFail="false" condition="$forceDialog == false">
								<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$perception" senderInfo="" inbox="&apos;perceptionInfo&apos;" condition="" answerVar="">
									<HasPerceivableState PerceivableState="&apos;svatba_foodForPoorPicked&apos;" PerceivedWUID="$perception.perceptible" PerceptorWUID="" FailSubtMissing="false" saveVersion="2">
										<Then canSkip="1">
											<Sequence>
												<Callback_empty EventName="&apos;OnFinished&apos;" />
												<Expression expressions="$forceDialog = true" />
											</Sequence>
										</Then>
									</HasPerceivableState>
								</ProcessMessage>
							</While>
						</Parallel>
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="doorClosingPolicy" comment="" />
				<Variable name="forceDialog" comment="" />
				<Variable name="inStorage" comment="" />
				<Variable name="perception" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AreaPresenceListener hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Then>
										<Else>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Else>
									</IfElseCondition>
								</AreaPresenceListener>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Move>
												<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Turn>
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
															</Sequence>
														</Loop>
													</DistanceGate>
												</DistanceCondition>
											</Sequence>
										</MoveParamsDecorator>
									</DistanceGate>
								</Loop>
								<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerMonolog>
											</Then>
											<Else>
												<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerMonolog>
											</Else>
										</IfElseCondition>
									</Loop>
								</ForceLook>
								<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<HasPerceivableState hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Callback_empty>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Sequence>
											</Then>
										</HasPerceivableState>
									</ProcessMessage>
								</While>
							</Parallel>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="guard_expelsPlayer" is_function="0">
		<Variables>
			<Variable name="forceDialog" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="perception" type="perceptionInfo" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Loop count="-1">
						<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="3.000000" High="3.000000" Negation="true" OpenInMiddle="false" RunLogic="KeepRunning">
							<MoveParamsDecorator speed="Run" pathFindingParams="" doorClosingPolicy="LeaveOpened">
								<Sequence>
									<Move stopWithinDistance="2.000000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$__player" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="3.000000" High="3.000000" Negation="false" ValueOnMiddle="false" failOnCondition="false">
										<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="3.000000" High="3.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
											<Loop count="-1">
												<Sequence>
													<Turn target="$__player" align="false" />
													<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
												</Sequence>
											</Loop>
										</DistanceGate>
									</DistanceCondition>
								</Sequence>
							</MoveParamsDecorator>
						</DistanceGate>
					</Loop>
					<ForceLook LookTarget="$__player" DisableVariations="false">
						<Loop count="-1">
							<Sequence>
								<Function_speech_schedulerMonolog alias="&apos;svatba_vyhaneniZeSkepa&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="20237236" />
								<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</Loop>
					</ForceLook>
					<While doFail="false" propagateChildFail="false" condition="$forceDialog == false">
						<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$perception" senderInfo="" inbox="&apos;perceptionInfo&apos;" condition="" answerVar="">
							<HasPerceivableState PerceivableState="&apos;svatba_winePicked&apos;" PerceivedWUID="$perception.perceptible" PerceptorWUID="" FailSubtMissing="false" saveVersion="2">
								<Then canSkip="1">
									<Sequence>
										<Callback_empty EventName="&apos;OnFinished&apos;" />
										<Expression expressions="$forceDialog = true" />
									</Sequence>
								</Then>
							</HasPerceivableState>
						</ProcessMessage>
					</While>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="forceDialog" comment="" />
				<Variable name="perception" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
										<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Turn>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Sequence>
												</Loop>
											</DistanceGate>
										</DistanceCondition>
									</Sequence>
								</MoveParamsDecorator>
							</DistanceGate>
						</Loop>
						<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Loop>
						</ForceLook>
						<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<HasPerceivableState hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Callback_empty>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Sequence>
									</Then>
								</HasPerceivableState>
							</ProcessMessage>
						</While>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_monologOnSpot" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$wuid" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="32630025" />
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_schedulerMonolog>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_atRoastedPig" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Parallel successMode="Any" failureMode="Any">
						<AnimationAction fragment="&apos;Miller&apos;" tags="" eventReferenceObject="" alignObject="$data" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
						<Loop count="-1">
							<Sequence>
								<Function_speech_schedulerMonolog alias="&apos;svatba_seltakoSePece&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" subtitlesDown="false" nodeLabel="74059208" />
								<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</Loop>
					</Parallel>
					<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="4.000000" High="4000.000000" Negation="false" ValueOnMiddle="false" failOnCondition="false">
						<ForceLook LookTarget="$__player" DisableVariations="false">
							<Parallel successMode="Any" failureMode="Any">
								<Loop count="-1">
									<Sequence>
										<Turn target="$__player" align="false" />
										<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</Loop>
								<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="4.000000" High="4.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
									<Loop count="-1">
										<Sequence>
											<Function_speech_schedulerMonolog alias="&apos;svatba_nedateSiSelatko&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" subtitlesDown="false" nodeLabel="80668255" />
											<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
									</Loop>
								</DistanceGate>
							</Parallel>
						</ForceLook>
					</DistanceCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnimationAction>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Loop>
						</Parallel>
						<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Turn>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</Loop>
									<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerMonolog>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</Loop>
									</DistanceGate>
								</Parallel>
							</ForceLook>
						</DistanceCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_angry" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<UnstanceAction unstance="AngryIdle" locationObject="" slaveObject="" />
					<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_atFood" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<AnimationAction fragment="&apos;Miller&apos;" tags="" eventReferenceObject="" alignObject="$data" slaveObject="" resourceOverride="" />
					<Loop count="-1">
						<Sequence>
							<Function_speech_schedulerMonolog alias="&apos;svatba_podezrelyUJidla&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="65967057" />
							<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Loop>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AnimationAction>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerMonolog>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Loop>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_goToTalk" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
					<Sequence>
						<UnstanceAction unstance="ingameDialogPoseOnSpot" locationObject="$tagpoint" slaveObject="" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</EntityContextElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</EntityContextElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_sleepingOnTable" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$__resource.id" stance="sitting" allowAny="false" enabled="true">
					<Sequence>
						<UnstanceAction unstance="SleepOnTable" locationObject="" slaveObject="" />
						<Wait duration="&apos;20s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_waitingSittingUnstanceInterrupt" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$data" stance="sitting" allowAny="false" enabled="true">
					<Sequence>
						<WaitAction />
						<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_waitAtHome" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>