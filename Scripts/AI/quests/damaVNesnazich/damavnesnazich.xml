<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="LacekGoesToPiss" is_function="0">
		<Variables>
			<Variable name="beer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="beerSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="beerSlots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="beerSlotsData" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="chairInPub" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="chairInteractor" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeerSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeerSlots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="hiddenBeerSlotsData" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="iterator" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="perception" type="perceptionInfo" values="" isPersistent="0" form="single" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="seats" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="seatsdata" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="stimulus" type="switch:stimulus:kettlePoisoning" values="" isPersistent="0" form="single" />
			<Variable name="tableInPub" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="pissSpot" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="tableSeat" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="tankardlInteractor" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<Sequence>
						<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;chairInPub&apos;" prune="true" negprune="unknown" Parent="" Child="$chairInPub" Data="" />
						</GraphSearch>
						<GraphSearch Origin="$chairInPub" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;interactor&apos;" prune="true" negprune="unknown" Parent="" Child="$chairInteractor" Data="" />
						</GraphSearch>
					</Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tableInPub&apos;" prune="true" negprune="unknown" Parent="" Child="$tableInPub" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$tableInPub" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernBeer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;tavernBeer&apos;" Quantifiers="ForAll" Parent="" Child="$beerSlots" Data="$beerSlotsData" saveVersion="2" />
					</GraphSearch>
					<GraphSearch Origin="$tableInPub" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory,slot&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernSeat&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;tavernSeat&apos;" Quantifiers="ForAll" Parent="" Child="$seats" Data="$seatsdata" saveVersion="2" />
					</GraphSearch>
					<GraphSearch Origin="$tableInPub" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;hiddenTavernBeer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;hiddenTavernBeer&apos;" Quantifiers="ForAll" Parent="" Child="$hiddenBeerSlots" Data="$hiddenBeerSlotsData" saveVersion="2" />
					</GraphSearch>
					<ForEach startIndex="0" step="1" array="$seats" iterator="$iterator" value="$seat" break="">
						<IfCondition failOnCondition="false" condition="$seat == $tableSeat">
							<Expression expressions="$customerParams.Position = $seatsdata[$iterator] &#10;$customerParams.seat = $seat" />
						</IfCondition>
					</ForEach>
					<ForEach startIndex="0" step="1" array="$beerSlots" iterator="$iterator" value="$beerSlot" break="">
						<IfCondition failOnCondition="false" condition="$beerSlotsData[$iterator] == $customerParams.Position">
							<Expression expressions="$customerParams.beer = $beerSlot" />
						</IfCondition>
					</ForEach>
					<ForEach startIndex="0" step="1" array="$hiddenBeerSlots" iterator="$iterator" value="$hiddenBeerSlot" break="">
						<IfCondition failOnCondition="false" condition="$hiddenBeerSlotsData[$iterator] == $customerParams.Position">
							<Expression expressions="$hiddenBeer = $hiddenBeerSlot" />
						</IfCondition>
					</ForEach>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<ExecuteLua code="local interactor = XGenAIModule.GetEntityByWUID(data.chairInteractor) &#10;interactor:SetAvailable(false)" />
							<Parallel successMode="All" failureMode="Any">
								<Sequence>
									<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
										<HandContentElement hand="Right" item="$beer" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="tavern_stein" useDecision="false" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<GetItemInSlot slot="$hiddenBeer" useHomeItem="true" item="$beer" />
											</Search>
											<Exec canSkip="1">
												<ItemSetAsideElement item="$beer" slot="$customerParams.beer" enabled="true">
													<SuppressFailure>
														<AnimationAction fragment="&apos;PissDrunk&apos;" tags="" eventReferenceObject="" alignObject="$pissSpot" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
													</SuppressFailure>
												</ItemSetAsideElement>
											</Exec>
										</HandContentElement>
									</MoveParamsDecorator>
									<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
									<Callback_empty EventName="&apos;Success&apos;" />
								</Sequence>
								<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
									<Child canSkip="1">
										<Loop count="-1">
											<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$perception" senderInfo="" inbox="&apos;perceptionInfo&apos;" condition="" answerVar="">
												<HasPerceivableState PerceivableState="&apos;damaVNesnazich_poisoningTankard&apos;" PerceivedWUID="$perception.perceptible" PerceptorWUID="" FailSubtMissing="false" saveVersion="2">
													<Then canSkip="1">
														<Sequence>
															<Expression expressions="$stimulus.kettle = $tankardlInteractor &#10;$stimulus.victim = $this.id &#10;$stimulus.markKettleAsPoisoned = false" />
															<Function_switch_handleStimulusKettlePoisoning stimulus="$stimulus" nodeLabel="90589228" />
														</Sequence>
													</Then>
												</HasPerceivableState>
											</ProcessMessage>
										</Loop>
									</Child>
									<OnSuccess canSkip="1">
										<Callback_empty EventName="&apos;Fail&apos;" />
									</OnSuccess>
								</FuseBox>
							</Parallel>
							<ExecuteLua code="local interactor = XGenAIModule.GetEntityByWUID(data.chairInteractor) &#10;interactor:SetAvailable(true)" />
						</Sequence>
					</Child>
					<OnFail canSkip="1">
						<ExecuteLua code="local interactor = XGenAIModule.GetEntityByWUID(data.chairInteractor) &#10;interactor:SetAvailable(true)" />
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer>
			<StanceElement smartObject="$tableSeat" stance="sitting" allowAny="false" enabled="true">
				<AddLinkElement from="$this.id" to="$customerParams.seat" tag="&apos;guestSeat&apos;" data="$customerParams.Position" enabled="true">
					<AddLinkElement from="$this.id" to="$tableSeat" tag="&apos;guestSeat&apos;" data="" enabled="true">
						<AddLinkElement from="$this.id" to="$hiddenBeer" tag="&apos;guestHidden&apos;" data="" enabled="true">
							<AddLinkElement from="$this.id" to="$customerParams.beer" tag="&apos;guestBeer&apos;" data="" enabled="true">
								<AnyDecorator preset="crime_keepStateAndItems" enabled="true">
									<HandContentElement hand="Right" item="$beer" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="tavern_stein" useDecision="false" enabled="true" saveVersion="2">
										<Search canSkip="1">
											<GetItemInSlot slot="$hiddenBeer" useHomeItem="true" item="$beer" />
										</Search>
										<Exec canSkip="1">
											<ItemSetAsideElement item="$beer" slot="$customerParams.beer" enabled="true">
												<WaitAction />
											</ItemSetAsideElement>
										</Exec>
									</HandContentElement>
								</AnyDecorator>
							</AddLinkElement>
						</AddLinkElement>
					</AddLinkElement>
				</AddLinkElement>
			</StanceElement>
		</ForestContainer>
		<EditorData Signature="damaVNesnazich_pissingLacek" EventSet="resultNotification">
			<Variables>
				<Variable name="beer" comment="" />
				<Variable name="beerSlot" comment="" />
				<Variable name="beerSlots" comment="" />
				<Variable name="beerSlotsData" comment="" />
				<Variable name="chairInPub" comment="" />
				<Variable name="chairInteractor" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="hiddenBeer" comment="" />
				<Variable name="hiddenBeerSlot" comment="" />
				<Variable name="hiddenBeerSlots" comment="" />
				<Variable name="hiddenBeerSlotsData" comment="" />
				<Variable name="iterator" comment="" />
				<Variable name="perception" comment="" />
				<Variable name="seat" comment="" />
				<Variable name="seats" comment="" />
				<Variable name="seatsdata" comment="" />
				<Variable name="stimulus" comment="" />
				<Variable name="tableInPub" comment="" />
				<Variable name="pissSpot" comment="" />
				<Variable name="tableSeat" comment="" />
				<Variable name="tankardlInteractor" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="140" editorPosY="-340" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
						</Sequence>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
					</Sequence>
				</OnInit>
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExecuteLua>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetItemInSlot>
												</Search>
												<Exec>
													<ItemSetAsideElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</AnimationAction>
														</SuppressFailure>
													</ItemSetAsideElement>
												</Exec>
											</HandContentElement>
										</MoveParamsDecorator>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
									</Sequence>
									<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Child>
											<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<HasPerceivableState hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
																<Function_switch_handleStimulusKettlePoisoning hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_switch_handleStimulusKettlePoisoning>
															</Sequence>
														</Then>
													</HasPerceivableState>
												</ProcessMessage>
											</Loop>
										</Child>
										<OnSuccess>
											<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Callback_empty>
										</OnSuccess>
									</FuseBox>
								</Parallel>
								<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExecuteLua>
							</Sequence>
						</Child>
						<OnFail>
							<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExecuteLua>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest>
				<StanceElement editorPosX="2000" editorPosY="-110" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Search>
												<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</GetItemInSlot>
											</Search>
											<Exec>
												<ItemSetAsideElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WaitAction>
												</ItemSetAsideElement>
											</Exec>
										</HandContentElement>
									</AnyDecorator>
								</AddLinkElement>
							</AddLinkElement>
						</AddLinkElement>
					</AddLinkElement>
				</StanceElement>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="LacekDrunkFall" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					</MoveParamsDecorator>
					<SuppressFailure>
						<AnimationAction fragment="&apos;Quest_DrunkFall&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
					</SuppressFailure>
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
						</MoveParamsDecorator>
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnimationAction>
						</SuppressFailure>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="damaVNesnazich_playerWokeUpOnBench" is_function="0">
		<Variables>
			<Variable name="bench" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="bench_SO" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="3" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;bench&apos;" prune="true" negprune="unknown" Parent="" Child="$bench" Data="" />
					<ExistPath Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;_use&apos;" prune="true" negprune="unknown" Parent="" Child="$bench_SO" Data="" />
					</ExistPath>
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<LuaWrapper onEnter="player.player:OnEnterInteractive()" onExit="player.player:OnEndInteractive()">
					<RestrictCamera HorizontalViewLimitDeg="75.000000" VerticalViewMinDeg="-75.000000" VerticalViewMaxDeg="70.000000">
						<Sequence>
							<StanceElement smartObject="$bench_SO" stance="lying" allowAny="false">
								<WaitAction />
							</StanceElement>
							<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
							<WaitAction />
							<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
						</Sequence>
					</RestrictCamera>
				</LuaWrapper>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="bench" comment="" />
				<Variable name="bench_SO" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
						<ExistPath hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</ExistPath>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<LuaWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<RestrictCamera hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
								</StanceElement>
								<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantCallback_empty>
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantCallback_empty>
							</Sequence>
						</RestrictCamera>
					</LuaWrapper>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="marketaWaitingForPlayer" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					</MoveParamsDecorator>
					<Loop count="-1">
						<ForceLook LookTarget="$__player" DisableVariations="false">
							<Sequence>
								<Turn target="$__player" align="false" />
								<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</ForceLook>
					</Loop>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
						</MoveParamsDecorator>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Turn>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</ForceLook>
						</Loop>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="damaVNesnazich_playerStandUp" is_function="0">
		<Variables>
			<Variable name="playerSittingAction" type="player:sittingAction" values="" isPersistent="0" form="single" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<WaitAction />
					<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="playerSittingAction" comment="" />
				<Variable name="seat" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantCallback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="damaVNesnazich_playerPoisoningTankard" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="isPlayerSitting" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="sitAnimAlign" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="standAnimalign" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<LuaWrapper onEnter="player.player:OnEnterInteractive()" onExit="player.player:OnEndInteractive()">
						<RestrictCamera HorizontalViewLimitDeg="30.000000" VerticalViewMinDeg="-30.000000" VerticalViewMaxDeg="30.000000">
							<IfElseCondition failOnCondition="false" condition="$isPlayerSitting" saveVersion="2">
								<Then canSkip="1">
									<StanceElement smartObject="$sitAnimAlign" stance="sitting" allowAny="false" enabled="true">
										<AnimationAction fragment="&apos;Quest_PoisoningTankardSitting&apos;" tags="&apos;sitting&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
									</StanceElement>
								</Then>
								<Else canSkip="1">
									<AnimationAction fragment="&apos;Quest_PoisoningTankardStanding&apos;" tags="" eventReferenceObject="$standAnimalign" alignObject="$standAnimalign" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
								</Else>
							</IfElseCondition>
						</RestrictCamera>
					</LuaWrapper>
					<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="damaVNesnazich_playerSabotage" EventSet="endNotification">
			<Variables>
				<Variable name="isPlayerSitting" comment="" />
				<Variable name="sitAnimAlign" comment="" />
				<Variable name="standAnimalign" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-20" editorPosY="-20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LuaWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<RestrictCamera hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<StanceElement hasInputBreakpoint="0" comment="StanceElement je tu treba, jinak se animace v sede nespusti" breakpointFlags="0">
											<OutputBreakpoints />
											<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AnimationAction>
										</StanceElement>
									</Then>
									<Else>
										<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AnimationAction>
									</Else>
								</IfElseCondition>
							</RestrictCamera>
						</LuaWrapper>
						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantCallback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="damaVNesnazich_playerPoisoningTankard_sit" is_function="0">
		<Variables>
			<Variable name="item" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="sitPlace" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;playersSittingSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$sitPlace" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<LuaWrapper onEnter="player.player:OnEnterInteractive()" onExit="player.player:OnEndInteractive()">
							<StanceElement smartObject="$sitPlace" stance="sitting" allowAny="false">
								<Sequence>
									<AnimationAction fragment="&apos;Quest_PoisoningTankardSitting&apos;" tags="&apos;sitting&apos;" eventReferenceObject="" alignObject="" slaveObject="" />
									<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
								</Sequence>
							</StanceElement>
						</LuaWrapper>
					</Child>
					<OnFail canSkip="1">
						<AddInterrupt Target="$__player" Host="$sitPlace" Behavior="&apos;use_player&apos;" Priority="42" IgnorePriorityOnPreviousInterrupt="false" urgency="Instant" />
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="item" comment="" />
				<Variable name="sitPlace" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-40" editorPosY="-130" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkDataFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<LuaWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<OutputBreakpoints />
										</AnimationAction>
										<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</InstantCallback_empty>
									</Sequence>
								</StanceElement>
							</LuaWrapper>
						</Child>
						<OnFail>
							<AddInterrupt hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AddInterrupt>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="damaVNesnazich_isBeerOnTable" is_function="0">
		<Variables>
			<Variable name="beer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="table" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;lacekSittingSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$seat" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavern_tableSO&apos;" prune="true" negprune="unknown" Parent="" Child="$table" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$table" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;tavernBeer&apos;" condition="$__link_tavernBeer == &apos;D&apos;" prune="true" negprune="unknown" Parent="" Child="$beer" Data="" />
					</GraphSearch>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<Loop count="-1">
					<Sequence>
						<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
							<Child canSkip="1">
								<LinkGate from="$beer" to="$seat" tag="&apos;tavernTankardOnTable&apos;" amount="AtLeastOne" presence="Present" RunLogic="Halt">
									<Success />
								</LinkGate>
							</Child>
							<OnSuccess canSkip="1">
								<InstantCallback_empty EventName="&apos;Success&apos;" />
							</OnSuccess>
							<OnFail canSkip="1">
								<InstantCallback_empty EventName="&apos;Fail&apos;" />
							</OnFail>
						</FuseBox>
						<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</Loop>
			</Behavior>
		</Root>
		<ForestContainer>
			<GraphSearch Origin="$beer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
				<LinkTagFilter tag="&apos;tavernTankardOnTable&apos;" prune="true" negprune="unknown" Parent="" Child="$seat" Data="" />
			</GraphSearch>
		</ForestContainer>
		<EditorData EventSet="resultNotification">
			<Variables>
				<Variable name="beer" comment="" />
				<Variable name="seat" comment="" />
				<Variable name="table" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
					</Sequence>
				</OnInit>
				<Behavior>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child>
									<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</LinkGate>
								</Child>
								<OnSuccess>
									<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantCallback_empty>
								</OnSuccess>
								<OnFail>
									<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantCallback_empty>
								</OnFail>
							</FuseBox>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Loop>
				</Behavior>
			</Root>
			<Forest>
				<GraphSearch editorPosX="1020" editorPosY="-260" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</LinkTagFilter>
				</GraphSearch>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="marketaWaitingAtLacek" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Loop count="-1">
						<ForceLook LookTarget="$__player" DisableVariations="false">
							<Sequence>
								<Turn target="$__player" align="false" />
								<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</ForceLook>
					</Loop>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-40" editorPosY="-50" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Turn>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</ForceLook>
						</Loop>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="marketaBark_LacekOnPlayersBack" is_function="0">
		<Variables>
			<Variable name="perception" type="perceptionInfo" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Loop count="-1">
					<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$perception" senderInfo="" inbox="&apos;perceptionInfo&apos;" condition="" answerVar="">
						<Sequence>
							<IfCondition failOnCondition="false" condition="$perception">
								<Function_monologRepeat alias="&apos;damaVNesnazich_Marketa_LacekIsNotInHayloft&apos;" cooldown="&apos;7s&apos;" repeat="-1" nodeLabel="14764383" />
							</IfCondition>
						</Sequence>
					</ProcessMessage>
				</Loop>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="perception" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_monologRepeat hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_monologRepeat>
								</IfCondition>
							</Sequence>
						</ProcessMessage>
					</Loop>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="cryingMarketa" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ForceLook LookTarget="$__player" DisableVariations="false">
					<Sequence>
						<UnstanceAction unstance="behaviorCrying_notInDialog" locationObject="$__object.id" slaveObject="" />
						<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</ForceLook>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="-20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</ForceLook>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="damaVNesnazich_playerWokeUp" is_function="0">
		<Variables>
			<Variable name="bed" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="$data" prune="true" negprune="unknown" Parent="" Child="$bed" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<LuaWrapper onEnter="player.player:OnEnterInteractive()" onExit="player.player:OnEndInteractive()">
					<RestrictCamera HorizontalViewLimitDeg="75.000000" VerticalViewMinDeg="-75.000000" VerticalViewMaxDeg="70.000000">
						<PlayerOnBedOmitSkipTime>
							<Sequence>
								<StanceElement smartObject="$bed" stance="lying" allowAny="false" enabled="true">
									<WaitAction />
								</StanceElement>
								<InstantCallback_empty EventName="&apos;phaseChanged&apos;" />
								<SuppressFailure>
									<WaitAction />
								</SuppressFailure>
								<InstantCallback_empty EventName="&apos;behaviorFinished&apos;" />
							</Sequence>
						</PlayerOnBedOmitSkipTime>
					</RestrictCamera>
				</LuaWrapper>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="stringData" EventSet="phaseChanged">
			<Variables>
				<Variable name="bed" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<LuaWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<RestrictCamera hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<PlayerOnBedOmitSkipTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</StanceElement>
									<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantCallback_empty>
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</SuppressFailure>
									<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantCallback_empty>
								</Sequence>
							</PlayerOnBedOmitSkipTime>
						</RestrictCamera>
					</LuaWrapper>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="marketaPathToLacek" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantCallback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="marketaGoesToPosition" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantCallback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="LacekPlaceTankardOnTable" is_function="1">
		<Variables>
			<Variable name="beer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="beerSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="beerSlots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="beerSlotsData" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeerSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeerSlots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="hiddenBeerSlotsData" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="iterator" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="putBeer" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="seats" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="seatsdata" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="string" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="tableInPub" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tableInPub&apos;" prune="true" negprune="unknown" Parent="" Child="$tableInPub" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$tableInPub" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory,slot&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernSeat&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;tavernSeat&apos;" Quantifiers="ForAll" Parent="" Child="$seats" Data="$seatsdata" saveVersion="2" />
					</GraphSearch>
					<GraphSearch Origin="$tableInPub" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernBeer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;tavernBeer&apos;" Quantifiers="ForAll" Parent="" Child="$beerSlots" Data="$beerSlotsData" saveVersion="2" />
					</GraphSearch>
					<GraphSearch Origin="$tableInPub" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;hiddenTavernBeer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;hiddenTavernBeer&apos;" Quantifiers="ForAll" Parent="" Child="$hiddenBeerSlots" Data="$hiddenBeerSlotsData" saveVersion="2" />
					</GraphSearch>
					<ForEach startIndex="0" step="1" array="$seats" iterator="$iterator" value="$seat" break="">
						<IfCondition failOnCondition="false" condition="$seat == $data">
							<Expression expressions="$customerParams.Position = $seatsdata[$iterator] &#10;$customerParams.seat = $seat" />
						</IfCondition>
					</ForEach>
					<ForEach startIndex="0" step="1" array="$hiddenBeerSlots" iterator="$iterator" value="$hiddenBeerSlot" break="">
						<IfCondition failOnCondition="false" condition="$hiddenBeerSlotsData[$iterator] == $customerParams.Position">
							<Expression expressions="$hiddenBeer = $hiddenBeerSlot" />
						</IfCondition>
					</ForEach>
					<ForEach startIndex="0" step="1" array="$beerSlots" iterator="$iterator" value="$beerSlot" break="">
						<IfCondition failOnCondition="false" condition="$beerSlotsData[$iterator] == $customerParams.Position">
							<Expression expressions="$customerParams.beer = $beerSlot" />
						</IfCondition>
					</ForEach>
					<ForEach startIndex="0" step="1" array="$hiddenBeerSlots" iterator="$iterator" value="$hiddenBeerSlot" break="">
						<IfCondition failOnCondition="false" condition="$hiddenBeerSlotsData[$iterator] == $customerParams.Position">
							<Expression expressions="$hiddenBeer = $hiddenBeerSlot" />
						</IfCondition>
					</ForEach>
					<GraphSearch Origin="$customerParams.beer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;SlotLink&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Nodalyzer Quantifiers="Exists" Parent="" Child="$beer" saveVersion="2" />
					</GraphSearch>
					<IfCondition failOnCondition="false" condition="$beer == $__null">
						<Expression expressions="$putBeer = true" />
					</IfCondition>
					<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
						<AddLinkElement from="$this.id" to="$customerParams.seat" tag="&apos;guestSeat&apos;" data="$customerParams.Position" enabled="true">
							<AddLinkElement from="$this.id" to="$data" tag="&apos;guestSeat&apos;" data="" enabled="true">
								<AddLinkElement from="$this.id" to="$hiddenBeer" tag="&apos;guestHidden&apos;" data="" enabled="true">
									<AddLinkElement from="$this.id" to="$customerParams.beer" tag="&apos;guestBeer&apos;" data="" enabled="true">
										<StanceElement smartObject="$data" stance="sitting" allowAny="false" enabled="true">
											<HandContentElement hand="Right" item="$beer" allowAny="false" decisionLabel="tavern_stein" useDecision="false" enabled="true" saveVersion="2">
												<Search canSkip="1">
													<GetItemInSlot slot="$hiddenBeer" useHomeItem="true" item="$beer" />
												</Search>
												<Exec canSkip="1">
													<ItemSetAsideElement item="$beer" slot="$customerParams.beer" enabled="true">
														<Sequence>
															<AnimationAction fragment="&apos;Guest_DrinkBeer&apos;" tags="" eventReferenceObject="$this.id" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false">
																<EventData_pickup Slot="$customerParams.beer" name="&apos;beer&apos;" />
																<EventData_place Slot="$customerParams.beer" name="&apos;beer&apos;" />
															</AnimationAction>
															<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
														</Sequence>
													</ItemSetAsideElement>
												</Exec>
											</HandContentElement>
										</StanceElement>
									</AddLinkElement>
								</AddLinkElement>
							</AddLinkElement>
						</AddLinkElement>
					</MoveParamsDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<WaitAction />
		</ForestContainer>
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="beer" comment="" />
				<Variable name="beerSlot" comment="" />
				<Variable name="beerSlots" comment="" />
				<Variable name="beerSlotsData" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="hiddenBeer" comment="" />
				<Variable name="hiddenBeerSlot" comment="" />
				<Variable name="hiddenBeerSlots" comment="" />
				<Variable name="hiddenBeerSlotsData" comment="" />
				<Variable name="iterator" comment="" />
				<Variable name="putBeer" comment="" />
				<Variable name="seat" comment="" />
				<Variable name="seats" comment="" />
				<Variable name="seatsdata" comment="" />
				<Variable name="string" comment="" />
				<Variable name="tableInPub" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-140" editorPosY="390" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</IfCondition>
						<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Search>
														<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</GetItemInSlot>
													</Search>
													<Exec>
														<ItemSetAsideElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</EventData_pickup>
																	<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</EventData_place>
																</AnimationAction>
																<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</InstantCallback_empty>
															</Sequence>
														</ItemSetAsideElement>
													</Exec>
												</HandContentElement>
											</StanceElement>
										</AddLinkElement>
									</AddLinkElement>
								</AddLinkElement>
							</AddLinkElement>
						</MoveParamsDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<WaitAction editorPosX="1840" editorPosY="1570" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</WaitAction>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="LacekSittingInPub" is_function="0">
		<Variables>
			<Variable name="beer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="beerSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="beerSlots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="beerSlotsData" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeerSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeerSlots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="hiddenBeerSlotsData" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="iterator" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="putBeer" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="seats" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="seatsdata" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="string" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="tableInPub" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tableInPub&apos;" prune="true" negprune="unknown" Parent="" Child="$tableInPub" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$tableInPub" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory,slot&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernSeat&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;tavernSeat&apos;" Quantifiers="ForAll" Parent="" Child="$seats" Data="$seatsdata" saveVersion="2" />
					</GraphSearch>
					<GraphSearch Origin="$tableInPub" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernBeer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;tavernBeer&apos;" Quantifiers="ForAll" Parent="" Child="$beerSlots" Data="$beerSlotsData" saveVersion="2" />
					</GraphSearch>
					<GraphSearch Origin="$tableInPub" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;hiddenTavernBeer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;hiddenTavernBeer&apos;" Quantifiers="ForAll" Parent="" Child="$hiddenBeerSlots" Data="$hiddenBeerSlotsData" saveVersion="2" />
					</GraphSearch>
					<ForEach startIndex="0" step="1" array="$seats" iterator="$iterator" value="$seat" break="">
						<IfCondition failOnCondition="false" condition="$seat == $data">
							<Expression expressions="$customerParams.Position = $seatsdata[$iterator] &#10;$customerParams.seat = $seat" />
						</IfCondition>
					</ForEach>
					<ForEach startIndex="0" step="1" array="$hiddenBeerSlots" iterator="$iterator" value="$hiddenBeerSlot" break="">
						<IfCondition failOnCondition="false" condition="$hiddenBeerSlotsData[$iterator] == $customerParams.Position">
							<Expression expressions="$hiddenBeer = $hiddenBeerSlot" />
						</IfCondition>
					</ForEach>
					<ForEach startIndex="0" step="1" array="$beerSlots" iterator="$iterator" value="$beerSlot" break="">
						<IfCondition failOnCondition="false" condition="$beerSlotsData[$iterator] == $customerParams.Position">
							<Expression expressions="$customerParams.beer = $beerSlot" />
						</IfCondition>
					</ForEach>
					<ForEach startIndex="0" step="1" array="$hiddenBeerSlots" iterator="$iterator" value="$hiddenBeerSlot" break="">
						<IfCondition failOnCondition="false" condition="$hiddenBeerSlotsData[$iterator] == $customerParams.Position">
							<Expression expressions="$hiddenBeer = $hiddenBeerSlot" />
						</IfCondition>
					</ForEach>
					<GraphSearch Origin="$customerParams.beer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;SlotLink&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Nodalyzer Quantifiers="Exists" Parent="" Child="$beer" saveVersion="2" />
					</GraphSearch>
					<IfCondition failOnCondition="false" condition="$beer == $__null">
						<Expression expressions="$putBeer = true" />
					</IfCondition>
					<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
						<AddLinkElement from="$this.id" to="$customerParams.seat" tag="&apos;guestSeat&apos;" data="$customerParams.Position" enabled="true">
							<AddLinkElement from="$this.id" to="$data" tag="&apos;guestSeat&apos;" data="" enabled="true">
								<AddLinkElement from="$this.id" to="$hiddenBeer" tag="&apos;guestHidden&apos;" data="" enabled="true">
									<AddLinkElement from="$this.id" to="$customerParams.beer" tag="&apos;guestBeer&apos;" data="" enabled="true">
										<StanceElement smartObject="$data" stance="sitting" allowAny="false" enabled="true">
											<HandContentElement hand="Right" item="$beer" allowAny="false" decisionLabel="tavern_stein" useDecision="false" enabled="true" saveVersion="2">
												<Search canSkip="1">
													<GetItemInSlot slot="$hiddenBeer" useHomeItem="true" item="$beer" />
												</Search>
												<Exec canSkip="1">
													<ItemSetAsideElement item="$beer" slot="$customerParams.beer" enabled="true">
														<Sequence>
															<WaitAction />
															<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
															<Loop count="-1">
																<Sequence>
																	<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
																	<AnimationAction fragment="&apos;Guest_DrinkBeer&apos;" tags="" eventReferenceObject="$this.id" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false">
																		<EventData_pickup Slot="$customerParams.beer" name="&apos;beer&apos;" />
																		<EventData_place Slot="$customerParams.beer" name="&apos;beer&apos;" />
																	</AnimationAction>
																</Sequence>
															</Loop>
														</Sequence>
													</ItemSetAsideElement>
												</Exec>
											</HandContentElement>
										</StanceElement>
									</AddLinkElement>
								</AddLinkElement>
							</AddLinkElement>
						</AddLinkElement>
					</MoveParamsDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<IncludeTree File="&apos;profession/tavern/bartender.xml&apos;" Name="&apos;use_customerDrinkOnlyQuest&apos;" nodeLabel="36572740" />
			<IfElseCondition failOnCondition="false" condition="$putBeer" saveVersion="2">
				<Then canSkip="1">
					<Sequence>
						<WaitAction />
						<AnimationAction fragment="&apos;Guest_DrawTankard&apos;" tags="" eventReferenceObject="$this.id" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
					</Sequence>
				</Then>
			</IfElseCondition>
		</ForestContainer>
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="beer" comment="" />
				<Variable name="beerSlot" comment="" />
				<Variable name="beerSlots" comment="" />
				<Variable name="beerSlotsData" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="hiddenBeer" comment="" />
				<Variable name="hiddenBeerSlot" comment="" />
				<Variable name="hiddenBeerSlots" comment="" />
				<Variable name="hiddenBeerSlotsData" comment="" />
				<Variable name="iterator" comment="" />
				<Variable name="putBeer" comment="" />
				<Variable name="seat" comment="" />
				<Variable name="seats" comment="" />
				<Variable name="seatsdata" comment="" />
				<Variable name="string" comment="" />
				<Variable name="tableInPub" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-140" editorPosY="390" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</IfCondition>
						<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Search>
														<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</GetItemInSlot>
													</Search>
													<Exec>
														<ItemSetAsideElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</WaitAction>
																<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</InstantCallback_empty>
																<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Wait>
																		<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</EventData_pickup>
																			<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</EventData_place>
																		</AnimationAction>
																	</Sequence>
																</Loop>
															</Sequence>
														</ItemSetAsideElement>
													</Exec>
												</HandContentElement>
											</StanceElement>
										</AddLinkElement>
									</AddLinkElement>
								</AddLinkElement>
							</AddLinkElement>
						</MoveParamsDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<IncludeTree editorPosX="-150" editorPosY="80" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</IncludeTree>
				<IfElseCondition editorPosX="2320" editorPosY="820" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Then>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnimationAction>
						</Sequence>
					</Then>
				</IfElseCondition>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="disableOpenWorldPubBehaviors" is_function="0">
		<Variables>
			<Variable name="table" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;damaVNesnazich_tableInPub&apos;" prune="true" negprune="unknown" Parent="" Child="$table" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<ChangeBehaviorStateElement smartEntity="$table" behavior="&apos;use_customerEatOnly&apos;" state="Disabled" allowAnyState="false">
					<ChangeBehaviorStateElement smartEntity="$table" behavior="&apos;use_customerDrinkOnly&apos;" state="Disabled" allowAnyState="false">
						<ChangeBehaviorStateElement smartEntity="$table" behavior="&apos;use_innkeeper_talkingWithGuests&apos;" state="Disabled" allowAnyState="false">
							<ChangeBehaviorStateElement smartEntity="$table" behavior="&apos;use_bartender_bringBeer&apos;" state="Disabled" allowAnyState="false">
								<ChangeBehaviorStateElement smartEntity="$table" behavior="&apos;use_customer&apos;" state="Disabled" allowAnyState="false">
									<ChangeBehaviorStateElement smartEntity="$table" behavior="&apos;use_female&apos;" state="Disabled" allowAnyState="false">
										<ChangeBehaviorStateElement smartEntity="$table" behavior="&apos;use_bartender_cleaningTable&apos;" state="Disabled" allowAnyState="false">
											<AddLinkElement from="$table" to="$this.id" tag="&apos;tavernGuest&apos;" data="">
												<AddLinkElement from="$table" to="$this.id" tag="&apos;benchOccupant&apos;" data="">
													<AddLinkElement from="$this.id" to="$table" tag="&apos;bench&apos;" data="">
														<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
													</AddLinkElement>
												</AddLinkElement>
											</AddLinkElement>
										</ChangeBehaviorStateElement>
									</ChangeBehaviorStateElement>
								</ChangeBehaviorStateElement>
							</ChangeBehaviorStateElement>
						</ChangeBehaviorStateElement>
					</ChangeBehaviorStateElement>
				</ChangeBehaviorStateElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="table" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</AddLinkElement>
													</AddLinkElement>
												</AddLinkElement>
											</ChangeBehaviorStateElement>
										</ChangeBehaviorStateElement>
									</ChangeBehaviorStateElement>
								</ChangeBehaviorStateElement>
							</ChangeBehaviorStateElement>
						</ChangeBehaviorStateElement>
					</ChangeBehaviorStateElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="LacekDrinksFromTankard" is_function="0">
		<Variables>
			<Variable name="LacekSawCrime" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="beer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="beerSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="beerSlots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="beerSlotsData" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeerSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeerSlots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="hiddenBeerSlotsData" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="iterator" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="perception" type="perceptionInfo" values="" isPersistent="0" form="single" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="seats" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="seatsdata" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="stimulus" type="switch:stimulus:kettlePoisoning" values="" isPersistent="0" form="single" />
			<Variable name="tableInPub" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tankardlInteractor" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="bool" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;trigger_korbel&apos;" prune="true" negprune="unknown" Parent="" Child="$tankardlInteractor" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tableInPub&apos;" prune="true" negprune="unknown" Parent="" Child="$tableInPub" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$tableInPub" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory,slot&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernSeat&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;tavernSeat&apos;" Quantifiers="ForAll" Parent="" Child="$seats" Data="$seatsdata" saveVersion="2" />
					</GraphSearch>
					<GraphSearch Origin="$tableInPub" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernBeer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;tavernBeer&apos;" Quantifiers="ForAll" Parent="" Child="$beerSlots" Data="$beerSlotsData" saveVersion="2" />
					</GraphSearch>
					<GraphSearch Origin="$tableInPub" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;hiddenTavernBeer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;hiddenTavernBeer&apos;" Quantifiers="ForAll" Parent="" Child="$hiddenBeerSlots" Data="$hiddenBeerSlotsData" saveVersion="2" />
					</GraphSearch>
					<ForEach startIndex="0" step="1" array="$seats" iterator="$iterator" value="$seat" break="">
						<IfCondition failOnCondition="false" condition="$seat == $wuid">
							<Expression expressions="$customerParams.Position = $seatsdata[$iterator] &#10;$customerParams.seat = $seat" />
						</IfCondition>
					</ForEach>
					<ForEach startIndex="0" step="1" array="$beerSlots" iterator="$iterator" value="$beerSlot" break="">
						<IfCondition failOnCondition="false" condition="$beerSlotsData[$iterator] == $customerParams.Position">
							<Expression expressions="$customerParams.beer = $beerSlot" />
						</IfCondition>
					</ForEach>
					<ForEach startIndex="0" step="1" array="$hiddenBeerSlots" iterator="$iterator" value="$hiddenBeerSlot" break="">
						<IfCondition failOnCondition="false" condition="$hiddenBeerSlotsData[$iterator] == $customerParams.Position">
							<Expression expressions="$hiddenBeer = $hiddenBeerSlot" />
						</IfCondition>
					</ForEach>
					<GraphSearch Origin="$customerParams.beer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;SlotLink&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Nodalyzer Quantifiers="Exists" Parent="" Child="$beer" saveVersion="2" />
					</GraphSearch>
					<Sequence>
						<Parallel successMode="Any" failureMode="Any">
							<AddLinkElement from="$this.id" to="$customerParams.seat" tag="&apos;guestSeat&apos;" data="$customerParams.Position" enabled="true">
								<AddLinkElement from="$this.id" to="$hiddenBeer" tag="&apos;guestHidden&apos;" data="" enabled="true">
									<AddLinkElement from="$this.id" to="$customerParams.beer" tag="&apos;guestBeer&apos;" data="" enabled="true">
										<StanceElement smartObject="$wuid" stance="sitting" allowAny="false" enabled="true">
											<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
												<HandContentElement hand="Right" item="$beer" allowAny="false" decisionLabel="tavern_stein" useDecision="false" enabled="true" saveVersion="2">
													<Search canSkip="1">
														<GetItemInSlot slot="$hiddenBeer" useHomeItem="true" item="$beer" />
													</Search>
													<Exec canSkip="1">
														<ItemSetAsideElement item="$beer" slot="$customerParams.beer" enabled="true">
															<Sequence>
																<WaitAction />
																<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
																<Callback_empty EventName="&apos;DisableDialog&apos;" />
																<AnimationAction fragment="&apos;Guest_DrinkBeer&apos;" tags="" eventReferenceObject="$this.id" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false">
																	<EventData_pickup Slot="$customerParams.beer" name="&apos;beer&apos;" />
																	<EventData_place Slot="$customerParams.beer" name="&apos;beer&apos;" />
																</AnimationAction>
																<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
																<IfCondition failOnCondition="false" condition="$bool">
																	<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="58256240" />
																</IfCondition>
																<Callback_empty EventName="&apos;GoesAway&apos;" />
															</Sequence>
														</ItemSetAsideElement>
													</Exec>
												</HandContentElement>
											</MoveParamsDecorator>
										</StanceElement>
									</AddLinkElement>
								</AddLinkElement>
							</AddLinkElement>
							<While doFail="false" propagateChildFail="false" condition="$LacekSawCrime == false">
								<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$perception" senderInfo="" inbox="&apos;perceptionInfo&apos;" condition="" answerVar="">
									<HasPerceivableState PerceivableState="&apos;damaVNesnazich_poisoningTankard&apos;" PerceivedWUID="$perception.perceptible" PerceptorWUID="" FailSubtMissing="false" saveVersion="2">
										<Then canSkip="1">
											<Expression expressions="$LacekSawCrime = true" />
										</Then>
									</HasPerceivableState>
								</ProcessMessage>
							</While>
						</Parallel>
						<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
							<Child canSkip="1">
								<IfCondition failOnCondition="false" condition="$LacekSawCrime == true">
									<Sequence>
										<Expression expressions="$stimulus.kettle = $tankardlInteractor &#10;$stimulus.victim = $this.id &#10;$stimulus.markKettleAsPoisoned = false" />
										<Function_switch_handleStimulusKettlePoisoning stimulus="$stimulus" nodeLabel="44890481" />
									</Sequence>
								</IfCondition>
							</Child>
							<OnSuccess canSkip="1">
								<Callback_empty EventName="&apos;Crime&apos;" />
							</OnSuccess>
						</FuseBox>
					</Sequence>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_bool_string" EventSet="damaVNesnazich_drinkingResult">
			<Variables>
				<Variable name="LacekSawCrime" comment="" />
				<Variable name="beer" comment="" />
				<Variable name="beerSlot" comment="" />
				<Variable name="beerSlots" comment="" />
				<Variable name="beerSlotsData" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="hiddenBeer" comment="" />
				<Variable name="hiddenBeerSlot" comment="" />
				<Variable name="hiddenBeerSlots" comment="" />
				<Variable name="hiddenBeerSlotsData" comment="" />
				<Variable name="iterator" comment="" />
				<Variable name="perception" comment="" />
				<Variable name="seat" comment="" />
				<Variable name="seats" comment="" />
				<Variable name="seatsdata" comment="" />
				<Variable name="stimulus" comment="" />
				<Variable name="tableInPub" comment="" />
				<Variable name="tankardlInteractor" comment="" />
				<Variable name="bool" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Search>
															<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</GetItemInSlot>
														</Search>
														<Exec>
															<ItemSetAsideElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</WaitAction>
																	<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Wait>
																	<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Callback_empty>
																	<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</EventData_pickup>
																		<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</EventData_place>
																	</AnimationAction>
																	<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Wait>
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_speech_schedulerMonolog>
																	</IfCondition>
																	<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Callback_empty>
																</Sequence>
															</ItemSetAsideElement>
														</Exec>
													</HandContentElement>
												</MoveParamsDecorator>
											</StanceElement>
										</AddLinkElement>
									</AddLinkElement>
								</AddLinkElement>
								<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<HasPerceivableState hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Then>
										</HasPerceivableState>
									</ProcessMessage>
								</While>
							</Parallel>
							<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<Function_switch_handleStimulusKettlePoisoning hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_switch_handleStimulusKettlePoisoning>
										</Sequence>
									</IfCondition>
								</Child>
								<OnSuccess>
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
								</OnSuccess>
							</FuseBox>
						</Sequence>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="stayAndLookAtPlayer" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Selector>
					<DistanceCondition Origin="$this.id" ReferencePt="$tagpoint" Low="4.000000" High="4.000000" Negation="false" ValueOnMiddle="false" failOnCondition="true">
						<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="4.000000" High="4.000000" Negation="false" ValueOnMiddle="false" failOnCondition="true">
							<Function_waitAndLookAtPlayer nodeLabel="60199268" />
						</DistanceCondition>
					</DistanceCondition>
					<Sequence>
						<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
						<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</Selector>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_waitAndLookAtPlayer hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_waitAndLookAtPlayer>
							</DistanceCondition>
						</DistanceCondition>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExactMove>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Selector>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="MarketaStandUp" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<WaitAction />
					<WashEquipped Target="" UseSoap="false" MaxWashing="1.000000" MaxCleaning="1.000000" AllOutfits="false" />
					<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="empty" EventSet="endNotification">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<WashEquipped hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WashEquipped>
						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantCallback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="goTo" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="endNotification">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="100" editorPosY="-10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantCallback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="waitForPlayerWithBark" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Loop count="-1">
						<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="10.000000" High="10.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
							<Parallel successMode="All" failureMode="Any">
								<Loop count="-1">
									<Function_waitAndLookAtPlayer nodeLabel="91977605" />
								</Loop>
								<Loop count="-1">
									<Sequence>
										<Function_speech_schedulerMonolog alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" subtitlesDown="false" nodeLabel="20080252" />
										<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
									</Sequence>
								</Loop>
							</Parallel>
						</DistanceGate>
					</Loop>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="damaVNesnazich_waitingMarketa" EventSet="">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_waitAndLookAtPlayer hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_waitAndLookAtPlayer>
									</Loop>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</Loop>
								</Parallel>
							</DistanceGate>
						</Loop>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sleepingOverride" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="damaVNesnazich_lacekLeavingTavern" target="$this.id">
					<StanceElement smartObject="$__resource.id" stance="lying" allowAny="false" enabled="true">
						<AddBuffElement Buff="&apos;cbbedb16-8ab8-4583-b740-a0e8a2521d95&apos;" enabled="true">
							<EntityContextPresetElement contextPreset="sleeping" enabled="true">
								<Sequence>
									<WaitAction />
									<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</EntityContextPresetElement>
						</AddBuffElement>
					</StanceElement>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AddBuffElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContextPresetElement hasInputBreakpoint="0" comment="NPCs refuse to talk while asleep" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</EntityContextPresetElement>
							</AddBuffElement>
						</StanceElement>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>