<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="ignaz_home" is_function="0">
		<Variables>
			<Variable name="foodInInventory" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="foodOnGround" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="ignazHome" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="sheepPath" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="signalIsAboutToBeSent" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;sheepPath&apos;" prune="true" negprune="unknown" Parent="" Child="$sheepPath" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Sequence>
						<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;ignazHome&apos;" prune="true" negprune="unknown" Parent="" Child="$ignazHome" Data="" />
						</GraphSearch>
						<Move stopWithinDistance="0.600000" stopDistanceVariation="0.000000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$ignazHome" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
						<Turn target="$ignazHome" align="false" />
						<UnstanceAction unstance="SheepEating" locationObject="" slaveObject="" />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
					<Loop count="-1">
						<Sequence>
							<FuseBox StatusPropagation="Success" OneCleanup="false" saveVersion="2">
								<Child canSkip="1">
									<Function_ignaz_checkFoodInInventory sheepPath="$sheepPath" nodeLabel="83606021" />
								</Child>
								<OnSuccess canSkip="1">
									<Expression expressions="$foodInInventory = true" />
								</OnSuccess>
								<OnFail canSkip="1">
									<Expression expressions="$foodInInventory = false" />
								</OnFail>
							</FuseBox>
							<Wait duration="&apos;1500&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Loop>
					<IfGate atomic="false" condition="$foodInInventory" RunLogic="KeepRunning">
						<Sequence>
							<AtomicDecorator>
								<IfCondition failOnCondition="false" condition="!$signalIsAboutToBeSent">
									<Sequence>
										<Expression expressions="$signalIsAboutToBeSent = true" />
										<InstantCallback_empty EventName="&apos;Follow&apos;" />
									</Sequence>
								</IfCondition>
							</AtomicDecorator>
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</IfGate>
					<Function_ignaz_checkFoodOnGround foodOnGround="$foodOnGround" nodeLabel="63987359" />
					<IfGate atomic="false" condition="$foodOnGround" RunLogic="KeepRunning">
						<Sequence>
							<AtomicDecorator>
								<IfCondition failOnCondition="false" condition="!$signalIsAboutToBeSent">
									<Sequence>
										<Expression expressions="$signalIsAboutToBeSent = true" />
										<InstantCallback_empty EventName="&apos;Eat&apos;" />
									</Sequence>
								</IfCondition>
							</AtomicDecorator>
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</IfGate>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="empty" EventSet="ignaz_home">
			<Variables>
				<Variable name="foodInInventory" comment="" />
				<Variable name="foodOnGround" comment="" />
				<Variable name="ignazHome" comment="" />
				<Variable name="sheepPath" comment="" />
				<Variable name="signalIsAboutToBeSent" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
							<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Turn>
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Child>
										<Function_ignaz_checkFoodInInventory hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_ignaz_checkFoodInInventory>
									</Child>
									<OnSuccess>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</OnSuccess>
									<OnFail>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</OnFail>
								</FuseBox>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Loop>
						<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</InstantCallback_empty>
										</Sequence>
									</IfCondition>
								</AtomicDecorator>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</IfGate>
						<Function_ignaz_checkFoodOnGround hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_ignaz_checkFoodOnGround>
						<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</InstantCallback_empty>
										</Sequence>
									</IfCondition>
								</AtomicDecorator>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</IfGate>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ignaz_follow" is_function="0">
		<Variables>
			<Variable name="additionalParams" type="additionalMoveParams" values="destChangedThreshold(&apos;200ms&apos;)" isPersistent="0" form="single" />
			<Variable name="foodInInventory" type="_bool" values="true" isPersistent="0" form="single" />
			<Variable name="foodOnGround" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="move" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="pathFindingParams" type="pathFindingParams" values="usePaths(false),useSmartObjects(false),useGeneratedNSO(false)" isPersistent="0" form="single" />
			<Variable name="sheepPath" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="signalIsAboutToBeSent" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="speed" type="enum:movementSpeed" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;sheepPath&apos;" prune="true" negprune="unknown" Parent="" Child="$sheepPath" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Parallel successMode="All" failureMode="All">
					<ContinuousSwitch>
						<IfCondition failOnCondition="false" condition="$move">
							<IsInsideAreaWithLabelBarrier Who="$__player" Label="&apos;ignazProhibited&apos;" Negation="true" RunLogic="Halt">
								<Loop count="-1">
									<Sequence>
										<Move stopWithinDistance="3.000000" stopDistanceVariation="0.000000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$__player" destinationSpecification2="" destinationSpecification3="" speed="$speed" additionalParams="$additionalParams" pathFindingParams="$pathFindingParams" staminaPolicy="" pathInfo="" />
										<Expression expressions="$move = false" />
										<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</Loop>
							</IsInsideAreaWithLabelBarrier>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="!$move">
							<Loop count="-1">
								<Sequence>
									<Turn target="$__player" align="false" />
									<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</Loop>
						</IfCondition>
					</ContinuousSwitch>
					<Loop count="-1">
						<Sequence>
							<Selector>
								<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="5.000000" High="5.000000" Negation="false" ValueOnMiddle="false" failOnCondition="true">
									<Expression expressions="$move = true &#10;$speed = $enum:movementSpeed.walk" />
								</DistanceCondition>
								<Expression expressions="$move = true &#10;$speed = $enum:movementSpeed.run" />
							</Selector>
							<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</Loop>
					<Loop count="-1">
						<Sequence>
							<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="&apos;10s&apos;" />
							<ExecuteSoundTrigger entity="$this.id" triggerName="&apos;b_sheep_baa&apos;" stop="false" />
						</Sequence>
					</Loop>
					<Loop count="-1">
						<Sequence>
							<FuseBox StatusPropagation="Success" OneCleanup="false" saveVersion="2">
								<Child canSkip="1">
									<Function_ignaz_checkFoodInInventory sheepPath="$sheepPath" nodeLabel="20418165" />
								</Child>
								<OnSuccess canSkip="1">
									<Expression expressions="$foodInInventory = true" />
								</OnSuccess>
								<OnFail canSkip="1">
									<Expression expressions="$foodInInventory = false" />
								</OnFail>
							</FuseBox>
							<Wait duration="&apos;1500&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</Loop>
					<IfGate atomic="false" condition="!$foodInInventory" RunLogic="KeepRunning">
						<Sequence>
							<AtomicDecorator>
								<IfCondition failOnCondition="false" condition="!$signalIsAboutToBeSent">
									<Sequence>
										<Expression expressions="$signalIsAboutToBeSent = true" />
										<InstantCallback_empty EventName="&apos;Home&apos;" />
									</Sequence>
								</IfCondition>
							</AtomicDecorator>
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</IfGate>
					<Function_ignaz_checkFoodOnGround foodOnGround="$foodOnGround" nodeLabel="93159311" />
					<IfGate atomic="false" condition="$foodOnGround" RunLogic="KeepRunning">
						<Sequence>
							<AtomicDecorator>
								<IfCondition failOnCondition="false" condition="!$signalIsAboutToBeSent">
									<Sequence>
										<Expression expressions="$signalIsAboutToBeSent = true" />
										<InstantCallback_empty EventName="&apos;Eat&apos;" />
									</Sequence>
								</IfCondition>
							</AtomicDecorator>
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</IfGate>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="empty" EventSet="ignaz_follow">
			<Variables>
				<Variable name="additionalParams" comment="" />
				<Variable name="foodInInventory" comment="" />
				<Variable name="foodOnGround" comment="" />
				<Variable name="move" comment="" />
				<Variable name="pathFindingParams" comment="" />
				<Variable name="sheepPath" comment="" />
				<Variable name="signalIsAboutToBeSent" comment="" />
				<Variable name="speed" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ContinuousSwitch hasInputBreakpoint="0" comment="Execute move" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IsInsideAreaWithLabelBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Move>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</Loop>
								</IsInsideAreaWithLabelBarrier>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Turn>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Loop>
							</IfCondition>
						</ContinuousSwitch>
						<Loop hasInputBreakpoint="0" comment="Decide move" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</DistanceCondition>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Selector>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Loop>
						<Loop hasInputBreakpoint="0" comment="Make sound" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="baah cooldown" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
								<ExecuteSoundTrigger hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExecuteSoundTrigger>
							</Sequence>
						</Loop>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Child>
										<Function_ignaz_checkFoodInInventory hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_ignaz_checkFoodInInventory>
									</Child>
									<OnSuccess>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</OnSuccess>
									<OnFail>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</OnFail>
								</FuseBox>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Loop>
						<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</InstantCallback_empty>
										</Sequence>
									</IfCondition>
								</AtomicDecorator>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</IfGate>
						<Function_ignaz_checkFoodOnGround hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_ignaz_checkFoodOnGround>
						<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</InstantCallback_empty>
										</Sequence>
									</IfCondition>
								</AtomicDecorator>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</IfGate>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ignaz_eat" is_function="0">
		<Variables>
			<Variable name="additionalParams" type="additionalMoveParams" values="destChangedThreshold(&apos;200ms&apos;)" isPersistent="0" form="single" />
			<Variable name="baitArea" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="carrotGuid" type="_string" values="&apos;b7ee311c-736b-4f7c-987b-8431ce3b5600&apos;" isPersistent="0" form="single" />
			<Variable name="foundFood" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="hasEaten" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="insideBaitArea" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="item" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="itemAmount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="itemDropped" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="itemGuid" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="itemInInventory" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="itemsDropped" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="pathFindingParams" type="pathFindingParams" values="usePaths(false),useSmartObjects(false),useGeneratedNSO(false)" isPersistent="0" form="single" />
			<Variable name="sheepPath" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="mealsEaten" type="_int" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;sheepPath&apos;" prune="true" negprune="unknown" Parent="" Child="$sheepPath" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<CircularSpatialQuery Radius="10.000000" Center="$this.id" ToFill="$itemsDropped" Precision="Exact" Filter="PerceivableItems" />
					<ForEach startIndex="0" step="1" array="$itemsDropped" iterator="" value="$itemDropped" break="$foundFood">
						<AtomicDecorator>
							<CheckWuidValid wuid="$itemDropped" FailSubtMissing="false" saveVersion="2">
								<Then canSkip="1">
									<Sequence>
										<GetItemProperty itemId="$itemDropped" property="Guid" result="$itemGuid" />
										<IfCondition failOnCondition="false" condition="$itemGuid == $carrotGuid">
											<Expression expressions="$foundFood = true" />
										</IfCondition>
									</Sequence>
								</Then>
							</CheckWuidValid>
						</AtomicDecorator>
					</ForEach>
					<IfCondition failOnCondition="false" condition="$foundFood">
						<Parallel successMode="Any" failureMode="Any">
							<LoopUntil until="Fail" attemptCount="0">
								<Sequence>
									<AtomicDecorator>
										<CheckWuidValid wuid="$itemDropped" FailSubtMissing="false" saveVersion="2">
											<Then canSkip="1">
												<Sequence>
													<GetItemProperty itemId="$itemDropped" property="InInventory" result="$itemInInventory" />
													<IfElseCondition failOnCondition="false" condition="$itemInInventory" saveVersion="2">
														<Then canSkip="1">
															<Fail />
														</Then>
														<Else canSkip="1">
															<Success />
														</Else>
													</IfElseCondition>
												</Sequence>
											</Then>
											<Else canSkip="1">
												<Fail />
											</Else>
										</CheckWuidValid>
									</AtomicDecorator>
									<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Sequence>
							</LoopUntil>
							<Sequence>
								<Move stopWithinDistance="0.600000" stopDistanceVariation="0.000000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$itemDropped" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="$additionalParams" pathFindingParams="$pathFindingParams" staminaPolicy="" pathInfo="" />
								<Turn target="$itemDropped" align="false" />
								<UnstanceAction unstance="SheepEating" locationObject="" slaveObject="" />
								<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								<CheckWuidValid wuid="$itemDropped" FailSubtMissing="false" saveVersion="2">
									<Then canSkip="1">
										<AtomicDecorator>
											<Sequence>
												<ExecuteLua code="entity.inventory:AddItem(data.itemDropped)" />
												<GetItemProperty itemId="$itemDropped" property="Amount" result="$itemAmount" />
												<UseItem item="$itemDropped" count="$itemAmount" bodyPartId="-1" combineWithItem="" />
												<Expression expressions="$hasEaten=true" />
												<InstantCallback_empty EventName="&apos;Eaten&apos;" />
											</Sequence>
										</AtomicDecorator>
									</Then>
								</CheckWuidValid>
							</Sequence>
						</Parallel>
					</IfCondition>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;baitArea&apos;" prune="true" negprune="unknown" Parent="" Child="$baitArea" Data="" />
					</GraphSearch>
					<IsInsideArea Origin="$this.id" Area="$baitArea" FailSubtMissing="false" saveVersion="2">
						<Then canSkip="1">
							<Expression expressions="$insideBaitArea=true" />
						</Then>
					</IsInsideArea>
					<IfElseCondition failOnCondition="false" condition="$insideBaitArea &amp; $hasEaten" saveVersion="2">
						<Then canSkip="1">
							<Sequence>
								<InstantCallback_empty EventName="&apos;LieDown&apos;" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</Then>
						<Else canSkip="1">
							<Sequence>
								<IfCondition failOnCondition="false" condition="$mealsEaten &gt; 4">
									<Sequence>
										<Turn target="$__player" align="false" />
										<ExecuteSoundTrigger entity="$this.id" triggerName="&apos;b_sheep_baa&apos;" stop="false" />
									</Sequence>
								</IfCondition>
								<IfElseCondition failOnCondition="false" condition="$mealsEaten &lt; 4 &amp; $foundFood" saveVersion="2">
									<Then canSkip="1">
										<Success />
									</Then>
									<Else canSkip="1">
										<Selector>
											<Sequence>
												<Function_ignaz_checkFoodInInventory sheepPath="$sheepPath" nodeLabel="69168407" />
												<InstantCallback_empty EventName="&apos;Follow&apos;" />
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
											</Sequence>
											<Sequence>
												<InstantCallback_empty EventName="&apos;Home&apos;" />
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
											</Sequence>
										</Selector>
									</Else>
								</IfElseCondition>
							</Sequence>
						</Else>
					</IfElseCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="numberOfMealsEaten" EventSet="ignaz_eat">
			<Variables>
				<Variable name="additionalParams" comment="" />
				<Variable name="baitArea" comment="" />
				<Variable name="carrotGuid" comment="" />
				<Variable name="foundFood" comment="" />
				<Variable name="hasEaten" comment="" />
				<Variable name="insideBaitArea" comment="" />
				<Variable name="item" comment="" />
				<Variable name="itemAmount" comment="" />
				<Variable name="itemDropped" comment="" />
				<Variable name="itemGuid" comment="" />
				<Variable name="itemInInventory" comment="" />
				<Variable name="itemsDropped" comment="" />
				<Variable name="pathFindingParams" comment="" />
				<Variable name="sheepPath" comment="" />
				<Variable name="mealsEaten" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-10" editorPosY="-680" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<CircularSpatialQuery hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</CircularSpatialQuery>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GetItemProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetItemProperty>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</IfCondition>
										</Sequence>
									</Then>
								</CheckWuidValid>
							</AtomicDecorator>
						</ForEach>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GetItemProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</GetItemProperty>
														<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Fail>
															</Then>
															<Else>
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</Else>
														</IfElseCondition>
													</Sequence>
												</Then>
												<Else>
													<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Fail>
												</Else>
											</CheckWuidValid>
										</AtomicDecorator>
										<Wait hasInputBreakpoint="0" comment="The item is still available; continue eating and check again after a while" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</LoopUntil>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Move>
									<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Turn>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ExecuteLua>
													<GetItemProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetItemProperty>
													<UseItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</UseItem>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantCallback_empty>
												</Sequence>
											</AtomicDecorator>
										</Then>
									</CheckWuidValid>
								</Sequence>
							</Parallel>
						</IfCondition>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Then>
						</IsInsideArea>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantCallback_empty>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Then>
							<Else>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Turn>
											<ExecuteSoundTrigger hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</ExecuteSoundTrigger>
										</Sequence>
									</IfCondition>
									<IfElseCondition hasInputBreakpoint="0" comment="If Ignaz eats 5 things, or more, he only eats one meal at a time" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Success hasInputBreakpoint="0" comment="Ignaz keeps eating" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Then>
										<Else>
											<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_ignaz_checkFoodInInventory hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_ignaz_checkFoodInInventory>
													<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantCallback_empty>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantCallback_empty>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</Selector>
										</Else>
									</IfElseCondition>
								</Sequence>
							</Else>
						</IfElseCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ignaz_lieDown" is_function="0">
		<Variables>
			<Variable name="distance" type="_int" values="20" isPersistent="0" form="single" />
			<Variable name="enemy1" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="enemy2" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="enemy3" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Sequence>
						<UnstanceAction unstance="SheepLying" locationObject="" slaveObject="" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
					<Loop count="-1">
						<Selector>
							<Sequence>
								<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;enemy1&apos;" prune="true" negprune="unknown" Parent="" Child="$enemy1" Data="" />
								</GraphSearch>
								<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;enemy2&apos;" prune="true" negprune="unknown" Parent="" Child="$enemy2" Data="" />
								</GraphSearch>
								<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;enemy3&apos;" prune="true" negprune="unknown" Parent="" Child="$enemy3" Data="" />
								</GraphSearch>
								<Parallel successMode="Any" failureMode="Any">
									<DistanceGate Origin="$this.id" ReferencePt="$enemy1" Low="$distance" High="$distance" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
										<Callback_empty EventName="&apos;OnFinished&apos;" />
									</DistanceGate>
									<DistanceGate Origin="$this.id" ReferencePt="$enemy2" Low="$distance" High="$distance" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
										<Callback_empty EventName="&apos;OnFinished&apos;" />
									</DistanceGate>
									<DistanceGate Origin="$this.id" ReferencePt="$enemy3" Low="$distance" High="$distance" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
										<Callback_empty EventName="&apos;OnFinished&apos;" />
									</DistanceGate>
								</Parallel>
							</Sequence>
							<Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Selector>
					</Loop>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="empty" EventSet="endNotification">
			<Variables>
				<Variable name="distance" comment="" />
				<Variable name="enemy1" comment="" />
				<Variable name="enemy2" comment="" />
				<Variable name="enemy3" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Callback_empty>
										</DistanceGate>
										<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Callback_empty>
										</DistanceGate>
										<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Callback_empty>
										</DistanceGate>
									</Parallel>
								</Sequence>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Selector>
						</Loop>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ignaz_checkFoodInInventory" is_function="1">
		<Variables />
		<Parameters>
			<Variable name="sheepPath" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<IsInsideArea Origin="$__player" Area="$sheepPath" FailSubtMissing="true" saveVersion="2">
					<Then canSkip="1">
						<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="30.000000" High="30.000000" Negation="false" ValueOnMiddle="false" failOnCondition="true">
							<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="" SubGraph="&apos;inventory&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<ItemClassFilter ClassId="&apos;b7ee311c-736b-4f7c-987b-8431ce3b5600&apos;" Category="" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
							</GraphSearch>
						</DistanceCondition>
					</Then>
				</IsInsideArea>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="sheepPath" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ItemClassFilter>
								</GraphSearch>
							</DistanceCondition>
						</Then>
					</IsInsideArea>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ignaz_checkFoodOnGround" is_function="1">
		<Variables>
			<Variable name="carrotGuid" type="_string" values="&apos;b7ee311c-736b-4f7c-987b-8431ce3b5600&apos;" isPersistent="0" form="single" />
			<Variable name="itemGuid" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="pathArea" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="foodOnGround" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;sheepPath&apos;" prune="true" negprune="unknown" Parent="" Child="$pathArea" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<InventoryListener operation="Remove" inventoryHost="$__player" itemsToCheck="" categoryToCheck="&apos;food.*.*&apos;" reportInitialState="false">
					<CheckWuidValid wuid="$__item" FailSubtMissing="false" saveVersion="2">
						<Then canSkip="1">
							<Sequence>
								<GetItemProperty itemId="$__item" property="Guid" result="$itemGuid" />
								<IfCondition failOnCondition="false" condition="$itemGuid == $carrotGuid">
									<IsInsideArea Origin="$__player" Area="$pathArea" FailSubtMissing="false" saveVersion="2">
										<Then canSkip="1">
											<DistanceCondition Origin="" ReferencePt="$__item" Low="10.000000" High="10.000000" Negation="false" ValueOnMiddle="false" failOnCondition="false">
												<Expression expressions="$foodOnGround = true" />
											</DistanceCondition>
										</Then>
									</IsInsideArea>
								</IfCondition>
							</Sequence>
						</Then>
					</CheckWuidValid>
				</InventoryListener>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="carrotGuid" comment="" />
				<Variable name="itemGuid" comment="" />
				<Variable name="pathArea" comment="" />
				<Variable name="foodOnGround" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-30" editorPosY="30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<InventoryListener hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetItemProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetItemProperty>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</DistanceCondition>
											</Then>
										</IsInsideArea>
									</IfCondition>
								</Sequence>
							</Then>
						</CheckWuidValid>
					</InventoryListener>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ignaz_stayHome" is_function="0">
		<Variables>
			<Variable name="ignazHome" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;ignazHome&apos;" prune="true" negprune="unknown" Parent="" Child="$ignazHome" Data="" />
					</GraphSearch>
					<Move stopWithinDistance="0.600000" stopDistanceVariation="0.000000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$ignazHome" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Turn target="$ignazHome" align="false" />
					<UnstanceAction unstance="SheepLying" locationObject="" slaveObject="" />
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="ignazHome" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Turn>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="player_drawWeapon" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<EntityContextCheck context="combat_playerDrawOversized" target="$this.id" saveVersion="2">
						<Then canSkip="1">
							<DrawAction WeaponSet="Oversized" fullBody="false" tags="" useSelectedWeaponSet="false" />
						</Then>
						<Else canSkip="1">
							<DrawAction WeaponSet="Primary" fullBody="false" tags="" useSelectedWeaponSet="false" />
						</Else>
					</EntityContextCheck>
					<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="endNotification">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</DrawAction>
							</Then>
							<Else>
								<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</DrawAction>
							</Else>
						</EntityContextCheck>
						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantCallback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="wait" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ignaz_runHome" is_function="0">
		<Variables>
			<Variable name="ignazHome" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="pathFindingParams" type="pathFindingParams" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Sequence>
						<Expression expressions="$pathFindingParams.usePaths = false" />
						<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;ignazHome&apos;" prune="true" negprune="unknown" Parent="" Child="$ignazHome" Data="" />
						</GraphSearch>
						<Move stopWithinDistance="0.600000" stopDistanceVariation="0.000000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$ignazHome" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$pathFindingParams" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
						<Turn target="$ignazHome" align="false" />
						<UnstanceAction unstance="SheepLying" locationObject="" slaveObject="" />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
					<Loop count="-1">
						<Sequence>
							<ExecuteSoundTrigger entity="$this.id" triggerName="&apos;b_sheep_baa&apos;" stop="false" />
							<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Loop>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="ignazHome" comment="" />
				<Variable name="pathFindingParams" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
							<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Turn>
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExecuteSoundTrigger hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExecuteSoundTrigger>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Loop>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="corpseRobber_getAcrossRiver" is_function="0">
		<Variables>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;corpseRobberPoint&apos;" prune="true" negprune="unknown" Parent="" Child="$destination" Data="" />
					</GraphSearch>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="empty" EventSet="endNotification">
			<Variables>
				<Variable name="destination" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="10" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>