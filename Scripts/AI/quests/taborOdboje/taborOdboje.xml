<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="healingTimeSkip" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<SkipTime duration="&apos;10s&apos;" skipTimeType="Undefined" />
					<RequestDialog DecisionName="" DecisionAlias="" SoulsToMetaroles="" Once="false" ForceSubtitles="false" UseTwins="true" SendMessage="true" Greeting="true" Ending="true" RequestChat="false" AllowPositioning="true" DisableRotations="false" DisableRestrictions="false" AnimationOverride="NoOverride" ContextVariables="" DialogId="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SkipTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SkipTime>
						<RequestDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</RequestDialog>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="vydra_injured" is_function="0">
		<Variables>
			<Variable name="bed" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;lyingHarmed&apos;" prune="true" negprune="unknown" Parent="" Child="$bed" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<CallBehavior Target="$bed" BehaviorName="&apos;lyingHarmed&apos;" ignoreDropUnloading="false" nodeLabel="76794454" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="bed" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-150" editorPosY="-10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<CallBehavior hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</CallBehavior>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="healing_vydra" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<SkipTime duration="&apos;2h&apos;" skipTimeType="Undefined" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="endNotification">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SkipTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SkipTime>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="vydra_die" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<KillNPC KillTarget="$this.id" animation="" tags="" AnimationWUID="" Scream="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</KillNPC>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="lyingHarmedwithBarks" is_function="0">
		<Variables>
			<Variable name="dialogueHolder" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;dialogueHolder&apos;" prune="true" negprune="unknown" Parent="" Child="$dialogueHolder" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<EntityContextPreset preset="switch_unresponsive" target="">
					<EntityContextElement context="speech_dialogTwinKeepsStance">
						<AddLinkElement from="$this.id" to="$dialogueHolder" tag="&apos;forceDialogueHolder&apos;" data="">
							<Sequence>
								<UnstanceAction unstance="woundedLying_2" locationObject="$__object.id" slaveObject="" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</AddLinkElement>
					</EntityContextElement>
				</EntityContextPreset>
			</Behavior>
		</Root>
		<ForestContainer>
			<StanceElement smartObject="$__resource.id" stance="lying" allowAny="false" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="dialogueHolder" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<OutputBreakpoints />
									</UnstanceAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</AddLinkElement>
						</EntityContextElement>
					</EntityContextPreset>
				</Behavior>
			</Root>
			<Forest>
				<StanceElement editorPosX="480" editorPosY="160" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</StanceElement>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="vydra_afterFight" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Loop count="-1">
						<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="8.000000" High="10.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
							<Function_monologRepeat alias="&apos;taborOdboje_vydraBarkujePoSoubojiSVlky&apos;" cooldown="&apos;8s&apos;" repeat="3" nodeLabel="44123121" />
						</DistanceGate>
					</Loop>
					<Sequence>
						<AnimationAction fragment="&apos;Exhausted&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
						<UnstanceAction unstance="lookingAtDetailLoop_disagree" locationObject="$data" slaveObject="" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_monologRepeat hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_monologRepeat>
							</DistanceGate>
						</Loop>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnimationAction>
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="vydra_fight" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="wolf_arrival" is_function="0">
		<Variables>
			<Variable name="eatSpot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="eatSpotBody" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="walkDestination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="wolves" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;wolfWalk&apos;" prune="true" negprune="unknown" Parent="" Child="$walkDestination" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;wolfEat&apos;" prune="true" negprune="unknown" Parent="" Child="$eatSpot" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;wolfEat2&apos;" prune="true" negprune="unknown" Parent="" Child="$eatSpotBody" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;wolf&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$wolves" saveVersion="2">
							<Child0 canSkip="1">
								<RangeSorter point="$__object.id" SortOrder="Ascending" Source="Child" />
							</Child0>
						</Nodalyzer>
					</GraphSearch>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<Switch>
					<IfCondition failOnCondition="false" condition="$this.id == $wolves[0]">
						<Sequence>
							<AnimationAction fragment="&apos;Howl&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" />
							<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$this.id == $wolves[1]">
						<Sequence>
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$eatSpot" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							<Turn target="$eatSpot" align="true" />
							<UnstanceAction unstance="dog_eatingStanding" locationObject="" slaveObject="" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$this.id == $wolves[2]">
						<Sequence>
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$walkDestination" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							<AnimationAction fragment="&apos;GrowlingStand&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$this.id == $wolves[3]">
						<Sequence>
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$eatSpotBody" destinationSpecification2="" destinationSpecification3="" speed="Dash" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							<Turn target="$eatSpotBody" align="true" />
							<UnstanceAction unstance="dog_eatingStanding" locationObject="" slaveObject="" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</IfCondition>
				</Switch>
			</Behavior>
		</Root>
		<ForestContainer>
			<ExactMove directionType="AlignWithEntity" directionSpecification="" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="eatSpot" comment="" />
				<Variable name="eatSpotBody" comment="" />
				<Variable name="walkDestination" comment="" />
				<Variable name="wolves" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child0>
									<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</RangeSorter>
								</Child0>
							</Nodalyzer>
						</GraphSearch>
					</Sequence>
				</OnInit>
				<Behavior>
					<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<OutputBreakpoints />
								</AnimationAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
								<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Turn>
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<OutputBreakpoints />
								</UnstanceAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
								<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<OutputBreakpoints />
								</AnimationAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
								<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Turn>
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<OutputBreakpoints />
								</UnstanceAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</IfCondition>
					</Switch>
				</Behavior>
			</Root>
			<Forest>
				<ExactMove editorPosX="960" editorPosY="20" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</ExactMove>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="wolf_fight" is_function="0">
		<Variables>
			<Variable name="enemies" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="target" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;vydra&apos;" prune="true" negprune="unknown" Parent="" Child="$enemies" Data="" />
					</GraphSearch>
					<PushToArray array="$enemies" value="$__player" direction="Back" />
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<RandomItem Array="$enemies" Result="$target" Clamp="-1" />
					<AddToSkirmish TargetNPC="$target" RelationOverride="Hostile" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="enemies" comment="" />
				<Variable name="target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</PushToArray>
					</Sequence>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<RandomItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</RandomItem>
						<AddToSkirmish hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AddToSkirmish>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="wolf_eatAtSpot" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<UnstanceAction unstance="dog_eatingStanding" locationObject="" slaveObject="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="wolf_growlAtSpot" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Loop count="-1">
						<RandomGate opensWithChance="0.000000" saveVersion="2">
							<Then canSkip="1">
								<Sequence>
									<AnimationAction fragment="&apos;Howl&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
									<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Sequence>
							</Then>
							<Else canSkip="1">
								<Sequence>
									<AnimationAction fragment="&apos;GrowlingStand&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
									<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Sequence>
							</Else>
						</RandomGate>
					</Loop>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AnimationAction>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Then>
								<Else>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AnimationAction>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Else>
							</RandomGate>
						</Loop>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>