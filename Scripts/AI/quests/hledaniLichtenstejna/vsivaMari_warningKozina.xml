<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="hledaniLichtenstejna_vsivaMari_warningKozina" is_function="0">
		<Variables>
			<Variable name="baths_area" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="baths_point" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="nearHideout_area" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="perceptionInfo" type="perceptionInfo" values="" isPersistent="0" form="single" />
			<Variable name="warning_point" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="behaviorState" type="enum:hledaniLichtenstejna_vsivaMari_warningKozina" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory,asset&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;mariWarningKozina_point&apos;" prune="true" negprune="unknown" Parent="" Child="$warning_point" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory,asset&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;baths_point&apos;" prune="true" negprune="unknown" Parent="" Child="$baths_point" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory,asset&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;nearHideout_area&apos;" prune="true" negprune="unknown" Parent="" Child="$nearHideout_area" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;asset&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;baths_area&apos;" prune="true" negprune="unknown" Parent="" Child="$baths_area" Data="" />
					</GraphSearch>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<While doFail="false" propagateChildFail="false" condition="true">
						<IfGate atomic="false" condition="$behaviorState == $enum:hledaniLichtenstejna_vsivaMari_warningKozina.GoingToWarn | &#10;$behaviorState == $enum:hledaniLichtenstejna_vsivaMari_warningKozina.Returning" RunLogic="Halt">
							<AreaPresenceGate aiObjects="$this.id" area="$baths_area" amount="AtLeastOne" presence="NotThere" RunLogic="Halt">
								<Sequence>
									<ClearInbox inbox="&apos;perceptionInfo&apos;" type="&apos;perceptionInfo&apos;" condition="" />
									<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$perceptionInfo" senderInfo="" inbox="&apos;perceptionInfo&apos;" condition="" answerVar="">
										<IfCondition failOnCondition="false" condition="$perceptionInfo.perceptible == $__player">
											<IsInsideArea Origin="$this.id" Area="$nearHideout_area" FailSubtMissing="false" saveVersion="2">
												<Then canSkip="1">
													<InstantCallback_empty EventName="&apos;OnConfrontedNearHideout&apos;" />
												</Then>
												<Else canSkip="1">
													<InstantCallback_empty EventName="&apos;OnYellingAtPlayer&apos;" />
												</Else>
											</IsInsideArea>
										</IfCondition>
									</ProcessMessage>
								</Sequence>
							</AreaPresenceGate>
						</IfGate>
					</While>
					<ContinuousSwitch>
						<IfCondition failOnCondition="false" condition="$behaviorState == $enum:hledaniLichtenstejna_vsivaMari_warningKozina.GoingToWarn">
							<Sequence>
								<ExactMove directionType="AlignWithEntity" directionSpecification="$warning_point" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$warning_point" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
								<Function_speech_monolog alias="&apos;hledaniLichtenstejna_mariWarningKozina&apos;" canBeDelayed="true" context="" dramaticBark="false" lookAtId="" metarole="" target="" wait="true" nodeLabel="75557826" />
								<InstantCallback_empty EventName="&apos;OnReturning&apos;" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$behaviorState == $enum:hledaniLichtenstejna_vsivaMari_warningKozina.Returning">
							<Sequence>
								<Parallel successMode="Any" failureMode="Any">
									<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="10.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$baths_point" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									<AreaPresenceGate aiObjects="$this.id" area="$nearHideout_area" amount="AtLeastOne" presence="NotThere" RunLogic="KeepRunning">
										<Success />
									</AreaPresenceGate>
								</Parallel>
								<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$behaviorState == $enum:hledaniLichtenstejna_vsivaMari_warningKozina.ConfrontedNearHideout">
							<Parallel successMode="Any" failureMode="Any">
								<While doFail="false" propagateChildFail="false" condition="true">
									<ForceLook LookTarget="$__player" DisableVariations="false">
										<Sequence>
											<Turn target="$__player" align="false" />
											<Wait duration="&apos;100ms&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
									</ForceLook>
								</While>
								<Sequence>
									<Function_speech_monolog alias="&apos;hledaniLichtenstejna_mariSawPlayerNearHideout&apos;" canBeDelayed="true" context="" dramaticBark="false" lookAtId="" metarole="" target="" wait="true" nodeLabel="64218378" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
								<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="10.000000" High="10.000000" Negation="true" OpenInMiddle="false" RunLogic="KeepRunning">
									<Sequence>
										<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</DistanceGate>
							</Parallel>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$behaviorState == $enum:hledaniLichtenstejna_vsivaMari_warningKozina.YellingAtPlayer">
							<Parallel successMode="Any" failureMode="Any">
								<While doFail="false" propagateChildFail="false" condition="true">
									<ForceLook LookTarget="$__player" DisableVariations="false">
										<Sequence>
											<Turn target="$__player" align="false" />
											<Wait duration="&apos;100ms&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
									</ForceLook>
								</While>
								<Sequence>
									<Function_speech_monolog alias="&apos;hledaniLichtenstejna_mariSawPlayerOnTheWay&apos;" canBeDelayed="true" context="" dramaticBark="false" lookAtId="" metarole="" target="" wait="true" nodeLabel="15168550" />
									<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</Parallel>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="true">
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</IfCondition>
					</ContinuousSwitch>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="hledaniLichtenstejna_vsivaMari_warningKozina" EventSet="hledaniLichtenstejna_vsivaMari_warningKozina">
			<Variables>
				<Variable name="baths_area" comment="" />
				<Variable name="baths_point" comment="" />
				<Variable name="nearHideout_area" comment="" />
				<Variable name="perceptionInfo" comment="" />
				<Variable name="warning_point" comment="" />
				<Variable name="behaviorState" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
					</Sequence>
				</OnInit>
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ClearInbox hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ClearInbox>
										<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</InstantCallback_empty>
													</Then>
													<Else>
														<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</InstantCallback_empty>
													</Else>
												</IsInsideArea>
											</IfCondition>
										</ProcessMessage>
									</Sequence>
								</AreaPresenceGate>
							</IfGate>
						</While>
						<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="GoingToWarn" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExactMove>
									<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_monolog>
									<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantCallback_empty>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="Returning" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
										<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</AreaPresenceGate>
									</Parallel>
									<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantCallback_empty>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="ConfrontedNearHideout" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Turn>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</ForceLook>
									</While>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_monolog>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
									<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</InstantCallback_empty>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</DistanceGate>
								</Parallel>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="YellingAtPlayer" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Turn>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</ForceLook>
									</While>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_monolog>
										<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</InstantCallback_empty>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Parallel>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</IfCondition>
						</ContinuousSwitch>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>