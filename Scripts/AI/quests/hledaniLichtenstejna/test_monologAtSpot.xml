<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="test_monologAtSpot" is_function="0">
    <Variables />
    <Parameters>
      <Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="important" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="position" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="turnTowards" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <IfElseCondition failOnCondition="false" condition="$position ~= $__land" saveVersion="2">
            <Then canSkip="1">
              <ExactMove directionType="AlignWithEntity" directionSpecification="$position" animationTriggerDist="0.150000" precise="false" changeNPCState="true" destinationSpecification="$position" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
            </Then>
            <Else canSkip="1">
              <WaitAction />
            </Else>
          </IfElseCondition>
          <Parallel successMode="Any" failureMode="Any">
            <IfElseCondition failOnCondition="false" condition="$turnTowards ~= $__land" saveVersion="2">
              <Then canSkip="1">
                <While doFail="false" propagateChildFail="false" condition="true">
                  <Sequence>
                    <Turn target="$turnTowards" align="false" />
                    <Wait duration="&apos;100ms&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                  </Sequence>
                </While>
              </Then>
              <Else canSkip="1">
                <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
              </Else>
            </IfElseCondition>
            <Sequence>
              <LoopUntil until="Success" attemptCount="0">
                <FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
                  <Child canSkip="1">
                    <Function_speech_monolog alias="$alias" canBeDelayed="false" context="" important="$important" lookAtId="" metarole="" target="" wait="false" nodeLabel="33906442" />
                  </Child>
                  <OnFail canSkip="1">
                    <Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                  </OnFail>
                </FuseBox>
              </LoopUntil>
              <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
            </Sequence>
          </Parallel>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="test_monologAtSpot" EventSet="">
      <Variables>
        <Variable name="alias" comment="" />
        <Variable name="important" comment="" />
        <Variable name="position" comment="" />
        <Variable name="turnTowards" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </ExactMove>
              </Then>
              <Else>
                <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </WaitAction>
              </Else>
            </IfElseCondition>
            <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Turn>
                      <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Wait>
                    </Sequence>
                  </While>
                </Then>
                <Else>
                  <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Wait>
                </Else>
              </IfElseCondition>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Child>
                      <Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Function_speech_monolog>
                    </Child>
                    <OnFail>
                      <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Wait>
                    </OnFail>
                  </FuseBox>
                </LoopUntil>
                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Wait>
              </Sequence>
            </Parallel>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>