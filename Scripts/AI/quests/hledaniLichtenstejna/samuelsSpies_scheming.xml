<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="hledaniLichtenstejna_samuelsSpies_scheming" is_function="0">
    <Variables>
      <Variable name="comrade" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="leaning_point" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="talking_1_point" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="talking_2_point" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Sequence>
          <GraphSearch Origin="$__object.id" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory,asset&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;samuelsSpies_leaning_point&apos;" prune="true" negprune="unknown" Parent="" Child="$leaning_point" Data="" />
          </GraphSearch>
          <GraphSearch Origin="$__object.id" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory,asset&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;samuelsSpies_talking_1_point&apos;" prune="true" negprune="unknown" Parent="" Child="$talking_1_point" Data="" />
          </GraphSearch>
          <GraphSearch Origin="$__object.id" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory,asset&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;samuelsSpies_talking_2_point&apos;" prune="true" negprune="unknown" Parent="" Child="$talking_2_point" Data="" />
          </GraphSearch>
          <SetExternalLock LockManagerType="Local" Locked="true" LockName="&apos;hledaniLichtenstejna_samuelsSpies_prepareToTalk&apos;" />
        </Sequence>
      </OnInit>
      <Behavior canSkip="1">
        <Parallel successMode="Any" failureMode="Any">
          <Sequence>
            <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="8.000000" changeNPCState="true" destinationSpecification="$leaning_point" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
            <Selector>
              <InstantSemaphore SemaphoreCount="1" LockManagerType="Local" SemaphoreName="&apos;hledaniLichtenstejna_samuelsSpies_leaningAvailable&apos;">
                <Sequence>
                  <Parallel successMode="Any" failureMode="Any">
                    <Sequence>
                      <UnstanceAction unstance="LeaningBack" locationObject="$leaning_point" />
                      <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                    </Sequence>
                    <ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;hledaniLichtenstejna_samuelsSpies_prepareToTalk&apos;" RunLogic="KeepRunning">
                      <Success />
                    </ExternalLock>
                    <While doFail="false" propagateChildFail="false" condition="true">
                      <Sequence>
                        <Wait duration="&apos;10m&apos;" timeType="WorldTime" doFail="false" variation="" skipInLOD="false" />
                        <GetBehaviorHolders area="$__object.id" behaviors="&apos;samuelsSpies_scheming&apos;" targetVar="$comrade" />
                        <IfCondition failOnCondition="false" condition="#comrade &lt; 2">
                          <Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;hledaniLichtenstejna_samuelsSpies_abortWaiting&apos;" RunLogic="KeepRunning">
                            <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                          </Synchronize>
                        </IfCondition>
                      </Sequence>
                    </While>
                  </Parallel>
                  <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$talking_1_point" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
                  <Turn target="$talking_2_point" align="false" />
                  <SuppressFailure>
                    <Synchronize SemaphoreCount="2" InsideTimerValue="&apos;30s&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;hledaniLichtenstejna_samuelsSpies_readyToTalk&apos;" RunLogic="Halt">
                      <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                    </Synchronize>
                  </SuppressFailure>
                </Sequence>
              </InstantSemaphore>
              <Sequence>
                <SetExternalLock LockManagerType="Local" Locked="false" LockName="&apos;hledaniLichtenstejna_samuelsSpies_prepareToTalk&apos;" />
                <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$talking_2_point" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
                <Turn target="$talking_1_point" align="false" />
                <Synchronize SemaphoreCount="2" InsideTimerValue="&apos;30s&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;hledaniLichtenstejna_samuelsSpies_readyToTalk&apos;" RunLogic="Halt">
                  <Sequence>
                    <GetLockParticipants OutArray="$comrade" IncludeSelf="false" />
                    <SuppressFailure>
                      <LoopUntil until="Success" attemptCount="30">
                        <Selector>
                          <Function_speech_dialogInitiator alias="&apos;hledaniLichtenstejna_samuelsSpies_scheming&apos;" context="" customParameters="" metarole="" preset="$enum:dialogPreset.ingame" recipient="$comrade[0]" recipientMetaroles="" nodeLabel="65519362" />
                          <Sequence>
                            <Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                            <Fail />
                          </Sequence>
                        </Selector>
                      </LoopUntil>
                    </SuppressFailure>
                  </Sequence>
                </Synchronize>
              </Sequence>
            </Selector>
          </Sequence>
          <Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;hledaniLichtenstejna_samuelsSpies_abortWaiting&apos;" RunLogic="KeepRunning">
            <Success />
          </Synchronize>
        </Parallel>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="comrade" comment="" />
        <Variable name="leaning_point" comment="" />
        <Variable name="talking_1_point" comment="" />
        <Variable name="talking_2_point" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </SetExternalLock>
          </Sequence>
        </OnInit>
        <Behavior>
          <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Move>
              <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <InstantSemaphore hasInputBreakpoint="0" comment="First spy there will wait at the leaning spot" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <OutputBreakpoints />
                        </UnstanceAction>
                        <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Wait>
                      </Sequence>
                      <ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Success>
                      </ExternalLock>
                      <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Wait>
                          <GetBehaviorHolders hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </GetBehaviorHolders>
                          <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Wait>
                            </Synchronize>
                          </IfCondition>
                        </Sequence>
                      </While>
                    </Parallel>
                    <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Move>
                    <Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Turn>
                    <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Wait>
                      </Synchronize>
                    </SuppressFailure>
                  </Sequence>
                </InstantSemaphore>
                <Sequence hasInputBreakpoint="0" comment="Second spy will control the dialog" breakpointFlags="0">
                  <OutputBreakpoints />
                  <SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </SetExternalLock>
                  <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Move>
                  <Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Turn>
                  <Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <GetLockParticipants hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </GetLockParticipants>
                      <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Function_speech_dialogInitiator>
                            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Wait>
                              <Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Fail>
                            </Sequence>
                          </Selector>
                        </LoopUntil>
                      </SuppressFailure>
                    </Sequence>
                  </Synchronize>
                </Sequence>
              </Selector>
            </Sequence>
            <Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Success>
            </Synchronize>
          </Parallel>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>