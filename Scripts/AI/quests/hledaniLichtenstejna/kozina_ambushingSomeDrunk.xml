<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="hledaniLichtenstejna_kozina_ambushingSomeDrunk" is_function="0">
		<Variables>
			<Variable name="ambushRoot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ambushingPlayer_expectedSide_area" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ambushingPlayer_unexpectedSide_area" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ambushingUdo_area" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ambushingUdo_blockedByPlayer_area" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ambushing_expectedSide_alignSO" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ambushing_unexpectedSide_alignSO" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="expectedSide" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="leaning_alignSO" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="p_ignorePlayerPassingBy" type="_bool" values="" isPersistent="1" form="single" />
			<Variable name="playersMount" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="udo" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="behaviorState" type="enum:hledaniLichtenstejna_kozina_ambushingSomeDrunk" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;asset&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;udo&apos;" prune="true" negprune="unknown" Parent="" Child="$udo" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;kozina_lyingInAmbush_point&apos;" prune="true" negprune="unknown" Parent="" Child="$ambushRoot" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$ambushRoot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;leaning_alignSO&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$leaning_alignSO" />
					</GraphSearch>
					<GraphSearch Origin="$ambushRoot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;ambushing_expectedSide_alignSO&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$ambushing_expectedSide_alignSO" />
					</GraphSearch>
					<GraphSearch Origin="$ambushRoot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;ambushing_unexpectedSide_alignSO&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$ambushing_unexpectedSide_alignSO" />
					</GraphSearch>
					<GraphSearch Origin="$ambushRoot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;ambushingPlayer_expectedSide_area&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$ambushingPlayer_expectedSide_area" />
					</GraphSearch>
					<GraphSearch Origin="$ambushRoot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;ambushingPlayer_unexpectedSide_area&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$ambushingPlayer_unexpectedSide_area" />
					</GraphSearch>
					<GraphSearch Origin="$ambushRoot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;ambushingUdo_area&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$ambushingUdo_area" />
					</GraphSearch>
					<GraphSearch Origin="$ambushRoot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;ambushingUdo_blockedByPlayer_area&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$ambushingUdo_blockedByPlayer_area" />
					</GraphSearch>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<EntityContextElement context="combat_arrangedFight" enabled="true">
					<EntityContextPreset preset="crime_preoccupied" target="">
						<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
							<Child canSkip="1">
								<ContinuousSwitch>
									<IfCondition failOnCondition="false" condition="$behaviorState == $enum:hledaniLichtenstejna_kozina_ambushingSomeDrunk.LyingInAmbush">
										<Sequence>
											<UrgencyDecorator Urgency="Instant">
												<UnstanceAction unstance="LeaningBack" locationObject="$leaning_alignSO" slaveObject="" />
											</UrgencyDecorator>
											<Parallel successMode="Any" failureMode="Any">
												<Sequence>
													<EnsureWuidValid Wuid="$udo" RunLogic="Halt">
														<AreaPresenceGate aiObjects="$udo" area="$ambushingUdo_area" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
															<IsInsideArea Origin="$__player" Area="$ambushingUdo_blockedByPlayer_area" FailSubtMissing="false" saveVersion="2">
																<Else canSkip="1">
																	<Selector>
																		<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;500ms&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;hledaniLichtenstejna_ambushingUdo&apos;" RunLogic="KeepRunning">
																			<Sequence>
																				<InstantCallback_empty EventName="&apos;OnAmbushingUdo&apos;" />
																				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																			</Sequence>
																		</Synchronize>
																		<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																	</Selector>
																</Else>
															</IsInsideArea>
														</AreaPresenceGate>
													</EnsureWuidValid>
													<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
												</Sequence>
												<ContinuousSwitch>
													<IfCondition failOnCondition="false" condition="!$p_ignorePlayerPassingBy">
														<Sequence>
															<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
																<Child canSkip="1">
																	<Parallel successMode="Any" failureMode="Any">
																		<AreaPresenceGate aiObjects="$__player" area="$ambushingPlayer_expectedSide_area" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
																			<Expression expressions="$expectedSide = true" />
																		</AreaPresenceGate>
																		<AreaPresenceGate aiObjects="$__player" area="$ambushingPlayer_unexpectedSide_area" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
																			<Expression expressions="$expectedSide = false" />
																		</AreaPresenceGate>
																	</Parallel>
																</Child>
																<OnSuccess canSkip="1">
																	<Selector>
																		<Sequence>
																			<BuffTagCheck SoulId="$__player" buffAITagId="1" FailWithSubtreeMissing="false" saveVersion="2">
																				<Else canSkip="1">
																					<Fail />
																				</Else>
																			</BuffTagCheck>
																			<IfCondition failOnCondition="false" condition="$expectedSide">
																				<CheckWuidValid wuid="$udo" FailSubtMissing="false" saveVersion="2">
																					<Then canSkip="1">
																						<IsInsideArea Origin="$udo" Area="$ambushingPlayer_expectedSide_area" FailSubtMissing="false" saveVersion="2">
																							<Then canSkip="1">
																								<Fail />
																							</Then>
																						</IsInsideArea>
																					</Then>
																				</CheckWuidValid>
																			</IfCondition>
																			<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;mount&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																				<AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$playersMount" />
																			</GraphSearch>
																			<IfCondition failOnCondition="false" condition="$playersMount ~= $__null">
																				<Fail />
																			</IfCondition>
																			<ActorStateCheck Who="$__player" State="fastTravel" FailWithSubtreeMissing="false" saveVersion="2">
																				<Then canSkip="1">
																					<Fail />
																				</Then>
																			</ActorStateCheck>
																			<IfElseCondition failOnCondition="false" condition="$expectedSide" saveVersion="2">
																				<Then canSkip="1">
																					<InstantCallback_empty EventName="&apos;OnAmbushingPlayer_ExpectedSide&apos;" />
																				</Then>
																				<Else canSkip="1">
																					<InstantCallback_empty EventName="&apos;OnAmbushingPlayer_UnexpectedSide&apos;" />
																				</Else>
																			</IfElseCondition>
																		</Sequence>
																		<Expression expressions="$p_ignorePlayerPassingBy = true" />
																	</Selector>
																</OnSuccess>
															</FuseBox>
															<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
														</Sequence>
													</IfCondition>
													<IfCondition failOnCondition="false" condition="true">
														<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="13.000000" High="13.000000" Negation="true" OpenInMiddle="false" RunLogic="KeepRunning">
															<Expression expressions="$p_ignorePlayerPassingBy = false" />
														</DistanceGate>
													</IfCondition>
												</ContinuousSwitch>
											</Parallel>
										</Sequence>
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$behaviorState == $enum:hledaniLichtenstejna_kozina_ambushingSomeDrunk.AmbushingUdo">
										<ForceLook LookTarget="$udo" DisableVariations="false">
											<Sequence>
												<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_commenceAmbush ambushing_alignSO="$ambushing_expectedSide_alignSO" ambushing_animationTag="&apos;side_right&apos;" nodeLabel="84933862" />
												<InstantCallback_empty EventName="&apos;OnConfrontingUdo&apos;" />
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</ForceLook>
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$behaviorState == $enum:hledaniLichtenstejna_kozina_ambushingSomeDrunk.ConfrontingUdo">
										<ForceLook LookTarget="$udo" DisableVariations="false">
											<Parallel successMode="Any" failureMode="Any">
												<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_confronting target="$udo" nodeLabel="13499554" />
												<Sequence>
													<SuppressFailure>
														<LoopUntil until="Success" attemptCount="30">
															<Selector>
																<Function_speech_dialogInitiator alias="&apos;hledaniLichtenstejna_kozina_ambushingUdo&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" preset="$enum:dialogPreset.ingame" recipient="$udo" recipientMetaroles="" nodeLabel="40950118" />
																<Sequence>
																	<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
																	<Fail />
																</Sequence>
															</Selector>
														</LoopUntil>
													</SuppressFailure>
													<InstantCallback_empty EventName="&apos;OnAmbushedUdoSuccessfully&apos;" />
													<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
												</Sequence>
											</Parallel>
										</ForceLook>
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$behaviorState == $enum:hledaniLichtenstejna_kozina_ambushingSomeDrunk.AmbushingPlayer_ExpectedSide">
										<ForceLook LookTarget="$__player" DisableVariations="false">
											<Sequence>
												<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_commenceAmbush ambushing_alignSO="$ambushing_expectedSide_alignSO" ambushing_animationTag="&apos;side_right&apos;" nodeLabel="70470309" />
												<InstantCallback_empty EventName="&apos;OnConfrontingPlayer_ExpectedSide&apos;" />
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</ForceLook>
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$behaviorState == $enum:hledaniLichtenstejna_kozina_ambushingSomeDrunk.AmbushingPlayer_UnexpectedSide">
										<ForceLook LookTarget="$__player" DisableVariations="false">
											<Sequence>
												<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_commenceAmbush ambushing_alignSO="$ambushing_unexpectedSide_alignSO" ambushing_animationTag="&apos;side_left&apos;" nodeLabel="53341877" />
												<InstantCallback_empty EventName="&apos;OnConfrontingPlayer_UnexpectedSide&apos;" />
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</ForceLook>
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$behaviorState == $enum:hledaniLichtenstejna_kozina_ambushingSomeDrunk.ConfrontingPlayer_ExpectedSide | &#10;$behaviorState == $enum:hledaniLichtenstejna_kozina_ambushingSomeDrunk.ConfrontingPlayer_UnexpectedSide">
										<ForceLook LookTarget="$__player" DisableVariations="false">
											<Parallel successMode="Any" failureMode="Any">
												<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_confronting target="$__player" nodeLabel="41511059" />
												<While doFail="false" propagateChildFail="false" condition="true">
													<Sequence>
														<LoopUntil until="Success" attemptCount="5">
															<Function_speech_dialogInitiator alias="&apos;hledaniLichtenstejna_ambush_chat&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="$__null" customParameters="$__null" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="42872092" />
														</LoopUntil>
														<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="&apos;3s&apos;" />
													</Sequence>
												</While>
												<DistanceGate Origin="$ambushRoot" ReferencePt="$__player" Low="9.000000" High="9.000000" Negation="true" OpenInMiddle="false" RunLogic="KeepRunning">
													<Sequence>
														<InstantCallback_empty EventName="&apos;OnPlayerRunningFromAmbush&apos;" />
														<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
													</Sequence>
												</DistanceGate>
											</Parallel>
										</ForceLook>
									</IfCondition>
									<IfCondition failOnCondition="false" condition="true">
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
									</IfCondition>
								</ContinuousSwitch>
							</Child>
							<OnFail canSkip="1">
								<InstantCallback_empty EventName="&apos;OnInterrupted&apos;" />
							</OnFail>
						</FuseBox>
					</EntityContextPreset>
				</EntityContextElement>
			</Behavior>
		</Root>
		<ForestContainer>
			<Function_speech_monolog alias="&apos;hledaniLichtenstejna_kozina_ambushingPlayer&apos;" canBeDelayed="false" context="" dramaticBark="false" lookAtId="" metarole="" target="" wait="true" nodeLabel="86010909" />
			<While doFail="false" propagateChildFail="false" condition="true">
				<Sequence>
					<ExecuteLua code="Dump(&apos;!!! &apos;.. player.soul:GetDerivedStat(&apos;arr&apos;) .. &apos;  oad:  &apos; .. player.soul:GetDerivedStat(&apos;oad&apos;) .. &apos;  alo:  &apos; .. player.soul:GetDerivedStat(&apos;alo&apos;))" />
					<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</While>
		</ForestContainer>
		<EditorData Signature="hledaniLichtenstejna_kozina_ambushingSomeDrunk" EventSet="hledaniLichtenstejna_kozina_ambushingSomeDrunk">
			<Variables>
				<Variable name="ambushRoot" comment="" />
				<Variable name="ambushingPlayer_expectedSide_area" comment="" />
				<Variable name="ambushingPlayer_unexpectedSide_area" comment="" />
				<Variable name="ambushingUdo_area" comment="" />
				<Variable name="ambushingUdo_blockedByPlayer_area" comment="" />
				<Variable name="ambushing_expectedSide_alignSO" comment="" />
				<Variable name="ambushing_unexpectedSide_alignSO" comment="" />
				<Variable name="expectedSide" comment="" />
				<Variable name="leaning_alignSO" comment="" />
				<Variable name="p_ignorePlayerPassingBy" comment="" />
				<Variable name="playersMount" comment="" />
				<Variable name="udo" comment="" />
				<Variable name="behaviorState" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnyLinkFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnyLinkFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnyLinkFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnyLinkFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnyLinkFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnyLinkFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnyLinkFilter>
						</GraphSearch>
					</Sequence>
				</OnInit>
				<Behavior>
					<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child>
									<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfCondition hasInputBreakpoint="0" comment="lyingInAmbush" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</UnstanceAction>
												</UrgencyDecorator>
												<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="Udo triggering ambush" breakpointFlags="0">
														<OutputBreakpoints />
														<EnsureWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Else>
																		<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</InstantCallback_empty>
																					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Wait>
																				</Sequence>
																			</Synchronize>
																			<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Wait>
																		</Selector>
																	</Else>
																</IsInsideArea>
															</AreaPresenceGate>
														</EnsureWuidValid>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Sequence>
													<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfCondition hasInputBreakpoint="0" comment="Player possibly triggering ambush" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Child>
																		<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Expression>
																			</AreaPresenceGate>
																			<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Expression>
																			</AreaPresenceGate>
																		</Parallel>
																	</Child>
																	<OnSuccess>
																		<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<BuffTagCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																					<Else>
																						<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Fail>
																					</Else>
																				</BuffTagCheck>
																				<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																						<OutputBreakpoints />
																						<Then>
																							<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																								<OutputBreakpoints />
																								<Then>
																									<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</Fail>
																								</Then>
																							</IsInsideArea>
																						</Then>
																					</CheckWuidValid>
																				</IfCondition>
																				<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</AnyLinkFilter>
																				</GraphSearch>
																				<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Fail>
																				</IfCondition>
																				<ActorStateCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																					<Then>
																						<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Fail>
																					</Then>
																				</ActorStateCheck>
																				<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																					<Then>
																						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</InstantCallback_empty>
																					</Then>
																					<Else>
																						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</InstantCallback_empty>
																					</Else>
																				</IfElseCondition>
																			</Sequence>
																			<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Expression>
																		</Selector>
																	</OnSuccess>
																</FuseBox>
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
															</Sequence>
														</IfCondition>
														<IfCondition hasInputBreakpoint="0" comment="Player being ignored" breakpointFlags="0">
															<OutputBreakpoints />
															<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</DistanceGate>
														</IfCondition>
													</ContinuousSwitch>
												</Parallel>
											</Sequence>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="ambushingUdo" breakpointFlags="0">
											<OutputBreakpoints />
											<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_commenceAmbush hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_commenceAmbush>
													<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantCallback_empty>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</ForceLook>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="confrontingUdo" breakpointFlags="0">
											<OutputBreakpoints />
											<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_confronting hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_confronting>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_speech_dialogInitiator>
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Wait>
																		<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Fail>
																	</Sequence>
																</Selector>
															</LoopUntil>
														</SuppressFailure>
														<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</InstantCallback_empty>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Sequence>
												</Parallel>
											</ForceLook>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="ambushingPlayer_expectedSide" breakpointFlags="0">
											<OutputBreakpoints />
											<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_commenceAmbush hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_commenceAmbush>
													<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantCallback_empty>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</ForceLook>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="ambushingPlayer_unexpectedSide" breakpointFlags="0">
											<OutputBreakpoints />
											<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_commenceAmbush hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_commenceAmbush>
													<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantCallback_empty>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</ForceLook>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="confrontingPlayer_expectedSide | confrontingPlayer_unexpectedSide" breakpointFlags="0">
											<OutputBreakpoints />
											<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_confronting hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_confronting>
													<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_dialogInitiator>
															</LoopUntil>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
													</While>
													<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</InstantCallback_empty>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
													</DistanceGate>
												</Parallel>
											</ForceLook>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</IfCondition>
									</ContinuousSwitch>
								</Child>
								<OnFail>
									<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantCallback_empty>
								</OnFail>
							</FuseBox>
						</EntityContextPreset>
					</EntityContextElement>
				</Behavior>
			</Root>
			<Forest>
				<Function_speech_monolog editorPosX="2020" editorPosY="2320" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Function_speech_monolog>
				<While editorPosX="1910" editorPosY="-1230" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExecuteLua>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</While>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>