<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="onUpdate" is_function="0">
		<Variables>
			<Variable name="fireState" type="enum:kettleFireState" values="$enum:kettleFireState.off" isPersistent="1" form="single" />
			<Variable name="lastStoking" type="_int64" values="" isPersistent="0" form="single" />
			<Variable name="now" type="_int64" values="" isPersistent="0" form="single" />
			<Variable name="prefabPhaseIndex" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="proceduralObjects" type="_wuid" values="" isPersistent="0" form="associative" />
			<Variable name="signal_onFireplacePhaseChange" type="kettle:signal:onFireplacePhaseChange" values="" isPersistent="0" form="single" />
			<Variable name="toggleCountdown" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;proceduralObject&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<EvaLLyzer Expresion="$proceduralObjects[$__link_proceduralObject] = $__to" Quantifiers="ForAll" saveVersion="2" />
					</GraphSearch>
					<InstantSendMessageToNPC target="$this.id" type="&apos;kettle:signal:onFireplacePhaseChange&apos;" values="state($fireState)" />
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<While doFail="false" propagateChildFail="false" condition="true">
						<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$signal_onFireplacePhaseChange" senderInfo="" inbox="&apos;kettleInbox&apos;" condition="" answerVar="">
							<Sequence>
								<Expression expressions="$fireState = $signal_onFireplacePhaseChange.state" />
								<IfElseCondition failOnCondition="false" condition="$fireState == $enum:kettleFireState.on" saveVersion="2">
									<Then canSkip="1">
										<Sequence>
											<Expression expressions="$prefabPhaseIndex = 2" />
											<GetTime TimeType="WorldTime" OutVar="$lastStoking" Delta="" />
										</Sequence>
									</Then>
									<Else canSkip="1">
										<Expression expressions="$prefabPhaseIndex = 1" />
									</Else>
								</IfElseCondition>
								<ExecuteLua code="local ohniste = XGenAIModule.GetEntityByWUID(data.proceduralObjects[&apos;fire&apos;])  &#10;Game.SetPrefabPhaseById(ohniste.id, &apos;fireplace_burning&apos;, data.prefabPhaseIndex); &#10; &#10;local steam = XGenAIModule.GetEntityByWUID(data.proceduralObjects[&apos;steam&apos;])  &#10;Game.SetPrefabPhaseById(steam.id, &apos;fireplace_steam&apos;, data.prefabPhaseIndex);" />
							</Sequence>
						</ProcessMessage>
					</While>
					<While doFail="false" propagateChildFail="false" condition="true">
						<IfGate atomic="false" condition="$fireState == $enum:kettleFireState.on" RunLogic="Halt">
							<Sequence>
								<Wait duration="&apos;20m&apos;" timeType="WorldTime" doFail="false" variation="" />
								<GetTime TimeType="WorldTime" OutVar="$now" Delta="" />
								<IfCondition failOnCondition="false" condition="$now &gt; $lastStoking + 18000000">
									<InstantSendMessageToNPC target="$this.id" type="&apos;kettle:signal:onFireplacePhaseChange&apos;" values="state($enum:kettleFireState.off)" />
								</IfCondition>
							</Sequence>
						</IfGate>
					</While>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="fireState" comment="" />
				<Variable name="lastStoking" comment="" />
				<Variable name="now" comment="" />
				<Variable name="prefabPhaseIndex" comment="" />
				<Variable name="proceduralObjects" comment="" />
				<Variable name="signal_onFireplacePhaseChange" comment="" />
				<Variable name="toggleCountdown" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</EvaLLyzer>
						</GraphSearch>
						<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantSendMessageToNPC>
					</Sequence>
				</OnInit>
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
												<GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</GetTime>
											</Sequence>
										</Then>
										<Else>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Else>
									</IfElseCondition>
									<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExecuteLua>
								</Sequence>
							</ProcessMessage>
						</While>
						<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetTime>
									<IfCondition hasInputBreakpoint="0" comment="5h" breakpointFlags="0">
										<OutputBreakpoints />
										<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</InstantSendMessageToNPC>
									</IfCondition>
								</Sequence>
							</IfGate>
						</While>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="campStoking" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="speech_greyOutE" target="">
					<EntityContextElement context="speech_greyOutE" enabled="true">
						<Sequence>
							<AnimationAction fragment="&apos;CampFireplaceStoking&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
							<InstantSendMessageToNPC target="$__object.id" type="&apos;kettle:signal:onFireplacePhaseChange&apos;" values="state($enum:kettleFireState.on)" />
						</Sequence>
					</EntityContextElement>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</AnimationAction>
								<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantSendMessageToNPC>
							</Sequence>
						</EntityContextElement>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>