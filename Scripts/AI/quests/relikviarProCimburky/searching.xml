<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="relikviarProCimburky_searching" is_function="0">
    <Variables>
      <Variable name="dest" type="_wuid" values="" isPersistent="1" form="single" />
      <Variable name="oldDestination" type="_wuid" values="" isPersistent="1" form="single" />
    </Variables>
    <Parameters>
      <Variable name="arrayData" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
          <Loop count="-1">
            <Sequence>
              <IfCondition failOnCondition="false" condition="$dest ~= $__null">
                <Sequence>
                  <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$dest" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
                  <Expression expressions="$oldDestination = $dest" />
                  <AnimationAction fragment="&apos;SearchStand&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
                </Sequence>
              </IfCondition>
              <LoopUntil until="Success" attemptCount="0">
                <Sequence>
                  <RandomItem Array="$arrayData" Result="$dest" Clamp="-1" />
                  <IfElseCondition failOnCondition="false" condition="$dest ~= $oldDestination" saveVersion="2">
                    <Then canSkip="1">
                      <Success />
                    </Then>
                    <Else canSkip="1">
                      <Fail />
                    </Else>
                  </IfElseCondition>
                </Sequence>
              </LoopUntil>
            </Sequence>
          </Loop>
        </EntityContextElement>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="relikviarProCimburky_searchingPoints" EventSet="">
      <Variables>
        <Variable name="dest" comment="" />
        <Variable name="oldDestination" comment="" />
        <Variable name="arrayData" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Move>
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                    <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AnimationAction>
                  </Sequence>
                </IfCondition>
                <LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <RandomItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </RandomItem>
                    <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                      <OutputBreakpoints />
                      <Then>
                        <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Success>
                      </Then>
                      <Else>
                        <Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Fail>
                      </Else>
                    </IfElseCondition>
                  </Sequence>
                </LoopUntil>
              </Sequence>
            </Loop>
          </EntityContextElement>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="relikviarProCimburky_playAnimOneshot" is_function="0">
    <Variables />
    <Parameters>
      <Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <AnyDecorator preset="bothHands_changeEquipment" enabled="true">
          <Sequence>
            <AnimationAction fragment="$string" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
            <InstantCallback_empty EventName="&apos;Finished&apos;" />
          </Sequence>
        </AnyDecorator>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="string" EventSet="RelikviarProCimburky_anim">
      <Variables>
        <Variable name="string" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </AnimationAction>
              <InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </InstantCallback_empty>
            </Sequence>
          </AnyDecorator>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="lookTowards" is_function="0">
    <Variables />
    <Parameters>
      <Variable name="lookTarget" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <ForceLook LookTarget="$lookTarget" DisableVariations="false">
          <UnstanceAction unstance="waiting_nervous_armsAkimbo" locationObject="$tagpoint" slaveObject="" />
        </ForceLook>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="relikviarProCimburky_lookTowards" EventSet="">
      <Variables>
        <Variable name="lookTarget" comment="" />
        <Variable name="tagpoint" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </UnstanceAction>
          </ForceLook>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="relikviarProCimburky_horseWait" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Wait>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="relikviarProCimburky_urgeDialog" is_function="0">
    <Variables />
    <Parameters>
      <Variable name="drawWeaponIfPlayerDoes" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="movementType" type="enum:movementType" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="playerFleeDistanceBeforeReaction" type="_int" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="secondsAfterUrgeBeforeReaction" type="_int" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="urgeAliasOrMetarole" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="urgeIsChat" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="useMetarole" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="waveAtPlayer" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Parallel successMode="Any" failureMode="Any">
          <Loop count="-1">
            <Sequence>
              <ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;waveAtPlayerLock&apos;" RunLogic="Halt">
                <EntityContextBarrier context="urgeDialog_moveStarted" target="" Negation="false" RunLogic="KeepRunning">
                  <AnimationAction fragment="&apos;CrimeCome&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
                </EntityContextBarrier>
              </ExternalLock>
              <Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
            </Sequence>
          </Loop>
          <CallDecorator_urgeDialogNotifications>
            <Subtree canSkip="1">
              <IncludeTree File="&apos;speech/urgedialog.xml&apos;" Name="&apos;urgeDialog&apos;" nodeLabel="56066815" />
            </Subtree>
            <OnFail canSkip="1">
              <CallbackEventCatch_empty>
                <Callback_empty EventName="&apos;OnFail&apos;" />
              </CallbackEventCatch_empty>
            </OnFail>
            <HasNotSeenPlayer canSkip="1">
              <CallbackEventCatch_empty>
                <Callback_empty EventName="&apos;HasNotSeenPlayer&apos;" />
              </CallbackEventCatch_empty>
            </HasNotSeenPlayer>
            <OnPlayerFlee canSkip="1">
              <CallbackEventCatch_empty>
                <Callback_empty EventName="&apos;OnPlayerFlee&apos;" />
              </CallbackEventCatch_empty>
            </OnPlayerFlee>
            <OnTimeout canSkip="1">
              <CallbackEventCatch_empty>
                <Callback_empty EventName="&apos;OnTimeout&apos;" />
              </CallbackEventCatch_empty>
            </OnTimeout>
            <OnPlayerWeaponDraw canSkip="1">
              <CallbackEventCatch_empty>
                <Callback_empty EventName="&apos;OnPlayerWeaponDraw&apos;" />
              </CallbackEventCatch_empty>
            </OnPlayerWeaponDraw>
          </CallDecorator_urgeDialogNotifications>
        </Parallel>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="urgeDialog" EventSet="urgeDialogNotifications">
      <Variables>
        <Variable name="drawWeaponIfPlayerDoes" comment="" />
        <Variable name="movementType" comment="" />
        <Variable name="playerFleeDistanceBeforeReaction" comment="" />
        <Variable name="secondsAfterUrgeBeforeReaction" comment="" />
        <Variable name="urgeAliasOrMetarole" comment="" />
        <Variable name="urgeIsChat" comment="" />
        <Variable name="useMetarole" comment="" />
        <Variable name="waveAtPlayer" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AnimationAction>
                  </EntityContextBarrier>
                </ExternalLock>
                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Wait>
              </Sequence>
            </Loop>
            <CallDecorator_urgeDialogNotifications hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Subtree>
                <IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </IncludeTree>
              </Subtree>
              <OnFail>
                <CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Callback_empty>
                </CallbackEventCatch_empty>
              </OnFail>
              <HasNotSeenPlayer>
                <CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Callback_empty>
                </CallbackEventCatch_empty>
              </HasNotSeenPlayer>
              <OnPlayerFlee>
                <CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Callback_empty>
                </CallbackEventCatch_empty>
              </OnPlayerFlee>
              <OnTimeout>
                <CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Callback_empty>
                </CallbackEventCatch_empty>
              </OnTimeout>
              <OnPlayerWeaponDraw>
                <CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Callback_empty>
                </CallbackEventCatch_empty>
              </OnPlayerWeaponDraw>
            </CallDecorator_urgeDialogNotifications>
          </Parallel>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="relikviarProCimburky_armedMove" is_function="0">
    <Variables />
    <Parameters>
      <Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="speed" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="stealth" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="successDistance" type="_float" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <DrawAction WeaponSet="Primary" fullBody="false" tags="" useSelectedWeaponSet="false" />
          <AnyDecorator preset="bothHands_changeEquipment" enabled="true">
            <MoveParamsDecorator speed="$speed" pathFindingParams="" doorClosingPolicy="Automatic">
              <EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
                <Sequence>
                  <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="$successDistance" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="$speed" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
                  <InstantCallback_empty EventName="&apos;OnFinished&apos;" />
                  <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
                </Sequence>
              </EntityContextElement>
            </MoveParamsDecorator>
          </AnyDecorator>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="moveData" EventSet="endNotification">
      <Variables>
        <Variable name="destination" comment="" />
        <Variable name="speed" comment="" />
        <Variable name="stealth" comment="" />
        <Variable name="successDistance" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="70" editorPosY="50" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </DrawAction>
            <AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Move>
                    <InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </InstantCallback_empty>
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </Sequence>
                </EntityContextElement>
              </MoveParamsDecorator>
            </AnyDecorator>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>