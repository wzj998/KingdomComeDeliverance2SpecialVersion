<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="onUpdate" is_function="0">
    <Variables>
      <Variable name="alreadyThere" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="basement" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="bouda" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="cesta" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="house" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="name" type="_string" values="&apos;_sack_&apos;" isPersistent="0" form="single" />
      <Variable name="sackActual" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="sackAlreadyThere" type="_bool" values="" isPersistent="0" form="array" />
      <Variable name="sackSpawn" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="sackSpawnAmount" type="_int" values="" isPersistent="0" form="single" />
      <Variable name="sackSpawnNumber" type="_int" values="" isPersistent="0" form="single" />
      <Variable name="sackSpawned" type="_int" values="" isPersistent="0" form="single" />
      <Variable name="sackSpawns" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="soulId" type="_string" values="&apos;45d18d74-60ce-8664-666c-99ec7e370d9c&apos;" isPersistent="0" form="single" />
      <Variable name="spawnCounter" type="_int" values="10" isPersistent="0" form="single" />
      <Variable name="spawnEnt" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="spawnName" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="spawnTime" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="spawnTimeInt" type="_int" values="" isPersistent="0" form="single" />
      <Variable name="specialWork" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="sprouts" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="stringS" type="_string" values="&apos;s&apos;" isPersistent="0" form="single" />
      <Variable name="vinice" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="work" type="_bool" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
      </Behavior>
    </Root>
    <ForestContainer>
      <ContinuousSwitch>
        <TimerBox startTime="&apos;6:00:00&apos;" endTime="&apos;19:10:00&apos;" variation="" duration="">
          <Loop count="-1">
            <LinkGate from="$this.id" to="$this.id" tag="&apos;work&apos;" amount="AtLeastOne" presence="Present" RunLogic="Halt">
              <Sequence>
                <Expression expressions="$sackSpawned = $sackSpawnAmount" />
                <ForEach startIndex="0" step="1" array="$sackSpawns" iterator="$sackSpawnNumber" value="$sackSpawn" break="">
                  <Selector>
                    <Sequence>
                      <GraphSearch Origin="$sackSpawn" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                        <LinkTagFilter tag="&apos;sack&apos;" prune="true" negprune="unknown" Parent="" Child="$sackActual" Data="" />
                      </GraphSearch>
                      <DistanceCondition Origin="$sackSpawn" ReferencePt="$sackActual" Low="3.000000" High="3.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
                        <Sequence>
                          <RemoveLink From="$sackSpawn" To="$sackActual" Tag="&apos;sack&apos;" LinkOpHandleMode="Error" />
                          <Expression expressions="$sackSpawned = $sackSpawned - 1 &#10;$sackAlreadyThere[$sackSpawnNumber] = false" />
                        </Sequence>
                      </DistanceCondition>
                    </Sequence>
                    <Expression expressions="$sackSpawned = $sackSpawned - 1" />
                  </Selector>
                </ForEach>
                <IfCondition failOnCondition="false" condition="$sackSpawned &lt; $sackSpawnAmount">
                  <LoopUntil until="Success" attemptCount="0">
                    <Sequence>
                      <Expression expressions="$alreadyThere = true" />
                      <While doFail="false" propagateChildFail="false" condition="$alreadyThere">
                        <Sequence>
                          <GenerateRandomInteger lowerBoundary="1" upperBoundary="$sackSpawnAmount" result="$sackSpawnNumber" />
                          <Expression expressions="$sackSpawnNumber = $sackSpawnNumber - 1 &#10;$alreadyThere = $sackAlreadyThere[$sackSpawnNumber]" />
                          <VarOperation varName="$sackSpawns" targetVarName="$sackSpawn" operation="Get" argument="$sackSpawnNumber" />
                        </Sequence>
                      </While>
                      <Concatenation OutString="$spawnName" Pattern="&apos;$this.name;$name;$spawnCounter&apos;" />
                      <Spawn EntityClass="&apos;NPC&apos;" Name="$spawnName" SharedGuid="$soulId" LayerReferenceEntity="$this.id" TagPoint="$sackSpawn" Pos="" Rot="" NoAI="false" SuspendedAI="false" PerceptorObjectAI="true" PerceptibleObjectAI="true" SpawnedEntity="$spawnEnt" SchedulerProxy="$sackSpawn" />
                      <AtomicDecorator>
                        <Sequence>
                          <AddLink From="$sackSpawn" To="$spawnEnt" Tag="&apos;sack&apos;" Data="" LinkOpHandleMode="Success" />
                          <AddLink From="$this.id" To="$spawnEnt" Tag="&apos;sack&apos;" Data="" LinkOpHandleMode="Success" />
                          <IfElseCondition failOnCondition="false" condition="$spawnCounter &gt; 98" saveVersion="2">
                            <Then canSkip="1">
                              <Expression expressions="$spawnCounter = 10" />
                            </Then>
                            <Else canSkip="1">
                              <Expression expressions="$spawnCounter += 1" />
                            </Else>
                          </IfElseCondition>
                          <Expression expressions="$spawnEnt = $__null &#10;$sackAlreadyThere[$sackSpawnNumber] = true" />
                        </Sequence>
                      </AtomicDecorator>
                    </Sequence>
                  </LoopUntil>
                </IfCondition>
                <GenerateRandomInteger lowerBoundary="30" upperBoundary="120" result="$spawnTimeInt" />
                <Concatenation OutString="$spawnTime" Pattern="&apos;$spawnTimeInt;$stringS&apos;" />
                <Wait duration="$spawnTime" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
              </Sequence>
            </LinkGate>
          </Loop>
        </TimerBox>
        <TimerBox startTime="&apos;19:10:00&apos;" endTime="&apos;6:00:00&apos;" variation="" duration="">
          <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
        </TimerBox>
      </ContinuousSwitch>
      <Parallel successMode="Any" failureMode="Any">
        <ContinuousSwitch>
          <TimerBox startTime="&apos;6:00:00&apos;" endTime="&apos;19:10:00&apos;" variation="" duration="">
            <ContinuousSwitch>
              <IfCondition failOnCondition="false" condition="$work">
                <Sequence>
                  <RemoveAreaLabel Area="$vinice" Label="&apos;personal&apos;" />
                  <RemoveAreaLabel Area="$vinice" Label="&apos;prohibited&apos;" />
                  <AddAreaLabel Area="$cesta" Label="&apos;antitrespass&apos;" />
                  <AddAreaLabel Area="$bouda" Label="&apos;private&apos;" />
                  <AddAreaLabel Area="$bouda" Label="&apos;antitresspass&apos;" />
                  <RemoveAreaLabel Area="$bouda" Label="&apos;prohibited&apos;" />
                  <RemoveAreaLabel Area="$vinice" Label="&apos;private&apos;" />
                  <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                </Sequence>
              </IfCondition>
              <IfCondition failOnCondition="false" condition="!$work">
                <Sequence>
                  <AddAreaLabel Area="$vinice" Label="&apos;personal&apos;" />
                  <RemoveAreaLabel Area="$vinice" Label="&apos;prohibited&apos;" />
                  <AddAreaLabel Area="$cesta" Label="&apos;antitrespass&apos;" />
                  <AddAreaLabel Area="$bouda" Label="&apos;prohibited&apos;" />
                  <RemoveAreaLabel Area="$bouda" Label="&apos;antitresspass&apos;" />
                  <AddAreaLabel Area="$vinice" Label="&apos;private&apos;" />
                  <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                </Sequence>
              </IfCondition>
            </ContinuousSwitch>
          </TimerBox>
          <TimerBox startTime="&apos;19:10:00&apos;" endTime="&apos;6:00:00&apos;" variation="" duration="">
            <ContinuousSwitch>
              <IfCondition failOnCondition="false" condition="$work">
                <Sequence>
                  <AddAreaLabel Area="$vinice" Label="&apos;prohibited&apos;" />
                  <RemoveAreaLabel Area="$cesta" Label="&apos;antitrespass&apos;" />
                  <AddAreaLabel Area="$bouda" Label="&apos;antitrespass&apos;" />
                  <AddAreaLabel Area="$vinice" Label="&apos;private&apos;" />
                  <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                </Sequence>
              </IfCondition>
              <IfCondition failOnCondition="false" condition="!$work">
                <Sequence>
                  <AddAreaLabel Area="$vinice" Label="&apos;prohibited&apos;" />
                  <AddAreaLabel Area="$vinice" Label="&apos;private&apos;" />
                  <RemoveAreaLabel Area="$cesta" Label="&apos;antitrespass&apos;" />
                  <AddAreaLabel Area="$bouda" Label="&apos;prohibited&apos;" />
                  <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                </Sequence>
              </IfCondition>
            </ContinuousSwitch>
          </TimerBox>
        </ContinuousSwitch>
        <Loop count="-1">
          <LinkGate from="$this.id" to="$this.id" tag="&apos;work&apos;" amount="AtLeastOne" presence="Present" RunLogic="Halt">
            <FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
              <Child canSkip="1">
                <Sequence>
                  <Expression expressions="$work = true" />
                  <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                </Sequence>
              </Child>
              <OnSuccess canSkip="1">
                <Expression expressions="$work = false" />
              </OnSuccess>
            </FuseBox>
          </LinkGate>
        </Loop>
      </Parallel>
      <Sequence>
        <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
          <LinkTagFilter tag="&apos;vinice&apos;" prune="true" negprune="unknown" Parent="" Child="$vinice" Data="" />
        </GraphSearch>
        <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
          <LinkTagFilter tag="&apos;vinice_cesta&apos;" prune="true" negprune="unknown" Parent="" Child="$cesta" Data="" />
        </GraphSearch>
        <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
          <LinkTagFilter tag="&apos;vinice_bouda&apos;" prune="true" negprune="unknown" Parent="" Child="$bouda" Data="" />
        </GraphSearch>
        <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
          <LinkTagFilter tag="&apos;vinice_sklep&apos;" prune="true" negprune="unknown" Parent="" Child="$basement" Data="" />
        </GraphSearch>
        <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
          <LinkTagFilter tag="&apos;vinice_dum&apos;" prune="true" negprune="unknown" Parent="" Child="$house" Data="" />
        </GraphSearch>
        <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
          <LinkTagFilter tag="&apos;vinice_sazenice&apos;" prune="true" negprune="unknown" Parent="" Child="$sprouts" Data="" />
        </GraphSearch>
        <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
          <Nodalyzer Quantifiers="ForAll" Parent="" Child="$sackSpawns" saveVersion="2" />
          <LinkTagFilter tag="&apos;sackSpawn&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
        </GraphSearch>
        <VarOperation varName="$sackSpawns" targetVarName="$sackSpawnAmount" operation="Size" argument="" />
        <ForEach startIndex="0" step="1" array="$sackSpawns" iterator="" value="" break="">
          <VarOperation varName="$sackAlreadyThere" targetVarName="" operation="PushBack" argument="false" />
        </ForEach>
        <AddAreaLabel Area="$basement" Label="&apos;private&apos;" />
        <AddAreaLabel Area="$basement" Label="&apos;prohibited&apos;" />
        <AddAreaLabel Area="$house" Label="&apos;private&apos;" />
        <AddAreaLabel Area="$house" Label="&apos;prohibited&apos;" />
        <AddAreaLabel Area="$sprouts" Label="&apos;private&apos;" />
        <AddAreaLabel Area="$sprouts" Label="&apos;personal&apos;" />
      </Sequence>
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="alreadyThere" comment="" />
        <Variable name="basement" comment="" />
        <Variable name="bouda" comment="" />
        <Variable name="cesta" comment="" />
        <Variable name="house" comment="" />
        <Variable name="name" comment="" />
        <Variable name="sackActual" comment="" />
        <Variable name="sackAlreadyThere" comment="" />
        <Variable name="sackSpawn" comment="" />
        <Variable name="sackSpawnAmount" comment="" />
        <Variable name="sackSpawnNumber" comment="" />
        <Variable name="sackSpawned" comment="" />
        <Variable name="sackSpawns" comment="" />
        <Variable name="soulId" comment="" />
        <Variable name="spawnCounter" comment="" />
        <Variable name="spawnEnt" comment="" />
        <Variable name="spawnName" comment="" />
        <Variable name="spawnTime" comment="" />
        <Variable name="spawnTimeInt" comment="" />
        <Variable name="specialWork" comment="" />
        <Variable name="sprouts" comment="" />
        <Variable name="stringS" comment="" />
        <Variable name="vinice" comment="" />
        <Variable name="work" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Wait>
        </Behavior>
      </Root>
      <Forest>
        <ContinuousSwitch editorPosX="460" editorPosY="1860" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
          <TimerBox hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Expression>
                  <ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </LinkTagFilter>
                        </GraphSearch>
                        <DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </RemoveLink>
                            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Expression>
                          </Sequence>
                        </DistanceCondition>
                      </Sequence>
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                    </Selector>
                  </ForEach>
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                        <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <GenerateRandomInteger hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </GenerateRandomInteger>
                            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Expression>
                            <VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </VarOperation>
                          </Sequence>
                        </While>
                        <Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Concatenation>
                        <Spawn hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Spawn>
                        <AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </AddLink>
                            <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </AddLink>
                            <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                              <OutputBreakpoints />
                              <Then>
                                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </Expression>
                              </Then>
                              <Else>
                                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </Expression>
                              </Else>
                            </IfElseCondition>
                            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Expression>
                          </Sequence>
                        </AtomicDecorator>
                      </Sequence>
                    </LoopUntil>
                  </IfCondition>
                  <GenerateRandomInteger hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </GenerateRandomInteger>
                  <Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Concatenation>
                  <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Wait>
                </Sequence>
              </LinkGate>
            </Loop>
          </TimerBox>
          <TimerBox hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
          </TimerBox>
        </ContinuousSwitch>
        <Parallel editorPosX="240" editorPosY="710" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
          <ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <TimerBox hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <RemoveAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </RemoveAreaLabel>
                    <RemoveAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </RemoveAreaLabel>
                    <AddAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AddAreaLabel>
                    <AddAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AddAreaLabel>
                    <AddAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AddAreaLabel>
                    <RemoveAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </RemoveAreaLabel>
                    <RemoveAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </RemoveAreaLabel>
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </Sequence>
                </IfCondition>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="day" breakpointFlags="0">
                    <OutputBreakpoints />
                    <AddAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AddAreaLabel>
                    <RemoveAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </RemoveAreaLabel>
                    <AddAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AddAreaLabel>
                    <AddAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AddAreaLabel>
                    <RemoveAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </RemoveAreaLabel>
                    <AddAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AddAreaLabel>
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </Sequence>
                </IfCondition>
              </ContinuousSwitch>
            </TimerBox>
            <TimerBox hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <AddAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AddAreaLabel>
                    <RemoveAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </RemoveAreaLabel>
                    <AddAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AddAreaLabel>
                    <AddAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AddAreaLabel>
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </Sequence>
                </IfCondition>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <AddAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AddAreaLabel>
                    <AddAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AddAreaLabel>
                    <RemoveAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </RemoveAreaLabel>
                    <AddAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AddAreaLabel>
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </Sequence>
                </IfCondition>
              </ContinuousSwitch>
            </TimerBox>
          </ContinuousSwitch>
          <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Child>
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </Sequence>
                </Child>
                <OnSuccess>
                  <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Expression>
                </OnSuccess>
              </FuseBox>
            </LinkGate>
          </Loop>
        </Parallel>
        <Sequence editorPosX="270" editorPosY="-1000" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
          <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </LinkTagFilter>
          </GraphSearch>
          <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </LinkTagFilter>
          </GraphSearch>
          <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </LinkTagFilter>
          </GraphSearch>
          <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </LinkTagFilter>
          </GraphSearch>
          <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </LinkTagFilter>
          </GraphSearch>
          <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </LinkTagFilter>
          </GraphSearch>
          <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
            </Nodalyzer>
            <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </LinkTagFilter>
          </GraphSearch>
          <VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </VarOperation>
          <ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </VarOperation>
          </ForEach>
          <AddAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </AddAreaLabel>
          <AddAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </AddAreaLabel>
          <AddAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </AddAreaLabel>
          <AddAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </AddAreaLabel>
          <AddAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </AddAreaLabel>
          <AddAreaLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </AddAreaLabel>
        </Sequence>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>