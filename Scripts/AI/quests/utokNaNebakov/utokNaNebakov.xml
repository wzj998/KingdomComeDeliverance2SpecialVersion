<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="wait" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bartosLeanChat" is_function="0">
		<Variables>
			<Variable name="leanSpot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;bartosLeanSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$leanSpot" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="LeaningRight" locationObject="$leanSpot" slaveObject="" />
					<Function_speech_dialogInitiator alias="&apos;utokNaNebakov_feast_chatBartos&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="31408964" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="leanSpot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<OutputBreakpoints />
						</UnstanceAction>
						<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_dialogInitiator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="leaningWithChat" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="activeChat" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="area" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="chatMaxDistance" type="_float" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="leaningSpot" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextElement context="utokNaNebakov_leaning" enabled="true">
					<Sequence>
						<UnstanceAction unstance="LeaningBack" locationObject="$leaningSpot" slaveObject="" />
						<IfGate atomic="false" condition="$activeChat == true" RunLogic="Halt">
							<AreaPresenceGate aiObjects="$__player" area="$area" amount="AtLeastOne" presence="Present" RunLogic="Halt">
								<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="$chatMaxDistance" High="$chatMaxDistance" Negation="false" OpenInMiddle="false" RunLogic="Halt">
									<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;M09_chattingWithPlayer&apos;">
										<ForceLook LookTarget="$__player" DisableVariations="false">
											<Function_speech_dialogInitiator alias="$alias" animationApproach="$enum:animationApproach.tryDialogAnimations" context="" customParameters="" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="74419943" />
										</ForceLook>
									</Semaphore>
								</DistanceGate>
							</AreaPresenceGate>
						</IfGate>
					</Sequence>
				</EntityContextElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="leaningSpotChat" EventSet="">
			<Variables>
				<Variable name="activeChat" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="area" comment="" />
				<Variable name="chatMaxDistance" comment="" />
				<Variable name="leaningSpot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_dialogInitiator>
											</ForceLook>
										</Semaphore>
									</DistanceGate>
								</AreaPresenceGate>
							</IfGate>
						</Sequence>
					</EntityContextElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sittingIngameDialog" is_function="0">
		<Variables>
			<Variable name="break" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="callWench" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="index" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="lockCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="place" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="soupSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="table" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tableAlign" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="dontCallWench" type="_bool" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="npcs" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="places" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="tables" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$lockCount = #npcs" />
					<For startIndex="0" endIndex="-1" step="1" array="$npcs" iterator="$index" value="$npc" break="$break">
						<IfCondition failOnCondition="false" condition="$this.id == $npc">
							<Expression expressions="$place = $places[$index] &#10;$table = $tables[$index] &#10;$callWench = $dontCallWench[$index] &#10;$break = true" />
						</IfCondition>
					</For>
					<GraphSearch Origin="$table" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;alignSO&apos;" prune="true" negprune="unknown" Parent="" Child="$tableAlign" Data="" />
					</GraphSearch>
					<Function_feast_drinkEatSetting seat="$place" tableInPub="$table" customerParams="$customerParams" hiddenBeer="$hiddenBeer" soupSlot="$soupSlot" nodeLabel="19107136" />
					<StanceElement smartObject="$place" stance="sitting" allowAny="false" enabled="true">
						<AddLinkElement from="$this.id" to="$customerParams.beer" tag="&apos;guestBeer&apos;" data="" enabled="true">
							<AddLinkElement from="$this.id" to="$tableAlign" tag="&apos;tavernSpecialAlignSO&apos;" data="" enabled="true">
								<Loop count="-1">
									<Sequence>
										<Function_feast_drinkEat customerParams="$customerParams" dontCallWench="$callWench" hiddenBeer="$hiddenBeer" smartobject="$__object.id" soupSlot="$soupSlot" table="$table" tableAlign="$tableAlign" nodeLabel="68959273" />
										<SuppressFailure>
											<LoopUntil until="Success" attemptCount="0">
												<IfElseCondition failOnCondition="false" condition="$npcs[0] == $this.id" saveVersion="2">
													<Then canSkip="1">
														<Function_speech_schedulerPolylog_initiator alias="$alias" animationApproach="$enum:animationApproach.tryDialogAnimations" areaForPlayer="" context="" customParameters="" metarole="" participants="$npcs" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="64120963" />
													</Then>
													<Else canSkip="1">
														<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$alias" initiator="$npcs[0]" numberOfParticipants="$lockCount" useIngameDialogPoseAndAnimations="false" nodeLabel="20510392" />
													</Else>
												</IfElseCondition>
											</LoopUntil>
										</SuppressFailure>
									</Sequence>
								</Loop>
							</AddLinkElement>
						</AddLinkElement>
					</StanceElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="utokNaNebakov_feast_sittingIngameDialog" EventSet="">
			<Variables>
				<Variable name="break" comment="" />
				<Variable name="callWench" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="hiddenBeer" comment="" />
				<Variable name="index" comment="" />
				<Variable name="lockCount" comment="" />
				<Variable name="npc" comment="" />
				<Variable name="place" comment="" />
				<Variable name="soupSlot" comment="" />
				<Variable name="table" comment="" />
				<Variable name="tableAlign" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="dontCallWench" comment="" />
				<Variable name="npcs" comment="" />
				<Variable name="places" comment="" />
				<Variable name="tables" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<For hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</For>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Function_feast_drinkEatSetting hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_feast_drinkEatSetting>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_feast_drinkEat hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_feast_drinkEat>
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_speech_schedulerPolylog_initiator>
														</Then>
														<Else>
															<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_speech_schedulerPolylog_receiver>
														</Else>
													</IfElseCondition>
												</LoopUntil>
											</SuppressFailure>
										</Sequence>
									</Loop>
								</AddLinkElement>
							</AddLinkElement>
						</StanceElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="polylogChatOnSpots" is_function="0">
		<Variables>
			<Variable name="amInitiator" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="break" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="index" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="lockCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="place" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="placeCount" type="_int" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="activeChat" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="aliasChat" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="aliasPolylog" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="chatDistance" type="_float" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="important" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="npcs" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="places" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<SetExternalLock LockManagerType="Intellect" Locked="false" LockName="&apos;runIngameDialog&apos;" />
					<Function_getNpcPolylogSettings npcs="$npcs" places="$places" amIInitiator="$amInitiator" myPlace="$place" nodeLabel="54297376" />
					<Expression expressions="$lockCount = #npcs &#10;$placeCount = #places" />
					<ExactMove directionType="AlignWithEntity" directionSpecification="$place" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$place" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Loop count="-1">
						<Parallel successMode="Any" failureMode="Any">
							<Loop count="-1">
								<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;runIngameDialog&apos;" RunLogic="Halt">
									<IfElseCondition failOnCondition="false" condition="$amInitiator" saveVersion="2">
										<Then canSkip="1">
											<Function_speech_schedulerPolylog_initiator alias="$aliasPolylog" animationApproach="$enum:animationApproach.tryDialogAnimations" areaForPlayer="" context="" customParameters="" metarole="" participants="$npcs" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="45059234" />
										</Then>
										<Else canSkip="1">
											<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$aliasPolylog" initiator="$npcs[0]" numberOfParticipants="$lockCount" useIngameDialogPoseAndAnimations="false" nodeLabel="75890741" />
										</Else>
									</IfElseCondition>
								</ExternalLock>
							</Loop>
							<Loop count="-1">
								<Sequence>
									<SetExternalLock LockManagerType="Intellect" Locked="false" LockName="&apos;runIngameDialog&apos;" />
									<IfGate atomic="false" condition="$activeChat == true" RunLogic="KeepRunning">
										<DistanceGate Origin="$npcs[0]" ReferencePt="$__player" Low="$chatDistance" High="$chatDistance" Negation="false" OpenInMiddle="false" RunLogic="Halt">
											<Sequence>
												<SetExternalLock LockManagerType="Intellect" Locked="true" LockName="&apos;runIngameDialog&apos;" />
												<IfElseCondition failOnCondition="false" condition="$amInitiator" saveVersion="2">
													<Then canSkip="1">
														<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;M09_chattingWithPlayer&apos;">
															<Sequence>
																<Expression expressions="$npcs[#npcs] = $__player" />
																<Parallel successMode="All" failureMode="All">
																	<Function_speech_schedulerPolylog_initiator alias="$aliasChat" animationApproach="$enum:animationApproach.tryDialogAnimations" areaForPlayer="" context="" customParameters="" metarole="" participants="$npcs" participantsMetaroles="" preset="$enum:dialogPreset.chat" nodeLabel="68452433" />
																	<Loop count="-1">
																		<ForceLook LookTarget="$__player" DisableVariations="false">
																			<Sequence>
																				<WaitAction />
																				<Wait duration="&apos;200ms&apos;" timeType="GameTime" doFail="false" variation="&apos;50ms&apos;" />
																				<Turn target="$__player" align="false" />
																			</Sequence>
																		</ForceLook>
																	</Loop>
																</Parallel>
															</Sequence>
														</Semaphore>
													</Then>
													<Else canSkip="1">
														<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$aliasChat" initiator="$npcs[0]" numberOfParticipants="$lockCount" useIngameDialogPoseAndAnimations="false" nodeLabel="45727381" />
													</Else>
												</IfElseCondition>
											</Sequence>
										</DistanceGate>
									</IfGate>
								</Sequence>
							</Loop>
						</Parallel>
					</Loop>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<RandomGate opensWithChance="0.000000" saveVersion="2">
				<Then canSkip="1">
					<UnstanceAction unstance="party_duo_standing_talking_01_leader" locationObject="" slaveObject="" />
				</Then>
				<Else canSkip="1">
					<UnstanceAction unstance="party_duo_standing_talking_01_minion" locationObject="" slaveObject="" />
				</Else>
			</RandomGate>
		</ForestContainer>
		<EditorData Signature="polylogChatOnSpots" EventSet="">
			<Variables>
				<Variable name="amInitiator" comment="" />
				<Variable name="break" comment="" />
				<Variable name="index" comment="" />
				<Variable name="lockCount" comment="" />
				<Variable name="npc" comment="" />
				<Variable name="place" comment="" />
				<Variable name="placeCount" comment="" />
				<Variable name="activeChat" comment="" />
				<Variable name="aliasChat" comment="" />
				<Variable name="aliasPolylog" comment="" />
				<Variable name="chatDistance" comment="" />
				<Variable name="important" comment="" />
				<Variable name="npcs" comment="" />
				<Variable name="places" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SetExternalLock>
						<Function_getNpcPolylogSettings hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_getNpcPolylogSettings>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerPolylog_initiator>
											</Then>
											<Else>
												<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerPolylog_receiver>
											</Else>
										</IfElseCondition>
									</ExternalLock>
								</Loop>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SetExternalLock>
										<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</SetExternalLock>
													<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																	<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_speech_schedulerPolylog_initiator>
																		<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</WaitAction>
																					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Wait>
																					<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Turn>
																				</Sequence>
																			</ForceLook>
																		</Loop>
																	</Parallel>
																</Sequence>
															</Semaphore>
														</Then>
														<Else>
															<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_speech_schedulerPolylog_receiver>
														</Else>
													</IfElseCondition>
												</Sequence>
											</DistanceGate>
										</IfGate>
									</Sequence>
								</Loop>
							</Parallel>
						</Loop>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<RandomGate editorPosX="650" editorPosY="-130" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Then>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
					</Then>
					<Else>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
					</Else>
				</RandomGate>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sittingIngameDialogChat" is_function="0">
		<Variables>
			<Variable name="beer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="break" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="callWench" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="imInChat" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="index" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="lockCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="lockCountChat" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="perception" type="perceptionInfo" values="" isPersistent="0" form="single" />
			<Variable name="place" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="soupSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="table" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tableAlign" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="activeChat" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="aliasChat" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="aliasPolylog" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="chatDistance" type="_float" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="chatNpcs" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="dontCallWench" type="_bool" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="important" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="npcs" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="places" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="tables" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<Expression expressions="$lockCount = #npcs &#10;$lockCountChat = #chatNpcs" />
					<For startIndex="0" endIndex="-1" step="1" array="$npcs" iterator="$index" value="$npc" break="$break">
						<IfCondition failOnCondition="false" condition="$this.id == $npc">
							<Expression expressions="$place = $places[$index] &#10;$table = $tables[$index] &#10;$callWench = $dontCallWench[$index] &#10;$break = true" />
						</IfCondition>
					</For>
					<For startIndex="0" endIndex="-1" step="1" array="$chatNpcs" iterator="$index" value="$npc" break="$break">
						<IfCondition failOnCondition="false" condition="$this.id == $npc">
							<Expression expressions="$imInChat = true" />
						</IfCondition>
					</For>
					<GraphSearch Origin="$table" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;alignSO&apos;" prune="true" negprune="unknown" Parent="" Child="$tableAlign" Data="" />
					</GraphSearch>
					<Function_feast_drinkEatSetting seat="$place" tableInPub="$table" customerParams="$customerParams" hiddenBeer="$hiddenBeer" soupSlot="$soupSlot" nodeLabel="78713081" />
					<Expression expressions="$chatNpcs[#chatNpcs] = $__player" />
					<SetExternalLock LockManagerType="Intellect" Locked="false" LockName="&apos;runIngameDialog&apos;" />
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<StanceElement smartObject="$place" stance="sitting" allowAny="false" enabled="true">
					<AddLinkElement from="$this.id" to="$customerParams.beer" tag="&apos;guestBeer&apos;" data="" enabled="true">
						<AddLinkElement from="$this.id" to="$tableAlign" tag="&apos;tavernSpecialAlignSO&apos;" data="" enabled="true">
							<Parallel successMode="Any" failureMode="Any">
								<Loop count="-1">
									<IsFastForwarded failOnCondition="false" saveVersion="2">
										<Then canSkip="1">
											<Function_feast_drinkEat_sit customerParams="$customerParams" hiddenBeer="$hiddenBeer" nodeLabel="34593616" />
										</Then>
										<Else canSkip="1">
											<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;runIngameDialog&apos;" RunLogic="Halt">
												<Sequence>
													<Function_feast_drinkEat customerParams="$customerParams" dontCallWench="$dontCallWench" hiddenBeer="$hiddenBeer" smartobject="$__object.id" soupSlot="$soupSlot" table="$table" tableAlign="$tableAlign" nodeLabel="27058970" />
													<IfElseCondition failOnCondition="false" condition="$npcs[0] == $this.id" saveVersion="2">
														<Then canSkip="1">
															<Function_speech_schedulerPolylog_initiator alias="$aliasPolylog" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" areaForPlayer="" context="" customParameters="" metarole="" participants="$npcs" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="64120963" />
														</Then>
														<Else canSkip="1">
															<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$aliasPolylog" initiator="$npcs[0]" numberOfParticipants="$lockCount" useIngameDialogPoseAndAnimations="false" nodeLabel="20510392" />
														</Else>
													</IfElseCondition>
												</Sequence>
											</ExternalLock>
										</Else>
									</IsFastForwarded>
								</Loop>
								<Loop count="-1">
									<Sequence>
										<SetExternalLock LockManagerType="Intellect" Locked="false" LockName="&apos;runIngameDialog&apos;" />
										<IfGate atomic="false" condition="$activeChat == true &amp; $imInChat == true" RunLogic="Halt">
											<DistanceGate Origin="$chatNpcs[0]" ReferencePt="$__player" Low="$chatDistance" High="$chatDistance" Negation="false" OpenInMiddle="false" RunLogic="Halt">
												<Sequence>
													<SetExternalLock LockManagerType="Intellect" Locked="true" LockName="&apos;runIngameDialog&apos;" />
													<IfElseCondition failOnCondition="false" condition="$chatNpcs[0] == $this.id" saveVersion="2">
														<Then canSkip="1">
															<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;M09_chattingWithPlayer&apos;">
																<ForceLook LookTarget="$__player" DisableVariations="false">
																	<Function_speech_schedulerPolylog_initiator alias="$aliasChat" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" areaForPlayer="" context="" customParameters="" metarole="" participants="$chatNpcs" participantsMetaroles="" preset="$enum:dialogPreset.chat" nodeLabel="58680083" />
																</ForceLook>
															</Semaphore>
														</Then>
														<Else canSkip="1">
															<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$aliasChat" initiator="$chatNpcs[0]" numberOfParticipants="$lockCountChat" useIngameDialogPoseAndAnimations="false" nodeLabel="18018651" />
														</Else>
													</IfElseCondition>
												</Sequence>
											</DistanceGate>
										</IfGate>
									</Sequence>
								</Loop>
							</Parallel>
						</AddLinkElement>
					</AddLinkElement>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="polylogChatOnSpots" EventSet="">
			<Variables>
				<Variable name="beer" comment="" />
				<Variable name="break" comment="" />
				<Variable name="callWench" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="hiddenBeer" comment="" />
				<Variable name="imInChat" comment="" />
				<Variable name="index" comment="" />
				<Variable name="lockCount" comment="" />
				<Variable name="lockCountChat" comment="" />
				<Variable name="npc" comment="" />
				<Variable name="perception" comment="" />
				<Variable name="place" comment="" />
				<Variable name="soupSlot" comment="" />
				<Variable name="table" comment="" />
				<Variable name="tableAlign" comment="" />
				<Variable name="activeChat" comment="" />
				<Variable name="aliasChat" comment="" />
				<Variable name="aliasPolylog" comment="" />
				<Variable name="chatDistance" comment="" />
				<Variable name="chatNpcs" comment="" />
				<Variable name="dontCallWench" comment="" />
				<Variable name="important" comment="" />
				<Variable name="npcs" comment="" />
				<Variable name="places" comment="" />
				<Variable name="tables" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<For hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</For>
						<For hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</For>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Function_feast_drinkEatSetting hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_feast_drinkEatSetting>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SetExternalLock>
					</Sequence>
				</OnInit>
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IsFastForwarded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Function_feast_drinkEat_sit hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_feast_drinkEat_sit>
											</Then>
											<Else>
												<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_feast_drinkEat hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_feast_drinkEat>
														<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_schedulerPolylog_initiator>
															</Then>
															<Else>
																<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_schedulerPolylog_receiver>
															</Else>
														</IfElseCondition>
													</Sequence>
												</ExternalLock>
											</Else>
										</IsFastForwarded>
									</Loop>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</SetExternalLock>
											<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</SetExternalLock>
														<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_speech_schedulerPolylog_initiator>
																	</ForceLook>
																</Semaphore>
															</Then>
															<Else>
																<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_schedulerPolylog_receiver>
															</Else>
														</IfElseCondition>
													</Sequence>
												</DistanceGate>
											</IfGate>
										</Sequence>
									</Loop>
								</Parallel>
							</AddLinkElement>
						</AddLinkElement>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sittingStandingIngameDialog" is_function="0">
		<Variables>
			<Variable name="break" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="index" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="indexSit" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="lockCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="npcStand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="place" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="sitting" type="_bool" values="false" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="npcs" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<SetExternalLock LockManagerType="Intellect" Locked="false" LockName="&apos;runIngameDialog&apos;" />
					<Expression expressions="$lockCount = #sittingNpcs + #standingNpcs" />
					<For startIndex="0" endIndex="-1" step="1" array="$npcs" iterator="$index" value="$npc" break="$break">
						<For startIndex="0" endIndex="-1" step="1" array="$standingNpcs" iterator="$indexSit" value="$npcStand" break="$break">
							<IfCondition failOnCondition="false" condition="$this.id == $npc &amp; $this.id == $npcStand">
								<Expression expressions="$place = $sittingSpots[$indexSit] &#10;$break = true &#10;$sitting = true" />
							</IfCondition>
						</For>
					</For>
					<IfElseCondition failOnCondition="false" condition="$sitting == true" saveVersion="2">
						<Then canSkip="1">
							<Sequence>
								<WaitAction />
								<StanceElement smartObject="$place" stance="sitting" allowAny="false" enabled="true">
									<IfElseCondition failOnCondition="false" condition="$index==0" saveVersion="2">
										<Then canSkip="1">
											<Function_speech_schedulerPolylog_initiator alias="$aliasPolylog" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" areaForPlayer="" context="" customParameters="" metarole="" participants="$npcs" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="20648992" />
										</Then>
										<Else canSkip="1">
											<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$aliasPolylog" initiator="$npcs[0]" numberOfParticipants="$lockCount" useIngameDialogPoseAndAnimations="false" nodeLabel="37577046" />
										</Else>
									</IfElseCondition>
								</StanceElement>
							</Sequence>
						</Then>
						<Else canSkip="1">
							<Sequence>
								<ExactMove directionType="AlignWithEntity" directionSpecification="$place" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$place" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
								<IfElseCondition failOnCondition="false" condition="$index==0" saveVersion="2">
									<Then canSkip="1">
										<Function_speech_schedulerPolylog_initiator alias="$aliasPolylog" animationApproach="$enum:animationApproach.tryDialogAnimations" areaForPlayer="" context="" customParameters="" metarole="" participants="$npcs" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="45446444" />
									</Then>
									<Else canSkip="1">
										<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$aliasPolylog" initiator="$npcs[0]" numberOfParticipants="$lockCount" useIngameDialogPoseAndAnimations="false" nodeLabel="24124551" />
									</Else>
								</IfElseCondition>
							</Sequence>
						</Else>
					</IfElseCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="npcPolylog" EventSet="">
			<Variables>
				<Variable name="break" comment="" />
				<Variable name="index" comment="" />
				<Variable name="indexSit" comment="" />
				<Variable name="lockCount" comment="" />
				<Variable name="npc" comment="" />
				<Variable name="npcStand" comment="" />
				<Variable name="place" comment="" />
				<Variable name="sitting" comment="" />
				<Variable name="npcs" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SetExternalLock>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<For hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<For hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</IfCondition>
							</For>
						</For>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerPolylog_initiator>
											</Then>
											<Else>
												<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerPolylog_receiver>
											</Else>
										</IfElseCondition>
									</StanceElement>
								</Sequence>
							</Then>
							<Else>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExactMove>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerPolylog_initiator>
										</Then>
										<Else>
											<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerPolylog_receiver>
										</Else>
									</IfElseCondition>
								</Sequence>
							</Else>
						</IfElseCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="standingIngameDialogChat" is_function="0">
		<Variables>
			<Variable name="break" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="chatNpcsCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="index" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="lockCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="perception" type="perceptionInfo" values="" isPersistent="0" form="single" />
			<Variable name="place" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="activeChat" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="aliasChat" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="aliasPolylog" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="chatDistance" type="_float" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="chatNpcs" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="important" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="npcs" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="places" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$lockCount = #npcs &#10;$chatNpcsCount = #chatNpcs" />
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$places[0]" destinationSpecification2="" destinationSpecification3="" speed="RelaxedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Parallel successMode="Any" failureMode="Any">
						<Loop count="-1">
							<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;runIngameDialog&apos;" RunLogic="Halt">
								<Sequence>
									<Turn target="$places[0]" align="true" />
									<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$aliasPolylog" initiator="$npcs[0]" numberOfParticipants="$lockCount" useIngameDialogPoseAndAnimations="false" nodeLabel="37957230" />
								</Sequence>
							</ExternalLock>
						</Loop>
						<Loop count="-1">
							<Sequence>
								<SetExternalLock LockManagerType="Intellect" Locked="false" LockName="&apos;runIngameDialog&apos;" />
								<IfGate atomic="false" condition="$activeChat == true" RunLogic="Halt">
									<DistanceGate Origin="$chatNpcs[0]" ReferencePt="$__player" Low="$chatDistance" High="$chatDistance" Negation="false" OpenInMiddle="false" RunLogic="Halt">
										<Sequence>
											<SetExternalLock LockManagerType="Intellect" Locked="true" LockName="&apos;runIngameDialog&apos;" />
											<IfElseCondition failOnCondition="false" condition="$chatNpcs[0] == $this.id" saveVersion="2">
												<Then canSkip="1">
													<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;M09_chattingWithPlayer&apos;">
														<Sequence>
															<Expression expressions="$chatNpcs[$chatNpcsCount] = $__player" />
															<Parallel successMode="Any" failureMode="Any">
																<Loop count="-1">
																	<ForceLook LookTarget="$__player" DisableVariations="false">
																		<Sequence>
																			<WaitAction />
																			<Wait duration="&apos;200ms&apos;" timeType="GameTime" doFail="false" variation="&apos;50ms&apos;" />
																			<Turn target="$__player" align="false" />
																		</Sequence>
																	</ForceLook>
																</Loop>
																<Function_speech_schedulerPolylog_initiator alias="$aliasChat" animationApproach="$enum:animationApproach.tryDialogAnimations" areaForPlayer="" context="" customParameters="" metarole="" participants="$chatNpcs" participantsMetaroles="" preset="$enum:dialogPreset.chat" nodeLabel="25072350" />
															</Parallel>
														</Sequence>
													</Semaphore>
												</Then>
												<Else canSkip="1">
													<Parallel successMode="Any" failureMode="Any">
														<Loop count="-1">
															<ForceLook LookTarget="$__player" DisableVariations="false">
																<Sequence>
																	<WaitAction />
																	<Wait duration="&apos;200ms&apos;" timeType="GameTime" doFail="false" variation="&apos;50ms&apos;" />
																	<Turn target="$__player" align="false" />
																</Sequence>
															</ForceLook>
														</Loop>
														<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$aliasChat" initiator="$chatNpcs[0]" numberOfParticipants="$lockCount" useIngameDialogPoseAndAnimations="false" nodeLabel="71717589" />
													</Parallel>
												</Else>
											</IfElseCondition>
										</Sequence>
									</DistanceGate>
								</IfGate>
							</Sequence>
						</Loop>
					</Parallel>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="polylogChatOnSpots" EventSet="">
			<Variables>
				<Variable name="break" comment="" />
				<Variable name="chatNpcsCount" comment="" />
				<Variable name="index" comment="" />
				<Variable name="lockCount" comment="" />
				<Variable name="npc" comment="" />
				<Variable name="perception" comment="" />
				<Variable name="place" comment="" />
				<Variable name="activeChat" comment="" />
				<Variable name="aliasChat" comment="" />
				<Variable name="aliasPolylog" comment="" />
				<Variable name="chatDistance" comment="" />
				<Variable name="chatNpcs" comment="" />
				<Variable name="important" comment="" />
				<Variable name="npcs" comment="" />
				<Variable name="places" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Turn>
										<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_schedulerPolylog_receiver>
									</Sequence>
								</ExternalLock>
							</Loop>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</SetExternalLock>
									<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</SetExternalLock>
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
																<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</WaitAction>
																				<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Wait>
																				<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Turn>
																			</Sequence>
																		</ForceLook>
																	</Loop>
																	<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_speech_schedulerPolylog_initiator>
																</Parallel>
															</Sequence>
														</Semaphore>
													</Then>
													<Else>
														<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</WaitAction>
																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Wait>
																		<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Turn>
																	</Sequence>
																</ForceLook>
															</Loop>
															<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_speech_schedulerPolylog_receiver>
														</Parallel>
													</Else>
												</IfElseCondition>
											</Sequence>
										</DistanceGate>
									</IfGate>
								</Sequence>
							</Loop>
						</Parallel>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="standingIngameDialog" is_function="0">
		<Variables>
			<Variable name="amInitiator" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="break" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="index" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="lockCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="place" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="important" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="npcs" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="places" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$lockCount = #npcs" />
					<Function_getNpcPolylogSettings npcs="$npcs" places="$places" amIInitiator="$amInitiator" myPlace="$place" nodeLabel="84552589" />
					<Sequence>
						<ExactMove directionType="AlignWithEntity" directionSpecification="$places[0]" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$places[0]" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
						<IfElseCondition failOnCondition="false" condition="$amInitiator" saveVersion="2">
							<Then canSkip="1">
								<Function_speech_schedulerPolylog_initiator alias="$alias" animationApproach="$enum:animationApproach.tryDialogAnimations" areaForPlayer="" context="" customParameters="" metarole="" participants="$npcs" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="39310478" />
							</Then>
							<Else canSkip="1">
								<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$alias" initiator="$npcs[0]" numberOfParticipants="$lockCount" useIngameDialogPoseAndAnimations="false" nodeLabel="86874474" />
							</Else>
						</IfElseCondition>
					</Sequence>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="npcPolylog" EventSet="">
			<Variables>
				<Variable name="amInitiator" comment="" />
				<Variable name="break" comment="" />
				<Variable name="index" comment="" />
				<Variable name="lockCount" comment="" />
				<Variable name="npc" comment="" />
				<Variable name="place" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="important" comment="" />
				<Variable name="npcs" comment="" />
				<Variable name="places" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<Function_getNpcPolylogSettings hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_getNpcPolylogSettings>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExactMove>
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerPolylog_initiator>
								</Then>
								<Else>
									<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerPolylog_receiver>
								</Else>
							</IfElseCondition>
						</Sequence>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="barkOnSpot" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="monologueAlias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="RelaxedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Function_speech_schedulerMonolog alias="$monologueAlias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="24839452" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="gotoAndBark" EventSet="endNotification">
			<Variables>
				<Variable name="monologueAlias" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_schedulerMonolog>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="utokNaNebakov_playerWokeUpOnBed" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<LuaWrapper onEnter="player.player:OnEnterInteractive()" onExit="player.player:OnEndInteractive()">
					<RestrictCamera HorizontalViewLimitDeg="75.000000" VerticalViewMinDeg="-75.000000" VerticalViewMaxDeg="70.000000">
						<PlayerOnBedOmitSkipTime>
							<Sequence>
								<StanceElement smartObject="$data" stance="lying" allowAny="false">
									<WaitAction />
								</StanceElement>
								<WaitAction />
								<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
							</Sequence>
						</PlayerOnBedOmitSkipTime>
					</RestrictCamera>
				</LuaWrapper>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="90" editorPosY="40" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<LuaWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<RestrictCamera hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<PlayerOnBedOmitSkipTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</StanceElement>
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantCallback_empty>
								</Sequence>
							</PlayerOnBedOmitSkipTime>
						</RestrictCamera>
					</LuaWrapper>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="waitOnSpot" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="delay" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="RelaxedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Wait duration="$delay" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="gotoAndWait" EventSet="endNotification">
			<Variables>
				<Variable name="delay" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="horseMaintenance" is_function="1">
		<Variables>
			<Variable name="lockName" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<JoinedAnimationAction requiresMovement="true" lockContext="$wuid" lockName="$string" lockCount="2" timeout="&apos;5s&apos;" ignoreOthersLeaving="false" fragment="&apos;HorseMaintenance&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;horseMaintenance&apos;" allowTorchForPlayer="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="lockName" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="30" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</JoinedAnimationAction>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="mountHorse" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HorseUsageElement horse="$data" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<Success />
					</Search>
					<Exec canSkip="1">
						<StanceElement smartObject="$data" stance="horse" allowAny="false" enabled="true">
							<Sequence>
								<WaitAction />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</StanceElement>
					</Exec>
				</HorseUsageElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HorseUsageElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Search>
						<Exec>
							<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</StanceElement>
						</Exec>
					</HorseUsageElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="waitOnSpotWithHorse" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="moveData" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="speed" type="enum:movementSpeed" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HorseUsageElement horse="$horse" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<Success />
					</Search>
					<Exec canSkip="1">
						<StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
							<Loop count="-1">
								<Sequence>
									<ExactMove directionType="AlignWithEntity" directionSpecification="$moveData" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$moveData" destinationSpecification2="" destinationSpecification3="" speed="$speed" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</Loop>
						</StanceElement>
					</Exec>
				</HorseUsageElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="moveOnHorse" EventSet="">
			<Variables>
				<Variable name="horse" comment="" />
				<Variable name="moveData" comment="" />
				<Variable name="speed" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HorseUsageElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Search>
						<Exec>
							<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ExactMove>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Loop>
							</StanceElement>
						</Exec>
					</HorseUsageElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="horseIngameDialog" is_function="0">
		<Variables>
			<Variable name="break" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="index" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="lockCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="place" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="horses" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="important" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="npcs" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="places" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<Expression expressions="$lockCount = #npcs" />
					<For startIndex="0" endIndex="-1" step="1" array="$npcs" iterator="$index" value="$npc" break="$break">
						<IfCondition failOnCondition="false" condition="$this.id == $npc">
							<Expression expressions="$place = $places[$index] &#10;$break = true &#10;$horse = $horses[$index]" />
						</IfCondition>
					</For>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<HorseUsageElement horse="$horse" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<Success />
					</Search>
					<Exec canSkip="1">
						<StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
							<Sequence>
								<ExactMove directionType="AlignWithEntity" directionSpecification="$place" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$place" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
								<IfElseCondition failOnCondition="false" condition="$index==0" saveVersion="2">
									<Then canSkip="1">
										<Function_speech_schedulerPolylog_initiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" areaForPlayer="" context="" customParameters="" metarole="" participants="$npcs" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="93991512" />
									</Then>
									<Else canSkip="1">
										<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$alias" initiator="$npcs[0]" numberOfParticipants="$lockCount" useIngameDialogPoseAndAnimations="false" nodeLabel="89624800" />
									</Else>
								</IfElseCondition>
							</Sequence>
						</StanceElement>
					</Exec>
				</HorseUsageElement>
			</Behavior>
		</Root>
		<ForestContainer>
			<ForgetDecision decisionLabel="tour_horse" />
		</ForestContainer>
		<EditorData Signature="npcPolylogOnHorses" EventSet="">
			<Variables>
				<Variable name="break" comment="" />
				<Variable name="horse" comment="" />
				<Variable name="index" comment="" />
				<Variable name="lockCount" comment="" />
				<Variable name="npc" comment="" />
				<Variable name="place" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="horses" comment="" />
				<Variable name="important" comment="" />
				<Variable name="npcs" comment="" />
				<Variable name="places" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<For hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</For>
					</Sequence>
				</OnInit>
				<Behavior>
					<HorseUsageElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Search>
						<Exec>
							<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExactMove>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerPolylog_initiator>
										</Then>
										<Else>
											<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerPolylog_receiver>
										</Else>
									</IfElseCondition>
								</Sequence>
							</StanceElement>
						</Exec>
					</HorseUsageElement>
				</Behavior>
			</Root>
			<Forest>
				<ForgetDecision editorPosX="340" editorPosY="420" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</ForgetDecision>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="horsePetting" is_function="0">
		<Variables>
			<Variable name="lockName" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="type" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GetType WUID="$this.id" OutString="$type" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
					<Concatenation OutString="$lockName" Pattern="&apos;$__object.id;_horsePetting&apos;" />
					<IfElseCondition failOnCondition="false" condition="$type == &apos;NPC&apos;" saveVersion="2">
						<Then canSkip="1">
							<JoinedUnstanceAction lockContext="$__object.id" lockName="$lockName" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" unstance="Quest_NPCPettingHorse" locationObject="$__object.id" slaveObject="" />
						</Then>
						<Else canSkip="1">
							<JoinedUnstanceAction lockContext="$__object.id" lockName="$lockName" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" unstance="Quest_NPCPettingHorse_Horse" locationObject="$__object.id" slaveObject="" />
						</Else>
					</IfElseCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="&apos;pettingHorse&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="&apos;Quest_PettingHorse&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;pettingHorse&apos;" allowTorchForPlayer="false" />
			<JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="&apos;pettingHorse&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="&apos;Quest_PettingHorseLoop&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;pettingHorse&apos;" allowTorchForPlayer="false" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="lockName" comment="" />
				<Variable name="type" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetType>
						<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Concatenation>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</JoinedUnstanceAction>
							</Then>
							<Else>
								<JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</JoinedUnstanceAction>
							</Else>
						</IfElseCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<JoinedAnimationAction editorPosX="1440" editorPosY="240" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</JoinedAnimationAction>
				<JoinedAnimationAction editorPosX="1360" editorPosY="-210" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</JoinedAnimationAction>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="playerUnderHorse" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<LuaWrapper onEnter="player.player:OnEnterInteractive()" onExit="player.player:OnEndInteractive()">
					<Sequence>
						<AddBuff SoulWUID="$this.id" BuffGUID="&apos;87b33bd6-c3bc-4974-8c34-01fd14ad7a36&apos;" />
						<JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="&apos;utokNaNebakov_playerUnderHorse_anim&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="&apos;Quest_UnderHorseRelease&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;underHorseRelease&apos;" allowTorchForPlayer="true" />
						<AddBuff SoulWUID="$this.id" BuffGUID="&apos;f16d86e9-230d-4f75-b2ce-cfc6765e9608&apos;" />
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</Sequence>
				</LuaWrapper>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<AtomicDecorator>
					<Sequence>
						<HandCheck who="$this.id" LeftHand="" RightHand="$rightHand" />
						<IfCondition failOnCondition="false" condition="$rightHand ~= $__null">
							<UnEquipItem Target="$this.id" item="$rightHand" />
						</IfCondition>
					</Sequence>
				</AtomicDecorator>
				<Parallel successMode="Any" failureMode="Any" />
			</Sequence>
		</ForestContainer>
		<EditorData EventSet="endNotification">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="-70" editorPosY="-70" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<LuaWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AddBuff>
							<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</JoinedAnimationAction>
							<AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AddBuff>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</Sequence>
					</LuaWrapper>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="530" editorPosY="-710" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</HandCheck>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<UnEquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnEquipItem>
							</IfCondition>
						</Sequence>
					</AtomicDecorator>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Parallel>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="polylogChat" is_function="0">
		<Variables>
			<Variable name="lockCount" type="_int" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="important" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="npcs" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="places" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$lockCount = #npcs" />
					<IfElseCondition failOnCondition="false" condition="$this.id == $npcs[0]" saveVersion="2">
						<Then canSkip="1">
							<Sequence>
								<Expression expressions="$npcs[#npcs] = $__player" />
								<Function_speech_schedulerPolylog_initiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" participants="$npcs" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="24715971" />
							</Sequence>
						</Then>
						<Else canSkip="1">
							<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$alias" initiator="$npcs[0]" numberOfParticipants="$lockCount" nodeLabel="69978204" />
						</Else>
					</IfElseCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="npcPolylog" EventSet="">
			<Variables>
				<Variable name="lockCount" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="important" comment="" />
				<Variable name="npcs" comment="" />
				<Variable name="places" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerPolylog_initiator>
								</Sequence>
							</Then>
							<Else>
								<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerPolylog_receiver>
							</Else>
						</IfElseCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="komoriLieIdle" is_function="0">
		<Variables>
			<Variable name="type" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="combat_disabledAsTarget" target="">
					<EntityContext context="crime_ignoreCorpses" target="">
						<EntityContextPreset preset="switch_unresponsive" target="">
							<Sequence>
								<GetType WUID="$this.id" OutString="$type" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
								<IfElseCondition failOnCondition="false" condition="$type == &apos;NPC&apos;" saveVersion="2">
									<Then canSkip="1">
										<Parallel successMode="Any" failureMode="Any">
											<Loop count="-1">
												<UnstanceAction unstance="Quest_UnderHorseIdle" locationObject="$__object.id" slaveObject="" />
											</Loop>
											<Loop count="-1">
												<Sequence>
													<SuppressFailure>
														<Function_speech_schedulerMonolog alias="&apos;utokNaNebakov_valley_komoriUnderHorse&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" subtitlesDown="false" nodeLabel="87151913" />
													</SuppressFailure>
													<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
												</Sequence>
											</Loop>
										</Parallel>
									</Then>
									<Else canSkip="1">
										<UnstanceAction unstance="Quest_LieDownHorseLoop" locationObject="$__object.id" slaveObject="" />
									</Else>
								</IfElseCondition>
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</EntityContextPreset>
					</EntityContext>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer>
			<AnimationAction fragment="&apos;Quest_UnderHorse&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="type" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-70" editorPosY="-150" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetType>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</UnstanceAction>
												</Loop>
												<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_speech_schedulerMonolog>
														</SuppressFailure>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Sequence>
												</Loop>
											</Parallel>
										</Then>
										<Else>
											<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</UnstanceAction>
										</Else>
									</IfElseCondition>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</EntityContextPreset>
						</EntityContext>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest>
				<AnimationAction editorPosX="1830" editorPosY="30" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</AnimationAction>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="komoriHorseRelease" is_function="0">
		<Variables>
			<Variable name="type" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="animation" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="npcs" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="combat_disabledAsTarget" target="">
					<EntityContext context="crime_ignoreCorpses" target="">
						<EntityContextPreset preset="switch_unresponsive" target="">
							<Sequence>
								<GetType WUID="$this.id" OutString="$type" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
								<IfElseCondition failOnCondition="false" condition="$type == &apos;NPC&apos;" saveVersion="2">
									<Then canSkip="1">
										<Switch>
											<IfCondition failOnCondition="false" condition="$animation == &apos;Quest_UnderHorseReleaseSlave&apos;">
												<Parallel successMode="Any" failureMode="Any">
													<Sequence>
														<SuppressFailure>
															<Function_speech_schedulerPolylog_initiator alias="&apos;utokNaNebakov_valley_caponKomoriIngameStart&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" participants="$npcs" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="62811766" />
														</SuppressFailure>
														<Wait duration="&apos;7s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
														<SuppressFailure>
															<Function_speech_schedulerPolylog_initiator alias="&apos;utokNaNebakov_valley_caponKomoriIngameEnd&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" participants="$npcs" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="22665064" />
														</SuppressFailure>
														<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
													</Sequence>
													<Sequence>
														<UnstanceElement unstance="Quest_UnderHorseIdle" locationObject="$__object.id" slaveObject="">
															<JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="&apos;utokNaNebakov_komoriUnderHorse&apos;" lockCount="3" timeout="&apos;-1&apos;" fragment="&apos;Quest_UnderHorseReleaseSlave&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;underHorseRelease&apos;" />
														</UnstanceElement>
														<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="5.000000" High="5.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
															<Parallel successMode="Any" failureMode="Any">
																<Sequence>
																	<UnstanceElement unstance="QuestHunterInjuryIdleLie" locationObject="$__object.id" slaveObject="">
																		<Sequence>
																			<UrgencyDecorator Urgency="Slow">
																				<SuppressFailure>
																					<AnimationAction fragment="&apos;Quest_InjuryLaydownGetUpDeath&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" />
																				</SuppressFailure>
																			</UrgencyDecorator>
																			<AddBuff SoulWUID="$this.id" BuffGUID="&apos;ed59af7c-6d7e-4454-8ffb-f16935bf5130&apos;" />
																			<KillNPC KillTarget="$this.id" animation="" tags="" AnimationWUID="" Scream="false" />
																		</Sequence>
																	</UnstanceElement>
																</Sequence>
																<Sequence>
																	<SuppressFailure>
																		<Function_speech_schedulerMonolog alias="&apos;utokNaNebakov_valley_komoriReleased&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="81115504" />
																	</SuppressFailure>
																	<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
																</Sequence>
															</Parallel>
														</DistanceGate>
													</Sequence>
												</Parallel>
											</IfCondition>
											<IfCondition failOnCondition="false" condition="$animation == &apos;Quest_UnderHorseReleaseMaster&apos;">
												<Parallel successMode="Any" failureMode="Any">
													<Sequence>
														<SuppressFailure>
															<Function_speech_schedulerMonolog alias="&apos;utokNaNebakov_valley_caponSeesKomori&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="51464885" />
														</SuppressFailure>
														<SuppressFailure>
															<Function_speech_schedulerPolylog_receiver aliasOrMetarole="&apos;utokNaNebakov_valley_caponKomoriIngameStart&apos;" initiator="$npcs[0]" numberOfParticipants="2" nodeLabel="64664161" />
														</SuppressFailure>
														<Wait duration="&apos;7s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
														<SuppressFailure>
															<Function_speech_schedulerPolylog_receiver aliasOrMetarole="&apos;utokNaNebakov_valley_caponKomoriIngameEnd&apos;" initiator="$npcs[0]" numberOfParticipants="2" nodeLabel="31843376" />
														</SuppressFailure>
														<SuppressFailure>
															<Function_speech_dialogInitiator alias="&apos;utokNaNebakov_valley_playerCaponChatAboutKomori&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="89459846" />
														</SuppressFailure>
														<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
													</Sequence>
													<Sequence>
														<JoinedAnimationAction requiresMovement="true" lockContext="$__object.id" lockName="&apos;utokNaNebakov_komoriUnderHorse&apos;" lockCount="3" timeout="&apos;-1&apos;" fragment="&apos;Quest_UnderHorseReleaseMaster&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;underHorseRelease&apos;" />
														<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
													</Sequence>
												</Parallel>
											</IfCondition>
										</Switch>
									</Then>
									<Else canSkip="1">
										<Sequence>
											<UnstanceElement unstance="Quest_LieDownHorseLoop" locationObject="$__object.id" slaveObject="">
												<JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="&apos;utokNaNebakov_komoriUnderHorse&apos;" lockCount="3" timeout="&apos;-1&apos;" fragment="$animation" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;underHorseRelease&apos;" />
											</UnstanceElement>
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										</Sequence>
									</Else>
								</IfElseCondition>
							</Sequence>
						</EntityContextPreset>
					</EntityContext>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="utokNaNebakov_komoriUnderHorse" EventSet="">
			<Variables>
				<Variable name="type" comment="" />
				<Variable name="animation" comment="" />
				<Variable name="npcs" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetType>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_schedulerPolylog_initiator>
															</SuppressFailure>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
															<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_schedulerPolylog_initiator>
															</SuppressFailure>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<OutputBreakpoints />
																</JoinedAnimationAction>
															</UnstanceElement>
															<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<OutputBreakpoints />
																						</AnimationAction>
																					</SuppressFailure>
																				</UrgencyDecorator>
																				<AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</AddBuff>
																				<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</KillNPC>
																			</Sequence>
																		</UnstanceElement>
																	</Sequence>
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Function_speech_schedulerMonolog>
																		</SuppressFailure>
																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Wait>
																	</Sequence>
																</Parallel>
															</DistanceGate>
														</Sequence>
													</Parallel>
												</IfCondition>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_schedulerMonolog>
															</SuppressFailure>
															<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_schedulerPolylog_receiver>
															</SuppressFailure>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
															<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_schedulerPolylog_receiver>
															</SuppressFailure>
															<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_dialogInitiator>
															</SuppressFailure>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<OutputBreakpoints />
															</JoinedAnimationAction>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
													</Parallel>
												</IfCondition>
											</Switch>
										</Then>
										<Else>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<OutputBreakpoints />
													</JoinedAnimationAction>
												</UnstanceElement>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</Else>
									</IfElseCondition>
								</Sequence>
							</EntityContextPreset>
						</EntityContext>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="anim_groundDaggerKill" is_function="0">
		<Variables>
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
			<Variable name="lockName" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="animation" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="lieDownSO" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wait" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextPreset preset="switch_unresponsive" target="">
					<EntityContext context="combat_disabledAsTarget" target="">
						<EntityContext context="combat_ignoreMurdered" target="">
							<ContinuousSwitch>
								<IfCondition failOnCondition="false" condition="!$wait">
									<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
										<Child canSkip="1">
											<Sequence>
												<DisablePerception Perceptor="true" Perceptible="true" ToWhom="" />
												<Concatenation OutString="$lockName" Pattern="&apos;$__object.id;_Dagger&apos;" />
												<Switch>
													<IfCondition failOnCondition="false" condition="$animation == &apos;Quest_GroundDaggerKillSlave&apos;">
														<Parallel successMode="Any" failureMode="Any">
															<UnstanceElement unstance="Quest_UnderHorseIdle" locationObject="$lieDownSO" slaveObject="" enabled="true">
																<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$lockName&apos;" RunLogic="Halt">
																	<SuppressFailure>
																		<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
																			<Child canSkip="1">
																				<SuppressFailure>
																					<AnimationAction fragment="&apos;Quest_GroundDaggerKillSlave&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;groundDaggerKill&apos;" allowTorchForPlayer="false" />
																				</SuppressFailure>
																			</Child>
																			<OnSuccess canSkip="1">
																				<Sequence>
																					<AddBuff SoulWUID="" BuffGUID="&apos;f8d60fe4-e2c1-420a-946a-213e1cd09264&apos;" />
																					<ExecuteLua code="entity.soul:DealDamage(999, 999, entity.this.id, true);" />
																					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
																					<KillNPC KillTarget="$this.id" Scream="false" />
																				</Sequence>
																			</OnSuccess>
																			<OnFail canSkip="1">
																				<KillNPC KillTarget="$this.id" Scream="false" />
																			</OnFail>
																		</FuseBox>
																	</SuppressFailure>
																</Synchronize>
															</UnstanceElement>
															<Loop count="-1">
																<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
																	<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.Unpleasant">
																		<KillNPC KillTarget="$this.id" Scream="false" />
																	</IfCondition>
																</ProcessMessage>
															</Loop>
														</Parallel>
													</IfCondition>
													<IfCondition failOnCondition="false" condition="$animation == &apos;Quest_GroundDaggerKill&apos;">
														<Parallel successMode="Any" failureMode="Any">
															<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$lockName&apos;" RunLogic="Halt">
																<Sequence>
																	<SuppressFailure>
																		<AnimationAction fragment="&apos;Quest_GroundDaggerKill&apos;" tags="" eventReferenceObject="$__object.id" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;groundDaggerKill&apos;" allowTorchForPlayer="false" />
																	</SuppressFailure>
																	<AddBuff SoulWUID="" BuffGUID="&apos;f8d60fe4-e2c1-420a-946a-213e1cd09264&apos;" />
																</Sequence>
															</Synchronize>
															<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
																<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.Unpleasant">
																	<Success />
																</IfCondition>
															</ProcessMessage>
														</Parallel>
													</IfCondition>
												</Switch>
											</Sequence>
										</Child>
										<OnSuccess canSkip="1">
											<Sequence>
												<EnablePerception Perceptor="true" Perceptible="true" ToWhom="" />
												<Callback_empty EventName="&apos;OnFinished&apos;" />
											</Sequence>
										</OnSuccess>
									</FuseBox>
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$wait">
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</IfCondition>
							</ContinuousSwitch>
						</EntityContext>
					</EntityContext>
				</EntityContextPreset>
			</Behavior>
		</Root>
		<ForestContainer>
			<Parallel successMode="Any" failureMode="Any">
				<IfGate atomic="false" condition="$wait == false" RunLogic="Halt" />
			</Parallel>
		</ForestContainer>
		<EditorData Signature="utokNaNebakov_killingAnimation_lieDown" EventSet="endNotification">
			<Variables>
				<Variable name="hitReaction" comment="" />
				<Variable name="lockName" comment="" />
				<Variable name="animation" comment="" />
				<Variable name="lieDownSO" comment="" />
				<Variable name="wait" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<DisablePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</DisablePerception>
													<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Concatenation>
													<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																				<OutputBreakpoints />
																				<Child>
																					<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</AnimationAction>
																					</SuppressFailure>
																				</Child>
																				<OnSuccess>
																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</AddBuff>
																						<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</ExecuteLua>
																						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Wait>
																						<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</KillNPC>
																					</Sequence>
																				</OnSuccess>
																				<OnFail>
																					<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</KillNPC>
																				</OnFail>
																			</FuseBox>
																		</SuppressFailure>
																	</Synchronize>
																</UnstanceElement>
																<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</KillNPC>
																		</IfCondition>
																	</ProcessMessage>
																</Loop>
															</Parallel>
														</IfCondition>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</AnimationAction>
																		</SuppressFailure>
																		<AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</AddBuff>
																	</Sequence>
																</Synchronize>
																<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Success>
																	</IfCondition>
																</ProcessMessage>
															</Parallel>
														</IfCondition>
													</Switch>
												</Sequence>
											</Child>
											<OnSuccess>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<EnablePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</EnablePerception>
													<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Callback_empty>
												</Sequence>
											</OnSuccess>
										</FuseBox>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</IfCondition>
								</ContinuousSwitch>
							</EntityContext>
						</EntityContext>
					</EntityContextPreset>
				</Behavior>
			</Root>
			<Forest>
				<Parallel editorPosX="900" editorPosY="-520" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</IfGate>
				</Parallel>
			</Forest>
			<Comments>
				<Comment text="Virtualni_kill._NPC_vypada,_ze_je_mrtve_(nejde_mercykill),_ale_pritom_je_zive_a_strom_mu_stale_bezi._Je_to_tu_treba,_aby_stale_bezel_Synchronize_a_druhemu_NPC_se_neshodil_strom" posX="3580" posY="-620" width="1595" height="97" resizeBorderWidth="300" resizeBorderHeight="70" color="0.65,0.65,0.65" author="sabady" />
				<Comment text="Po_10sec_druhe_NPC_dohralo_animaci_a_muzeme_toto_NPC_zabit" posX="3580" posY="-520" width="581" height="247" resizeBorderWidth="150" resizeBorderHeight="220" color="0.65,0.65,0.65" author="sabady" />
			</Comments>
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="drunkenness" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AddBuffElement Buff="&apos;ff92671b-2a82-4def-8d59-51627e0ecfc7&apos;">
					<Sequence>
						<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</Sequence>
				</AddBuffElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AddBuffElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</Sequence>
					</AddBuffElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="anim_soloDyingSoldier" is_function="0">
		<Variables>
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="animation" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wait" type="_bool" values="true" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextPreset preset="switch_unresponsive" target="">
					<EntityContext context="combat_disabledAsTarget" target="">
						<EntityContext context="combat_ignoreMurdered" target="">
							<ContinuousSwitch>
								<IfCondition failOnCondition="false" condition="!$wait">
									<Sequence>
										<DisablePerception Perceptor="true" Perceptible="true" ToWhom="" />
										<Parallel successMode="Any" failureMode="Any">
											<SuppressFailure>
												<AnimationAction fragment="$animation" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
											</SuppressFailure>
											<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
												<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.Unpleasant">
													<Success />
												</IfCondition>
											</ProcessMessage>
										</Parallel>
										<KillNPC KillTarget="$this.id" Scream="false" />
									</Sequence>
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$wait">
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</IfCondition>
							</ContinuousSwitch>
						</EntityContext>
					</EntityContext>
				</EntityContextPreset>
			</Behavior>
		</Root>
		<ForestContainer>
			<Parallel successMode="Any" failureMode="Any">
				<IfGate atomic="false" condition="$wait == false" RunLogic="Halt" />
			</Parallel>
		</ForestContainer>
		<EditorData Signature="utokNaNebakov_killingAnimation" EventSet="">
			<Variables>
				<Variable name="hitReaction" comment="" />
				<Variable name="animation" comment="" />
				<Variable name="wait" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DisablePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</DisablePerception>
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</AnimationAction>
												</SuppressFailure>
												<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</IfCondition>
												</ProcessMessage>
											</Parallel>
											<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</KillNPC>
										</Sequence>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</IfCondition>
								</ContinuousSwitch>
							</EntityContext>
						</EntityContext>
					</EntityContextPreset>
				</Behavior>
			</Root>
			<Forest>
				<Parallel editorPosX="940" editorPosY="-370" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</IfGate>
				</Parallel>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="teleportToDestination" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<WaitAction />
					<TeleportAction Position="$destination" EndInterruptOnActionStart="false" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="teleport" EventSet="endNotification">
			<Variables>
				<Variable name="destination" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</TeleportAction>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="horseMaintenance_capon" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Selector>
					<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="5.000000" High="5.000000" Negation="false" ValueOnMiddle="false" failOnCondition="true">
						<ForceLook LookTarget="$__player" DisableVariations="false">
							<Sequence>
								<WaitAction />
								<Turn target="$__player" align="false" />
								<SuppressFailure>
									<Function_speech_schedulerMonolog alias="&apos;utokNaNebakov_secondDay_caponBarks&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$__player" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="10262231" />
								</SuppressFailure>
								<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</ForceLook>
					</DistanceCondition>
					<Parallel successMode="Any" failureMode="Any">
						<JoinedAnimationAction requiresMovement="true" lockContext="$wuid" lockName="$string" lockCount="2" timeout="&apos;5s&apos;" ignoreOthersLeaving="false" fragment="&apos;HorseMaintenance&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;horseMaintenance&apos;" allowTorchForPlayer="false" />
						<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="5.000000" High="5.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
							<Success />
						</DistanceGate>
					</Parallel>
				</Selector>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="110" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Turn>
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_schedulerMonolog>
									</SuppressFailure>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</ForceLook>
						</DistanceCondition>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</JoinedAnimationAction>
							<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</DistanceGate>
						</Parallel>
					</Selector>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="simpleChat" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Function_speech_dialogInitiator alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="34211588" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_speech_dialogInitiator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="anim_chokeToDeath" is_function="0">
		<Variables>
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
			<Variable name="lockName" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="animation" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="lieDownSO" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wait" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="combat_disabledAsTarget" target="">
					<ContinuousSwitch>
						<IfCondition failOnCondition="false" condition="!$wait">
							<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
								<Child canSkip="1">
									<Sequence>
										<DisablePerception Perceptor="true" Perceptible="true" ToWhom="" />
										<Concatenation OutString="$lockName" Pattern="&apos;$__object.id;_Choke&apos;" />
										<ClearInbox inbox="&apos;hitReaction&apos;" type="" condition="" />
										<Switch>
											<IfCondition failOnCondition="false" condition="$animation == &apos;Quest_ChokeToDeathSlave&apos;">
												<Parallel successMode="Any" failureMode="Any">
													<UnstanceElement unstance="Quest_UnderHorseIdle" locationObject="$lieDownSO" slaveObject="" enabled="true">
														<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$lockName&apos;" RunLogic="Halt">
															<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
																<Child canSkip="1">
																	<SuppressFailure>
																		<AnimationAction fragment="&apos;Quest_ChokeToDeathSlave&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;groundDaggerKill&apos;" allowTorchForPlayer="false" />
																	</SuppressFailure>
																</Child>
																<OnSuccess canSkip="1">
																	<AddBuff SoulWUID="" BuffGUID="&apos;f8d60fe4-e2c1-420a-946a-213e1cd09264&apos;" />
																</OnSuccess>
															</FuseBox>
														</Synchronize>
													</UnstanceElement>
													<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
														<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.MinorInjury">
															<Success />
														</IfCondition>
													</ProcessMessage>
												</Parallel>
											</IfCondition>
											<IfCondition failOnCondition="false" condition="$animation == &apos;Quest_ChokeToDeath&apos;">
												<Parallel successMode="Any" failureMode="Any">
													<Sequence>
														<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$lockName&apos;" RunLogic="Halt">
															<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
																<Child canSkip="1">
																	<SuppressFailure>
																		<AnimationAction fragment="&apos;Quest_ChokeToDeath&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;groundDaggerKill&apos;" allowTorchForPlayer="false" />
																	</SuppressFailure>
																</Child>
																<OnSuccess canSkip="1">
																	<AddBuff SoulWUID="" BuffGUID="&apos;f8d60fe4-e2c1-420a-946a-213e1cd09264&apos;" />
																</OnSuccess>
															</FuseBox>
														</Synchronize>
													</Sequence>
													<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
														<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.MinorInjury">
															<Success />
														</IfCondition>
													</ProcessMessage>
												</Parallel>
											</IfCondition>
										</Switch>
									</Sequence>
								</Child>
								<OnSuccess canSkip="1">
									<Sequence>
										<EnablePerception Perceptor="true" Perceptible="true" ToWhom="" />
										<Callback_empty EventName="&apos;OnFinished&apos;" />
									</Sequence>
								</OnSuccess>
							</FuseBox>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$wait">
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</IfCondition>
					</ContinuousSwitch>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer>
			<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
				<OnSuccess canSkip="1">
					<Sequence>
						<AddBuff SoulWUID="" BuffGUID="&apos;f8d60fe4-e2c1-420a-946a-213e1cd09264&apos;" />
						<ExecuteLua code="entity.soul:DealDamage(999, 999, entity.this.id, true);" />
						<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
						<KillNPC KillTarget="$this.id" Scream="false" />
					</Sequence>
				</OnSuccess>
				<OnFail canSkip="1">
					<KillNPC KillTarget="$this.id" Scream="false" />
				</OnFail>
			</FuseBox>
		</ForestContainer>
		<EditorData Signature="utokNaNebakov_killingAnimation_lieDown" EventSet="endNotification">
			<Variables>
				<Variable name="hitReaction" comment="" />
				<Variable name="lockName" comment="" />
				<Variable name="animation" comment="" />
				<Variable name="lieDownSO" comment="" />
				<Variable name="wait" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Child>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DisablePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</DisablePerception>
											<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Concatenation>
											<ClearInbox hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</ClearInbox>
											<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Child>
																		<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</AnimationAction>
																		</SuppressFailure>
																	</Child>
																	<OnSuccess>
																		<AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</AddBuff>
																	</OnSuccess>
																</FuseBox>
															</Synchronize>
														</UnstanceElement>
														<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</IfCondition>
														</ProcessMessage>
													</Parallel>
												</IfCondition>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Child>
																		<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</AnimationAction>
																		</SuppressFailure>
																	</Child>
																	<OnSuccess>
																		<AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</AddBuff>
																	</OnSuccess>
																</FuseBox>
															</Synchronize>
														</Sequence>
														<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</IfCondition>
														</ProcessMessage>
													</Parallel>
												</IfCondition>
											</Switch>
										</Sequence>
									</Child>
									<OnSuccess>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<EnablePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</EnablePerception>
											<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Callback_empty>
										</Sequence>
									</OnSuccess>
								</FuseBox>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</IfCondition>
						</ContinuousSwitch>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest>
				<FuseBox editorPosX="3820" editorPosY="-600" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<OnSuccess>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AddBuff>
							<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExecuteLua>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</KillNPC>
						</Sequence>
					</OnSuccess>
					<OnFail>
						<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</KillNPC>
					</OnFail>
				</FuseBox>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="anim_obstacleDaggerKill" is_function="0">
		<Variables>
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
			<Variable name="lockName" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="animation" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wait" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextPreset preset="switch_unresponsive" target="">
					<EntityContext context="combat_disabledAsTarget" target="">
						<EntityContext context="combat_ignoreMurdered" target="">
							<ContinuousSwitch>
								<IfCondition failOnCondition="false" condition="!$wait">
									<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
										<Child canSkip="1">
											<Sequence>
												<DisablePerception Perceptor="true" Perceptible="true" ToWhom="" />
												<Concatenation OutString="$lockName" Pattern="&apos;$__object.id;_Choke&apos;" />
												<Switch>
													<IfCondition failOnCondition="false" condition="$animation == &apos;Quest_StandByObstacleDaggerKillSlave&apos;">
														<Sequence>
															<Parallel successMode="Any" failureMode="Any">
																<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$lockName&apos;" RunLogic="Halt">
																	<SuppressFailure>
																		<AnimationAction fragment="$animation" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;groundDaggerKill&apos;" allowTorchForPlayer="false" />
																	</SuppressFailure>
																</Synchronize>
																<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
																	<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.MinorInjury">
																		<Success />
																	</IfCondition>
																</ProcessMessage>
															</Parallel>
															<KillNPC KillTarget="$this.id" Scream="false" />
														</Sequence>
													</IfCondition>
													<IfCondition failOnCondition="false" condition="$animation == &apos;Quest_StandByObstacleDaggerKill&apos;">
														<Parallel successMode="Any" failureMode="Any">
															<Sequence>
																<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$lockName&apos;" RunLogic="Halt">
																	<SuppressFailure>
																		<AnimationAction fragment="$animation" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;groundDaggerKill&apos;" allowTorchForPlayer="false" />
																	</SuppressFailure>
																</Synchronize>
																<Callback_empty EventName="&apos;OnFinished&apos;" />
															</Sequence>
															<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
																<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.MinorInjury">
																	<Success />
																</IfCondition>
															</ProcessMessage>
														</Parallel>
													</IfCondition>
												</Switch>
											</Sequence>
										</Child>
										<OnSuccess canSkip="1">
											<Sequence>
												<EnablePerception Perceptor="true" Perceptible="true" ToWhom="" />
												<Callback_empty EventName="&apos;OnFinished&apos;" />
											</Sequence>
										</OnSuccess>
									</FuseBox>
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$wait">
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</IfCondition>
							</ContinuousSwitch>
						</EntityContext>
					</EntityContext>
				</EntityContextPreset>
			</Behavior>
		</Root>
		<ForestContainer>
			<Parallel successMode="Any" failureMode="Any">
				<IfGate atomic="false" condition="$wait == false" RunLogic="Halt" />
			</Parallel>
		</ForestContainer>
		<EditorData Signature="utokNaNebakov_killingAnimation" EventSet="endNotification">
			<Variables>
				<Variable name="hitReaction" comment="" />
				<Variable name="lockName" comment="" />
				<Variable name="animation" comment="" />
				<Variable name="wait" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<DisablePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</DisablePerception>
													<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Concatenation>
													<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</AnimationAction>
																		</SuppressFailure>
																	</Synchronize>
																	<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Success>
																		</IfCondition>
																	</ProcessMessage>
																</Parallel>
																<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</KillNPC>
															</Sequence>
														</IfCondition>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</AnimationAction>
																		</SuppressFailure>
																	</Synchronize>
																	<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Callback_empty>
																</Sequence>
																<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Success>
																	</IfCondition>
																</ProcessMessage>
															</Parallel>
														</IfCondition>
													</Switch>
												</Sequence>
											</Child>
											<OnSuccess>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<EnablePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</EnablePerception>
													<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Callback_empty>
												</Sequence>
											</OnSuccess>
										</FuseBox>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</IfCondition>
								</ContinuousSwitch>
							</EntityContext>
						</EntityContext>
					</EntityContextPreset>
				</Behavior>
			</Root>
			<Forest>
				<Parallel editorPosX="890" editorPosY="-280" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</IfGate>
				</Parallel>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="horseLieDown" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="combat_disabledAsTarget" target="">
					<EntityContextPreset preset="switch_unresponsive" target="">
						<UnstanceAction unstance="Quest_LieDownHorseLoop" locationObject="$__object.id" slaveObject="" />
					</EntityContextPreset>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
						</EntityContextPreset>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="stoneThrowing" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$__object.id" stance="standing" allowAny="false">
					<UnstanceAction unstance="Quest_StoneThrowing" locationObject="$__object.id" slaveObject="" />
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="60" editorPosY="20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<OutputBreakpoints />
						</UnstanceAction>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="test_addDirtHorse" is_function="0">
		<Variables>
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
				</GraphSearch>
			</OnInit>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="horse" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="feast_animchars_move" is_function="0">
		<Variables>
			<Variable name="patrolPoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="torchItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;patrolPoint&apos;" prune="true" negprune="unknown" Parent="" Child="$patrolPoint" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Loop count="-1">
					<Sequence>
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="true" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$patrolPoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
						<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
							<Child canSkip="1">
								<GraphSearch Origin="$patrolPoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;patrolPoint&apos;" prune="true" negprune="unknown" Parent="" Child="$patrolPoint" Data="" />
								</GraphSearch>
							</Child>
							<OnSuccess canSkip="1">
								<Success />
							</OnSuccess>
							<OnFail canSkip="1">
								<Sequence>
									<Callback_empty EventName="&apos;OnFinished&apos;" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Sequence>
							</OnFail>
						</FuseBox>
					</Sequence>
				</Loop>
			</Behavior>
		</Root>
		<ForestContainer>
			<IncludeTree File="&apos;quests/utoknanebakov/utoknanebakov.xml&apos;" Name="&apos;feast_animchars_equipTorch&apos;" nodeLabel="46779065" />
		</ForestContainer>
		<EditorData EventSet="endNotification">
			<Variables>
				<Variable name="patrolPoint" comment="" />
				<Variable name="torchItem" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
							<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
								</Child>
								<OnSuccess>
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</OnSuccess>
								<OnFail>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</OnFail>
							</FuseBox>
						</Sequence>
					</Loop>
				</Behavior>
			</Root>
			<Forest>
				<IncludeTree editorPosX="530" editorPosY="-340" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</IncludeTree>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="feast_animchars_equipTorch" is_function="0">
		<Variables>
			<Variable name="torchItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Selector>
						<GetItem InventoryHost="$this.id" ItemGUID="&apos;8c6b9277-e7ad-4246-974a-65b7000fbc5a&apos;" ItemCategory="" FailIfNotFound="true" ItemOut="$torchItem" AmountOut="" />
						<CreateItem ItemGUID="&apos;8c6b9277-e7ad-4246-974a-65b7000fbc5a&apos;" Amount="1" CreatedItem="$torchItem" Target="$this.id" NotifyUI="false" />
					</Selector>
					<EquipItem item="$torchItem" Target="$this.id" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="torchItem" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GetItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetItem>
							<CreateItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</CreateItem>
						</Selector>
						<EquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</EquipItem>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="feast_animchars_wait" is_function="0">
		<Variables>
			<Variable name="torchItem" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Behavior>
		</Root>
		<ForestContainer>
			<GraphSearch Origin="$this.id" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
				<ItemClassFilter ClassId="&apos;8c6b9277-e7ad-4246-974a-65b7000fbc5a&apos;" Category="" Source="Child" prune="true" negprune="unknown" Parent="" Child="$torchItem" />
			</GraphSearch>
			<HandContentDecorator hand="Left" item="$torchItem" allowAny="false" decisionLabel="Label1" saveVersion="2">
				<Search canSkip="1">
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;inventory&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<ItemClassFilter ClassId="&apos;4cea28a0-0814-405a-bf24-4fd711f7eb63&apos;" Category="" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
						<Nodalyzer Quantifiers="Exists" Parent="" Child="$torchItem" saveVersion="2" />
					</GraphSearch>
				</Search>
			</HandContentDecorator>
			<Sequence>
				<IncludeTree File="&apos;quests/utoknanebakov/utoknanebakov.xml&apos;" Name="&apos;feast_animchars_equipTorch&apos;" nodeLabel="10583685" />
			</Sequence>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="torchItem" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest>
				<GraphSearch editorPosX="820" editorPosY="-370" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</ItemClassFilter>
				</GraphSearch>
				<HandContentDecorator editorPosX="540" editorPosY="-300" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Search>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ItemClassFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
					</Search>
				</HandContentDecorator>
				<Sequence editorPosX="390" editorPosY="-170" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</IncludeTree>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="anim_halbertWait" is_function="0">
		<Variables>
			<Variable name="hlbrt" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="switch_disabledPerceptionReaction" target="">
					<HandContentElement hand="Right" item="$hlbrt" allowAny="false" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<Function_findItemOnSlot linkName="&apos;halbert&apos;" npc="$this.id" searchOrigin="$__object.id" item="$hlbrt" nodeLabel="47420553" />
						</Search>
						<Exec canSkip="1">
							<Sequence>
								<UrgencyDecorator Urgency="Instant">
									<WaitAction />
								</UrgencyDecorator>
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</Exec>
					</HandContentElement>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="hlbrt" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_findItemOnSlot>
							</Search>
							<Exec>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</UrgencyDecorator>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Exec>
						</HandContentElement>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="anim_halbertKill" is_function="0">
		<Variables>
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
			<Variable name="hlbrt" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="lefthand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="lockName" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="animation" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wait" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextPreset preset="switch_unresponsive" target="">
					<EntityContext context="combat_disabledAsTarget" target="">
						<EntityContext context="combat_ignoreMurdered" target="">
							<ContinuousSwitch>
								<IfCondition failOnCondition="false" condition="!$wait">
									<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
										<Child canSkip="1">
											<Sequence>
												<DisablePerception Perceptor="true" Perceptible="true" ToWhom="" />
												<Concatenation OutString="$lockName" Pattern="&apos;$__object.id;_halbert&apos;" />
												<Switch>
													<IfCondition failOnCondition="false" condition="$animation == &apos;Quest_StandHlbrdKillSlave&apos;">
														<Sequence>
															<Parallel successMode="Any" failureMode="Any">
																<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$lockName&apos;" RunLogic="Halt">
																	<SuppressFailure>
																		<AnimationAction fragment="$animation" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;groundDaggerKill&apos;" allowTorchForPlayer="false" />
																	</SuppressFailure>
																</Synchronize>
																<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
																	<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.MinorInjury">
																		<Success />
																	</IfCondition>
																</ProcessMessage>
															</Parallel>
															<KillNPC KillTarget="$this.id" Scream="false" />
														</Sequence>
													</IfCondition>
													<IfCondition failOnCondition="false" condition="$animation == &apos;Quest_StandHlbrdKill&apos;">
														<Parallel successMode="Any" failureMode="Any">
															<HandContentElement hand="Right" item="$hlbrt" allowAny="false" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
																<Search canSkip="1">
																	<GetWeaponsFromWeaponSet WeaponSet="Oversized" LeftHand="$lefthand" RightHand="$hlbrt" UseTorchWhenAppropriate="false" />
																</Search>
																<Exec canSkip="1">
																	<Sequence>
																		<UrgencyDecorator Urgency="Instant">
																			<WaitAction />
																		</UrgencyDecorator>
																		<Move stopWithinDistance="0.010000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.010000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$__object.id" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
																		<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$lockName&apos;" RunLogic="Halt">
																			<AnimationAction fragment="$animation" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;groundDaggerKill&apos;" allowTorchForPlayer="false" />
																		</Synchronize>
																	</Sequence>
																</Exec>
															</HandContentElement>
															<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
																<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.MinorInjury">
																	<Success />
																</IfCondition>
															</ProcessMessage>
														</Parallel>
													</IfCondition>
												</Switch>
											</Sequence>
										</Child>
										<OnSuccess canSkip="1">
											<Sequence>
												<EnablePerception Perceptor="true" Perceptible="true" ToWhom="" />
												<Callback_empty EventName="&apos;OnFinished&apos;" />
											</Sequence>
										</OnSuccess>
									</FuseBox>
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$wait">
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</IfCondition>
							</ContinuousSwitch>
						</EntityContext>
					</EntityContext>
				</EntityContextPreset>
			</Behavior>
		</Root>
		<ForestContainer>
			<Parallel successMode="Any" failureMode="Any">
				<IfGate atomic="false" condition="$wait == false" RunLogic="Halt" />
			</Parallel>
		</ForestContainer>
		<EditorData Signature="utokNaNebakov_killingAnimation" EventSet="">
			<Variables>
				<Variable name="hitReaction" comment="" />
				<Variable name="hlbrt" comment="" />
				<Variable name="lefthand" comment="" />
				<Variable name="lockName" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="animation" comment="" />
				<Variable name="wait" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<DisablePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</DisablePerception>
													<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Concatenation>
													<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</AnimationAction>
																		</SuppressFailure>
																	</Synchronize>
																	<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Success>
																		</IfCondition>
																	</ProcessMessage>
																</Parallel>
																<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</KillNPC>
															</Sequence>
														</IfCondition>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Search>
																		<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</GetWeaponsFromWeaponSet>
																	</Search>
																	<Exec>
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</WaitAction>
																			</UrgencyDecorator>
																			<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Move>
																			<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</AnimationAction>
																			</Synchronize>
																		</Sequence>
																	</Exec>
																</HandContentElement>
																<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Success>
																	</IfCondition>
																</ProcessMessage>
															</Parallel>
														</IfCondition>
													</Switch>
												</Sequence>
											</Child>
											<OnSuccess>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<EnablePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</EnablePerception>
													<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Callback_empty>
												</Sequence>
											</OnSuccess>
										</FuseBox>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</IfCondition>
								</ContinuousSwitch>
							</EntityContext>
						</EntityContext>
					</EntityContextPreset>
				</Behavior>
			</Root>
			<Forest>
				<Parallel editorPosX="900" editorPosY="-400" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</IfGate>
				</Parallel>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="caponLieDown" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextPreset preset="switch_unresponsive" target="">
					<Loop count="-1">
						<UnstanceAction unstance="Quest_UnderHorseIdle" locationObject="$__object.id" slaveObject="" />
					</Loop>
				</EntityContextPreset>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<OutputBreakpoints />
							</UnstanceAction>
						</Loop>
					</EntityContextPreset>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="formationAroundZizka" is_function="0">
		<Variables>
			<Variable name="dirOffset" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="finalPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="formationWUID" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hand" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="moveTo" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="moveToPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="spectatingArea" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tryMoveTo" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="weapon" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="zizka" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="zizkaPos" type="vec3" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Sequence>
						<IfCondition failOnCondition="false" condition="$string == &apos;Right&apos;">
							<Sequence>
								<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
								<Expression expressions="$weapon = $rightHand &#10;$hand = $string" />
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$string == &apos;Left&apos;">
							<Sequence>
								<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
								<Expression expressions="$weapon = $leftHand &#10;$hand = $string" />
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$string == &apos;Oversized&apos;">
							<Sequence>
								<GetWeaponsFromWeaponSet WeaponSet="Oversized" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
								<Expression expressions="$weapon = $rightHand &#10;$hand = &apos;Right&apos;" />
							</Sequence>
						</IfCondition>
					</Sequence>
					<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="Label1" useDecision="false" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<Success />
						</Search>
						<Exec canSkip="1">
							<HandContentElement hand="Left" item="$leftHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="Label1" useDecision="false" enabled="true" saveVersion="2">
								<Search canSkip="1">
									<Success />
								</Search>
								<Exec canSkip="1">
									<Sequence>
										<WaitAction />
										<Expression expressions="$moveTo = $wuid" />
										<Loop count="-1">
											<SuppressFailure>
												<ForceLook LookTarget="$__player" DisableVariations="false">
													<Selector>
														<Loop count="-1">
															<Sequence>
																<GraphSearch Origin="$moveTo" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																	<LinkTagFilter tag="&apos;moveTo&apos;" prune="true" negprune="unknown" Parent="" Child="$moveTo" Data="" />
																</GraphSearch>
																<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="1.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$moveTo" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
															</Sequence>
														</Loop>
														<Parallel successMode="Any" failureMode="Any">
															<Loop count="-1">
																<Sequence>
																	<Turn target="$__player" align="false" />
																	<Wait duration="&apos;200ms&apos;" timeType="GameTime" doFail="false" variation="" />
																</Sequence>
															</Loop>
															<Loop count="-1">
																<Function_monologRepeat alias="&apos;utokNaNebakov_duel_soldiersBarking&apos;" cooldown="&apos;6s&apos;" repeat="-1" nodeLabel="11098006" />
															</Loop>
														</Parallel>
													</Selector>
												</ForceLook>
											</SuppressFailure>
										</Loop>
									</Sequence>
								</Exec>
							</HandContentElement>
						</Exec>
					</HandContentElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<IfCondition failOnCondition="false" condition="$data == &apos;front1&apos;" />
				<GetMemberFormation MemberWUID="$zizka" FormationHandleOut="$formationWUID" />
				<FormationFollower FormationHandle="$formationWUID" PreferredPositions="$data" FormationMode="KeepDistance" AllowRelocation="false" />
			</Sequence>
			<Sequence>
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;zizka&apos;" prune="true" negprune="unknown" Parent="" Child="$zizka" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;spectatingArea&apos;" prune="true" negprune="unknown" Parent="" Child="$spectatingArea" Data="" />
					</GraphSearch>
					<GetSpatialInfo In="$zizka" Out="$zizkaPos" What="Position" />
					<GetSpatialInfo In="$moveTo" Out="$moveToPos" What="Position" />
					<Expression expressions="$dirOffset.x = $moveToPos.x - $zizkaPos.x &#10;$dirOffset.y = $moveToPos.y - $zizkaPos.y &#10;$dirOffset.z = $moveToPos.z - $zizkaPos.z" />
				</Sequence>
				<Loop count="-1">
					<Sequence>
						<GetSpatialInfo In="$zizka" Out="$zizkaPos" What="Position" />
						<Expression expressions="$tryMoveTo.x = $zizkaPos.x + $dirOffset.x &#10;$tryMoveTo.y = $zizkaPos.y + $dirOffset.y &#10;$tryMoveTo.z = $zizkaPos.z + $dirOffset.z" />
						<SuppressFailure>
							<Sequence>
								<GetRandomPos StartPos="$tryMoveTo" PosExtentHor="2.000000" PosExtentVert="2.000000" MaxRange="2.000000" Precise="true" MaxIterantions="10" Target="$finalPos" navAgentType="Automatic" pathFindingParams="" />
								<IsInsideArea Origin="$__player" Area="$spectatingArea" FailSubtMissing="false" saveVersion="2">
									<Then canSkip="1">
										<Move stopWithinDistance="1.000000" stopDistanceVariation="0.100000" rayCasteFlee="true" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$finalPos" destinationSpecification2="" destinationSpecification3="" speed="AlertedWalk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									</Then>
								</IsInsideArea>
							</Sequence>
						</SuppressFailure>
						<ForceLook LookTarget="$__player" DisableVariations="false">
							<Turn target="$__player" align="false" />
						</ForceLook>
						<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</Loop>
			</Sequence>
		</ForestContainer>
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="dirOffset" comment="" />
				<Variable name="finalPos" comment="" />
				<Variable name="formationWUID" comment="" />
				<Variable name="hand" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="moveTo" comment="" />
				<Variable name="moveToPos" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="spectatingArea" comment="" />
				<Variable name="tryMoveTo" comment="" />
				<Variable name="weapon" comment="" />
				<Variable name="zizka" comment="" />
				<Variable name="zizkaPos" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetWeaponsFromWeaponSet>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetWeaponsFromWeaponSet>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetWeaponsFromWeaponSet>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
							</IfCondition>
						</Sequence>
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Search>
							<Exec>
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Search>
									<Exec>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</WaitAction>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</LinkTagFilter>
																	</GraphSearch>
																	<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Move>
																</Sequence>
															</Loop>
															<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Turn>
																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Wait>
																	</Sequence>
																</Loop>
																<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Function_monologRepeat hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_monologRepeat>
																</Loop>
															</Parallel>
														</Selector>
													</ForceLook>
												</SuppressFailure>
											</Loop>
										</Sequence>
									</Exec>
								</HandContentElement>
							</Exec>
						</HandContentElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="940" editorPosY="-720" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</IfCondition>
					<GetMemberFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</GetMemberFormation>
					<FormationFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</FormationFollower>
				</Sequence>
				<Sequence editorPosX="1390" editorPosY="-460" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetSpatialInfo>
						<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetSpatialInfo>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</Sequence>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetSpatialInfo>
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetRandomPos hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetRandomPos>
									<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Move>
										</Then>
									</IsInsideArea>
								</Sequence>
							</SuppressFailure>
							<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Turn>
							</ForceLook>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Loop>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="zizka_duelFormation" is_function="0">
		<Variables>
			<Variable name="formationWUID" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="target" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<IncludeTree File="&apos;world/sa_land.xml&apos;" Name="&apos;combat_fightRepeated_template&apos;" nodeLabel="75625920" />
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<MakeFormation FormationName="&apos;utokNaNebakov_aroundZizka&apos;" HandleVariable="$formationWUID" />
			</Sequence>
		</ForestContainer>
		<EditorData Signature="fightRepeated" EventSet="">
			<Variables>
				<Variable name="formationWUID" comment="" />
				<Variable name="target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</IncludeTree>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="290" editorPosY="-270" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<MakeFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</MakeFormation>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="move" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="speed" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="stealth" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="successDistance" type="_float" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="$successDistance" stopDistanceVariation="1.000000" rayCasteFlee="false" successDistance="$successDistance" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="$speed" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="moveData" EventSet="endNotification">
			<Variables>
				<Variable name="destination" comment="" />
				<Variable name="speed" comment="" />
				<Variable name="stealth" comment="" />
				<Variable name="successDistance" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantCallback_empty>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="leaningRail" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextElement context="utokNaNebakov_leaningRail">
					<Sequence>
						<UnstanceAction unstance="leaningRail1" locationObject="$__object.id" slaveObject="" />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</EntityContextElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</EntityContextElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="waitWithWeapon" is_function="0">
		<Variables>
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="bool" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Left" item="$leftHand" allowAny="false" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
					</Search>
					<Exec canSkip="1">
						<IfElseCondition failOnCondition="false" condition="$bool == true" saveVersion="2">
							<Then canSkip="1">
								<Sequence>
									<StanceElement smartObject="" stance="crouch" allowAny="false" enabled="true">
										<IsWeaponLoaded failOnCondition="false" saveVersion="2">
											<Then canSkip="1">
												<WaitAction />
											</Then>
											<Else canSkip="1">
												<LoadWeaponAction />
											</Else>
										</IsWeaponLoaded>
									</StanceElement>
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</Then>
							<Else canSkip="1">
								<Sequence>
									<IsWeaponLoaded failOnCondition="false" saveVersion="2">
										<Then canSkip="1">
											<WaitAction />
										</Then>
										<Else canSkip="1">
											<LoadWeaponAction />
										</Else>
									</IsWeaponLoaded>
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</Else>
						</IfElseCondition>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="stringBool" EventSet="">
			<Variables>
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="bool" comment="" />
				<Variable name="string" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetWeaponsFromWeaponSet>
						</Search>
						<Exec>
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IsWeaponLoaded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WaitAction>
												</Then>
												<Else>
													<LoadWeaponAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LoadWeaponAction>
												</Else>
											</IsWeaponLoaded>
										</StanceElement>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Then>
								<Else>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IsWeaponLoaded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
											</Then>
											<Else>
												<LoadWeaponAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LoadWeaponAction>
											</Else>
										</IsWeaponLoaded>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Else>
							</IfElseCondition>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="moveWithWeapon" is_function="1">
		<Variables>
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="exactMove" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="speed" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="successDistance" type="_float" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="weaponSlot" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<GetWeaponsFromWeaponSet WeaponSet="$weaponSlot" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="false" />
							<IfElseCondition failOnCondition="false" condition="$leftHand == $__null" saveVersion="2">
								<Then canSkip="1">
									<HandContentElement hand="Right" item="$rightHand" allowAny="false" decisionLabel="Label1" useDecision="false" enabled="true" saveVersion="2">
										<Search canSkip="1">
											<Success />
										</Search>
										<Exec canSkip="1">
											<Sequence>
												<WaitAction />
												<IfElseCondition failOnCondition="false" condition="$exactMove == true" saveVersion="2">
													<Then canSkip="1">
														<ExactMove directionType="AlignWithEntity" directionSpecification="$destination" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="$speed" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
													</Then>
													<Else canSkip="1">
														<Move stopWithinDistance="$successDistance" stopDistanceVariation="1.000000" rayCasteFlee="false" successDistance="$successDistance" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="$speed" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
													</Else>
												</IfElseCondition>
												<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
											</Sequence>
										</Exec>
									</HandContentElement>
								</Then>
								<Else canSkip="1">
									<HandContentElement hand="Right" item="$rightHand" allowAny="false" decisionLabel="Label1" useDecision="false" enabled="true" saveVersion="2">
										<Search canSkip="1">
											<Success />
										</Search>
										<Exec canSkip="1">
											<HandContentElement hand="Left" item="$leftHand" allowAny="false" decisionLabel="Label1" useDecision="false" enabled="true" saveVersion="2">
												<Search canSkip="1">
													<Success />
												</Search>
												<Exec canSkip="1">
													<Sequence>
														<WaitAction />
														<IfElseCondition failOnCondition="false" condition="$exactMove == true" saveVersion="2">
															<Then canSkip="1">
																<ExactMove directionType="AlignWithEntity" directionSpecification="$destination" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="$speed" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
															</Then>
															<Else canSkip="1">
																<Move stopWithinDistance="$successDistance" stopDistanceVariation="1.000000" rayCasteFlee="false" successDistance="$successDistance" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="$speed" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
															</Else>
														</IfElseCondition>
														<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
													</Sequence>
												</Exec>
											</HandContentElement>
										</Exec>
									</HandContentElement>
								</Else>
							</IfElseCondition>
						</Sequence>
					</Child>
					<OnFail canSkip="1">
						<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="utokNaNebakov_moveWithWeapon" EventSet="endNotification">
			<Variables>
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="destination" comment="" />
				<Variable name="exactMove" comment="" />
				<Variable name="speed" comment="" />
				<Variable name="successDistance" comment="" />
				<Variable name="weaponSlot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetWeaponsFromWeaponSet>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Search>
												<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Success>
											</Search>
											<Exec>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WaitAction>
													<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</ExactMove>
														</Then>
														<Else>
															<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Move>
														</Else>
													</IfElseCondition>
													<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantCallback_empty>
												</Sequence>
											</Exec>
										</HandContentElement>
									</Then>
									<Else>
										<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Search>
												<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Success>
											</Search>
											<Exec>
												<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Search>
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</Search>
													<Exec>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</WaitAction>
															<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</ExactMove>
																</Then>
																<Else>
																	<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Move>
																</Else>
															</IfElseCondition>
															<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</InstantCallback_empty>
														</Sequence>
													</Exec>
												</HandContentElement>
											</Exec>
										</HandContentElement>
									</Else>
								</IfElseCondition>
							</Sequence>
						</Child>
						<OnFail>
							<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantCallback_empty>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="playerUnderHorse_capon" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<JoinedAnimationAction requiresMovement="true" lockContext="$__object.id" lockName="&apos;utokNaNebakov_playerUnderHorse_anim&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="&apos;Quest_UnderHorseReleaseCapon&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;underHorseRelease&apos;" allowTorchForPlayer="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</JoinedAnimationAction>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="capon_stopAttack" is_function="0">
		<Variables>
			<Variable name="direction" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="inFrontOfPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="moveTo" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="position" type="vec3" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Success />
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<GetSpatialInfo In="$this.id" Out="$direction" What="Orientation" />
				<GetSpatialInfo In="$this.id" Out="$position" What="Position" />
				<Expression expressions="$inFrontOfPos.x = $position.x + $direction.x * 2 &#10;$inFrontOfPos.y = $position.y + $direction.y * 2 &#10;$inFrontOfPos.z = $position.z + $direction.z * 2" />
				<GetRandomPos StartPos="$inFrontOfPos" PosExtentHor="1.000000" PosExtentVert="2.000000" MaxRange="5.000000" Precise="true" MaxIterantions="10" Target="$moveTo" navAgentType="Automatic" pathFindingParams="" />
				<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="true" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$inFrontOfPos" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
			</Sequence>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="direction" comment="" />
				<Variable name="inFrontOfPos" comment="" />
				<Variable name="moveTo" comment="" />
				<Variable name="position" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-90" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Success>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="160" editorPosY="420" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</GetSpatialInfo>
					<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</GetSpatialInfo>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
					<GetRandomPos hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</GetRandomPos>
					<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Move>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="capon_isEnemyBehind" is_function="0">
		<Variables>
			<Variable name="caponPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="caponRot" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="dirToEnemy" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="dotProduct" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="enemy" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="enemyPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="lastIgnoredEnemy" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Loop count="-1">
						<SuppressFailure>
							<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
								<Child canSkip="1">
									<OnTargetChange TargetFrom="Any" TargetTo="Any" WaitForNext="true" Combatants="Me" Who="" RunLogic="Halt">
										<AtomicDecorator>
											<Sequence>
												<GetTarget ReferenceNPC="$this.id" TargetVarOut="$enemy" />
												<IsDeadCheck SoulWUID="$enemy" FailSubtMissing="false" saveVersion="2">
													<Then canSkip="1">
														<Fail />
													</Then>
													<Else canSkip="1">
														<IsUnconsciousCheck SoulWUID="$enemy" FailSubtMissing="false" saveVersion="2">
															<Then canSkip="1">
																<Fail />
															</Then>
														</IsUnconsciousCheck>
													</Else>
												</IsDeadCheck>
											</Sequence>
										</AtomicDecorator>
									</OnTargetChange>
								</Child>
								<OnFail canSkip="1">
									<Expression expressions="$enemy = $__null &#10;$lastIgnoredEnemy = $__null" />
								</OnFail>
							</FuseBox>
						</SuppressFailure>
					</Loop>
					<Loop count="-1">
						<SuppressFailure>
							<IfGate atomic="false" condition="$enemy ~= $__null &amp; $lastIgnoredEnemy ~= $enemy" RunLogic="KeepRunning">
								<AtomicDecorator>
									<Sequence>
										<DistanceCondition Origin="$this.id" ReferencePt="$enemy" Low="20.000000" High="20.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
											<Sequence>
												<AddInterrupt Target="$this.id" Host="$QSO" Behavior="&apos;capon_stopAttack&apos;" Priority="200" IgnorePriorityOnPreviousInterrupt="false" urgency="Instant" Aliveness="Alive" Privileged="false" FastForward="false" />
												<Expression expressions="$lastIgnoredEnemy = $enemy" />
												<Fail />
											</Sequence>
										</DistanceCondition>
										<GetSpatialInfo In="$this.id" Out="$caponPos" What="Position" />
										<GetSpatialInfo In="$enemy" Out="$enemyPos" What="Position" />
										<Expression expressions="$dirToEnemy.x = $enemyPos.x - $caponPos.x &#10;$dirToEnemy.y = $enemyPos.y - $caponPos.y &#10;$dirToEnemy.z = $enemyPos.z - $caponPos.z" />
										<NormalizeVector vector="$dirToEnemy" />
										<GetSpatialInfo In="$this.id" Out="$caponRot" What="Orientation" />
										<CalculateDotProduct vector1="$dirToEnemy" vector2="$caponRot" result="$dotProduct" />
										<IfCondition failOnCondition="false" condition="$dotProduct &lt; 0">
											<DistanceCondition Origin="$this.id" ReferencePt="$enemy" Low="10.000000" High="10.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
												<Sequence>
													<AddInterrupt Target="$this.id" Host="$QSO" Behavior="&apos;capon_stopAttack&apos;" Priority="200" IgnorePriorityOnPreviousInterrupt="false" urgency="Instant" Aliveness="Alive" Privileged="false" FastForward="false" />
													<Expression expressions="$lastIgnoredEnemy = $enemy" />
												</Sequence>
											</DistanceCondition>
										</IfCondition>
									</Sequence>
								</AtomicDecorator>
							</IfGate>
						</SuppressFailure>
					</Loop>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="caponPos" comment="" />
				<Variable name="caponRot" comment="" />
				<Variable name="dirToEnemy" comment="" />
				<Variable name="dotProduct" comment="" />
				<Variable name="enemy" comment="" />
				<Variable name="enemyPos" comment="" />
				<Variable name="lastIgnoredEnemy" comment="" />
				<Variable name="QSO" comment="" />
			</Variables>
			<ForwardDeclarations>
				<Variable name="QSO" type="_wuid" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
			</ForwardDeclarations>
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Child>
										<OnTargetChange hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GetTarget hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetTarget>
													<IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Fail>
														</Then>
														<Else>
															<IsUnconsciousCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Fail>
																</Then>
															</IsUnconsciousCheck>
														</Else>
													</IsDeadCheck>
												</Sequence>
											</AtomicDecorator>
										</OnTargetChange>
									</Child>
									<OnFail>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</OnFail>
								</FuseBox>
							</SuppressFailure>
						</Loop>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<AddInterrupt hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</AddInterrupt>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Fail>
												</Sequence>
											</DistanceCondition>
											<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetSpatialInfo>
											<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetSpatialInfo>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<NormalizeVector hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</NormalizeVector>
											<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetSpatialInfo>
											<CalculateDotProduct hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</CalculateDotProduct>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<AddInterrupt hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</AddInterrupt>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Sequence>
												</DistanceCondition>
											</IfCondition>
										</Sequence>
									</AtomicDecorator>
								</IfGate>
							</SuppressFailure>
						</Loop>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="playerUnderHorse_horse" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextPreset preset="switch_unresponsive" target="">
					<EntityContext context="combat_disabledAsTarget" target="">
						<JoinedAnimationAction requiresMovement="true" lockContext="$__object.id" lockName="&apos;utokNaNebakov_playerUnderHorse_anim&apos;" lockCount="3" timeout="&apos;-1&apos;" fragment="&apos;Quest_UnderHorseRelease&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;underHorseRelease&apos;" />
					</EntityContext>
				</EntityContextPreset>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<OutputBreakpoints />
							</JoinedAnimationAction>
						</EntityContext>
					</EntityContextPreset>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="komoriHorseRelease_capon" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="npcsDialog" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="combat_disabledAsTarget" target="">
					<EntityContext context="crime_ignoreCorpses" target="">
						<EntityContextPreset preset="switch_unresponsive" target="">
							<Parallel successMode="Any" failureMode="Any">
								<Sequence>
									<SuppressFailure>
										<Function_speech_schedulerMonolog alias="&apos;utokNaNebakov_valley_caponSeesKomori&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="88617160" />
									</SuppressFailure>
									<SuppressFailure>
										<Function_speech_schedulerPolylog_receiver aliasOrMetarole="&apos;utokNaNebakov_valley_caponKomoriIngameStart&apos;" initiator="$npcsDialog[0]" numberOfParticipants="2" useIngameDialogPoseAndAnimations="false" nodeLabel="52019905" />
									</SuppressFailure>
									<SuppressFailure>
										<Function_speech_dialogInitiator alias="&apos;utokNaNebakov_valley_playerCaponChatAboutKomori&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="12324332" />
									</SuppressFailure>
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
								<Sequence>
									<MoveParamsDecorator speed="Run" pathFindingParams="" doorClosingPolicy="Automatic">
										<JoinedAnimationAction requiresMovement="true" lockContext="$__object.id" lockName="&apos;utokNaNebakov_komoriUnderHorse&apos;" lockCount="3" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="&apos;Quest_UnderHorseReleaseMaster&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;underHorseRelease&apos;" allowTorchForPlayer="false" />
									</MoveParamsDecorator>
									<Callback_empty EventName="&apos;OnFinished&apos;" />
								</Sequence>
							</Parallel>
						</EntityContextPreset>
					</EntityContext>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer>
			<Wait duration="&apos;7s&apos;" timeType="GameTime" doFail="false" variation="" />
			<SuppressFailure>
				<Function_speech_schedulerPolylog_receiver aliasOrMetarole="&apos;utokNaNebakov_valley_caponKomoriIngameEnd&apos;" initiator="$npcsDialog[0]" numberOfParticipants="2" useIngameDialogPoseAndAnimations="false" nodeLabel="64143578" />
			</SuppressFailure>
		</ForestContainer>
		<EditorData Signature="utokNaNebakov_komoriUnderHorse" EventSet="endNotification">
			<Variables>
				<Variable name="npcsDialog" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-20" editorPosY="-10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</SuppressFailure>
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerPolylog_receiver>
										</SuppressFailure>
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_dialogInitiator>
										</SuppressFailure>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</JoinedAnimationAction>
										</MoveParamsDecorator>
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
									</Sequence>
								</Parallel>
							</EntityContextPreset>
						</EntityContext>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest>
				<Wait editorPosX="950" editorPosY="-520" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Wait>
				<SuppressFailure editorPosX="1180" editorPosY="-570" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_speech_schedulerPolylog_receiver>
				</SuppressFailure>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="komoriHorseRelease_komori" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="npcsDialog" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="combat_disabledAsTarget" target="">
					<EntityContext context="crime_ignoreCorpses" target="">
						<EntityContextPreset preset="switch_unresponsive" target="">
							<Parallel successMode="Any" failureMode="Any">
								<Sequence>
									<SuppressFailure>
										<Function_speech_schedulerPolylog_initiator alias="&apos;utokNaNebakov_valley_caponKomoriIngameStart&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" areaForPlayer="" context="" customParameters="" metarole="" participants="$npcsDialog" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="58938121" />
									</SuppressFailure>
									<SuppressFailure>
										<Function_speech_schedulerPolylog_initiator alias="&apos;utokNaNebakov_valley_caponKomoriIngameEnd&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" areaForPlayer="" context="" customParameters="" metarole="" participants="$npcsDialog" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="73708234" />
									</SuppressFailure>
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
								<Sequence>
									<UnstanceElement unstance="Quest_UnderHorseIdle" locationObject="$__object.id" slaveObject="" enabled="true">
										<JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="&apos;utokNaNebakov_komoriUnderHorse&apos;" lockCount="3" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="&apos;Quest_UnderHorseReleaseSlave&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;underHorseRelease&apos;" allowTorchForPlayer="false" />
									</UnstanceElement>
									<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="5.000000" High="5.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
										<Parallel successMode="Any" failureMode="Any">
											<Sequence>
												<UnstanceElement unstance="QuestHunterInjuryIdleLie" locationObject="$__object.id" slaveObject="" enabled="true">
													<Sequence>
														<UrgencyDecorator Urgency="Slow">
															<SuppressFailure>
																<AnimationAction fragment="&apos;Quest_InjuryLaydownGetUpDeath&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
															</SuppressFailure>
														</UrgencyDecorator>
														<AddBuff SoulWUID="$this.id" BuffGUID="&apos;ed59af7c-6d7e-4454-8ffb-f16935bf5130&apos;" />
														<KillNPC KillTarget="$this.id" Scream="false" />
													</Sequence>
												</UnstanceElement>
											</Sequence>
											<Sequence>
												<SuppressFailure>
													<Function_speech_schedulerMonolog alias="&apos;utokNaNebakov_valley_komoriReleased&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="58574749" />
												</SuppressFailure>
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</Parallel>
									</DistanceGate>
								</Sequence>
							</Parallel>
						</EntityContextPreset>
					</EntityContext>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer>
			<Wait duration="&apos;7s&apos;" timeType="GameTime" doFail="false" variation="" />
		</ForestContainer>
		<EditorData Signature="utokNaNebakov_komoriUnderHorse" EventSet="">
			<Variables>
				<Variable name="npcsDialog" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerPolylog_initiator>
										</SuppressFailure>
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerPolylog_initiator>
										</SuppressFailure>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</JoinedAnimationAction>
										</UnstanceElement>
										<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</AnimationAction>
																</SuppressFailure>
															</UrgencyDecorator>
															<AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</AddBuff>
															<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</KillNPC>
														</Sequence>
													</UnstanceElement>
												</Sequence>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_speech_schedulerMonolog>
													</SuppressFailure>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</Parallel>
										</DistanceGate>
									</Sequence>
								</Parallel>
							</EntityContextPreset>
						</EntityContext>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest>
				<Wait editorPosX="920" editorPosY="-490" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Wait>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="komoriHorseRelease_horse" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="combat_disabledAsTarget" target="">
					<EntityContext context="crime_ignoreCorpses" target="">
						<EntityContextPreset preset="switch_unresponsive" target="">
							<Sequence>
								<UnstanceElement unstance="Quest_LieDownHorseLoop" locationObject="$__object.id" slaveObject="">
									<JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="&apos;utokNaNebakov_komoriUnderHorse&apos;" lockCount="3" timeout="&apos;-1&apos;" fragment="&apos;Quest_UnderHorseReleaseSlave&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;underHorseRelease&apos;" />
								</UnstanceElement>
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</EntityContextPreset>
					</EntityContext>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<OutputBreakpoints />
										</JoinedAnimationAction>
									</UnstanceElement>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</EntityContextPreset>
						</EntityContext>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="caponCrouching" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="" stance="crouch" allowAny="false" enabled="true">
					<Sequence>
						<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExactMove>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="anim_soloDyingSoldier_bulletDeath" is_function="0">
		<Variables>
			<Variable name="goto" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="guardMode" type="_bool" values="true" isPersistent="0" form="single" />
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
			<Variable name="shootSound" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="wait" type="_bool" values="true" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<SuppressFailure>
						<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;goto&apos;" prune="true" negprune="unknown" Parent="" Child="$goto" Data="" />
						</GraphSearch>
					</SuppressFailure>
					<SuppressFailure>
						<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;shootSound&apos;" prune="true" negprune="unknown" Parent="" Child="$shootSound" Data="" />
						</GraphSearch>
					</SuppressFailure>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<EntityContextPreset preset="switch_unresponsive" target="">
					<EntityContext context="combat_disabledAsTarget" target="">
						<EntityContext context="combat_ignoreMurdered" target="">
							<EntityContext context="combat_actorSupressHitreactionAnimation" target="">
								<Sequence>
									<WaitAction />
									<DisablePerception Perceptor="true" Perceptible="true" ToWhom="" />
									<Parallel successMode="Any" failureMode="Any">
										<IfGate atomic="false" condition="$wait == false" RunLogic="Halt">
											<Success />
										</IfGate>
										<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
											<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.Unpleasant">
												<Success />
											</IfCondition>
										</ProcessMessage>
									</Parallel>
									<Sequence>
										<Expression expressions="$guardMode = false" />
										<IfCondition failOnCondition="false" condition="$goto ~= $__null">
											<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="1.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$goto" destinationSpecification2="" destinationSpecification3="" speed="SlowDash" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
										</IfCondition>
										<IfCondition failOnCondition="false" condition="$shootSound ~= $__null">
											<ExecuteSoundTrigger entity="$shootSound" triggerName="&apos;q_M09_pistala_shot&apos;" stop="false" />
										</IfCondition>
										<SuppressFailure>
											<RandomGate opensWithChance="0.500000" saveVersion="2">
												<Then canSkip="1">
													<AnimationAction fragment="&apos;HitDeath&apos;" tags="&apos;so_forward,bullet,death&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
												</Then>
												<Else canSkip="1">
													<AnimationAction fragment="&apos;HitDeath&apos;" tags="&apos;so_back,bullet,death&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
												</Else>
											</RandomGate>
										</SuppressFailure>
										<KillNPC KillTarget="$this.id" Scream="false" />
									</Sequence>
								</Sequence>
							</EntityContext>
						</EntityContext>
					</EntityContext>
				</EntityContextPreset>
			</Behavior>
		</Root>
		<ForestContainer>
			<MeleeGuardAutomationDecorator GuardMode="forceEnable" active="$guardMode" />
		</ForestContainer>
		<EditorData Signature="utokNaNebakov_killingAnimation_bullet" EventSet="">
			<Variables>
				<Variable name="goto" comment="" />
				<Variable name="guardMode" comment="" />
				<Variable name="hitReaction" comment="" />
				<Variable name="shootSound" comment="" />
				<Variable name="wait" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
						</SuppressFailure>
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
						</SuppressFailure>
					</Sequence>
				</OnInit>
				<Behavior>
					<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
										<DisablePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</DisablePerception>
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Success>
											</IfGate>
											<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</IfCondition>
											</ProcessMessage>
										</Parallel>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Move>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ExecuteSoundTrigger hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ExecuteSoundTrigger>
											</IfCondition>
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</AnimationAction>
													</Then>
													<Else>
														<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</AnimationAction>
													</Else>
												</RandomGate>
											</SuppressFailure>
											<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</KillNPC>
										</Sequence>
									</Sequence>
								</EntityContext>
							</EntityContext>
						</EntityContext>
					</EntityContextPreset>
				</Behavior>
			</Root>
			<Forest>
				<MeleeGuardAutomationDecorator editorPosX="1170" editorPosY="-290" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</MeleeGuardAutomationDecorator>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="player_drawWeapon" is_function="0">
		<Variables>
			<Variable name="left" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="right" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$right" allowAny="false" decisionLabel="battle_weapon" useDecision="true" saveVersion="2">
					<Search canSkip="1">
						<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$left" RightHand="$right" UseTorchWhenAppropriate="true" />
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<WaitAction />
							<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<EntityContextCheck context="combat_playerDrawOversized" target="" saveVersion="2">
					<Then canSkip="1">
						<DrawAction WeaponSet="Oversized" fullBody="false" tags="" />
					</Then>
					<Else canSkip="1">
						<DrawAction WeaponSet="Primary" fullBody="false" tags="" />
					</Else>
				</EntityContextCheck>
				<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
			</Sequence>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="left" comment="" />
				<Variable name="right" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetWeaponsFromWeaponSet>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantCallback_empty>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="570" editorPosY="440" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</DrawAction>
						</Then>
						<Else>
							<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</DrawAction>
						</Else>
					</EntityContextCheck>
					<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</InstantCallback_empty>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="player_draw" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="feast_drinkEatSetting" is_function="1">
		<Variables>
			<Variable name="beerSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="beerSlots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="beerSlotsData" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="hiddenBeerSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeerSlots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="hiddenBeerSlotsData" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="iterator" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="seatIterator" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="seats" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="seatsdata" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="soupSlots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="soupSlotsData" type="_string" values="" isPersistent="0" form="array" />
		</Variables>
		<Parameters>
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" requirementType="Out" />
			<Variable name="hiddenBeer" type="_wuid" values="" isPersistent="0" form="single" requirementType="Out" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="soupSlot" type="_wuid" values="" isPersistent="0" form="single" requirementType="Out" />
			<Variable name="tableInPub" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$tableInPub" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory,slot&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernSeat&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;tavernSeat&apos;" Quantifiers="ForAll" Parent="" Child="$seats" Data="$seatsdata" saveVersion="2" />
					</GraphSearch>
					<GraphSearch Origin="$tableInPub" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernBeer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;tavernBeer&apos;" Quantifiers="ForAll" Parent="" Child="$beerSlots" Data="$beerSlotsData" saveVersion="2" />
					</GraphSearch>
					<GraphSearch Origin="$tableInPub" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;hiddenTavernBeer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;hiddenTavernBeer&apos;" Quantifiers="ForAll" Parent="" Child="$hiddenBeerSlots" Data="$hiddenBeerSlotsData" saveVersion="2" />
					</GraphSearch>
					<GraphSearch Origin="$tableInPub" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernSoup&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;tavernSoup&apos;" Quantifiers="ForAll" Parent="" Child="$soupSlots" Data="$soupSlotsData" saveVersion="2" />
					</GraphSearch>
					<ForEach startIndex="0" step="1" array="$seats" iterator="$iterator" value="$seatIterator" break="">
						<IfCondition failOnCondition="false" condition="$seatIterator == $seat">
							<Expression expressions="$customerParams.Position = $seatsdata[$iterator] &#10;$customerParams.seat = $seat" />
						</IfCondition>
					</ForEach>
					<ForEach startIndex="0" step="1" array="$soupSlots" iterator="$iterator" value="$soupSlot" break="">
						<IfCondition failOnCondition="false" condition="$soupSlotsData[$iterator] == $customerParams.Position">
							<Expression expressions="$customerParams.soup = $soupSlot" />
						</IfCondition>
					</ForEach>
					<ForEach startIndex="0" step="1" array="$hiddenBeerSlots" iterator="$iterator" value="$hiddenBeerSlot" break="">
						<IfCondition failOnCondition="false" condition="$hiddenBeerSlotsData[$iterator] == $customerParams.Position">
							<Expression expressions="$hiddenBeer = $hiddenBeerSlot" />
						</IfCondition>
					</ForEach>
					<ForEach startIndex="0" step="1" array="$beerSlots" iterator="$iterator" value="$beerSlot" break="">
						<IfCondition failOnCondition="false" condition="$beerSlotsData[$iterator] == $customerParams.Position">
							<Expression expressions="$customerParams.beer = $beerSlot" />
						</IfCondition>
					</ForEach>
					<ForEach startIndex="0" step="1" array="$hiddenBeerSlots" iterator="$iterator" value="$hiddenBeerSlot" break="">
						<IfCondition failOnCondition="false" condition="$hiddenBeerSlotsData[$iterator] == $customerParams.Position">
							<Expression expressions="$hiddenBeer = $hiddenBeerSlot" />
						</IfCondition>
					</ForEach>
					<GraphSearch Origin="$customerParams.soup" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;bowlSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$soupSlot" Data="" />
					</GraphSearch>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="beerSlot" comment="" />
				<Variable name="beerSlots" comment="" />
				<Variable name="beerSlotsData" comment="" />
				<Variable name="hiddenBeerSlot" comment="" />
				<Variable name="hiddenBeerSlots" comment="" />
				<Variable name="hiddenBeerSlotsData" comment="" />
				<Variable name="iterator" comment="" />
				<Variable name="seatIterator" comment="" />
				<Variable name="seats" comment="" />
				<Variable name="seatsdata" comment="" />
				<Variable name="soupSlots" comment="" />
				<Variable name="soupSlotsData" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="hiddenBeer" comment="" />
				<Variable name="seat" comment="" />
				<Variable name="soupSlot" comment="" />
				<Variable name="tableInPub" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="feast_drinkEat" is_function="1">
		<Variables>
			<Variable name="beer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="drinkChance" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="drinkCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="tag" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="dontCallWench" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="hiddenBeer" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="smartobject" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="soupSlot" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="table" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="tableAlign" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HasGenderCheck Gender="Male" SoulWUID="$this.id" FailSubtMissing="false" saveVersion="2">
					<Then canSkip="1">
						<HandContentElement hand="Right" item="$beer" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="tavern_stein" useDecision="false" enabled="true" saveVersion="2">
							<Search canSkip="1">
								<GetItemInSlot slot="$hiddenBeer" useHomeItem="true" item="$beer" />
							</Search>
							<Exec canSkip="1">
								<ItemSetAsideElement item="$beer" slot="$customerParams.beer" enabled="true">
									<Sequence>
										<WaitAction />
										<Wait duration="&apos;0ms&apos;" timeType="GameTime" doFail="false" variation="&apos;2000ms&apos;" />
										<IfElseCondition failOnCondition="false" condition="$dontCallWench == true" saveVersion="2">
											<Then canSkip="1">
												<Expression expressions="$drinkChance = 1" />
											</Then>
											<Else canSkip="1">
												<Expression expressions="$drinkChance = 0.5" />
											</Else>
										</IfElseCondition>
										<RandomGate opensWithChance="$drinkChance" saveVersion="2">
											<Then canSkip="1">
												<Sequence>
													<GenerateRandomInteger lowerBoundary="1" upperBoundary="2" result="$drinkCount" />
													<Loop count="$drinkCount">
														<Sequence>
															<WaitAction />
															<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="&apos;5s&apos;" />
															<AnimationAction fragment="&apos;Guest_DrinkBeer&apos;" tags="" eventReferenceObject="$this.id" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false">
																<EventData_pickup Slot="$customerParams.beer" name="&apos;beer&apos;" />
																<EventData_place Slot="$customerParams.beer" name="&apos;beer&apos;" />
															</AnimationAction>
														</Sequence>
													</Loop>
												</Sequence>
											</Then>
											<Else canSkip="1">
												<SuppressFailure>
													<AddLinkElement from="$smartobject" to="$this.id" tag="&apos;tavernGuest&apos;" data="" enabled="true">
														<Sequence>
															<IfElseCondition failOnCondition="false" condition="$customerParams.Position == &apos;B&apos;" saveVersion="2">
																<Then canSkip="1">
																	<Expression expressions="$tag = &apos;fillDistClose,fillDistFrontRight&apos;" />
																</Then>
																<Else canSkip="1">
																	<Expression expressions="$tag = &apos;fillDistClose,fillDistFrontLeft&apos;" />
																</Else>
															</IfElseCondition>
															<AnimationAction fragment="&apos;Guest_Call&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
															<SuppressFailure>
																<EntityContext context="tavern_customer" target="">
																	<JoinedAnimationAction requiresMovement="false" lockContext="$tableAlign" lockName="&apos;M09_sync&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="&apos;Guest_ServeBeer&apos;" tags="$tag" eventReferenceObject="$this.id" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false">
																		<EventData_pickup Slot="$customerParams.beer" name="&apos;beer&apos;" />
																		<EventData_place Slot="$customerParams.beer" name="&apos;beer&apos;" />
																	</JoinedAnimationAction>
																</EntityContext>
															</SuppressFailure>
														</Sequence>
													</AddLinkElement>
												</SuppressFailure>
											</Else>
										</RandomGate>
										<WaitAction />
									</Sequence>
								</ItemSetAsideElement>
							</Exec>
						</HandContentElement>
					</Then>
					<Else canSkip="1">
						<SuppressFailure>
							<Sequence>
								<WaitAction />
								<Wait duration="&apos;0ms&apos;" timeType="GameTime" doFail="false" variation="&apos;1500ms&apos;" />
								<GetItemInSlot slot="$hiddenBeer" useHomeItem="true" item="$beer" />
								<GraphSearch Origin="$customerParams.soup" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;bowlSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$soupSlot" Data="" />
								</GraphSearch>
								<IfElseCondition failOnCondition="false" condition="$customerParams.Position == &apos;A&apos; | $customerParams.Position == &apos;B&apos;" saveVersion="2">
									<Then canSkip="1">
										<UnstanceAction unstance="quest_M09_eatingMashSitting_left" locationObject="" slaveObject="">
											<EventData_phaseitem Slot="$soupSlot" name="&apos;bowlSlot&apos;" />
											<EventData_pickup Slot="$customerParams.soup" name="&apos;bowlFarIn&apos;" />
											<EventData_place Slot="$soupSlot" name="&apos;bowlCloseIn&apos;" />
											<EventData_pickup Slot="$soupSlot" name="&apos;bowlCloseOut&apos;" />
											<EventData_place Slot="$customerParams.soup" name="&apos;bowlFarOut&apos;" />
										</UnstanceAction>
									</Then>
									<Else canSkip="1">
										<UnstanceAction unstance="quest_M09_eatingMashSitting_right" locationObject="" slaveObject="">
											<EventData_phaseitem Slot="$soupSlot" name="&apos;bowlSlot&apos;" />
											<EventData_pickup Slot="$customerParams.soup" name="&apos;bowlFarIn&apos;" />
											<EventData_place Slot="$soupSlot" name="&apos;bowlCloseIn&apos;" />
											<EventData_pickup Slot="$soupSlot" name="&apos;bowlCloseOut&apos;" />
											<EventData_place Slot="$customerParams.soup" name="&apos;bowlFarOut&apos;" />
										</UnstanceAction>
									</Else>
								</IfElseCondition>
								<Wait duration="&apos;7s&apos;" timeType="GameTime" doFail="false" variation="" />
								<WaitAction />
							</Sequence>
						</SuppressFailure>
					</Else>
				</HasGenderCheck>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="beer" comment="" />
				<Variable name="drinkChance" comment="" />
				<Variable name="drinkCount" comment="" />
				<Variable name="tag" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="dontCallWench" comment="" />
				<Variable name="hiddenBeer" comment="" />
				<Variable name="smartobject" comment="" />
				<Variable name="soupSlot" comment="" />
				<Variable name="table" comment="" />
				<Variable name="tableAlign" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Search>
									<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetItemInSlot>
								</Search>
								<Exec>
									<ItemSetAsideElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</WaitAction>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
											<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Then>
												<Else>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Else>
											</IfElseCondition>
											<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GenerateRandomInteger hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</GenerateRandomInteger>
														<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</WaitAction>
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
																<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</EventData_pickup>
																	<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</EventData_place>
																</AnimationAction>
															</Sequence>
														</Loop>
													</Sequence>
												</Then>
												<Else>
													<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Then>
																		<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Expression>
																	</Then>
																	<Else>
																		<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Expression>
																	</Else>
																</IfElseCondition>
																<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</AnimationAction>
																<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</EventData_pickup>
																			<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</EventData_place>
																		</JoinedAnimationAction>
																	</EntityContext>
																</SuppressFailure>
															</Sequence>
														</AddLinkElement>
													</SuppressFailure>
												</Else>
											</RandomGate>
											<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</WaitAction>
										</Sequence>
									</ItemSetAsideElement>
								</Exec>
							</HandContentElement>
						</Then>
						<Else>
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetItemInSlot>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<EventData_phaseitem hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</EventData_phaseitem>
												<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</EventData_pickup>
												<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</EventData_place>
												<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</EventData_pickup>
												<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</EventData_place>
											</UnstanceAction>
										</Then>
										<Else>
											<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<EventData_phaseitem hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</EventData_phaseitem>
												<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</EventData_pickup>
												<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</EventData_place>
												<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</EventData_pickup>
												<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</EventData_place>
											</UnstanceAction>
										</Else>
									</IfElseCondition>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
								</Sequence>
							</SuppressFailure>
						</Else>
					</HasGenderCheck>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="caponWaitingUnderRockJump" is_function="0">
		<Variables>
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="goto" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="waitDelay" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="false" />
					<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="Label1" useDecision="false" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<Success />
						</Search>
						<Exec canSkip="1">
							<HandContentElement hand="Left" item="$leftHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="Label1" useDecision="false" enabled="true" saveVersion="2">
								<Search canSkip="1">
									<Success />
								</Search>
								<Exec canSkip="1">
									<Sequence>
										<WaitAction />
										<ExactMove directionType="AlignWithEntity" directionSpecification="$goto" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$goto" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
										<ForceLook LookTarget="$__player" DisableVariations="false">
											<Parallel successMode="Any" failureMode="Any">
												<Function_monologRepeat alias="&apos;utokNaNebakov_valley_caponsBarksUnderJump&apos;" cooldown="&apos;6s&apos;" repeat="-1" nodeLabel="76464890" />
												<Wait duration="$waitDelay" timeType="GameTime" doFail="false" variation="" />
											</Parallel>
										</ForceLook>
										<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
									</Sequence>
								</Exec>
							</HandContentElement>
						</Exec>
					</HandContentElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<UnstanceAction unstance="Kneel" locationObject="" slaveObject="" />
		</ForestContainer>
		<EditorData Signature="utokNaNebakov_caponWaitingUnderRockJump" EventSet="endNotification">
			<Variables>
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="goto" comment="" />
				<Variable name="waitDelay" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-90" editorPosY="-170" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetWeaponsFromWeaponSet>
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Search>
							<Exec>
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Search>
									<Exec>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</WaitAction>
											<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</ExactMove>
											<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_monologRepeat hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_monologRepeat>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Parallel>
											</ForceLook>
											<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</InstantCallback_empty>
										</Sequence>
									</Exec>
								</HandContentElement>
							</Exec>
						</HandContentElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<UnstanceAction editorPosX="-90" editorPosY="180" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</UnstanceAction>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="serveBeer" is_function="0">
		<Variables>
			<Variable name="beerSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="guest" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="guestBeer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="serveTag" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="staffSpot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="state" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="stein" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="steinLink" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="table" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="waitSpot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<Expression expressions="$state = &apos;waitingToServe&apos;" />
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;stein&apos;" prune="true" negprune="unknown" Parent="" Child="$steinLink" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;waitSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$waitSpot" Data="" />
					</GraphSearch>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<Loop count="-1">
					<ContinuousSwitch>
						<IfCondition failOnCondition="false" condition="$state == &apos;waitingToServe&apos;">
							<Parallel successMode="Any" failureMode="Any">
								<LinkGate from="$__object.id" to="" tag="&apos;tavernGuest&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
									<AtomicDecorator>
										<Sequence>
											<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;tavernGuest&apos;" prune="true" negprune="unknown" Parent="" Child="$guest" Data="" />
											</GraphSearch>
											<Expression expressions="$state = &apos;serveBeer&apos;" />
										</Sequence>
									</AtomicDecorator>
								</LinkGate>
								<LinkGate from="$__object.id" to="" tag="&apos;tavernGuest&apos;" amount="AtLeastOne" presence="NotThere" RunLogic="KeepRunning">
									<Sequence>
										<ExactMove directionType="AlignWithEntity" directionSpecification="$waitSpot" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$waitSpot" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</LinkGate>
							</Parallel>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$state == &apos;serveBeer&apos;">
							<SuppressFailure>
								<HandContentElement hand="Right" item="$stein" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="tavern_stein" useDecision="true" enabled="true" saveVersion="2">
									<Search canSkip="1">
										<Function_findItemOnSlot linkName="&apos;steinSlot&apos;" npc="$this.id" searchOrigin="$steinLink" item="$stein" nodeLabel="51118744" />
									</Search>
									<Exec canSkip="1">
										<Sequence>
											<WaitAction />
											<GraphSearch Origin="$guest" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;tavernSpecialAlignSO&apos;" prune="true" negprune="unknown" Parent="" Child="$table" Data="" />
											</GraphSearch>
											<GraphSearch Origin="$guest" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;guestBeer&apos;" prune="true" negprune="unknown" Parent="" Child="$guestBeer" Data="" />
											</GraphSearch>
											<GraphSearch Origin="$table" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;staffSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$staffSpot" Data="" />
											</GraphSearch>
											<GraphSearch Origin="$staffSpot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;beerSlotLeft&apos;" prune="true" negprune="unknown" Parent="" Child="$beerSlot" Data="" />
											</GraphSearch>
											<IfElseCondition failOnCondition="false" condition="$guestBeer == $beerSlot" saveVersion="2">
												<Then canSkip="1">
													<Expression expressions="$serveTag = &apos;fillDistClose,fillDistFrontLeft&apos;" />
												</Then>
												<Else canSkip="1">
													<Expression expressions="$serveTag = &apos;fillDistClose,fillDistFrontRight&apos;" />
												</Else>
											</IfElseCondition>
											<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
												<Child canSkip="1">
													<JoinedAnimationAction requiresMovement="true" lockContext="$table" lockName="&apos;M09_sync&apos;" lockCount="2" timeout="&apos;10s&apos;" ignoreOthersLeaving="false" fragment="&apos;Bartender_ServeBeer&apos;" tags="$serveTag" eventReferenceObject="$__object.id" alignObject="$table" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
												</Child>
												<OnSuccess canSkip="1">
													<Expression expressions="$state = &apos;waitingToServe&apos;" />
												</OnSuccess>
											</FuseBox>
										</Sequence>
									</Exec>
								</HandContentElement>
							</SuppressFailure>
						</IfCondition>
					</ContinuousSwitch>
				</Loop>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="beerSlot" comment="" />
				<Variable name="guest" comment="" />
				<Variable name="guestBeer" comment="" />
				<Variable name="serveTag" comment="" />
				<Variable name="staffSpot" comment="" />
				<Variable name="state" comment="" />
				<Variable name="stein" comment="" />
				<Variable name="steinLink" comment="" />
				<Variable name="table" comment="" />
				<Variable name="waitSpot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
					</Sequence>
				</OnInit>
				<Behavior>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
												</GraphSearch>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Sequence>
										</AtomicDecorator>
									</LinkGate>
									<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</ExactMove>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</LinkGate>
								</Parallel>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Search>
											<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_findItemOnSlot>
										</Search>
										<Exec>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
												</GraphSearch>
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
												</GraphSearch>
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
												</GraphSearch>
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
												</GraphSearch>
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Then>
													<Else>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Else>
												</IfElseCondition>
												<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Child>
														<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</JoinedAnimationAction>
													</Child>
													<OnSuccess>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</OnSuccess>
												</FuseBox>
											</Sequence>
										</Exec>
									</HandContentElement>
								</SuppressFailure>
							</IfCondition>
						</ContinuousSwitch>
					</Loop>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="waitWithShield" is_function="0">
		<Variables>
			<Variable name="break" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="point" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="points" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="crime_keepStateAndItems" enabled="true">
					<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
						<Child canSkip="1">
							<Sequence>
								<AtomicDecorator>
									<Selector>
										<Sequence>
											<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;waitPoint&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
												<Nodalyzer Quantifiers="ForAll" Parent="" Child="$points" saveVersion="2">
													<Child0 canSkip="1">
														<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
													</Child0>
												</Nodalyzer>
											</GraphSearch>
											<ForEach startIndex="0" step="1" array="$points" iterator="" value="$point" break="$break">
												<Selector>
													<GraphSearch Origin="$point" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
														<AnyLinkFilter Source="Child" prune="false" negprune="unknown" Parent="" Child="" />
													</GraphSearch>
													<Sequence>
														<Expression expressions="$data = $point &#10;$break = true" />
														<AddLink From="$point" To="$__object.id" Tag="&apos;bench&apos;" Data="" LinkOpHandleMode="Error" />
													</Sequence>
												</Selector>
											</ForEach>
										</Sequence>
										<Expression expressions="$data = $this.id &#10;$point = $this.id" />
									</Selector>
								</AtomicDecorator>
								<IsWeaponDrawn who="" WeaponSet="Primary" saveVersion="2">
									<Then canSkip="1">
										<Success />
									</Then>
									<Else canSkip="1">
										<DrawAction WeaponSet="Primary" fullBody="false" tags="" useSelectedWeaponSet="false" />
									</Else>
								</IsWeaponDrawn>
								<Sequence>
									<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									<Loop count="-1">
										<Sequence>
											<UnstanceAction unstance="BattleKneelShieldCover" locationObject="" slaveObject="" />
											<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
									</Loop>
								</Sequence>
							</Sequence>
						</Child>
						<OnFail canSkip="1">
							<RemoveLink From="$point" To="$__object.id" Tag="&apos;bench&apos;" LinkOpHandleMode="Error" />
						</OnFail>
					</FuseBox>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="break" comment="" />
				<Variable name="data" comment="" />
				<Variable name="point" comment="" />
				<Variable name="points" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
													<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Child0>
															<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</RangeSorter>
														</Child0>
													</Nodalyzer>
												</GraphSearch>
												<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</AnyLinkFilter>
														</GraphSearch>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
															<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</AddLink>
														</Sequence>
													</Selector>
												</ForEach>
											</Sequence>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Selector>
									</AtomicDecorator>
									<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Then>
										<Else>
											<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</DrawAction>
										</Else>
									</IsWeaponDrawn>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ExactMove>
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</UnstanceAction>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</Loop>
									</Sequence>
								</Sequence>
							</Child>
							<OnFail>
								<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</RemoveLink>
							</OnFail>
						</FuseBox>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_drawWeapon" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<DrawAction WeaponSet="Primary" fullBody="false" tags="" useSelectedWeaponSet="false" />
					<MeleeGuardAutomationDecorator GuardMode="forceEnable" active="true">
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</MeleeGuardAutomationDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="10" editorPosY="20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</DrawAction>
						<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</MeleeGuardAutomationDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="katerinaHoldingWine" is_function="0">
		<Variables>
			<Variable name="stein" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$stein" allowAny="false" decisionLabel="tavern_stein" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<Function_findItemOnSlot linkName="&apos;stein&apos;" npc="$this.id" searchOrigin="$__object.id" item="$stein" nodeLabel="70743856" />
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<WaitAction />
							<AnimationAction fragment="&apos;MotionIdle&apos;" tags="&apos;r_stein&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
							<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="stein" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_findItemOnSlot>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</AnimationAction>
								<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantCallback_empty>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="capon_fight" is_function="0">
		<Variables>
			<Variable name="caponPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="caponRot" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="dirToEnemy" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="dotProduct" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="enemies" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="enemyPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="enemySoldier" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="foundEnemy" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="enemySO" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="goto" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<SyncWithTrackview NPC="$this.id" />
					<Parallel successMode="Any" failureMode="Any">
						<Loop count="-1">
							<Sequence>
								<SuppressFailure>
									<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
										<Child canSkip="1">
											<Sequence>
												<GraphSearch Origin="$enemySO" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;battleEntity&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
													<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<RangeFilter min="0.000000" max="10.000000" point="$this.id" excludeRef="true" Source="Child" prune="true" negprune="unknown" Parent="" Child="$foundEnemy" />
												</GraphSearch>
												<GetSpatialInfo In="$this.id" Out="$caponPos" What="Position" />
												<GetSpatialInfo In="$goto" Out="$enemyPos" What="Position" />
												<Expression expressions="$dirToEnemy.x = $enemyPos.x - $caponPos.x &#10;$dirToEnemy.y = $enemyPos.y - $caponPos.y &#10;$dirToEnemy.z = $enemyPos.z - $caponPos.z" />
												<NormalizeVector vector="$dirToEnemy" />
												<GetSpatialInfo In="$this.id" Out="$caponRot" What="Orientation" />
												<CalculateDotProduct vector1="$dirToEnemy" vector2="$caponRot" result="$dotProduct" />
												<IfCondition failOnCondition="false" condition="$dotProduct &lt; 0.2">
													<Fail />
												</IfCondition>
											</Sequence>
										</Child>
										<OnSuccess canSkip="1">
											<Expression expressions="$enemySoldier = $foundEnemy" />
										</OnSuccess>
									</FuseBox>
								</SuppressFailure>
								<Wait duration="&apos;1500ms&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</Loop>
						<Loop count="-1">
							<IfGate atomic="false" condition="$enemySoldier ~= $__null" RunLogic="Halt">
								<Parallel successMode="Any" failureMode="Any">
									<DeadUnconsciousGate Who="$enemySoldier" State="Any" Negation="false" RunLogic="KeepRunning">
										<Expression expressions="$enemySoldier = $__null" />
									</DeadUnconsciousGate>
									<MeleeOffenseAutomationDecorator active="true">
										<MeleeDefenseAutomationDecorator active="true">
											<MeleeGuardAutomationDecorator GuardMode="automate" active="true">
												<WeaponAutomationDecorator WeaponChange="none" active="true">
													<CombatFollowerDecorator ProbablisticDrivenSweetSpot="true" RPGSweetSpotArcDriver="true" active="true">
														<MoveParamsDecorator speed="Run" pathFindingParams="" doorClosingPolicy="LeaveOpened">
															<CombatAction TargetNPC="$enemySoldier" RelationOverride="None" />
														</MoveParamsDecorator>
													</CombatFollowerDecorator>
												</WeaponAutomationDecorator>
											</MeleeGuardAutomationDecorator>
										</MeleeDefenseAutomationDecorator>
									</MeleeOffenseAutomationDecorator>
								</Parallel>
							</IfGate>
						</Loop>
						<Loop count="-1">
							<IfGate atomic="false" condition="$enemySoldier == $__null" RunLogic="Halt">
								<Sequence>
									<Function_moveWithWeapon destination="$goto" exactMove="false" speed="&apos;Run&apos;" successDistance="0.000000" weaponSlot="&apos;Primary&apos;" nodeLabel="29811855" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</IfGate>
						</Loop>
					</Parallel>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Nodalyzer Quantifiers="Exists" Parent="" Child="$enemies" saveVersion="2">
				<Child0 canSkip="1">
					<RangeSorter point="$enemies" SortOrder="Descending" Source="Child" />
				</Child0>
			</Nodalyzer>
		</ForestContainer>
		<EditorData Signature="utokNaNebakov_caponFight" EventSet="">
			<Variables>
				<Variable name="caponPos" comment="" />
				<Variable name="caponRot" comment="" />
				<Variable name="dirToEnemy" comment="" />
				<Variable name="dotProduct" comment="" />
				<Variable name="enemies" comment="" />
				<Variable name="enemyPos" comment="" />
				<Variable name="enemySoldier" comment="" />
				<Variable name="foundEnemy" comment="" />
				<Variable name="enemySO" comment="" />
				<Variable name="goto" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SyncWithTrackview hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SyncWithTrackview>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
														<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</SoulIsAliveFilter>
														<RangeFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</RangeFilter>
													</GraphSearch>
													<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetSpatialInfo>
													<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetSpatialInfo>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<NormalizeVector hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</NormalizeVector>
													<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetSpatialInfo>
													<CalculateDotProduct hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</CalculateDotProduct>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Fail>
													</IfCondition>
												</Sequence>
											</Child>
											<OnSuccess>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</OnSuccess>
										</FuseBox>
									</SuppressFailure>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Loop>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</DeadUnconsciousGate>
										<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<MeleeDefenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<CombatFollowerDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</CombatAction>
															</MoveParamsDecorator>
														</CombatFollowerDecorator>
													</WeaponAutomationDecorator>
												</MeleeGuardAutomationDecorator>
											</MeleeDefenseAutomationDecorator>
										</MeleeOffenseAutomationDecorator>
									</Parallel>
								</IfGate>
							</Loop>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_moveWithWeapon hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_moveWithWeapon>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</IfGate>
							</Loop>
						</Parallel>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Nodalyzer editorPosX="2120" editorPosY="-860" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Child0>
						<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</RangeSorter>
					</Child0>
				</Nodalyzer>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="feast_drinkEat_sit" is_function="1">
		<Variables>
			<Variable name="beer" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="hiddenBeer" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HasGenderCheck Gender="Male" SoulWUID="$this.id" FailSubtMissing="false" saveVersion="2">
					<Then canSkip="1">
						<HandContentElement hand="Right" item="$beer" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="tavern_stein" useDecision="false" enabled="true" saveVersion="2">
							<Search canSkip="1">
								<GetItemInSlot slot="$hiddenBeer" useHomeItem="true" item="$beer" />
							</Search>
							<Exec canSkip="1">
								<ItemSetAsideElement item="$beer" slot="$customerParams.beer" enabled="true">
									<WaitAction />
								</ItemSetAsideElement>
							</Exec>
						</HandContentElement>
					</Then>
					<Else canSkip="1">
						<WaitAction />
					</Else>
				</HasGenderCheck>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="beer" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="hiddenBeer" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Search>
									<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetItemInSlot>
								</Search>
								<Exec>
									<ItemSetAsideElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</ItemSetAsideElement>
								</Exec>
							</HandContentElement>
						</Then>
						<Else>
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
						</Else>
					</HasGenderCheck>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="womanCheering" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<IfElseCondition failOnCondition="false" condition="$string == &apos;TournamentCheersHappy&apos;" saveVersion="2">
						<Then canSkip="1">
							<UnstanceAction unstance="Quest_HappyCheering" locationObject="" slaveObject="" />
						</Then>
						<Else canSkip="1">
							<UnstanceAction unstance="Quest_SadCheering" locationObject="" slaveObject="" />
						</Else>
					</IfElseCondition>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
							</Then>
							<Else>
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
							</Else>
						</IfElseCondition>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>