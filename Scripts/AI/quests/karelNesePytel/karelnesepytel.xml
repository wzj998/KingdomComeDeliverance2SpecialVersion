<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="karel_barking" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="" stance="standing" allowAny="false" enabled="true">
					<Sequence>
						<WaitAction />
						<Parallel successMode="All" failureMode="Any">
							<Loop count="-1">
								<ForceLook LookTarget="$__player" DisableVariations="true">
									<Sequence>
										<Turn target="$__player" align="false" />
										<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</ForceLook>
							</Loop>
							<Loop count="-1">
								<Sequence>
									<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="20.000000" High="20.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
										<Parallel successMode="All" failureMode="Any">
											<AnimationAction fragment="&apos;GreetingsUpperBody&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
											<ActorStateCheck Who="$__player" State="carryCorpse" FailWithSubtreeMissing="false" saveVersion="2">
												<Then canSkip="1">
													<Function_speech_schedulerMonolog alias="&apos;karelNesePytel_barkovaniKarlaNaHracePokudNeseMrtvolu&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="23193647" />
												</Then>
												<Else canSkip="1">
													<Function_speech_schedulerMonolog alias="&apos;karelNesePytel_barkovaniKarlaNaHrace&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="97066433" />
												</Else>
											</ActorStateCheck>
										</Parallel>
									</DistanceGate>
									<Wait duration="&apos;7s&apos;" timeType="GameTime" doFail="false" variation="&apos;3s&apos;" />
								</Sequence>
							</Loop>
						</Parallel>
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Turn>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</ForceLook>
								</Loop>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</AnimationAction>
												<ActorStateCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_speech_schedulerMonolog>
													</Then>
													<Else>
														<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_speech_schedulerMonolog>
													</Else>
												</ActorStateCheck>
											</Parallel>
										</DistanceGate>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Loop>
							</Parallel>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="karel_waitingAtSacksOfCoal" is_function="0">
		<Variables>
			<Variable name="pickSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="sack" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;pickSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$pickSlot" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$sack" allowAny="false" decisionLabel="miller_carrySack" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<GetItemInSlot slot="$pickSlot" useHomeItem="true" item="$sack" />
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="2.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							<Loop count="-1">
								<Sequence>
									<Turn target="$__player" align="false" />
									<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</Loop>
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="pickSlot" comment="" />
				<Variable name="sack" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetItemInSlot>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Turn>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Loop>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="karel_goToCamp" is_function="0">
		<Variables>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="canMove" type="_bool" values="true" isPersistent="0" form="single" />
			<Variable name="maxDistance" type="_float" values="10" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Loop count="-1">
						<IfElseCondition failOnCondition="false" condition="$canMove" saveVersion="2">
							<Then canSkip="1">
								<IfGate atomic="false" condition="$canMove" RunLogic="Halt">
									<Parallel successMode="Any" failureMode="Any">
										<Sequence>
											<SuppressFailure>
												<Function_speech_dialogInitiator alias="&apos;karelNesePytel_dialogCestouSPytlem&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="19148172" />
											</SuppressFailure>
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
										<Sequence>
											<Function_karel_carringSack firstWuid="$__object.id" secondWuid="$tagpoint" nodeLabel="98130945" />
											<Callback_empty EventName="&apos;OnFinished&apos;" />
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
									</Parallel>
								</IfGate>
							</Then>
							<Else canSkip="1">
								<Sequence>
									<Turn target="$__player" align="false" />
									<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</Else>
						</IfElseCondition>
					</Loop>
					<Loop count="-1">
						<Sequence>
							<Parallel successMode="Any" failureMode="Any">
								<ActorStateBarrier Who="$__player" ToState="carryItem" NegateTo="true" RunLogic="KeepRunning">
									<Expression expressions="$alias = &apos;karelNesePytel_polozeniPytleMimoFinalniMistoUrceni&apos;" />
								</ActorStateBarrier>
								<ActorStateCheck Who="$__player" State="carryItem" FailWithSubtreeMissing="false" saveVersion="2">
									<Then canSkip="1">
										<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="$maxDistance" High="$maxDistance" Negation="true" OpenInMiddle="false" RunLogic="KeepRunning">
											<Expression expressions="$alias = &apos;karelNesePytel_barkovaniKarlaPriCekaniNaHrace&apos;" />
										</DistanceGate>
									</Then>
								</ActorStateCheck>
							</Parallel>
							<Sequence>
								<Expression expressions="$canMove = false" />
								<Function_speech_schedulerMonolog alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$__player" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="25509307" />
								<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</Sequence>
					</Loop>
					<Loop count="-1">
						<IfGate atomic="false" condition="$canMove == false" RunLogic="KeepRunning">
							<ActorStateBarrier Who="$__player" ToState="carryItem" NegateTo="false" RunLogic="Halt">
								<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="$maxDistance" High="$maxDistance" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
									<Expression expressions="$canMove = true" />
								</DistanceGate>
							</ActorStateBarrier>
						</IfGate>
					</Loop>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="endNotification">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="canMove" comment="" />
				<Variable name="maxDistance" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_speech_dialogInitiator>
												</SuppressFailure>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_karel_carringSack hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_karel_carringSack>
												<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Callback_empty>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</Parallel>
									</IfGate>
								</Then>
								<Else>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Turn>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Else>
							</IfElseCondition>
						</Loop>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</ActorStateBarrier>
									<ActorStateCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</DistanceGate>
										</Then>
									</ActorStateCheck>
								</Parallel>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Sequence>
						</Loop>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</DistanceGate>
								</ActorStateBarrier>
							</IfGate>
						</Loop>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="karel_carringSack" is_function="1">
		<Variables>
			<Variable name="pickSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="placeSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="sack" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="firstWuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="secondWuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$firstWuid" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;pickSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$pickSlot" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$sack" allowAny="false" decisionLabel="miller_carrySack" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<GetItemInSlot slot="$pickSlot" useHomeItem="true" item="$sack" />
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="2.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$secondWuid" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							<Callback_empty EventName="&apos;OnFinished&apos;" />
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuid_wuid" EventSet="endNotification">
			<Variables>
				<Variable name="pickSlot" comment="" />
				<Variable name="placeSlot" comment="" />
				<Variable name="sack" comment="" />
				<Variable name="firstWuid" comment="" />
				<Variable name="secondWuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetItemInSlot>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
								<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Callback_empty>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="karel_placeSack" is_function="0">
		<Variables>
			<Variable name="pickSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="placeSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="sack" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;pickSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$pickSlot" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;placeSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$placeSlot" Data="" />
					</GraphSearch>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$sack" allowAny="false" decisionLabel="miller_carrySack" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<GetItemInSlot slot="$pickSlot" useHomeItem="true" item="$sack" />
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<PlaceAction item="$sack" slot="$placeSlot" />
							<Callback_empty EventName="&apos;OnFinished&apos;" />
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="endNotification">
			<Variables>
				<Variable name="pickSlot" comment="" />
				<Variable name="placeSlot" comment="" />
				<Variable name="sack" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
					</Sequence>
				</OnInit>
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetItemInSlot>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<PlaceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</PlaceAction>
								<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Callback_empty>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>