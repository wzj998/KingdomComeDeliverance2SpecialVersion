<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="goToPray" is_function="0">
    <Variables>
      <Variable name="closestDistance" type="_float" values="999" isPersistent="0" form="single" />
      <Variable name="closestSoul" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="distance" type="_float" values="" isPersistent="0" form="single" />
      <Variable name="filteredSouls" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="shouldBreak" type="_bool" values="false" isPersistent="0" form="single" />
      <Variable name="soul" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="soulDistances" type="_wuid,_float" values="" isPersistent="0" form="custom_associative" />
      <Variable name="souls" type="_wuid" values="" isPersistent="0" form="array" />
    </Variables>
    <Parameters>
      <Variable name="wuidData" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="wuidDataArray" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <ForEach startIndex="0" step="1" array="$wuidDataArray" iterator="" value="$soul" break="">
            <IsDeadCheck SoulWUID="$soul" FailSubtMissing="false" saveVersion="2">
              <Then canSkip="1">
                <IsInsideArea Origin="$soul" Area="$wuidData" FailSubtMissing="false" saveVersion="2">
                  <Else canSkip="1">
                    <Sequence>
                      <MeasureDistance position1="$this.id" position2="$soul" mode="ThreeDimensions" result="$distance" />
                      <IfCondition failOnCondition="false" condition="$distance &lt; $closestDistance">
                        <Expression expressions="$closestSoul = $soul &#10;$closestDistance = $distance" />
                      </IfCondition>
                    </Sequence>
                  </Else>
                </IsInsideArea>
              </Then>
            </IsDeadCheck>
          </ForEach>
          <DistanceCondition Origin="$this.id" ReferencePt="$closestSoul" Low="1.500000" High="1.500000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
            <Move stopWithinDistance="0.800000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="1.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$closestSoul" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
          </DistanceCondition>
          <DistanceCondition Origin="$this.id" ReferencePt="$closestSoul" Low="1.000000" High="1.000000" Negation="false" ValueOnMiddle="false" failOnCondition="false">
            <Turn target="$closestSoul" align="false" />
          </DistanceCondition>
          <IfCondition failOnCondition="false" condition="$closestSoul ~= $__null">
            <UnstanceAction unstance="PrayStanding" locationObject="$this.id" slaveObject="" />
          </IfCondition>
          <Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="wuidDataWuidDataArray" EventSet="">
      <Variables>
        <Variable name="closestDistance" comment="" />
        <Variable name="closestSoul" comment="" />
        <Variable name="distance" comment="" />
        <Variable name="filteredSouls" comment="" />
        <Variable name="shouldBreak" comment="" />
        <Variable name="soul" comment="" />
        <Variable name="soulDistances" comment="" />
        <Variable name="souls" comment="" />
        <Variable name="wuidData" comment="" />
        <Variable name="wuidDataArray" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Else>
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <MeasureDistance hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </MeasureDistance>
                        <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Expression>
                        </IfCondition>
                      </Sequence>
                    </Else>
                  </IsInsideArea>
                </Then>
              </IsDeadCheck>
            </ForEach>
            <DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Move>
            </DistanceCondition>
            <DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Turn>
            </DistanceCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </UnstanceAction>
            </IfCondition>
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>