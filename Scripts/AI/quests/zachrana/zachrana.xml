<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="seeker_searchPlayer" is_function="0">
		<Variables>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="index" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="move" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="strings" type="_string" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="wuids" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ForEach startIndex="0" step="1" array="$wuids" iterator="$index" value="$move" break="">
						<Sequence>
							<ExactMove directionType="AlignWithEntity" directionSpecification="$move" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$move" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							<Expression expressions="$alias = $strings[$index]" />
							<Parallel successMode="All" failureMode="Any">
								<Sequence>
									<SuppressFailure>
										<Function_speech_schedulerMonolog alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="61748790" />
									</SuppressFailure>
									<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="&apos;5s&apos;" skipInLOD="false" />
								</Sequence>
								<UnstanceAction unstance="LookingWideAround" locationObject="" slaveObject="" />
							</Parallel>
						</Sequence>
					</ForEach>
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="stringArrayWuidArray" EventSet="endNotification">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="index" comment="" />
				<Variable name="move" comment="" />
				<Variable name="strings" comment="" />
				<Variable name="wuids" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-430" editorPosY="-30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</SuppressFailure>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
								</Parallel>
							</Sequence>
						</ForEach>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="seeker_runAway" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="moveData" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="speed" type="enum:movementSpeed" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="crime_keepStateAndItems" enabled="true">
					<Sequence>
						<AddBuff SoulWUID="$this.id" BuffGUID="&apos;46683e3b-e261-412f-b402-99ee17dda62a&apos;" />
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$moveData" destinationSpecification2="" destinationSpecification3="" speed="$speed" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
						<AddBuff SoulWUID="$this.id" BuffGUID="&apos;46683e3b-e261-412f-b402-99ee17dda62a&apos;" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="move_speed" EventSet="">
			<Variables>
				<Variable name="moveData" comment="" />
				<Variable name="speed" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AddBuff>
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
							<AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AddBuff>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="seeker_followPlayer" is_function="0">
		<Variables>
			<Variable name="guys" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="result" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Function_wantPlayerAttention_aggresive distanceBreak="50.000000" monologAlias="&apos;zachrana_seekersChat&apos;" repeatMonolog="3" run2sprint="10.000000" run2walk="5.000000" sprint2run="5.000000" sprint2walk="5.000000" timeout="10" walk2run="5.000000" walk2sprint="10.000000" result="$result" nodeLabel="63538926" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
					<Function_speech_monolog alias="&apos;zachrana_seekers_angry&apos;" canBeDelayed="false" context="$__null" important="false" lookAtId="$__null" metarole="" target="$this.id" wait="false" nodeLabel="49076998" />
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Union|Or" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;seeker1&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;seeker2&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$guys" saveVersion="2" />
					</GraphSearch>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<InstantSendMessageToNPC target="$this.id" type="&apos;combat:stimulus:customBehaviorRequest&apos;" values="behaviorSource($__object.id), behaviorName(&apos;seeker_seekerAttackPlayer&apos;), entity($__player)" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="guys" comment="" />
				<Variable name="result" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="190" editorPosY="-170" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_wantPlayerAttention_aggresive hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_wantPlayerAttention_aggresive>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
						<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_monolog>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<InstantSendMessageToNPC editorPosX="1590" editorPosY="1160" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</InstantSendMessageToNPC>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="hag_givesPotion" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="ForceForbidAutoTorch" target="">
					<EntityContextPresetElement contextPreset="switch_unresponsive" enabled="true">
						<Sequence>
							<UnstanceAction unstance="healingLeft" locationObject="$data" slaveObject="" />
							<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;200s&apos;" LockManagerType="Local" SemaphoreName="&apos;healingSync&apos;" RunLogic="Halt">
								<UnstanceElement unstance="healingLeft" locationObject="$data" slaveObject="" enabled="true">
									<Parallel successMode="All" failureMode="Any">
										<JoinedAnimationAction requiresMovement="false" lockContext="$data" lockName="&apos;zachrana_injuredPotion&apos;" lockCount="2" timeout="&apos;5s&apos;" ignoreOthersLeaving="false" fragment="&apos;HealingGroundPotion&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
										<Function_speech_schedulerMonolog alias="&apos;zachrana_bozenaDavaLektvarPtakovi&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" subtitlesDown="false" nodeLabel="94937494" />
									</Parallel>
								</UnstanceElement>
							</Synchronize>
							<Callback_empty EventName="&apos;OnFinished&apos;" />
						</Sequence>
					</EntityContextPresetElement>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<Move stopWithinDistance="0.500000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
			</Sequence>
			<JoinedAnimationAction requiresMovement="false" lockContext="$data" lockName="&apos;injuredPotion&apos;" lockCount="2" timeout="&apos;5s&apos;" ignoreOthersLeaving="false" fragment="&apos;HealingBedPotion&apos;" tags="&apos;lying&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
		</ForestContainer>
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextPresetElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
								<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</JoinedAnimationAction>
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</Parallel>
									</UnstanceElement>
								</Synchronize>
								<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Callback_empty>
							</Sequence>
						</EntityContextPresetElement>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="290" editorPosY="-340" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Move>
				</Sequence>
				<JoinedAnimationAction editorPosX="1860" editorPosY="-140" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</JoinedAnimationAction>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="hag_makesPotion" is_function="0">
		<Variables>
			<Variable name="area" type="wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;herbalistPotionSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$area" Data="" />
					</GraphSearch>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$area" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<CallBehavior Target="$area" BehaviorName="&apos;Herbalist&apos;" stopAfterFirstFound="true" ignoreDropUnloading="false" nodeLabel="64017530" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="area" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<CallBehavior editorPosX="110" editorPosY="460" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</CallBehavior>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="anybody_sitDown" is_function="0">
		<Variables>
			<Variable name="tableRoot" type="wuid" values="" isPersistent="0" form="single" />
			<Variable name="tableSo" type="wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;tableBack&apos;" prune="true" negprune="unknown" Parent="" Child="$tableRoot" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$tableRoot" Borders="" depth="4" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<EntityClassFilter Class="SmartObject" Source="Child" prune="true" negprune="unknown" Parent="" Child="$tableSo" />
					</GraphSearch>
					<StanceElement smartObject="$tableSo" stance="sitting" allowAny="false">
						<Sequence>
							<WaitAction />
							<Function_waitForNpcDialog lockCount="3" lockName="&apos;hagQuadrolog&apos;" target="$__null" nodeLabel="10552810" />
						</Sequence>
					</StanceElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="tableRoot" comment="" />
				<Variable name="tableSo" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</EntityClassFilter>
						</GraphSearch>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Function_waitForNpcDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_waitForNpcDialog>
							</Sequence>
						</StanceElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_leaving" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Function_speech_monolog alias="&apos;zachrana_ptacek_goodbye&apos;" canBeDelayed="false" context="" dramaticBark="false" lookAtId="$__null" metarole="" target="$this.id" wait="false" nodeLabel="68792383" />
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Function_monologRepeat alias="&apos;zachrana_ptacek_leavingBarks&apos;" cooldown="&apos;10s&apos;" repeat="-1" nodeLabel="45229727" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Parallel successMode="All" failureMode="Any">
				<Sequence>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$leaveSpot" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
				<Loop count="-1">
					<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="30.000000" High="30.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
						<Sequence>
							<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</DistanceGate>
				</Loop>
				<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;timeChanged&apos;" RunLogic="KeepRunning">
					<Success />
				</ExternalLock>
			</Parallel>
			<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
				<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;leaveSitPtacek&apos;" prune="true" negprune="unknown" Parent="" Child="$leaveSitPlace" Data="" />
			</GraphSearch>
			<Function_wantPlayerAttention aliasClose="&apos;aliasLeavin&apos;" aliasCloseAnnoyed="&apos;aliasLeavin&apos;" aliasCloseFirstTime="&apos;aliasLeavin&apos;" aliasCloseFirstTimeOnly="" aliasLeaving="&apos;aliasLeavin&apos;" alwaysSeePlayer="true" distanceClose="10.000000" mode="&apos;stand&apos;" target="$leaveSpot" timeout="30" nodeLabel="69532923" />
		</ForestContainer>
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_monolog>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Function_monologRepeat hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_monologRepeat>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Parallel editorPosX="910" editorPosY="120" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</DistanceGate>
					</Loop>
					<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Success>
					</ExternalLock>
				</Parallel>
				<GraphSearch editorPosX="650" editorPosY="-440" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</LinkDataFilter>
				</GraphSearch>
				<Function_wantPlayerAttention editorPosX="920" editorPosY="420" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Function_wantPlayerAttention>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="seekers_lean" is_function="0">
		<Variables>
			<Variable name="break" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="leaningSpot" type="wuid" values="" isPersistent="0" form="single" />
			<Variable name="leaningSpots" type="wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;leaningSpot&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$leaningSpots" saveVersion="2" />
					</GraphSearch>
					<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
						<Child canSkip="1">
							<Sequence>
								<AtomicDecorator>
									<For startIndex="0" endIndex="-1" step="1" array="$leaningSpots" iterator="" value="$leaningSpot" break="$break">
										<Sequence>
											<Invertor>
												<GraphSearch Origin="$leaningSpot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;reserved&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
												</GraphSearch>
											</Invertor>
											<AddLink From="$leaningSpot" To="$__object.id" Tag="&apos;reserved&apos;" Data="" LinkOpHandleMode="Error" />
											<Expression expressions="$break = true" />
										</Sequence>
									</For>
								</AtomicDecorator>
								<CallBehavior Target="$leaningSpot" BehaviorName="&apos;use&apos;" stopAfterFirstFound="true" ignoreDropUnloading="false" nodeLabel="87190828" />
							</Sequence>
						</Child>
						<OnSuccess canSkip="1">
							<RemoveLink From="$leaningSpot" To="$__object.id" Tag="&apos;reserved&apos;" RemoveAll="false" LinkOpHandleMode="Success" />
						</OnSuccess>
					</FuseBox>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="break" comment="" />
				<Variable name="leaningSpot" comment="" />
				<Variable name="leaningSpots" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="0" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence editorPosX="230" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch editorPosX="364" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter editorPosX="579" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Nodalyzer editorPosX="579" editorPosY="108" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
						<FuseBox editorPosX="364" editorPosY="204" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Sequence editorPosX="620" editorPosY="204" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AtomicDecorator editorPosX="754" editorPosY="204" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<For editorPosX="914" editorPosY="204" hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence editorPosX="1120" editorPosY="204" hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Invertor editorPosX="1254" editorPosY="204" hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch editorPosX="1388" editorPosY="204" hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter editorPosX="1603" editorPosY="204" hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
													</GraphSearch>
												</Invertor>
												<AddLink editorPosX="1254" editorPosY="313" hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</AddLink>
												<Expression editorPosX="1254" editorPosY="438" hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Sequence>
										</For>
									</AtomicDecorator>
									<CallBehavior editorPosX="754" editorPosY="530" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</CallBehavior>
								</Sequence>
							</Child>
							<OnSuccess>
								<RemoveLink editorPosX="620" editorPosY="654" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</RemoveLink>
							</OnSuccess>
						</FuseBox>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="seeker_waiting" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<CallBehavior Target="$leaningSpot" BehaviorName="&apos;use&apos;" ignoreDropUnloading="false" nodeLabel="87190828" />
		</ForestContainer>
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<CallBehavior editorPosX="960" editorPosY="-30" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</CallBehavior>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="hag_heal" is_function="0">
		<Variables>
			<Variable name="frontDoor" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="nearBed" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ptacek" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Sequence>
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
						<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
					<Loop count="-1">
						<DistanceGate Origin="$__player" ReferencePt="$this.id" Low="30.000000" High="30.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
							<Function_monologRepeat alias="$string" cooldown="&apos;15s&apos;" repeat="-1" nodeLabel="75219009" />
						</DistanceGate>
					</Loop>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer>
			<ExecuteLua code="local val = player.soul:GetStatLevel(&apos;vitality&apos;); &#10;player.soul:AdvanceToStatLevel(&apos;vitality&apos;,val+1)" />
			<ExecuteLua code="player.soul:DealDamage(0, 1, player.this.id, true, &apos;leg_left&apos;) &#10;player.soul:AddInjury(1, &apos;leg_left&apos;)" />
		</ForestContainer>
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="frontDoor" comment="" />
				<Variable name="nearBed" comment="" />
				<Variable name="ptacek" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_monologRepeat hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_monologRepeat>
							</DistanceGate>
						</Loop>
					</Parallel>
				</Behavior>
			</Root>
			<Forest>
				<ExecuteLua editorPosX="1010" editorPosY="-320" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</ExecuteLua>
				<ExecuteLua editorPosX="590" editorPosY="-828" hasInputBreakpoint="0" comment="TEST TEST TEST" breakpointFlags="0">
					<OutputBreakpoints />
				</ExecuteLua>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="hag_dialogWithSeeker" is_function="0">
		<Variables>
			<Variable name="outsideHut" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;outsideHutHag&apos;" prune="true" negprune="unknown" Parent="" Child="$outsideHut" Data="" />
					</GraphSearch>
					<Function_waitForNpcDialog lockCount="2" lockName="&apos;hagDialogSeeker&apos;" target="$outsideHut" nodeLabel="26091021" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="outsideHut" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<Function_waitForNpcDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_waitForNpcDialog>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="seeker_dialogWithHag" is_function="0">
		<Variables>
			<Variable name="baba" type="wuid" values="" isPersistent="0" form="single" />
			<Variable name="outsideHut" type="wuid" values="" isPersistent="0" form="single" />
			<Variable name="subscriptionEvent" type="" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;outsideHutSeeker&apos;" prune="true" negprune="unknown" Parent="" Child="$outsideHut" Data="" />
					</GraphSearch>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$outsideHut" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;hagDialogSeeker&apos;" RunLogic="KeepRunning">
						<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
							<Child canSkip="1">
								<Sequence>
									<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;baba&apos;" prune="true" negprune="unknown" Parent="" Child="$baba" Data="" />
									</GraphSearch>
									<Function_speech_dialogInitiator alias="&apos;zachrana_seekerBaba&apos;" context="$__null" customParameters="$__null" metarole="" preset="$enum:dialogPreset.ingame" recipient="$baba" nodeLabel="33600003" />
								</Sequence>
							</Child>
							<OnSuccess canSkip="1">
								<Callback_empty EventName="&apos;OnFinished&apos;" />
							</OnSuccess>
						</FuseBox>
					</Synchronize>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<SetTemporarySuperfaction soul="$this.id" superfaction="playersBestFriendsForever" />
			<InstantSendMessageToNPC target="$this.id" type="&apos;perception:subscription:request&apos;" values="entity($__player), once(true)" />
			<IncludeTree File="&apos;speech/dialogutils.xml&apos;" Name="&apos;dialogInitiator&apos;" nodeLabel="15434365" />
		</ForestContainer>
		<EditorData Signature="endData" EventSet="endData">
			<Variables>
				<Variable name="baba" comment="" />
				<Variable name="outsideHut" comment="" />
				<Variable name="subscriptionEvent" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkDataFilter>
										</GraphSearch>
										<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_dialogInitiator>
									</Sequence>
								</Child>
								<OnSuccess>
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
								</OnSuccess>
							</FuseBox>
						</Synchronize>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<SetTemporarySuperfaction editorPosX="880" editorPosY="-370" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</SetTemporarySuperfaction>
				<InstantSendMessageToNPC editorPosX="880" editorPosY="-280" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</InstantSendMessageToNPC>
				<IncludeTree editorPosX="1480" editorPosY="690" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</IncludeTree>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="hag_tutorialWait" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<UnstanceAction unstance="waiting_holdingArm" locationObject="$data" slaveObject="" />
					<ForceLook LookTarget="$__player" DisableVariations="true">
						<EntityContext context="speech_readyForSwitchDialog" target="">
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</EntityContext>
					</ForceLook>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-140" editorPosY="-590" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</EntityContext>
						</ForceLook>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="hag_waitOutside" is_function="0">
		<Variables>
			<Variable name="place" type="wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;hagWaitOutside&apos;" prune="true" negprune="unknown" Parent="" Child="$place" Data="" />
					</GraphSearch>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$place" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="place" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_quadrolog" is_function="0">
		<Variables>
			<Variable name="outsideHut" type="wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Sequence>
						<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;ptacekQuadrolog&apos;" prune="true" negprune="unknown" Parent="" Child="$outsideHut" Data="" />
						</GraphSearch>
						<Function_waitForNpcDialog lockCount="3" lockName="&apos;hagQuadrolog&apos;" target="$outsideHut" nodeLabel="26091021" />
					</Sequence>
					<Function_monologRepeat alias="&apos;zachrana_ptacekWantsHenryToSitDown&apos;" cooldown="&apos;10s&apos;" repeat="-1" nodeLabel="95584772" />
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="outsideHut" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkDataFilter>
							</GraphSearch>
							<Function_waitForNpcDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_waitForNpcDialog>
						</Sequence>
						<Function_monologRepeat hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_monologRepeat>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pavlena_quadrolog" is_function="0">
		<Variables>
			<Variable name="tableRoot" type="wuid" values="" isPersistent="0" form="single" />
			<Variable name="tableSo" type="wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;tableBack&apos;" prune="true" negprune="unknown" Parent="" Child="$tableRoot" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$tableRoot" Borders="" depth="4" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<EntityClassFilter Class="SmartObject" Source="Child" prune="true" negprune="unknown" Parent="" Child="$tableSo" />
					</GraphSearch>
					<StanceElement smartObject="$tableSo" stance="sitting" allowAny="false">
						<Sequence>
							<WaitAction />
							<Function_waitForNpcDialog lockCount="3" lockName="&apos;hagQuadrolog&apos;" target="$__null" nodeLabel="26091021" />
						</Sequence>
					</StanceElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="tableRoot" comment="" />
				<Variable name="tableSo" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</EntityClassFilter>
						</GraphSearch>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Function_waitForNpcDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_waitForNpcDialog>
							</Sequence>
						</StanceElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="forceSittingDialog" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="dialogPartner" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="tableSo" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$tableSo" stance="sitting" allowAny="false">
					<Sequence>
						<WaitAction />
						<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$alias&apos;" RunLogic="KeepRunning">
							<Function_speech_dialogInitiator alias="$alias" context="$__null" customParameters="$__null" metarole="" preset="$enum:dialogPreset.fader" recipient="$dialogPartner" recipientMetaroles="" nodeLabel="72214673" />
						</Synchronize>
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="sittingDialog" EventSet="">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="dialogPartner" comment="" />
				<Variable name="tableSo" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_dialogInitiator>
							</Synchronize>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="hag_forcePolylog" is_function="0">
		<Variables>
			<Variable name="baba" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="dcera" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ptacek" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="t_dialogParameters" type="dialog:parameters:initiator" values="" isPersistent="0" form="single" />
			<Variable name="t_dialogParticipants" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="table" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;dcera&apos;" prune="true" negprune="unknown" Parent="" Child="$dcera" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;ptacek&apos;" prune="true" negprune="unknown" Parent="" Child="$ptacek" Data="" />
					</GraphSearch>
					<Synchronize SemaphoreCount="3" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;hagQuadrolog&apos;" RunLogic="KeepRunning">
						<LoopUntil until="Success" attemptCount="0">
							<Sequence>
								<Expression expressions="$t_dialogParticipants[0] = $__player &#10;$t_dialogParticipants[1] = $dcera &#10;$t_dialogParticipants[2] = $ptacek" />
								<Function_speech_polylogInitiator alias="&apos;zachrana_morningForce&apos;" context="$__null" customParameters="$__null" metarole="" participants="$t_dialogParticipants" participantsMetaroles="" preset="$enum:dialogPreset.fader" nodeLabel="60657954" />
							</Sequence>
						</LoopUntil>
					</Synchronize>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="baba" comment="" />
				<Variable name="dcera" comment="" />
				<Variable name="ptacek" comment="" />
				<Variable name="t_dialogParameters" comment="" />
				<Variable name="t_dialogParticipants" comment="" />
				<Variable name="table" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<Function_speech_polylogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_polylogInitiator>
								</Sequence>
							</LoopUntil>
						</Synchronize>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pavlena_sitDown" is_function="0">
		<Variables>
			<Variable name="tableRoot" type="wuid" values="" isPersistent="0" form="single" />
			<Variable name="tableSo" type="wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;pavlenaSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$tableRoot" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$tableRoot" Borders="" depth="4" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<EntityClassFilter Class="SmartObject" Source="Child" prune="true" negprune="unknown" Parent="" Child="$tableSo" />
					</GraphSearch>
					<StanceElement smartObject="$tableSo" stance="sitting" allowAny="false">
						<Sequence>
							<WaitAction />
							<Function_waitForNpcDialog lockCount="3" lockName="&apos;hagQuadrolog&apos;" target="$__null" nodeLabel="10552810" />
						</Sequence>
					</StanceElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="tableRoot" comment="" />
				<Variable name="tableSo" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</EntityClassFilter>
						</GraphSearch>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Function_waitForNpcDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_waitForNpcDialog>
							</Sequence>
						</StanceElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_sitDown" is_function="0">
		<Variables>
			<Variable name="tableRoot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tableSo" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;ptacekSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$tableRoot" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$tableRoot" Borders="" depth="4" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<EntityClassFilter Class="SmartObject" Source="Child" prune="true" negprune="unknown" Parent="" Child="$tableSo" />
					</GraphSearch>
					<StanceElement smartObject="$tableSo" stance="sitting" allowAny="false">
						<Sequence>
							<WaitAction />
							<Function_waitForNpcDialog lockCount="2" lockName="&apos;zachrana_babaPtacek&apos;" target="$__null" nodeLabel="10552810" />
						</Sequence>
					</StanceElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="tableRoot" comment="" />
				<Variable name="tableSo" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</EntityClassFilter>
						</GraphSearch>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Function_waitForNpcDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_waitForNpcDialog>
							</Sequence>
						</StanceElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="player_layInBedWithCustomAnimation" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<StanceElement smartObject="$data" stance="sitting" allowAny="false" enabled="true">
							<Sequence>
								<WaitAction />
								<Callback_empty EventName="&apos;OnFinished&apos;" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</StanceElement>
					</Child>
					<OnSuccess canSkip="1">
						<Success />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer>
			<UnstanceAction unstance="LyingDialog" locationObject="" slaveObject="" />
		</ForestContainer>
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</StanceElement>
						</Child>
						<OnSuccess>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest>
				<UnstanceAction editorPosX="670" editorPosY="-280" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</UnstanceAction>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sitDownAndWaitForDialog" is_function="0">
		<Variables>
			<Variable name="tableRoot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tableSo" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$wuid" stance="sitting" allowAny="false">
					<Sequence>
						<WaitAction />
						<Function_waitForNpcDialog lockCount="2" lockName="$string" target="$__null" nodeLabel="10552810" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="tableRoot" comment="" />
				<Variable name="tableSo" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Function_waitForNpcDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_waitForNpcDialog>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sitDownAndBark" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$wuid" stance="sitting" allowAny="false">
					<Sequence>
						<WaitAction />
						<Function_monologRepeat alias="$string" cooldown="" repeat="-1" nodeLabel="69743067" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Function_monologRepeat hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_monologRepeat>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="hag_combatFlee" is_function="0">
		<Variables>
			<Variable name="move" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Sequence>
						<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;hagCombatFlee&apos;" prune="true" negprune="unknown" Parent="" Child="$move" Data="" />
						</GraphSearch>
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$move" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
						<UnstanceAction unstance="behaviorCrying" locationObject="$move" slaveObject="" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
					<Sequence>
						<Function_speech_schedulerMonolog alias="&apos;zachrana_bozenaPosilaPsaDoUtoku&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="38359256" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="move" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_schedulerMonolog>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="hag_override_animalAbuse" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Function_speech_monolog alias="&apos;zachrana_babaReakceNaZabijeniZviratPlaceholder&apos;" canBeDelayed="false" context="" dramaticBark="false" lookAtId="" metarole="" target="" wait="false" nodeLabel="17694174" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_speech_monolog>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pavlena_override_animalAbuse" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Function_speech_monolog alias="&apos;zachrana_pavlenaReakceNaZabijeniZviratPlaceholder&apos;" canBeDelayed="false" context="" dramaticBark="false" lookAtId="" metarole="" target="" wait="false" nodeLabel="80626373" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_speech_monolog>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="player_synchroWalk" is_function="1">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="animation" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="unstanceAnimation" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Function_synchroWalk alias="$alias" animation="$animation" so="$__object.id" unstanceAnimation="$unstanceAnimation" nodeLabel="95852173" />
			</Behavior>
		</Root>
		<ForestContainer>
			<AnimationAction fragment="&apos;CinematicTestWalk&apos;" tags="" eventReferenceObject="" alignObject="$this.id" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
			<UnstanceAction unstance="SynchrowalkLoop" locationObject="$tagpoint" slaveObject="$tagpoint" />
			<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			<Sequence>
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;ptacek&apos;" prune="true" negprune="unknown" Parent="" Child="$ptacek" Data="" />
				</GraphSearch>
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;tagpoint_trackviewPlayer&apos;" prune="true" negprune="unknown" Parent="" Child="$tagpoint" Data="" />
				</GraphSearch>
				<Sequence>
					<GetSpatialInfo In="$tagpoint" Out="$spatialInfo" What="Orientation" />
					<SetSpatialInfo In="$ptacek" Val="$spatialInfo" What="Orientation" />
					<SetSpatialInfo In="$this.id" Val="$spatialInfo" What="Orientation" />
					<While doFail="false" propagateChildFail="false" condition="true">
						<Sequence>
							<AtomicDecorator>
								<Sequence>
									<GetSpatialInfo In="$tagpoint" Out="$spatialInfo" What="Position" />
									<SetSpatialInfo In="$this.id" Val="$spatialInfo" What="Position" />
									<Expression expressions="$spatialInfo.x -= 1 &#10;$spatialInfo.y -= 1" />
									<SetSpatialInfo In="$ptacek" Val="$spatialInfo" What="Position" />
								</Sequence>
							</AtomicDecorator>
							<Wait duration="&apos;10ms&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</While>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Sequence>
			<ExecuteLua code="XGenAIModule.GetEntityByWUID(data.tagpoint):AttachChild(entity.id,0)" />
			<Sequence>
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;tagpoint_trackviewPlayer&apos;" prune="true" negprune="unknown" Parent="" Child="$tagpoint" Data="" />
				</GraphSearch>
				<LuaWrapper onEnter="XGenAIModule.GetEntityByWUID(data.tagpoint):AttachChild(entity.id,0)" onExit="entity:DetachThis()">
					<Loop count="-1">
						<Sequence>
							<UrgencyDecorator Urgency="Instant">
								<UnstanceElement unstance="$unstanceAnimation" locationObject="" slaveObject="" enabled="true">
									<Sequence>
										<WaitAction />
										<IfGate atomic="false" condition="$animation~= &apos;none&apos;" RunLogic="KeepRunning">
											<Loop count="-1">
												<SuppressFailure>
													<Sequence>
														<Expression expressions="$animationInUse = $animation" />
														<Parallel successMode="Any" failureMode="Any">
															<AnimationAction fragment="$animation" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
															<IfGate atomic="false" condition="$animation~=$animationInUse" RunLogic="KeepRunning">
																<Success />
															</IfGate>
														</Parallel>
													</Sequence>
												</SuppressFailure>
											</Loop>
										</IfGate>
									</Sequence>
								</UnstanceElement>
							</UrgencyDecorator>
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Loop>
				</LuaWrapper>
			</Sequence>
		</ForestContainer>
		<EditorData Signature="zachrana_ptacek_synchrowalk" EventSet="">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="animation" comment="" />
				<Variable name="unstanceAnimation" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-480" editorPosY="-40" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Function_synchroWalk hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_synchroWalk>
				</Behavior>
			</Root>
			<Forest>
				<AnimationAction editorPosX="4630" editorPosY="60" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</AnimationAction>
				<UnstanceAction editorPosX="4620" editorPosY="-170" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</UnstanceAction>
				<Wait editorPosX="4620" editorPosY="-50" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Wait>
				<Sequence editorPosX="1120" editorPosY="950" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkDataFilter>
					</GraphSearch>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkDataFilter>
					</GraphSearch>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetSpatialInfo>
						<SetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SetSpatialInfo>
						<SetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SetSpatialInfo>
						<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetSpatialInfo>
										<SetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SetSpatialInfo>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<SetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SetSpatialInfo>
									</Sequence>
								</AtomicDecorator>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</While>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Sequence>
				<ExecuteLua editorPosX="4500" editorPosY="-270" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</ExecuteLua>
				<Sequence editorPosX="1300" editorPosY="210" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkDataFilter>
					</GraphSearch>
					<LuaWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</WaitAction>
											<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
															<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</AnimationAction>
																<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Success>
																</IfGate>
															</Parallel>
														</Sequence>
													</SuppressFailure>
												</Loop>
											</IfGate>
										</Sequence>
									</UnstanceElement>
								</UrgencyDecorator>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Loop>
					</LuaWrapper>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_synchroWalk" is_function="0">
		<Variables>
			<Variable name="aliasInUse" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="animation" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="dialogType" type="enum:speech_ingameDialogType" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="unstanceAnimation" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Function_synchroWalk alias="$alias" animation="$animation" so="$__object.id" unstanceAnimation="$unstanceAnimation" nodeLabel="51363830" />
					<Loop count="-1">
						<SuppressFailure>
							<Sequence>
								<IfGate atomic="false" condition="$alias~=&apos;none&apos;" RunLogic="KeepRunning">
									<Success />
								</IfGate>
								<Expression expressions="$aliasInUse = $alias" />
								<LoopUntil until="Success" attemptCount="0">
									<Function_speech_dialogInitiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="$__null" customParameters="$__null" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="67370897" />
								</LoopUntil>
								<IfGate atomic="false" condition="$alias~=$aliasInUse" RunLogic="KeepRunning">
									<Success />
								</IfGate>
							</Sequence>
						</SuppressFailure>
					</Loop>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer>
			<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			<ContinuousSwitch>
				<IfCondition failOnCondition="false" condition="$alias==$aliasInUse" />
				<IfCondition failOnCondition="false" condition="$alias==&apos;none&apos;">
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</IfCondition>
				<IfCondition failOnCondition="false" condition="$alias~=$aliasInUse">
					<Expression expressions="$aliasInUse = $alias" />
				</IfCondition>
			</ContinuousSwitch>
			<UnstanceAction unstance="$animation" locationObject="" slaveObject="" />
			<Sequence>
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;tagpoint_trackviewPlayer&apos;" prune="true" negprune="unknown" Parent="" Child="$tagpoint" Data="" />
				</GraphSearch>
				<LuaWrapper onEnter="XGenAIModule.GetEntityByWUID(data.tagpoint):AttachChild(entity.id,0)" onExit="entity:DetachThis()">
					<Sequence>
						<UrgencyDecorator Urgency="Instant">
							<UnstanceElement unstance="test_zachrana_synchroWalk_capon" locationObject="" slaveObject="" enabled="true">
								<Sequence>
									<WaitAction />
									<IfGate atomic="false" condition="$animation~= &apos;none&apos;" RunLogic="KeepRunning">
										<Loop count="-1">
											<SuppressFailure>
												<Sequence>
													<Expression expressions="$animationInUse = $animation" />
													<Parallel successMode="Any" failureMode="Any">
														<AnimationAction fragment="$animation" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
														<IfGate atomic="false" condition="$animation~=$animationInUse" RunLogic="KeepRunning">
															<Success />
														</IfGate>
													</Parallel>
												</Sequence>
											</SuppressFailure>
										</Loop>
									</IfGate>
								</Sequence>
							</UnstanceElement>
						</UrgencyDecorator>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</LuaWrapper>
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Sequence>
		</ForestContainer>
		<EditorData Signature="zachrana_ptacek_synchrowalk" EventSet="">
			<Variables>
				<Variable name="aliasInUse" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="animation" comment="" />
				<Variable name="dialogType" comment="" />
				<Variable name="unstanceAnimation" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_synchroWalk hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_synchroWalk>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</IfGate>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_dialogInitiator>
									</LoopUntil>
									<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</IfGate>
								</Sequence>
							</SuppressFailure>
						</Loop>
					</Parallel>
				</Behavior>
			</Root>
			<Forest>
				<Wait editorPosX="1690" editorPosY="770" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Wait>
				<ContinuousSwitch editorPosX="1220" editorPosY="590" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</IfCondition>
					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</IfCondition>
					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</IfCondition>
				</ContinuousSwitch>
				<UnstanceAction editorPosX="3050" editorPosY="-380" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</UnstanceAction>
				<Sequence editorPosX="1080" editorPosY="-640" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkDataFilter>
					</GraphSearch>
					<LuaWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
										<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
														<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</AnimationAction>
															<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</IfGate>
														</Parallel>
													</Sequence>
												</SuppressFailure>
											</Loop>
										</IfGate>
									</Sequence>
								</UnstanceElement>
							</UrgencyDecorator>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</LuaWrapper>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="player_sitOnBed" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$data" stance="sitting" allowAny="false">
					<Sequence>
						<WaitAction />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="empty" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Success />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Success>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="wait" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="dog_bark" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="firstWuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="secondWuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$firstWuid" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$firstWuid" destinationSpecification2="" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<ForceLook LookTarget="$secondWuid" DisableVariations="false">
						<Parallel successMode="Any" failureMode="Any">
							<Loop count="-1">
								<Sequence>
									<AnimationAction fragment="&apos;Bark&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
									<Wait duration="&apos;350ms&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</Loop>
							<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="10.000000" High="10.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
								<Success />
							</DistanceGate>
						</Parallel>
					</ForceLook>
					<ForceLook LookTarget="$secondWuid" DisableVariations="false">
						<Loop count="-1">
							<RandomGate opensWithChance="0.200000" saveVersion="2">
								<Then canSkip="1">
									<Sequence>
										<AnimationAction fragment="&apos;Bark&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
										<Wait duration="&apos;800ms&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</Then>
								<Else canSkip="1">
									<Sequence>
										<AnimationAction fragment="&apos;GrowlingStand&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
										<Wait duration="&apos;800ms&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</Else>
							</RandomGate>
						</Loop>
					</ForceLook>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuid_wuid" EventSet="">
			<Variables>
				<Variable name="firstWuid" comment="" />
				<Variable name="secondWuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AnimationAction>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Loop>
								<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</DistanceGate>
							</Parallel>
						</ForceLook>
						<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AnimationAction>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</Then>
									<Else>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AnimationAction>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</Else>
								</RandomGate>
							</Loop>
						</ForceLook>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="synchroWalk_fail" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<UrgencyDecorator Urgency="Instant">
					<UnstanceElement unstance="test_zachrana_synchroWalk_player" locationObject="" slaveObject="" enabled="true">
						<Sequence>
							<AnimationAction fragment="&apos;Test_SynchroWalk_Fail_Capon&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
							<WaitAction />
							<Callback_empty EventName="&apos;OnFinished&apos;" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</UnstanceElement>
				</UrgencyDecorator>
			</Behavior>
		</Root>
		<ForestContainer>
			<UnstanceAction unstance="$string" locationObject="" slaveObject="" />
			<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Global" SemaphoreName="&apos;zachrana_synchroFail&apos;" RunLogic="KeepRunning" />
		</ForestContainer>
		<EditorData Signature="string" EventSet="endNotification">
			<Variables>
				<Variable name="string" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</AnimationAction>
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Callback_empty>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</UnstanceElement>
					</UrgencyDecorator>
				</Behavior>
			</Root>
			<Forest>
				<UnstanceAction editorPosX="360" editorPosY="-390" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</UnstanceAction>
				<Synchronize editorPosX="60" editorPosY="-390" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Synchronize>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="synchroWalk" is_function="1">
		<Variables>
			<Variable name="animationInUse" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="animationName" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="animationTag" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="so" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="trackviewStarted" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" />
			<Variable name="unstanceAnimation" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$so" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;tagpoint_trackviewPlayer&apos;" prune="true" negprune="unknown" Parent="" Child="$tagpoint" Data="" />
					</GraphSearch>
					<LuaWrapper onEnter="XGenAIModule.GetEntityByWUID(data.tagpoint):AttachChild(entity.id,0)" onExit="entity:DetachThis()">
						<Sequence>
							<SetExternalLock LockManagerType="Global" Locked="true" LockName="&apos;zachrana_trackviewStarted&apos;" />
							<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;synchroWalk_preAnimation&apos;" RunLogic="KeepRunning">
								<Callback_empty EventName="&apos;OnFinished&apos;" />
							</Synchronize>
							<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Global" SemaphoreName="&apos;zachrana_trackviewStarted&apos;" RunLogic="KeepRunning">
								<Success />
							</ExternalLock>
							<JoinedAnimationAction requiresMovement="true" lockContext="$so" lockName="&apos;zachrana_animLock&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="$animationTag" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</LuaWrapper>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Success />
			<UrgencyDecorator Urgency="Instant">
				<UnstanceElement unstance="$unstanceAnimation" locationObject="" slaveObject="" enabled="true">
					<Sequence>
						<WaitAction />
						<IfGate atomic="true" condition="$animationTag ~= &apos;none&apos;" RunLogic="KeepRunning">
							<Expression expressions="$animationInUse = $animationTag" />
						</IfGate>
						<Loop count="-1">
							<SuppressFailure>
								<Sequence>
									<Parallel successMode="Any" failureMode="Any">
										<Selector>
											<AnimationAction fragment="$animationName" tags="$animationInUse" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
											<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
										</Selector>
										<IfGate atomic="true" condition="$animationTag~=$animationInUse &amp; $animationTag~=&apos;none&apos;" RunLogic="KeepRunning">
											<Expression expressions="$animationInUse = $animationTag" />
										</IfGate>
									</Parallel>
								</Sequence>
							</SuppressFailure>
						</Loop>
					</Sequence>
				</UnstanceElement>
			</UrgencyDecorator>
			<AnimationAction fragment="$animationTag" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
			<IfGate atomic="false" condition="$trackviewStarted" RunLogic="KeepRunning" />
		</ForestContainer>
		<EditorData Signature="zachrana_ptacek_synchrowalk" EventSet="">
			<Variables>
				<Variable name="animationInUse" comment="" />
				<Variable name="tagpoint" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="animationName" comment="" />
				<Variable name="animationTag" comment="" />
				<Variable name="so" comment="" />
				<Variable name="trackviewStarted" comment="" />
				<Variable name="unstanceAnimation" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<LuaWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SetExternalLock>
								<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
								</Synchronize>
								<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</ExternalLock>
								<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</JoinedAnimationAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</LuaWrapper>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Success editorPosX="2290" editorPosY="400" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Success>
				<UrgencyDecorator editorPosX="1610" editorPosY="270" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfGate>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</AnimationAction>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Selector>
											<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</IfGate>
										</Parallel>
									</Sequence>
								</SuppressFailure>
							</Loop>
						</Sequence>
					</UnstanceElement>
				</UrgencyDecorator>
				<AnimationAction editorPosX="1840" editorPosY="-280" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</AnimationAction>
				<IfGate editorPosX="1040" editorPosY="-470" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</IfGate>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="changeBodyPart" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExecuteLua code="entity.soul:OverrideBodyPart(&apos;henry_injured_left_shoulder&apos;,&apos;Body&apos;)" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExecuteLua>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="stag_eatAndRun" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="area" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="eatingPlace" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="escapePlace" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<UrgencyDecorator Urgency="Fast">
					<Sequence>
						<AreaPresenceGate aiObjects="$__player" area="$area" amount="AtLeastOne" presence="NotThere" RunLogic="Halt">
							<Sequence>
								<ExactMove directionType="AlignWithEntity" directionSpecification="$eatingPlace" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$eatingPlace" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
								<UnstanceAction unstance="animal_eat" locationObject="" slaveObject="" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</AreaPresenceGate>
						<Sequence>
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$escapePlace" destinationSpecification2="" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Sequence>
				</UrgencyDecorator>
			</Behavior>
		</Root>
		<ForestContainer>
			<AnimationAction fragment="&apos;AlertIn&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" />
			<UnstanceAction unstance="redDeer_eatin" locationObject="" slaveObject="" />
			<Parallel successMode="Any" failureMode="Any">
				<Loop count="-1" />
				<AreaPresenceGate aiObjects="$__player" area="$area" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning" />
			</Parallel>
			<Sequence>
				<Parallel successMode="Any" failureMode="Any">
					<WaitAction />
					<Look destinationSpecification="$__player" destinationType="FromVariable" />
					<Wait duration="&apos;15500ms&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Parallel>
			</Sequence>
		</ForestContainer>
		<EditorData Signature="Stag" EventSet="">
			<Variables>
				<Variable name="area" comment="" />
				<Variable name="eatingPlace" comment="" />
				<Variable name="escapePlace" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExactMove>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</AreaPresenceGate>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Sequence>
					</UrgencyDecorator>
				</Behavior>
			</Root>
			<Forest>
				<AnimationAction editorPosX="1100" editorPosY="190" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</AnimationAction>
				<UnstanceAction editorPosX="1450" editorPosY="190" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</UnstanceAction>
				<Parallel editorPosX="330" editorPosY="-710" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Loop>
					<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</AreaPresenceGate>
				</Parallel>
				<Sequence editorPosX="1320" editorPosY="-200" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<Look hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Look>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Parallel>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="hag_nervous" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<UnstanceAction unstance="standingNervous" locationObject="" slaveObject="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="hag_commenting" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Parallel successMode="Any" failureMode="Any">
							<Sequence>
								<ExactMove directionType="AlignWithEntity" directionSpecification="$wuid" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
								<AnimationAction fragment="&apos;CrimeCross&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
								<UnstanceAction unstance="standingNervous" locationObject="$wuid" slaveObject="" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
							<Sequence>
								<Wait duration="&apos;8s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="23369649" />
								<Wait duration="&apos;20s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</Parallel>
					</Child>
					<OnSuccess canSkip="1">
						<Callback_empty EventName="&apos;OnFinished&apos;" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="endNotification">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExactMove>
									<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AnimationAction>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Parallel>
						</Child>
						<OnSuccess>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="dog_growl" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="firstWuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="secondWuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$firstWuid" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$firstWuid" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<ForceLook LookTarget="$secondWuid" DisableVariations="false">
						<Loop count="-1">
							<Sequence>
								<Turn target="$secondWuid" align="false" />
								<AnimationAction fragment="&apos;GrowlingStand&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
								<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="&apos;4s&apos;" />
							</Sequence>
						</Loop>
					</ForceLook>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuid_wuid" EventSet="">
			<Variables>
				<Variable name="firstWuid" comment="" />
				<Variable name="secondWuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Turn>
									<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AnimationAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Loop>
						</ForceLook>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="player_pray" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Function_pilgrimage_player_genericPraying dialogContext="" locationObject="$wuid" monologAlias="$string" finishedPrayingMonolog="" nodeLabel="19953991" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="endNotification">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_pilgrimage_player_genericPraying hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_pilgrimage_player_genericPraying>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="synchroWalk_both" is_function="0">
		<Variables>
			<Variable name="aliasInUse" type="_string" values="none" isPersistent="0" form="single" />
			<Variable name="dialogEnumType" type="enum:dialogPreset" values="" isPersistent="0" form="single" />
			<Variable name="dialogId" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="dialogTypeInUse" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="parameters" type="dialog:monologRequest" values="" isPersistent="0" form="single" />
			<Variable name="soulsToMetaroles" type="soulToMetaroles" values="" isPersistent="0" form="array" />
			<Variable name="time" type="_int64" values="" isPersistent="0" form="single" />
			<Variable name="trackviewAlias" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="trackviewMessage" type="trackviewMessage" values="" isPersistent="0" form="single" />
			<Variable name="trackviewStarted" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="animationName" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="animationTag" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="dialogType" type="enum:speech_ingameDialogType" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="so" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="unstanceAnimation" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<EntityContext context="deterrenceImmunity" target="">
						<Function_synchroWalk alias="$alias" animationName="$animationName" animationTag="$animationTag" so="$__object.id" unstanceAnimation="$unstanceAnimation" trackviewStarted="$trackviewStarted" nodeLabel="51363830" />
					</EntityContext>
					<Sequence>
						<Expression expressions="$soulsToMetaroles[0].soul = $this.id &#10;$soulsToMetaroles[1].soul = $__player &#10;$dialogType = $enum:speech_ingameDialogType.Chat &#10;$trackviewMessage.alias = &apos;none&apos;" />
						<Parallel successMode="Any" failureMode="Any">
							<Loop count="-1">
								<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$trackviewMessage" senderInfo="" inbox="&apos;trackviewMessage&apos;" condition="" answerVar="">
									<SetExternalLock LockManagerType="Global" Locked="false" LockName="&apos;zachrana_trackviewStarted&apos;" />
								</ProcessMessage>
							</Loop>
							<Sequence>
								<IfGate atomic="false" condition="$trackviewMessage.alias ~= &apos;none&apos;" RunLogic="Halt">
									<Success />
								</IfGate>
								<Loop count="-1">
									<Sequence>
										<Expression expressions="$aliasInUse = $trackviewMessage.alias &#10;$dialogTypeInUse = $trackviewMessage.type" />
										<IfGate atomic="false" condition="$trackviewMessage.alias ~= &apos;none&apos; &amp; $trackviewMessage.alias == $aliasInUse" RunLogic="Halt">
											<Sequence>
												<SuppressFailure>
													<Switch>
														<IfCondition failOnCondition="false" condition="$trackviewMessage.type == &apos;chat&apos;">
															<Sequence>
																<RequestDialog DecisionName="" DecisionAlias="$trackviewMessage.alias" SoulsToMetaroles="$soulsToMetaroles" Once="false" ForceSubtitles="true" UseTwins="false" SendMessage="false" Greeting="false" Ending="false" RequestChat="true" AllowPositioning="false" DisableRotations="true" DisableRestrictions="true" AnimationOverride="UserControlled" ContextVariables="" DialogId="$dialogId" />
																<DoDialog DialogId="$dialogId" />
															</Sequence>
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$trackviewMessage.type == &apos;ingame&apos;">
															<Sequence>
																<RequestDialog DecisionName="" DecisionAlias="$trackviewMessage.alias" SoulsToMetaroles="$soulsToMetaroles" Once="false" ForceSubtitles="true" UseTwins="false" SendMessage="false" Greeting="false" Ending="false" RequestChat="false" AllowPositioning="false" DisableRotations="true" DisableRestrictions="true" AnimationOverride="UserControlled" ContextVariables="" DialogId="$dialogId" />
																<DoDialog DialogId="$dialogId" />
															</Sequence>
														</IfCondition>
														<DefaultBranch>
															<DoMonologue DecisionId="" DecisionAlias="$trackviewMessage.alias" Metaroles="" SoulId="" ForceSubtitles="true" AllowMutedSouls="false" SkipInLOD="false" AnimationOverride="UserControlled" ContextVariables="" />
														</DefaultBranch>
													</Switch>
												</SuppressFailure>
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</IfGate>
									</Sequence>
								</Loop>
							</Sequence>
						</Parallel>
					</Sequence>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer>
			<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
			<ContinuousSwitch>
				<IfCondition failOnCondition="false" condition="$alias==$aliasInUse" />
				<IfCondition failOnCondition="false" condition="$alias==&apos;none&apos;">
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</IfCondition>
				<IfCondition failOnCondition="false" condition="$alias~=$aliasInUse">
					<Expression expressions="$aliasInUse = $alias" />
				</IfCondition>
			</ContinuousSwitch>
			<UnstanceAction unstance="$animation" locationObject="" slaveObject="" />
			<Sequence>
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;tagpoint_trackviewPlayer&apos;" prune="true" negprune="unknown" Parent="" Child="$tagpoint" Data="" />
				</GraphSearch>
				<LuaWrapper onEnter="XGenAIModule.GetEntityByWUID(data.tagpoint):AttachChild(entity.id,0)" onExit="entity:DetachThis()">
					<Sequence>
						<UrgencyDecorator Urgency="Instant">
							<UnstanceElement unstance="test_zachrana_synchroWalk_capon" locationObject="" slaveObject="" enabled="true">
								<Sequence>
									<WaitAction />
									<IfGate atomic="false" condition="$animation~= &apos;none&apos;" RunLogic="KeepRunning">
										<Loop count="-1">
											<SuppressFailure>
												<Sequence>
													<Expression expressions="$animationInUse = $animation" />
													<Parallel successMode="Any" failureMode="Any">
														<AnimationAction fragment="$animation" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
														<IfGate atomic="false" condition="$animation~=$animationInUse" RunLogic="KeepRunning">
															<Success />
														</IfGate>
													</Parallel>
												</Sequence>
											</SuppressFailure>
										</Loop>
									</IfGate>
								</Sequence>
							</UnstanceElement>
						</UrgencyDecorator>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</LuaWrapper>
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
			</Sequence>
			<Expression expressions="$disableRotations = !$dialogParameters.rotatePlayer &#10;$disableRestrictions = !$dialogParameters.hideNearbyNpcs" />
			<RequestDialog DecisionName="" DecisionAlias="$dialogParameters.alias" SoulsToMetaroles="$soulsToMetaroles" Once="false" ForceSubtitles="false" UseTwins="$dialogParameters.useTwinsAsInitiator" SendMessage="false" Greeting="$dialogParameters.enableGreeting" Ending="$dialogParameters.enableEnding" RequestChat="$dialogParameters.chat" AllowPositioning="$dialogParameters.movePlayer" DisableRotations="$disableRotations" DisableRestrictions="$disableRestrictions" AnimationOverride="$dialogParameters.defaultAnimState" ContextVariables="$dialogContext" DialogId="$dialogId" />
			<Expression expressions="$participants[0] = $recipient &#10;$participantsMetaroles.soul = $recipient &#10;$participantsMetaroles.metaroles = $recipientMetaroles" />
			<IfCondition failOnCondition="false" condition="$preset==$enum:dialogPreset.fader">
				<Expression expressions="$dialogParameters.putDownCarriedBody = true&#10;$dialogParameters.enableGreeting = false &#10;$dialogParameters.enableEnding = false" />
			</IfCondition>
			<IfCondition failOnCondition="false" condition="$preset==$enum:dialogPreset.ingame">
				<ForEach startIndex="0" step="1" array="$participants" iterator="" value="$participant" break="">
					<Sequence>
						<Expression expressions="$soulToMetaroles.soul = $participant" />
						<ForEach startIndex="0" step="1" array="$participantsMetaroles" iterator="" value="$participantMetaroles" break="">
							<IfCondition failOnCondition="false" condition="$participantMetaroles.soul == $participant">
								<Expression expressions="$soulToMetaroles.metaroles = $participantMetaroles.metaroles" />
							</IfCondition>
						</ForEach>
						<IfElseCondition failOnCondition="false" condition="$soulToMetaroles.soul == $this.id" saveVersion="2">
							<Then canSkip="1">
								<PushToArray array="$soulsToMetaroles" value="$soulToMetaroles" direction="Front" />
							</Then>
							<Else canSkip="1">
								<PushToArray array="$soulsToMetaroles" value="$soulToMetaroles" direction="Back" />
							</Else>
						</IfElseCondition>
					</Sequence>
				</ForEach>
			</IfCondition>
			<IfCondition failOnCondition="false" condition="$preset == $enum:dialogPreset.chat">
				<Expression expressions="$dialogParameters.chat = true &#10;$dialogParameters.enableGreeting = false &#10;$dialogParameters.enableEnding = false &#10;$dialogParameters.useTwinsAsInitiator = false" />
			</IfCondition>
			<ErrorNode Message="&apos;UNKNOWN PRESET&apos;" />
			<Sequence>
				<Selector>
					<FindInArray array="$participants" keyOut="$keyOut" condition="$__value == $this.id" />
					<PushToArray array="$participants" value="$this.id" direction="Back" />
				</Selector>
				<Expression expressions="$thisToMetaroles.soul = $this.id &#10;$thisToMetaroles.metaroles = $metarole" />
				<PushToArray array="$participantsMetaroles" value="$thisToMetaroles" direction="Back" />
			</Sequence>
			<Expression expressions="$dialogEnumType = $enum:dialogPreset.chat" />
			<Expression expressions="$dialogEnumType = $enum:dialogPreset.ingame" />
			<Function_speech_dialogInitiator alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" preset="$enum:dialogPreset.ingame" recipient="$__player" recipientMetaroles="" nodeLabel="69903833" />
			<Sequence>
				<Expression expressions="$parameters.alias = $alias &#10;$parameters.forceSubtitles = true" />
				<InstantSendMessageToNPC target="$this.id" variable="$parameters" />
			</Sequence>
			<Sequence>
				<Expression expressions="$parameters.alias = &apos;zachrana_jpArmadaPokracovani&apos; &#10;$parameters.forceSubtitles = true" />
				<InstantSendMessageToNPC target="$this.id" variable="$parameters" />
			</Sequence>
			<Sequence>
				<Expression expressions="$parameters.alias = $alias &#10;$parameters.forceSubtitles = true" />
				<InstantSendMessageToNPC target="$this.id" variable="$parameters" />
			</Sequence>
			<IfElseCondition failOnCondition="false" condition="$this.id == $__player" saveVersion="2">
				<Else canSkip="1">
					<Sequence>
						<RequestDialog DecisionName="" DecisionAlias="&apos;zachrana_jphenryTutorialChatNezToZacne&apos;" SoulsToMetaroles="$soulsToMetaroles" Once="false" ForceSubtitles="true" UseTwins="false" SendMessage="false" Greeting="false" Ending="false" RequestChat="true" AllowPositioning="false" DisableRotations="true" DisableRestrictions="true" AnimationOverride="UserControlled" ContextVariables="" DialogId="$dialogId" />
						<DoDialog DialogId="$dialogId" />
						<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" />
						<DoMonologue DecisionId="" DecisionAlias="&apos;zachrana_jpTutorialPokracovani&apos;" Metaroles="" SoulId="" ForceSubtitles="true" AllowMutedSouls="false" SkipInLOD="false" AnimationOverride="UserControlled" ContextVariables="" />
						<RequestDialog DecisionName="" DecisionAlias="&apos;zachrana_jphenryArmadaChat&apos;" SoulsToMetaroles="$soulsToMetaroles" Once="false" ForceSubtitles="true" UseTwins="false" SendMessage="false" Greeting="false" Ending="false" RequestChat="true" AllowPositioning="false" DisableRotations="true" DisableRestrictions="true" AnimationOverride="UserControlled" ContextVariables="" DialogId="$dialogId" />
						<DoDialog DialogId="$dialogId" />
						<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" />
						<DoMonologue DecisionId="" DecisionAlias="&apos;zachrana_jpArmadaPokracovani&apos;" Metaroles="" SoulId="" ForceSubtitles="true" AllowMutedSouls="false" SkipInLOD="false" AnimationOverride="UserControlled" ContextVariables="" />
						<RequestDialog DecisionName="" DecisionAlias="&apos;zachrana_jphenryVeSkalici&apos;" SoulsToMetaroles="$soulsToMetaroles" Once="false" ForceSubtitles="true" UseTwins="false" SendMessage="false" Greeting="false" Ending="false" RequestChat="true" AllowPositioning="false" DisableRotations="true" DisableRestrictions="true" AnimationOverride="UserControlled" ContextVariables="" DialogId="$dialogId" />
						<DoDialog DialogId="$dialogId" />
					</Sequence>
				</Else>
			</IfElseCondition>
			<SuppressFailure>
				<ErrorNode Message="&apos;INGAME&apos;" />
			</SuppressFailure>
			<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
			<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
			<GetTime TimeType="GameTime" OutVar="$time" Delta="" />
			<LogToConsole LogLevel="Error" Message="&apos;beforeChat: $time&apos;" />
			<GetTime TimeType="GameTime" OutVar="$time" Delta="" />
			<LogToConsole LogLevel="Error" Message="&apos;afterChat: $time&apos;" />
			<Loop count="-1">
				<ReinitVariable variable="$soulToMetaroles" />
			</Loop>
			<Expression expressions="$aliasInUse = &apos;none&apos;" />
			<LoopUntil until="Success" attemptCount="0" />
			<LoopUntil until="Success" attemptCount="0" />
			<LoopUntil until="Success" attemptCount="0" />
			<SuppressFailure>
				<Sequence>
					<IfGate atomic="false" condition="$alias~=&apos;none&apos;" RunLogic="KeepRunning">
						<Success />
					</IfGate>
					<Expression expressions="$aliasInUse = $alias" />
					<Switch>
						<IfCondition failOnCondition="false" condition="$dialogType == $enum:speech_ingameDialogType.Chat">
							<Sequence>
								<RequestDialog DecisionName="" DecisionAlias="$alias" SoulsToMetaroles="$soulsToMetaroles" Once="false" ForceSubtitles="true" UseTwins="false" SendMessage="false" Greeting="false" Ending="false" RequestChat="true" AllowPositioning="false" DisableRotations="true" DisableRestrictions="true" AnimationOverride="UserControlled" ContextVariables="" DialogId="$dialogId" />
								<Callback_empty EventName="&apos;OnFinished&apos;" />
								<DoDialog DialogId="$dialogId" />
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$dialogType == $enum:speech_ingameDialogType.Ingame">
							<Sequence>
								<RequestDialog DecisionName="" DecisionAlias="$alias" SoulsToMetaroles="$soulsToMetaroles" Once="false" ForceSubtitles="true" UseTwins="false" SendMessage="false" Greeting="false" Ending="false" RequestChat="false" AllowPositioning="false" DisableRotations="true" DisableRestrictions="true" AnimationOverride="UserControlled" ContextVariables="" DialogId="$dialogId" />
								<DoDialog DialogId="$dialogId" />
							</Sequence>
						</IfCondition>
						<DefaultBranch>
							<DoMonologue DecisionId="" DecisionAlias="$alias" Metaroles="" SoulId="" ForceSubtitles="true" AllowMutedSouls="false" SkipInLOD="false" AnimationOverride="UserControlled" ContextVariables="" />
						</DefaultBranch>
					</Switch>
					<IfGate atomic="false" condition="$alias~=$aliasInUse" RunLogic="KeepRunning">
						<Success />
					</IfGate>
				</Sequence>
			</SuppressFailure>
			<Expression expressions="$dialogParameters.useTwinsAsInitiator = false" />
			<IfCondition failOnCondition="false" condition="$trackviewMessage.type == &apos;chat&apos;" />
			<Success />
			<Expression expressions="$trackviewStarted=true" />
		</ForestContainer>
		<EditorData Signature="zachrana_ptacek_synchrowalk" EventSet="endNotification">
			<Variables>
				<Variable name="aliasInUse" comment="" />
				<Variable name="dialogEnumType" comment="" />
				<Variable name="dialogId" comment="" />
				<Variable name="dialogTypeInUse" comment="" />
				<Variable name="parameters" comment="" />
				<Variable name="soulsToMetaroles" comment="" />
				<Variable name="time" comment="" />
				<Variable name="trackviewAlias" comment="" />
				<Variable name="trackviewMessage" comment="" />
				<Variable name="trackviewStarted" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="animationName" comment="" />
				<Variable name="animationTag" comment="" />
				<Variable name="dialogType" comment="" />
				<Variable name="so" comment="" />
				<Variable name="unstanceAnimation" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_synchroWalk hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_synchroWalk>
						</EntityContext>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SetExternalLock>
									</ProcessMessage>
								</Loop>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</IfGate>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<RequestDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</RequestDialog>
																	<DoDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</DoDialog>
																</Sequence>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<RequestDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</RequestDialog>
																	<DoDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</DoDialog>
																</Sequence>
															</IfCondition>
															<DefaultBranch>
																<DoMonologue hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</DoMonologue>
															</DefaultBranch>
														</Switch>
													</SuppressFailure>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</IfGate>
										</Sequence>
									</Loop>
								</Sequence>
							</Parallel>
						</Sequence>
					</Parallel>
				</Behavior>
			</Root>
			<Forest>
				<Wait editorPosX="5780" editorPosY="1210" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Wait>
				<ContinuousSwitch editorPosX="5660" editorPosY="1250" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</IfCondition>
					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</IfCondition>
					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</IfCondition>
				</ContinuousSwitch>
				<UnstanceAction editorPosX="6460" editorPosY="-390" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</UnstanceAction>
				<Sequence editorPosX="4490" editorPosY="-650" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkDataFilter>
					</GraphSearch>
					<LuaWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
										<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
														<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</AnimationAction>
															<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</IfGate>
														</Parallel>
													</Sequence>
												</SuppressFailure>
											</Loop>
										</IfGate>
									</Sequence>
								</UnstanceElement>
							</UrgencyDecorator>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</LuaWrapper>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Sequence>
				<Expression editorPosX="6210" hasInputBreakpoint="0" comment="RequestDialog parameters are stupidly named, but we have no time to rename them" breakpointFlags="0">
					<OutputBreakpoints />
				</Expression>
				<RequestDialog editorPosX="6140" editorPosY="220" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</RequestDialog>
				<Expression editorPosX="6180" editorPosY="-70" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Expression>
				<IfCondition editorPosX="6260" editorPosY="50" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</IfCondition>
				<IfCondition editorPosX="6260" editorPosY="150" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<ForEach hasInputBreakpoint="0" comment="If there are metaroles specified, copy them." breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</IfCondition>
							</ForEach>
							<IfElseCondition hasInputBreakpoint="0" comment="INITIATOR HAS TO BE THE FIRST SOUL IN THE ARRAY!!!" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</PushToArray>
								</Then>
								<Else>
									<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</PushToArray>
								</Else>
							</IfElseCondition>
						</Sequence>
					</ForEach>
				</IfCondition>
				<IfCondition editorPosX="6260" editorPosY="240" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</IfCondition>
				<ErrorNode editorPosX="6260" editorPosY="330" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</ErrorNode>
				<Sequence editorPosX="6870" editorPosY="70" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FindInArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</FindInArray>
						<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</PushToArray>
					</Selector>
					<Expression hasInputBreakpoint="0" comment="just adding metarole, and initiator wuid to the participants" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
					<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</PushToArray>
				</Sequence>
				<Expression editorPosX="5520" editorPosY="-290" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Expression>
				<Expression editorPosX="5550" editorPosY="-140" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Expression>
				<Function_speech_dialogInitiator editorPosX="6230" editorPosY="550" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Function_speech_dialogInitiator>
				<Sequence editorPosX="180" editorPosY="1090" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
					<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</InstantSendMessageToNPC>
				</Sequence>
				<Sequence editorPosX="4690" editorPosY="1680" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
					<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</InstantSendMessageToNPC>
				</Sequence>
				<Sequence editorPosX="6280" editorPosY="740" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
					<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</InstantSendMessageToNPC>
				</Sequence>
				<IfElseCondition editorPosX="610" editorPosY="1740" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Else>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<RequestDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</RequestDialog>
							<DoDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</DoDialog>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<DoMonologue hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</DoMonologue>
							<RequestDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</RequestDialog>
							<DoDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</DoDialog>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<DoMonologue hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</DoMonologue>
							<RequestDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</RequestDialog>
							<DoDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</DoDialog>
						</Sequence>
					</Else>
				</IfElseCondition>
				<SuppressFailure editorPosX="6500" editorPosY="150" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</ErrorNode>
				</SuppressFailure>
				<Wait editorPosX="6490" editorPosY="250" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Wait>
				<Wait editorPosX="6470" editorPosY="250" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Wait>
				<GetTime editorPosX="5320" editorPosY="-220" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</GetTime>
				<LogToConsole editorPosX="5310" editorPosY="-110" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</LogToConsole>
				<GetTime editorPosX="6140" editorPosY="90" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</GetTime>
				<LogToConsole editorPosX="6360" editorPosY="100" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</LogToConsole>
				<Loop editorPosX="6620" editorPosY="440" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</ReinitVariable>
				</Loop>
				<Expression editorPosX="5070" editorPosY="890" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Expression>
				<LoopUntil editorPosX="5180" editorPosY="-250" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</LoopUntil>
				<LoopUntil editorPosX="5330" editorPosY="-100" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</LoopUntil>
				<LoopUntil editorPosX="5130" editorPosY="-50" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</LoopUntil>
				<SuppressFailure editorPosX="6780" editorPosY="440" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</IfGate>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<RequestDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</RequestDialog>
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
									<DoDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</DoDialog>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<RequestDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</RequestDialog>
									<DoDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</DoDialog>
								</Sequence>
							</IfCondition>
							<DefaultBranch>
								<DoMonologue hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</DoMonologue>
							</DefaultBranch>
						</Switch>
						<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</IfGate>
					</Sequence>
				</SuppressFailure>
				<Expression editorPosX="6510" editorPosY="150" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Expression>
				<IfCondition editorPosX="1540" editorPosY="50" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</IfCondition>
				<Success editorPosX="1510" editorPosY="150" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Success>
				<Expression editorPosX="1540" editorPosY="-50" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Expression>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_getsPotion" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextPresetElement contextPreset="switch_unresponsive" enabled="true">
					<EntityContext context="ForceForbidAutoTorch" target="">
						<StanceElement smartObject="$data" stance="lying" allowAny="false" enabled="true">
							<Sequence>
								<UnstanceAction unstance="lyingInjured_bedLow" locationObject="" slaveObject="" />
								<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;200s&apos;" LockManagerType="Local" SemaphoreName="&apos;healingSync&apos;" RunLogic="Halt">
									<UnstanceElement unstance="lyingInjured_bedLow" locationObject="" slaveObject="" enabled="true">
										<SuppressFailure>
											<JoinedAnimationAction requiresMovement="false" lockContext="$data" lockName="&apos;zachrana_injuredPotion&apos;" lockCount="2" timeout="&apos;5s&apos;" ignoreOthersLeaving="false" fragment="&apos;HealingGroundPotion&apos;" tags="&apos;lyingGround&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
										</SuppressFailure>
									</UnstanceElement>
								</Synchronize>
							</Sequence>
						</StanceElement>
					</EntityContext>
				</EntityContextPresetElement>
			</Behavior>
		</Root>
		<ForestContainer>
			<JoinedAnimationAction requiresMovement="false" lockContext="$data" lockName="&apos;injuredPotion&apos;" lockCount="2" timeout="&apos;5s&apos;" ignoreOthersLeaving="false" fragment="&apos;HealingBedPotion&apos;" tags="&apos;lying&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
		</ForestContainer>
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextPresetElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
									<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</JoinedAnimationAction>
											</SuppressFailure>
										</UnstanceElement>
									</Synchronize>
								</Sequence>
							</StanceElement>
						</EntityContext>
					</EntityContextPresetElement>
				</Behavior>
			</Root>
			<Forest>
				<JoinedAnimationAction editorPosX="2010" editorPosY="270" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</JoinedAnimationAction>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="dog_sniff" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<UnstanceAction unstance="animal_dog_sniff" locationObject="" slaveObject="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="dog_layDown" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<StanceElement smartObject="" stance="lying" allowAny="false" enabled="true">
						<WaitAction />
					</StanceElement>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<UnstanceAction unstance="dog_LayingDown" locationObject="" slaveObject="" />
		</ForestContainer>
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
						</StanceElement>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<UnstanceAction editorPosX="970" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</UnstanceAction>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="exactMove_switchDialog" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="speech_readyForSwitchDialog" target="">
					<Sequence>
						<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-200" editorPosY="-20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExactMove>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>