<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="test_synchroWalk_player" is_function="0">
    <Variables>
      <Variable name="anchor" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="animationBeingUsed" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="teleport" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
      <Variable name="animation" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
      <Variable name="unstanceAnimation" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;synchroWalk_teleport&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$teleport" />
          </GraphSearch>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;synchroWalk_anchor&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$anchor" />
          </GraphSearch>
          <TeleportAction Position="$teleport" />
          <LuaWrapper onEnter="XGenAIModule.GetEntityByWUID(data.anchor):AttachChild(entity.id, 0)" onExit="entity:DetachThis()">
            <Sequence>
              <Callback_empty EventName="&apos;OnFinished&apos;" />
              <UrgencyDecorator Urgency="Instant">
                <UnstanceElement unstance="$unstanceAnimation" locationObject="" slaveObject="">
                  <While doFail="false" propagateChildFail="false" condition="true">
                    <IfGate atomic="false" condition="$animation ~= &apos;none&apos;" RunLogic="KeepRunning">
                      <Sequence>
                        <Expression expressions="$animationBeingUsed = $animation" />
                        <Parallel successMode="Any" failureMode="Any">
                          <Sequence>
                            <AnimationAction fragment="$animation" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" />
                            <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                          </Sequence>
                          <IfGate atomic="false" condition="$animation ~= $animationBeingUsed" RunLogic="KeepRunning">
                            <Success />
                          </IfGate>
                        </Parallel>
                      </Sequence>
                    </IfGate>
                  </While>
                </UnstanceElement>
              </UrgencyDecorator>
            </Sequence>
          </LuaWrapper>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer>
      <Sequence>
        <IfGate atomic="false" condition="$animation ~= &apos;none&apos;" RunLogic="KeepRunning">
          <Success />
        </IfGate>
      </Sequence>
      <TeleportAction Position="$teleport" />
    </ForestContainer>
    <EditorData Signature="zachrana_ptacek_synchrowalk" EventSet="endNotification">
      <Variables>
        <Variable name="anchor" comment="" />
        <Variable name="animationBeingUsed" comment="" />
        <Variable name="teleport" comment="" />
        <Variable name="alias" comment="" />
        <Variable name="animation" comment="" />
        <Variable name="unstanceAnimation" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </AnyLinkFilter>
            </GraphSearch>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </AnyLinkFilter>
            </GraphSearch>
            <TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </TeleportAction>
            <LuaWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Callback_empty>
                <UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Expression>
                          <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                                <OutputBreakpoints />
                              </AnimationAction>
                              <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Wait>
                            </Sequence>
                            <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Success>
                            </IfGate>
                          </Parallel>
                        </Sequence>
                      </IfGate>
                    </While>
                  </UnstanceElement>
                </UrgencyDecorator>
              </Sequence>
            </LuaWrapper>
          </Sequence>
        </Behavior>
      </Root>
      <Forest>
        <Sequence editorPosX="-10" editorPosY="430" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
          <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Success>
          </IfGate>
        </Sequence>
        <TeleportAction editorPosX="-10" editorPosY="580" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
        </TeleportAction>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="test_synchroWalk_capon" is_function="0">
    <Variables>
      <Variable name="aliasBeingUsed" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="anchor" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="animationBeingUsed" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="teleport" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
      <Variable name="animation" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
      <Variable name="unstanceAnimation" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;synchroWalk_teleport&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$teleport" />
          </GraphSearch>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;synchroWalk_anchor&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$anchor" />
          </GraphSearch>
          <TeleportAction Position="$teleport" />
          <LuaWrapper onEnter="XGenAIModule.GetEntityByWUID(data.anchor):AttachChild(entity.id, 0)" onExit="entity:DetachThis()">
            <Sequence>
              <Callback_empty EventName="&apos;OnFinished&apos;" />
              <Parallel successMode="Any" failureMode="Any">
                <UrgencyDecorator Urgency="Instant">
                  <UnstanceElement unstance="$unstanceAnimation" locationObject="" slaveObject="">
                    <While doFail="false" propagateChildFail="false" condition="true">
                      <IfGate atomic="false" condition="$animation ~= &apos;none&apos;" RunLogic="KeepRunning">
                        <Sequence>
                          <Expression expressions="$animationBeingUsed = $animation" />
                          <Parallel successMode="Any" failureMode="Any">
                            <Sequence>
                              <AnimationAction fragment="$animation" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" />
                              <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                            </Sequence>
                            <IfGate atomic="false" condition="$animation ~= $animationBeingUsed" RunLogic="KeepRunning">
                              <Success />
                            </IfGate>
                          </Parallel>
                        </Sequence>
                      </IfGate>
                    </While>
                  </UnstanceElement>
                </UrgencyDecorator>
                <While doFail="false" propagateChildFail="false" condition="true">
                  <IfGate atomic="false" condition="$alias ~= &apos;none&apos;" RunLogic="KeepRunning">
                    <Sequence>
                      <Expression expressions="$aliasBeingUsed = $alias" />
                      <Parallel successMode="Any" failureMode="Any">
                        <Sequence>
                          <LoopUntil until="Success" attemptCount="0">
                            <Function_speech_dialogInitiator alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="$__null" customParameters="$__null" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="35877720" />
                          </LoopUntil>
                          <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                        </Sequence>
                        <IfGate atomic="false" condition="$alias ~= $aliasBeingUsed" RunLogic="KeepRunning">
                          <Success />
                        </IfGate>
                      </Parallel>
                    </Sequence>
                  </IfGate>
                </While>
              </Parallel>
            </Sequence>
          </LuaWrapper>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer>
      <Sequence>
        <IfGate atomic="false" condition="$animation ~= &apos;none&apos;" RunLogic="KeepRunning">
          <Success />
        </IfGate>
      </Sequence>
      <TeleportAction Position="$teleport" />
    </ForestContainer>
    <EditorData Signature="zachrana_ptacek_synchrowalk" EventSet="endNotification">
      <Variables>
        <Variable name="aliasBeingUsed" comment="" />
        <Variable name="anchor" comment="" />
        <Variable name="animationBeingUsed" comment="" />
        <Variable name="teleport" comment="" />
        <Variable name="alias" comment="" />
        <Variable name="animation" comment="" />
        <Variable name="unstanceAnimation" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </AnyLinkFilter>
            </GraphSearch>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </AnyLinkFilter>
            </GraphSearch>
            <TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </TeleportAction>
            <LuaWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Callback_empty>
                <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Expression>
                            <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                                <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                  <OutputBreakpoints />
                                </AnimationAction>
                                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </Wait>
                              </Sequence>
                              <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                                <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </Success>
                              </IfGate>
                            </Parallel>
                          </Sequence>
                        </IfGate>
                      </While>
                    </UnstanceElement>
                  </UrgencyDecorator>
                  <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                        <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Function_speech_dialogInitiator>
                            </LoopUntil>
                            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Wait>
                          </Sequence>
                          <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Success>
                          </IfGate>
                        </Parallel>
                      </Sequence>
                    </IfGate>
                  </While>
                </Parallel>
              </Sequence>
            </LuaWrapper>
          </Sequence>
        </Behavior>
      </Root>
      <Forest>
        <Sequence editorPosY="470" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
          <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Success>
          </IfGate>
        </Sequence>
        <TeleportAction editorPosX="-30" editorPosY="600" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
        </TeleportAction>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>