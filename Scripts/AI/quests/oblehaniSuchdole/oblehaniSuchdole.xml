<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="zizka_barkAndFight" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="questWait" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="men_waitToGetOrders" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="$string" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Move>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="guard_sleep" is_function="0">
		<Variables>
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="crime_keepItems" enabled="true">
					<Parallel successMode="Any" failureMode="Any">
						<Sequence>
							<ExactMove directionType="AlignWithEntity" directionSpecification="$wuid" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							<DecoratorBuff BuffId="&apos;cbbedb16-8ab8-4583-b740-a0e8a2521d95&apos;" SoulWUID="$this.id">
								<Parallel successMode="All" failureMode="Any">
									<Sequence>
										<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_halbert" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<GetWeaponsFromWeaponSet WeaponSet="Oversized" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
											</Search>
											<Exec canSkip="1">
												<UnstanceAction unstance="halberdierGuard_sleeping" locationObject="$wuid" slaveObject="" />
											</Exec>
										</HandContentElement>
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
									<Function_monologRepeat alias="$string" cooldown="&apos;9s&apos;" repeat="-1" nodeLabel="57926253" />
								</Parallel>
							</DecoratorBuff>
						</Sequence>
						<While doFail="false" propagateChildFail="false" condition="true">
							<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
								<Selector>
									<IfCondition failOnCondition="true" condition="$hitReaction.attacker == $__player  &#10;&amp;  &#10;($hitReaction.hitType == $enum:HitReactionType.Melee &#10;| &#10;$hitReaction.hitType == $enum:HitReactionType.Bullet)">
										<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
									</IfCondition>
									<IfCondition failOnCondition="true" condition="$hitReaction.attacker == $__player  &#10;&amp;  &#10;$hitReaction.hitType == $enum:HitReactionType.Stone">
										<Function_speech_monolog alias="$string" canBeDelayed="false" context="" dramaticBark="false" lookAtId="" metarole="" target="" wait="false" nodeLabel="33774670" />
									</IfCondition>
									<Success />
								</Selector>
							</ProcessMessage>
						</While>
					</Parallel>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="endNotification">
			<Variables>
				<Variable name="hitReaction" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
								<DecoratorBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetWeaponsFromWeaponSet>
												</Search>
												<Exec>
													<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</UnstanceAction>
												</Exec>
											</HandContentElement>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
										<Function_monologRepeat hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_monologRepeat>
									</Parallel>
								</DecoratorBuff>
							</Sequence>
							<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</InstantCallback_empty>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_monolog>
										</IfCondition>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Selector>
								</ProcessMessage>
							</While>
						</Parallel>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="guard_watch" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="crime_keepItems">
					<Sequence>
						<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
						<UnstanceAction unstance="guard" locationObject="$data" slaveObject="" />
						<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-200" editorPosY="40" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExactMove>
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="nightAttack_moveToBattle" is_function="0">
		<Variables>
			<Variable name="moveTarget" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;nightAttack&apos;" prune="true" negprune="unknown" Parent="" Child="$moveTarget" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.500000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$moveTarget" destinationSpecification2="" destinationSpecification3="" speed="FastRun" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Success />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="moveTarget" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Success>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="preparations_moveToBattle" is_function="0">
		<Variables>
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="moveTarget" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;combat_anchor&apos;" prune="true" negprune="unknown" Parent="" Child="$moveTarget" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<UrgencyDecorator Urgency="Instant">
						<Selector>
							<HandContentElement hand="Left" item="$leftHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_ranged" useDecision="true" enabled="true" saveVersion="2">
								<Search canSkip="1">
									<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
								</Search>
								<Exec canSkip="1">
									<Sequence>
										<WaitAction />
										<IsWeaponLoaded failOnCondition="false" saveVersion="2">
											<Then canSkip="1">
												<Success />
											</Then>
											<Else canSkip="1">
												<LoadWeaponAction />
											</Else>
										</IsWeaponLoaded>
									</Sequence>
								</Exec>
							</HandContentElement>
							<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_ranged" useDecision="true" enabled="true" saveVersion="2">
								<Search canSkip="1">
									<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
								</Search>
								<Exec canSkip="1">
									<Sequence>
										<WaitAction />
										<IsWeaponLoaded failOnCondition="false" saveVersion="2">
											<Then canSkip="1">
												<Success />
											</Then>
											<Else canSkip="1">
												<LoadWeaponAction />
											</Else>
										</IsWeaponLoaded>
									</Sequence>
								</Exec>
							</HandContentElement>
						</Selector>
					</UrgencyDecorator>
					<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;runToPalisade&apos;">
						<Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="&apos;1000ms&apos;" />
					</Semaphore>
					<AnyDecorator preset="crime_keepItems" enabled="true">
						<DisableCollisionAvoidance>
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$moveTarget" destinationSpecification2="" destinationSpecification3="" speed="FastRun" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
						</DisableCollisionAvoidance>
					</AnyDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="leftHand" comment="" />
				<Variable name="moveTarget" comment="" />
				<Variable name="rightHand" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-310" editorPosY="-10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetWeaponsFromWeaponSet>
									</Search>
									<Exec>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</WaitAction>
											<IsWeaponLoaded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Then>
												<Else>
													<LoadWeaponAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LoadWeaponAction>
												</Else>
											</IsWeaponLoaded>
										</Sequence>
									</Exec>
								</HandContentElement>
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetWeaponsFromWeaponSet>
									</Search>
									<Exec>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</WaitAction>
											<IsWeaponLoaded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Then>
												<Else>
													<LoadWeaponAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LoadWeaponAction>
												</Else>
											</IsWeaponLoaded>
										</Sequence>
									</Exec>
								</HandContentElement>
							</Selector>
						</UrgencyDecorator>
						<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Semaphore>
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DisableCollisionAvoidance hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
							</DisableCollisionAvoidance>
						</AnyDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="enemies_moveToBattle" is_function="0">
		<Variables>
			<Variable name="moveTarget" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="nextTp" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="repeatMove" type="_bool" values="true" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;nightAttack_enemies&apos;" prune="true" negprune="unknown" Parent="" Child="$moveTarget" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<While doFail="false" propagateChildFail="false" condition="$repeatMove">
					<Sequence>
						<Parallel successMode="Any" failureMode="Any">
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$moveTarget" destinationSpecification2="" destinationSpecification3="" speed="FastRun" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							<Sequence>
								<Wait duration="&apos;30s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								<Expression expressions="$repeatMove = false" />
							</Sequence>
						</Parallel>
						<Selector>
							<Sequence>
								<GraphSearch Origin="$moveTarget" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;nightAttack_enemies&apos;" prune="true" negprune="unknown" Parent="" Child="$nextTp" Data="" />
								</GraphSearch>
								<Expression expressions="$moveTarget = $nextTp" />
							</Sequence>
							<Expression expressions="$repeatMove = false" />
						</Selector>
					</Sequence>
				</While>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="moveTarget" comment="" />
				<Variable name="nextTp" comment="" />
				<Variable name="repeatMove" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
							</Parallel>
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Selector>
						</Sequence>
					</While>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_waitForPlayer" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid_target" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$wuid_target" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuid_target" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<AreaPresenceGate aiObjects="$__player" area="$wuid" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
						<Sequence>
							<Turn target="$__player" align="false" />
							<Selector>
								<Sequence>
									<ForceLook LookTarget="$__player" DisableVariations="false">
										<Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="41595315" />
									</ForceLook>
									<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
								</Sequence>
								<Success />
							</Selector>
							<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</AreaPresenceGate>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuid_wuid_string" EventSet="endNotification">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
				<Variable name="wuid_target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Turn>
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</ForceLook>
										<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</InstantCallback_empty>
									</Sequence>
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</Selector>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</AreaPresenceGate>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="zizka_callsOnPlayer" is_function="0">
		<Variables>
			<Variable name="animationSpot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$tagpoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;firstSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$animationSpot" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<Parallel successMode="All" failureMode="Any">
						<Loop count="2">
							<Function_speech_monolog alias="&apos;oblehaniSuchdole_zizkaBarkujeUSchoduNaObrance&apos;" canBeDelayed="false" context="" dramaticBark="false" lookAtId="$__player" metarole="" target="" wait="true" nodeLabel="40648033" />
						</Loop>
						<AnimationAction fragment="&apos;Commander_Urge&apos;" tags="" eventReferenceObject="" alignObject="$animationSpot" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
					</Parallel>
					<DisableCollisionAvoidance>
						<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					</DisableCollisionAvoidance>
					<Parallel successMode="Any" failureMode="Any">
						<Sequence>
							<Parallel successMode="All" failureMode="Any">
								<Loop count="2">
									<Function_speech_monolog alias="&apos;oblehaniSuchdole_zizkaBarkujeUSchoduNaObrance&apos;" canBeDelayed="false" context="" dramaticBark="false" lookAtId="$__player" metarole="" target="" wait="true" nodeLabel="12363916" />
								</Loop>
								<UnstanceAction unstance="CommanderSpeech" locationObject="$tagpoint" slaveObject="" />
							</Parallel>
							<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
						<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
							<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.MajorInjury">
								<Success />
							</IfCondition>
						</ProcessMessage>
					</Parallel>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables>
				<Variable name="animationSpot" comment="" />
				<Variable name="hitReaction" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-210" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_monolog>
							</Loop>
							<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnimationAction>
						</Parallel>
						<DisableCollisionAvoidance hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExactMove>
						</DisableCollisionAvoidance>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_monolog>
									</Loop>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
								</Parallel>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
							<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</IfCondition>
							</ProcessMessage>
						</Parallel>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="barkOnPlayer" is_function="0">
		<Variables>
			<Variable name="guardArea" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="area" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="target" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$target" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$target" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<AreaPresenceGate aiObjects="$__player" area="$area" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
						<Sequence>
							<Turn target="$__player" align="false" />
							<Function_speech_schedulerMonolog alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$__player" metarole="" subtitlesDown="false" nodeLabel="18870981" />
							<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="&apos;7s&apos;" skipInLOD="false" />
						</Sequence>
					</AreaPresenceGate>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="oblehaniSuchdole_target_area_alias" EventSet="">
			<Variables>
				<Variable name="guardArea" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="area" comment="" />
				<Variable name="target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Turn>
								<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerMonolog>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</AreaPresenceGate>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="exactMoveAndWait" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="guard_pushLadders" is_function="0">
		<Variables>
			<Variable name="ladder" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ladders" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Parameters>
			<Variable name="firstWuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="secondWuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="crime_keepItems">
					<Sequence>
						<GraphSearch Origin="$secondWuid" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;ladder&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							<Nodalyzer Quantifiers="ForAll" Parent="" Child="$ladders" saveVersion="2">
								<Child0 canSkip="1">
									<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
								</Child0>
							</Nodalyzer>
						</GraphSearch>
						<ForEach startIndex="0" step="1" array="$ladders" iterator="" value="$ladder" break="">
							<Function_npc_pushLadder guardArea="$firstWuid" ladderSO="$ladder" nodeLabel="81438293" />
						</ForEach>
					</Sequence>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuid_wuid" EventSet="">
			<Variables>
				<Variable name="ladder" comment="" />
				<Variable name="ladders" comment="" />
				<Variable name="firstWuid" comment="" />
				<Variable name="secondWuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
								<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Child0>
										<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RangeSorter>
									</Child0>
								</Nodalyzer>
							</GraphSearch>
							<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_npc_pushLadder hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_npc_pushLadder>
							</ForEach>
						</Sequence>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_prayingWoman" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$data" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<UnstanceAction unstance="Quest_PrayingNearDead_noAlign" locationObject="$data" slaveObject="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="nightAttackEnemy_kneel" is_function="0">
		<Variables>
			<Variable name="animTarget" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;animTargetTp&apos;" prune="true" negprune="unknown" Parent="" Child="$animTarget" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<StanceElement smartObject="$animTarget" stance="crouch" allowAny="false">
					<Sequence>
						<WaitAction />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="animTarget" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="nightAttackEnemy_nervous" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="nightAttackEnemy_crouching" is_function="0">
		<Variables>
			<Variable name="animTarget" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;animTargetTp&apos;" prune="true" negprune="unknown" Parent="" Child="$animTarget" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="Quest_BrabantHidingStairs" locationObject="$animTarget" slaveObject="" />
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="animTarget" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="nightAttackEnemy_nervousChatting" is_function="0">
		<Variables>
			<Variable name="animTarget" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;animTargetTp&apos;" prune="true" negprune="unknown" Parent="" Child="$animTarget" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<UrgencyDecorator Urgency="Instant">
						<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_halbert" useDecision="true" enabled="true" saveVersion="2">
							<Search canSkip="1">
								<GetWeaponsFromWeaponSet WeaponSet="Oversized" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
							</Search>
							<Exec canSkip="1">
								<WaitAction />
							</Exec>
						</HandContentElement>
					</UrgencyDecorator>
					<AnyDecorator preset="crime_keepItems" enabled="true">
						<Sequence>
							<UnstanceAction unstance="m50_wallHoleObserving" locationObject="$animTarget" slaveObject="" />
							<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="12.000000" High="12.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
								<Sequence>
									<Function_speech_monolog alias="&apos;oblehaniSuchdole_podezrelyHlidacVarujeUtocniky&apos;" canBeDelayed="false" context="" dramaticBark="false" lookAtId="" metarole="" target="" wait="false" nodeLabel="99364020" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</DistanceGate>
						</Sequence>
					</AnyDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<GetWeaponsFromWeaponSet WeaponSet="Oversized" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
			<IfElseCondition failOnCondition="false" condition="$leftHand == $__null" saveVersion="2">
				<Then canSkip="1">
					<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<Success />
						</Search>
						<Exec canSkip="1">
							<WaitAction />
						</Exec>
					</HandContentElement>
				</Then>
				<Else canSkip="1">
					<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<Success />
						</Search>
						<Exec canSkip="1">
							<HandContentElement hand="Left" item="$leftHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_shield" useDecision="true" enabled="true" saveVersion="2">
								<Search canSkip="1">
									<Success />
								</Search>
								<Exec canSkip="1">
									<WaitAction />
								</Exec>
							</HandContentElement>
						</Exec>
					</HandContentElement>
				</Else>
			</IfElseCondition>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="animTarget" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Search>
									<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetWeaponsFromWeaponSet>
								</Search>
								<Exec>
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
								</Exec>
							</HandContentElement>
						</UrgencyDecorator>
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
								<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_monolog>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</DistanceGate>
							</Sequence>
						</AnyDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<GetWeaponsFromWeaponSet editorPosX="990" editorPosY="-260" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</GetWeaponsFromWeaponSet>
				<IfElseCondition editorPosX="1000" editorPosY="-140" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Then>
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Search>
							<Exec>
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
							</Exec>
						</HandContentElement>
					</Then>
					<Else>
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Search>
							<Exec>
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Search>
									<Exec>
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</Exec>
								</HandContentElement>
							</Exec>
						</HandContentElement>
					</Else>
				</IfElseCondition>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="nightAttackEnemy_waiting" is_function="0">
		<Variables>
			<Variable name="animTarget" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;animTargetTp&apos;" prune="true" negprune="unknown" Parent="" Child="$animTarget" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
					<IfElseCondition failOnCondition="false" condition="$leftHand == $__null" saveVersion="2">
						<Then canSkip="1">
							<HandContentElement hand="Right" item="$rightHand" allowAny="false" decisionLabel="battle_weapon" useDecision="true" saveVersion="2">
								<Search canSkip="1">
									<Success />
								</Search>
								<Exec canSkip="1">
									<WaitAction />
								</Exec>
							</HandContentElement>
						</Then>
						<Else canSkip="1">
							<HandContentElement hand="Right" item="$rightHand" allowAny="false" decisionLabel="battle_weapon" useDecision="true" saveVersion="2">
								<Search canSkip="1">
									<Success />
								</Search>
								<Exec canSkip="1">
									<HandContentElement hand="Left" item="$leftHand" allowAny="false" decisionLabel="battle_shield" useDecision="true" saveVersion="2">
										<Search canSkip="1">
											<Success />
										</Search>
										<Exec canSkip="1">
											<WaitAction />
										</Exec>
									</HandContentElement>
								</Exec>
							</HandContentElement>
						</Else>
					</IfElseCondition>
					<AnyDecorator preset="crime_keepItems">
						<ExactMove directionType="AlignWithEntity" directionSpecification="$animTarget" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$animTarget" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					</AnyDecorator>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="animTarget" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetWeaponsFromWeaponSet>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Search>
									<Exec>
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</Exec>
								</HandContentElement>
							</Then>
							<Else>
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Search>
									<Exec>
										<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Search>
												<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Success>
											</Search>
											<Exec>
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
											</Exec>
										</HandContentElement>
									</Exec>
								</HandContentElement>
							</Else>
						</IfElseCondition>
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExactMove>
						</AnyDecorator>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_sittingUnstanceAction" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$wuid" stance="sitting" allowAny="false">
					<Sequence>
						<UnstanceAction unstance="$string" locationObject="$wuid" slaveObject="" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer>
			<UnstanceAction unstance="AlertedLookingAround" locationObject="" slaveObject="" />
		</ForestContainer>
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest>
				<UnstanceAction editorPosX="881" editorPosY="-21" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</UnstanceAction>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="zizka_callingMen" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Function_speech_monolog alias="&apos;oblehaniSuchdole_zizkaNaKonciBitvySvolaMuze&apos;" canBeDelayed="false" context="" dramaticBark="false" lookAtId="" metarole="" target="" wait="false" nodeLabel="60413119" />
					<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="endNotification">
			<Variables>
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_monolog>
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="zizka_givingOrders" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Function_speech_monolog alias="&apos;oblehaniSuchdole_zizkaDavaRozkazyPoNocnimUtoku&apos;" canBeDelayed="false" context="" dramaticBark="false" lookAtId="" metarole="" target="" wait="true" nodeLabel="93756245" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="endNotification">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_monolog>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="allies_waitingForBattle" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="allies_waitingForOrders" is_function="0">
		<Variables>
			<Variable name="point" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="points" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;nastup&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
					<Nodalyzer Quantifiers="ForAll" Parent="" Child="$points" saveVersion="2">
						<Child0 canSkip="1">
							<RangeSorter point="" SortOrder="Ascending" Source="Child" />
						</Child0>
					</Nodalyzer>
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<ForEach startIndex="0" step="1" array="$points" iterator="" value="$point" break="">
					<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;0s&apos;" LockManagerType="Local" SemaphoreName="&apos;$point&apos;">
						<Sequence>
							<ExactMove directionType="AlignWithEntity" directionSpecification="$point" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$point" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</Semaphore>
				</ForEach>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="point" comment="" />
				<Variable name="points" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
						<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child0>
								<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</RangeSorter>
							</Child0>
						</Nodalyzer>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Semaphore>
					</ForEach>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="nightAttackEnemy_runToGate" is_function="0">
		<Variables>
			<Variable name="animTarget" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="animTargets" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;brana&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
					<Nodalyzer Quantifiers="ForAll" Parent="" Child="$animTargets" saveVersion="2" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
					<IfElseCondition failOnCondition="false" condition="$leftHand == $__null" saveVersion="2">
						<Then canSkip="1">
							<HandContentElement hand="Right" item="$rightHand" allowAny="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
								<Search canSkip="1">
									<Success />
								</Search>
								<Exec canSkip="1">
									<WaitAction />
								</Exec>
							</HandContentElement>
						</Then>
						<Else canSkip="1">
							<HandContentElement hand="Right" item="$rightHand" allowAny="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
								<Search canSkip="1">
									<Success />
								</Search>
								<Exec canSkip="1">
									<HandContentElement hand="Left" item="$leftHand" allowAny="false" decisionLabel="battle_shield" useDecision="true" enabled="true" saveVersion="2">
										<Search canSkip="1">
											<Success />
										</Search>
										<Exec canSkip="1">
											<WaitAction />
										</Exec>
									</HandContentElement>
								</Exec>
							</HandContentElement>
						</Else>
					</IfElseCondition>
					<AnyDecorator preset="crime_keepItems" enabled="true">
						<ForEach startIndex="0" step="1" array="$animTargets" iterator="$animTarget" value="" break="">
							<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;0s&apos;" LockManagerType="Local" SemaphoreName="&apos;$animTarget&apos;">
								<Sequence>
									<ExactMove directionType="AlignWithEntity" directionSpecification="$animTarget" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$animTarget" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Sequence>
							</Semaphore>
						</ForEach>
					</AnyDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="animTarget" comment="" />
				<Variable name="animTargets" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
						<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
						</Nodalyzer>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetWeaponsFromWeaponSet>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Search>
									<Exec>
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</Exec>
								</HandContentElement>
							</Then>
							<Else>
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Search>
									<Exec>
										<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Search>
												<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Success>
											</Search>
											<Exec>
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
											</Exec>
										</HandContentElement>
									</Exec>
								</HandContentElement>
							</Else>
						</IfElseCondition>
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ExactMove>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Semaphore>
							</ForEach>
						</AnyDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="preparations_moveToBattle_goto" is_function="0">
		<Variables>
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="tagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<UrgencyDecorator Urgency="Instant">
						<Selector>
							<HandContentElement hand="Left" item="$leftHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_ranged" useDecision="true" enabled="true" saveVersion="2">
								<Search canSkip="1">
									<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
								</Search>
								<Exec canSkip="1">
									<Sequence>
										<WaitAction />
										<IsWeaponLoaded failOnCondition="false" saveVersion="2">
											<Then canSkip="1">
												<Success />
											</Then>
										</IsWeaponLoaded>
									</Sequence>
								</Exec>
							</HandContentElement>
							<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_ranged" useDecision="true" enabled="true" saveVersion="2">
								<Search canSkip="1">
									<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
								</Search>
								<Exec canSkip="1">
									<Sequence>
										<WaitAction />
										<IsWeaponLoaded failOnCondition="false" saveVersion="2">
											<Then canSkip="1">
												<Success />
											</Then>
										</IsWeaponLoaded>
									</Sequence>
								</Exec>
							</HandContentElement>
						</Selector>
					</UrgencyDecorator>
					<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;runToPalisade&apos;">
						<Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="" />
					</Semaphore>
					<AnyDecorator preset="crime_keepItems" enabled="true">
						<DisableCollisionAvoidance>
							<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="FastRun" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
						</DisableCollisionAvoidance>
					</AnyDecorator>
					<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
					<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="goto" EventSet="endNotification">
			<Variables>
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="tagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetWeaponsFromWeaponSet>
									</Search>
									<Exec>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</WaitAction>
											<IsWeaponLoaded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Then>
											</IsWeaponLoaded>
										</Sequence>
									</Exec>
								</HandContentElement>
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetWeaponsFromWeaponSet>
									</Search>
									<Exec>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</WaitAction>
											<IsWeaponLoaded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Then>
											</IsWeaponLoaded>
										</Sequence>
									</Exec>
								</HandContentElement>
							</Selector>
						</UrgencyDecorator>
						<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Semaphore>
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DisableCollisionAvoidance hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
							</DisableCollisionAvoidance>
						</AnyDecorator>
						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantCallback_empty>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_cryingOnBench" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$__resource.id" stance="sitting" allowAny="false" enabled="true">
					<Sequence>
						<UnstanceAction unstance="cryingOnBench" locationObject="$__resource.id" slaveObject="" />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="dobros_practiceShooting" is_function="0">
		<Variables>
			<Variable name="battlement" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="shootingTarget" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Left" item="$leftHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="Label1" useDecision="false" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
					</Search>
					<Exec canSkip="1">
						<MinigameElement minigameType="BattleArchery" minigameObject="$battlement" decisionLabel="battle_archery" useDecision="true" enabled="true" saveVersion="2">
							<Search canSkip="1">
								<Sequence>
									<GraphSearch Origin="$data" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;target&apos;" prune="true" negprune="unknown" Parent="" Child="$shootingTarget" Data="" />
									</GraphSearch>
									<GraphSearch Origin="$data" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;battlement&apos;" prune="true" negprune="unknown" Parent="" Child="$battlement" Data="" />
									</GraphSearch>
								</Sequence>
							</Search>
							<Exec canSkip="1">
								<Sequence>
									<InstantSetTarget Target="$shootingTarget" />
									<WeaponAutomationDecorator WeaponChange="missile" active="true">
										<MeleeOffenseAutomationDecorator active="true">
											<Sequence>
												<WaitAction />
												<Wait duration="&apos;180s&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</MeleeOffenseAutomationDecorator>
									</WeaponAutomationDecorator>
								</Sequence>
							</Exec>
						</MinigameElement>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="battlement" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="shootingTarget" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="190" editorPosY="120" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetWeaponsFromWeaponSet>
						</Search>
						<Exec>
							<MinigameElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Search>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
									</Sequence>
								</Search>
								<Exec>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<InstantSetTarget hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</InstantSetTarget>
										<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WaitAction>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</MeleeOffenseAutomationDecorator>
										</WeaponAutomationDecorator>
									</Sequence>
								</Exec>
							</MinigameElement>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>