<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_getKnownInformationForSecondArrest" is_function="1">
		<Variables>
			<Variable name="civilians" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="civilians_val" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="dummy_int" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="lastArrester" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="locationGUID" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="needToAddLastArrester" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="needToAddThis" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="punishmentArea" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="punishmentLocation" type="enum:crime_punishmentLocation" values="" isPersistent="0" form="single" />
			<Variable name="qso_openworld" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="validCivilians" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Parameters>
			<Variable name="knownInformation" type="information" values="" isPersistent="0" form="array" requirementType="Reference" />
			<Variable name="shouldIncludeLastArrester" type="_bool" values="false" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AtomicDecorator>
					<Sequence>
						<Function_crime_getPunishmentArea punishmentArea="$punishmentArea" punishmentLocation="$punishmentLocation" nodeLabel="79055838" />
						<Function_crime_getPunishmentLocationGUID locationEnum="$punishmentLocation" locationGUID="$locationGUID" nodeLabel="44551644" />
						<Function_crime_getOpenworldQSO openworldQSO="$qso_openworld" nodeLabel="86497262" />
						<GetCiviliansForLocation location="$locationGUID" targetVar="$civilians" />
						<Sequence>
							<IfCondition failOnCondition="false" condition="$shouldIncludeLastArrester">
								<SuppressFailure>
									<Sequence>
										<GraphSearch Origin="$qso_openworld" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;crime_secondArrest_lastArrester&apos;" prune="true" negprune="unknown" Parent="" Child="$lastArrester" Data="" />
										</GraphSearch>
										<Expression expressions="$needToAddLastArrester = true" />
									</Sequence>
								</SuppressFailure>
							</IfCondition>
							<Expression expressions="$needToAddThis = true" />
						</Sequence>
						<ForEach startIndex="0" step="1" array="$civilians" iterator="" value="$civilians_val" break="">
							<IsDeadCheck SoulWUID="$civilians_val" FailSubtMissing="false" saveVersion="2">
								<Else canSkip="1">
									<CheckWuidValid wuid="$civilians_val" FailSubtMissing="false" saveVersion="2">
										<Then canSkip="1">
											<Sequence>
												<Expression expressions="$validCivilians[#validCivilians] = $civilians_val" />
												<IfCondition failOnCondition="false" condition="$civilians_val == $this.id">
													<Expression expressions="$needToAddThis = false" />
												</IfCondition>
												<IfCondition failOnCondition="false" condition="$civilians_val == $lastArrester">
													<Expression expressions="$needToAddLastArrester = false" />
												</IfCondition>
											</Sequence>
										</Then>
									</CheckWuidValid>
								</Else>
							</IsDeadCheck>
						</ForEach>
						<IfCondition failOnCondition="false" condition="$needToAddThis">
							<Expression expressions="$validCivilians[#validCivilians] = $this.id" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$needToAddLastArrester">
							<Expression expressions="$validCivilians[#validCivilians] = $lastArrester" />
						</IfCondition>
						<SpreadInformation WuidArray="$validCivilians" />
						<GetKnownInformations OutArray="$knownInformation" Holder="$this.id" />
					</Sequence>
				</AtomicDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="civilians" comment="" />
				<Variable name="civilians_val" comment="" />
				<Variable name="dummy_int" comment="" />
				<Variable name="lastArrester" comment="" />
				<Variable name="locationGUID" comment="" />
				<Variable name="needToAddLastArrester" comment="" />
				<Variable name="needToAddThis" comment="" />
				<Variable name="punishmentArea" comment="" />
				<Variable name="punishmentLocation" comment="" />
				<Variable name="qso_openworld" comment="" />
				<Variable name="validCivilians" comment="" />
				<Variable name="knownInformation" comment="" />
				<Variable name="shouldIncludeLastArrester" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_getPunishmentArea hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_getPunishmentArea>
							<Function_crime_getPunishmentLocationGUID hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_getPunishmentLocationGUID>
							<Function_crime_getOpenworldQSO hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_getOpenworldQSO>
							<GetCiviliansForLocation hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetCiviliansForLocation>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
											</GraphSearch>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Sequence>
									</SuppressFailure>
								</IfCondition>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
							<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Else>
										<CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</IfCondition>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</IfCondition>
												</Sequence>
											</Then>
										</CheckWuidValid>
									</Else>
								</IsDeadCheck>
							</ForEach>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<SpreadInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</SpreadInformation>
							<GetKnownInformations hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetKnownInformations>
						</Sequence>
					</AtomicDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>