<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_handleDespawnVolumeRequests" is_function="1">
    <Variables>
      <Variable name="index" type="_int" values="" isPersistent="0" form="single" />
      <Variable name="now" type="_int64" values="" isPersistent="0" form="single" />
      <Variable name="request" type="crime:despawnVolumeRequest" values="" isPersistent="0" form="single" />
      <Variable name="requests" type="crime:despawnVolumeRequest" values="" isPersistent="1" form="array" />
      <Variable name="timer" type="_int" values="" isPersistent="0" form="single" />
      <Variable name="waitDuration" type="_float" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Parallel successMode="Any" failureMode="Any">
          <While doFail="false" propagateChildFail="false" condition="true">
            <ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$request" senderInfo="" inbox="&apos;crime_despawnVolumeRequest&apos;" condition="" answerVar="">
              <Selector>
                <FindInArray array="$requests" keyOut="$index" condition="$__value.volume == $request.volume" />
                <PushToArray array="$requests" value="$request" direction="Back" />
              </Selector>
            </ProcessMessage>
          </While>
          <While doFail="false" propagateChildFail="false" condition="true">
            <IfGate atomic="false" condition="#requests &gt; 0" RunLogic="KeepRunning">
              <Sequence>
                <CheckWuidValid wuid="$requests[0].volume" FailSubtMissing="false" saveVersion="2">
                  <Then canSkip="1">
                    <Sequence>
                      <GetTime TimeType="GameTime" OutVar="$now" Delta="" />
                      <Expression expressions="$timer = ($requests[0].timestamp + $data:script_param[&apos;crime_theftVolumeDespawnTimerWhenSeen&apos;].value) - $now" />
                      <IfCondition failOnCondition="false" condition="$timer &gt; 0">
                        <Wait duration="$timer" timeType="GameTime" doFail="false" variation="" />
                      </IfCondition>
                      <DeSpawnPerceptibleVolume Wuid="$requests[0].volume" />
                    </Sequence>
                  </Then>
                </CheckWuidValid>
                <PopFromArray array="$requests" valueOut="$request" direction="Front" />
              </Sequence>
            </IfGate>
          </While>
        </Parallel>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="index" comment="" />
        <Variable name="now" comment="" />
        <Variable name="request" comment="" />
        <Variable name="requests" comment="" />
        <Variable name="timer" comment="" />
        <Variable name="waitDuration" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <FindInArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </FindInArray>
                  <PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </PushToArray>
                </Selector>
              </ProcessMessage>
            </While>
            <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </GetTime>
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                        <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Wait>
                        </IfCondition>
                        <DeSpawnPerceptibleVolume hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </DeSpawnPerceptibleVolume>
                      </Sequence>
                    </Then>
                  </CheckWuidValid>
                  <PopFromArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </PopFromArray>
                </Sequence>
              </IfGate>
            </While>
          </Parallel>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>