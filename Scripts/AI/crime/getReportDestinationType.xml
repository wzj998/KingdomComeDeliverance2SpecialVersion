<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_getReportDestinationType" is_function="1">
    <Variables />
    <Parameters>
      <Variable name="destinationType" type="enum:crime_reportDestinationType" values="$enum:crime_reportDestinationType.none" isPersistent="0" form="single" requirementType="Out" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <ErrorNode Message="&apos;Function is obsolete. Use its code successor.&apos;" />
      </Behavior>
    </Root>
    <ForestContainer>
        <EntityContextCheck context="crime_isAuthority" target="$this.id" saveVersion="2">
          <Else canSkip="1">
            <EntityContextCheck context="crime_isSecurity" target="$this.id" saveVersion="2">
              <Else canSkip="1">
                <EntityContextCheck context="crime_isCamper" target="$this.id" saveVersion="2">
                  <Then canSkip="1">
                    <Expression expressions="$destinationType = $enum:crime_reportDestinationType.mate" />
                  </Then>
                  <Else canSkip="1">
                    <IsPublicEnemy Soul="$this.id" FailOnSubtreeMissing="false" saveVersion="2">
                      <Then canSkip="1">
                        <EntityContextCheck context="crime_isGroupMember" target="$this.id" saveVersion="2">
                          <Then canSkip="1">
                            <Expression expressions="$destinationType = $enum:crime_reportDestinationType.mate" />
                          </Then>
                        </EntityContextCheck>
                      </Then>
                      <Else canSkip="1">
                        <EntityContextCheck context="crime_reportToSecurity" target="" saveVersion="2">
                          <Then canSkip="1">
                            <Expression expressions="$destinationType = $enum:crime_reportDestinationType.security" />
                          </Then>
                          <Else canSkip="1">
                            <EntityContextCheck context="crime_isCourageous" target="$this.id" saveVersion="2">
                              <Else canSkip="1">
                                <Expression expressions="$destinationType = $enum:crime_reportDestinationType.authority" />
                              </Else>
                            </EntityContextCheck>
                          </Else>
                        </EntityContextCheck>
                      </Else>
                    </IsPublicEnemy>
                  </Else>
                </EntityContextCheck>
              </Else>
            </EntityContextCheck>
          </Else>
        </EntityContextCheck>
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="destinationType" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </ErrorNode>
        </Behavior>
      </Root>
      <Forest>
        <EntityContextCheck editorPosX="250" editorPosY="300" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
          <OutputBreakpoints />
            <Else>
              <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Else>
                  <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                    </Then>
                    <Else>
                      <IsPublicEnemy hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                        <OutputBreakpoints />
                        <Then>
                          <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                            <OutputBreakpoints />
                            <Then>
                              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Expression>
                            </Then>
                          </EntityContextCheck>
                        </Then>
                        <Else>
                          <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                            <OutputBreakpoints />
                            <Then>
                              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Expression>
                            </Then>
                            <Else>
                              <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                                <OutputBreakpoints />
                                <Else>
                                  <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                    <OutputBreakpoints />
                                  </Expression>
                                </Else>
                              </EntityContextCheck>
                            </Else>
                          </EntityContextCheck>
                        </Else>
                      </IsPublicEnemy>
                    </Else>
                  </EntityContextCheck>
                </Else>
              </EntityContextCheck>
            </Else>
          </EntityContextCheck>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>