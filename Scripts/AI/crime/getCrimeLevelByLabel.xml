<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_getCrimeLevelByLabel" is_function="1">
		<Variables />
		<Parameters>
			<Variable name="crimeLevel" type="enum:crime_crimeLevel" values="" isPersistent="0" form="single" requirementType="Out" />
			<Variable name="label" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ErrorNode Message="&apos;Function is obsolete. Use its code successor.&apos;" />
			</Behavior>
		</Root>
		<ForestContainer>
			<IfElseCondition failOnCondition="false" condition="$data:crime[$label].isCrime | $label == &apos;corpse&apos;" saveVersion="2">
				<Then canSkip="1">
					<Switch>
						<IfCondition failOnCondition="false" condition="$label == &apos;murder&apos; | &#10;$label == &apos;murderByDog&apos; |">
							<Expression expressions="$crimeLevel = $enum:crime_crimeLevel.murder" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$label == &apos;assault&apos; | &#10;$label == &apos;assaultByDog&apos; | &#10;$label == &apos;aggression&apos; | &#10;$label == &apos;corpseViolation&apos; | &#10;$label == &apos;corpse&apos; | &#10;$label == &apos;poaching&apos; | &#10;$label == &apos;kettlePoisoning&apos; | &#10;$label == &apos;resistingArrest&apos;">
							<Expression expressions="$crimeLevel = $enum:crime_crimeLevel.violent" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$label == &apos;graveRobbing&apos; | &#10;$label == &apos;horseTheft&apos; | &#10;$label == &apos;lockpick&apos; | &#10;$label == &apos;pickpocket&apos; | &#10;$label == &apos;pilloryBreak&apos; | &#10;$label == &apos;theft&apos; | &#10;$label == &apos;assaultAnimal&apos; | &#10;$label == &apos;murderAnimal&apos;">
							<Expression expressions="$crimeLevel = $enum:crime_crimeLevel.property" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$label == &apos;trespass&apos;">
							<Expression expressions="$crimeLevel = $enum:crime_crimeLevel.trespass" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$label == &apos;disturbance&apos; | &#10;$label == &apos;friskRefusal&apos; | &#10;$label == &apos;drawnWeapon&apos; | &#10;$label == &apos;forbiddenEquipment&apos; | &#10;$label == &apos;sneak&apos; | &#10;$label == &apos;nonAttributedCrime&apos;">
							<Expression expressions="$crimeLevel = $enum:crime_crimeLevel.offence" />
						</IfCondition>
						<DefaultBranch>
							<ErrorNode Message="&apos;ERROR: Label \&apos;$label\&apos; does not belong in any crimeLevel!&apos;" />
						</DefaultBranch>
					</Switch>
				</Then>
				<Else canSkip="1">
					<ErrorNode Message="&apos;ERROR: Label \&apos;$label\&apos; is not a valid crime!&apos;" />
				</Else>
			</IfElseCondition>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="crimeLevel" comment="" />
				<Variable name="label" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</ErrorNode>
				</Behavior>
			</Root>
			<Forest>
				<IfElseCondition editorPosX="450" editorPosY="220" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Then>
						<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<DefaultBranch>
								<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ErrorNode>
							</DefaultBranch>
						</Switch>
					</Then>
					<Else>
						<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ErrorNode>
					</Else>
				</IfElseCondition>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>