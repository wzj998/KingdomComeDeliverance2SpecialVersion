<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_getStimulusKindFromString" is_function="1">
    <Variables />
    <Parameters>
      <Variable name="label" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="stimulusKind" type="enum:crime_stimulusKind" values="" isPersistent="0" form="single" requirementType="Out" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Switch>
          <IfCondition failOnCondition="false" condition="$label == &apos;alarm&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.alarm" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$label == &apos;aggression&apos; | &#10;$label == &apos;assault&apos; | &#10;$label == &apos;assaultByDog&apos; | &#10;$label == &apos;resistingArrest&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.hit" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$label == &apos;poaching&apos; | &#10;$label == &apos;assaultAnimal&apos; | &#10;$label == &apos;murderAnimal&apos; | &#10;$label == &apos;animalCorpse&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.animalAbuse" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$label == &apos;corpse&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.corpse" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$label == &apos;corpseViolation&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.corpseViolation" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$label == &apos;disturbance&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.disturbance" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$label == &apos;escalatedTrespass&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.escalatedTrespass" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$label == &apos;friskRefusal&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.friskRefusal" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$label == &apos;graveRobbing&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.graveRobbing" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$label == &apos;horseTheft&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.horseTheft" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$label == &apos;kettlePoisoning&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.kettlePoisoning" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$label == &apos;lockpick&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.lockpick" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$label == &apos;murder&apos; | &#10;$label == &apos;murderByDog&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.murder" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$label == &apos;pickpocket&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.pickpocket" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$label == &apos;pilloryBreak&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.pilloryBreak" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$label == &apos;shooter&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.shooter" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$label == &apos;sneak&apos; | &#10;$label == &apos;drawnWeapon&apos; | &#10;$label == &apos;forbiddenEquipment&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.offence" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$label == &apos;sound&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.sound" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$label == &apos;theft&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.theft" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$label == &apos;trespass&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.trespass" />
          </IfCondition>
          <DefaultBranch>
            <ErrorNode Message="&apos;Stimulus for label $label not found.&apos;" />
          </DefaultBranch>
        </Switch>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="label" comment="" />
        <Variable name="stimulusKind" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <DefaultBranch>
              <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </ErrorNode>
            </DefaultBranch>
          </Switch>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>