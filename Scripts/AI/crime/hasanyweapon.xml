<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_hasAnyWeapon" is_function="1">
		<Variables>
			<Variable name="hasOversized" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="hasPrimary" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="hasSecondary" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="o1" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="o2" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="p1" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="p2" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="s1" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="s2" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="hasAnyWeapon" type="_bool" values="" isPersistent="0" form="single" requirementType="Out" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$p1" RightHand="$p2" UseTorchWhenAppropriate="false" />
					<IfCondition failOnCondition="false" condition="$p1 ~= $__null | $p2 ~= $__null">
						<Expression expressions="$hasPrimary = true" />
					</IfCondition>
					<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$s1" RightHand="$s2" UseTorchWhenAppropriate="false" />
					<IfCondition failOnCondition="false" condition="$s1 ~= $__null | $s2 ~= $__null">
						<Expression expressions="$hasSecondary = true" />
					</IfCondition>
					<GetWeaponsFromWeaponSet WeaponSet="Oversized" LeftHand="$o1" RightHand="$o2" UseTorchWhenAppropriate="false" />
					<IfCondition failOnCondition="false" condition="$o1 ~= $__null | $o2 ~= $__null">
						<Expression expressions="$hasOversized = true" />
					</IfCondition>
					<Expression expressions="$hasAnyWeapon = ($hasPrimary | $hasSecondary | $hasOversized)" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="hasOversized" comment="" />
				<Variable name="hasPrimary" comment="" />
				<Variable name="hasSecondary" comment="" />
				<Variable name="o1" comment="" />
				<Variable name="o2" comment="" />
				<Variable name="p1" comment="" />
				<Variable name="p2" comment="" />
				<Variable name="s1" comment="" />
				<Variable name="s2" comment="" />
				<Variable name="hasAnyWeapon" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetWeaponsFromWeaponSet>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</IfCondition>
						<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetWeaponsFromWeaponSet>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</IfCondition>
						<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetWeaponsFromWeaponSet>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</IfCondition>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>