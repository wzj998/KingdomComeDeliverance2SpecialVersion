<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_attributeCrimes" is_function="1">
		<Variables>
			<Variable name="knownInformations" type="information" values="" isPersistent="0" form="array" />
			<Variable name="knownInformations_value" type="information" values="" isPersistent="0" form="single" />
			<Variable name="nonAttributedStimulusKind" type="enum:crime_stimulusKind" values="" isPersistent="0" form="single" />
			<Variable name="theftInformation" type="information" values="" isPersistent="0" form="single" />
			<Variable name="theftMethod" type="enum:crime_theftMethod" values="" isPersistent="0" form="single" />
			<Variable name="theftStimulus" type="switch:stimulus:theft" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="handleStimulus" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="stimulusKindToAttribute" type="enum:crime_stimulusKind" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GetKnownInformations OutArray="$knownInformations" Holder="$this.id" />
					<ForEach startIndex="0" step="1" array="$knownInformations" iterator="" value="$knownInformations_value" break="">
						<AtomicDecorator>
							<IfCondition failOnCondition="false" condition="$knownInformations_value.label == &apos;nonAttributedCrime&apos;">
								<Sequence>
									<LockDynamicInformationValues Information="$knownInformations_value">
										<GetDynamicInformationValue Information="$knownInformations_value" Tag="&apos;stimulusKind&apos;" Out="$nonAttributedStimulusKind" />
									</LockDynamicInformationValues>
									<IfCondition failOnCondition="false" condition="$stimulusKindToAttribute == $enum:crime_stimulusKind.theft &amp; &#10;$nonAttributedStimulusKind == $stimulusKindToAttribute">
										<Sequence>
											<CreateInformationWrapper Label="&apos;theft&apos;" PerceivedWuid="$knownInformations_value.perceivedWuid" PositionType="positionWuid" PositionVec3="" PositionWuid="$__player" Information="$theftInformation" />
											<Function_crime_transformInformation a_originalInformation="$knownInformations_value" b_newInformation="$theftInformation" skipMetadata="true" nodeLabel="47598300" />
										</Sequence>
									</IfCondition>
								</Sequence>
							</IfCondition>
						</AtomicDecorator>
					</ForEach>
					<IfCondition failOnCondition="false" condition="$theftInformation.label ~= &apos;&apos;">
						<Sequence>
							<Function_crime_broadcastCooperationNotification cooperationNotification="$enum:crime_cooperationNotification.informationTransformed" nodeLabel="50552805" />
							<IfCondition failOnCondition="false" condition="$handleStimulus">
								<Sequence>
									<LockDynamicInformationValues Information="$theftInformation">
										<Sequence>
											<GetDynamicInformationValue Information="$theftInformation" Tag="&apos;victim&apos;" Out="$theftStimulus.owner" />
											<GetDynamicInformationValue Information="$theftInformation" Tag="&apos;theftMethod&apos;" Out="$theftStimulus.method" />
										</Sequence>
									</LockDynamicInformationValues>
									<Expression expressions="$theftStimulus.information = $theftInformation &#10;$theftStimulus.freshlyAttributedCrime = true" />
									<Function_switch_handleStimulusTheft stimulus="$theftStimulus" nodeLabel="48548007" />
								</Sequence>
							</IfCondition>
						</Sequence>
					</IfCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="knownInformations" comment="" />
				<Variable name="knownInformations_value" comment="" />
				<Variable name="nonAttributedStimulusKind" comment="" />
				<Variable name="theftInformation" comment="" />
				<Variable name="theftMethod" comment="" />
				<Variable name="theftStimulus" comment="" />
				<Variable name="handleStimulus" comment="" />
				<Variable name="stimulusKindToAttribute" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GetKnownInformations hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetKnownInformations>
						<ForEach hasInputBreakpoint="0" comment="Attribute each information filtered by StimulusKind" breakpointFlags="0">
							<OutputBreakpoints />
							<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetDynamicInformationValue>
										</LockDynamicInformationValues>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<CreateInformationWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</CreateInformationWrapper>
												<Function_crime_transformInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_crime_transformInformation>
											</Sequence>
										</IfCondition>
									</Sequence>
								</IfCondition>
							</AtomicDecorator>
						</ForEach>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_crime_broadcastCooperationNotification hasInputBreakpoint="0" comment="Notify reactors that SOME informations got transformed, they have to check for themselves" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_broadcastCooperationNotification>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</GetDynamicInformationValue>
												<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</GetDynamicInformationValue>
											</Sequence>
										</LockDynamicInformationValues>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<Function_switch_handleStimulusTheft hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_switch_handleStimulusTheft>
									</Sequence>
								</IfCondition>
							</Sequence>
						</IfCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>