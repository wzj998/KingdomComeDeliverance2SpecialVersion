<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_prescribeItems" is_function="1">
    <Variables>
      <Variable name="isDivisible" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="items_value" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="prescribedItem" type="itemPrescriptor" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="items" type="_wuid" values="" isPersistent="0" form="array" requirementType="ConstReference" />
      <Variable name="prescribedItems" type="itemPrescriptor" values="" isPersistent="0" form="array" requirementType="Out" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <ForEach startIndex="0" step="1" array="$items" iterator="" value="$items_value" break="">
          <Sequence>
            <ReinitVariable variable="$prescribedItem" />
            <GetItemProperty itemId="$items_value" property="IsDivisible" result="$isDivisible" />
            <IfElseCondition failOnCondition="false" condition="$isDivisible" saveVersion="2">
              <Then canSkip="1">
                <Sequence>
                  <GetItemProperty itemId="$items_value" property="Guid" result="$prescribedItem.class" />
                  <GetItemProperty itemId="$items_value" property="Amount" result="$prescribedItem.count" />
                </Sequence>
              </Then>
              <Else canSkip="1">
                <Expression expressions="$prescribedItem.instance = $items_value" />
              </Else>
            </IfElseCondition>
            <Expression expressions="$prescribedItems[#prescribedItems] = $prescribedItem" />
          </Sequence>
        </ForEach>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="isDivisible" comment="" />
        <Variable name="items_value" comment="" />
        <Variable name="prescribedItem" comment="" />
        <Variable name="items" comment="" />
        <Variable name="prescribedItems" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </ReinitVariable>
              <GetItemProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </GetItemProperty>
              <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <GetItemProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </GetItemProperty>
                    <GetItemProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </GetItemProperty>
                  </Sequence>
                </Then>
                <Else>
                  <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Expression>
                </Else>
              </IfElseCondition>
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </Sequence>
          </ForEach>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>