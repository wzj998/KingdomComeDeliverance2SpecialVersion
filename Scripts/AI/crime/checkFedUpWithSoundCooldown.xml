<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_checkFedUpWithSoundCooldown" is_function="1">
    <Variables>
      <Variable name="now" type="_int64" values="" isPersistent="0" form="single" />
      <Variable name="npcCooldowns" type="crime:npcCooldowns" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="reaction" type="enum:crime_soundReactionType" values="" isPersistent="0" form="single" requirementType="Out" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Selector>
          <Sequence>
            <GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
              <WUIDFilter WUID="$this.id" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
              <LinkTagFilter tag="&apos;crime_npcCooldowns&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
              <Datalyzer Tag="&apos;crime_npcCooldowns&apos;" Quantifiers="Exists" Parent="" Child="" Data="$npcCooldowns" saveVersion="2" />
            </GraphSearch>
            <GetTime TimeType="GameTime" OutVar="$now" Delta="" />
            <IfElseCondition failOnCondition="false" condition="$npcCooldowns.fedUpWithSounds.lastReaction == 0 | &#10;$npcCooldowns.fedUpWithSounds.lastReaction + $data:script_param[&apos;crime_fedUpWithSoundReactionCooldown&apos;].value &lt; $now" saveVersion="2">
              <Then canSkip="1">
                <Expression expressions="$reaction = $enum:crime_soundReactionType.react" />
              </Then>
              <Else canSkip="1">
                <IfElseCondition failOnCondition="false" condition="$npcCooldowns.fedUpWithSounds.lastIgnoreBark == 0 | &#10;$npcCooldowns.fedUpWithSounds.lastIgnoreBark + $data:script_param[&apos;crime_fedUpWithSoundIgnoreBarkCooldown&apos;].value &lt; $now" saveVersion="2">
                  <Then canSkip="1">
                    <Expression expressions="$reaction = $enum:crime_soundReactionType.bark" />
                  </Then>
                  <Else canSkip="1">
                    <Expression expressions="$reaction = $enum:crime_soundReactionType.ignore" />
                  </Else>
                </IfElseCondition>
              </Else>
            </IfElseCondition>
          </Sequence>
          <Expression expressions="$reaction = $enum:crime_soundReactionType.react" />
        </Selector>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="now" comment="" />
        <Variable name="npcCooldowns" comment="" />
        <Variable name="reaction" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Selector hasInputBreakpoint="0" comment="no cooldown found" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </WUIDFilter>
                <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </LinkTagFilter>
                <Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                  <OutputBreakpoints />
                </Datalyzer>
              </GraphSearch>
              <GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </GetTime>
              <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Expression>
                </Then>
                <Else>
                  <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                    </Then>
                    <Else>
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                    </Else>
                  </IfElseCondition>
                </Else>
              </IfElseCondition>
            </Sequence>
            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
          </Selector>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>