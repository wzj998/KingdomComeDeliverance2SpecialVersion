<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_getRandomPointOutsideOfInterior" is_function="1">
    <Variables>
      <Variable name="iteration" type="_int" values="0" isPersistent="0" form="single" />
      <Variable name="pointFound" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="randomPoint_inside" type="vec3" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="initialMaxRange" type="_int" values="5" isPersistent="0" form="single" requirementType="In" />
      <Variable name="maxIterations" type="_int" values="50" isPersistent="0" form="single" requirementType="In" />
      <Variable name="numIncreaseDistanceAfterIterations" type="_int" values="10" isPersistent="0" form="single" requirementType="In" />
      <Variable name="originWuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="randomPoint" type="vec3" values="" isPersistent="0" form="single" requirementType="Out" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <While doFail="false" propagateChildFail="false" condition="~$pointFound &amp; &#10;$iteration &lt; $maxIterations">
            <Sequence>
              <GetRandomPos StartPos="$originWuid" PosExtentHor="1.000000" PosExtentVert="5.000000" MaxRange="$initialMaxRange" Precise="false" MaxIterantions="1" Target="$randomPoint_inside" navAgentType="Automatic" pathFindingParams="" />
              <IsInsideAreaWithLabel Position="$randomPoint_inside" Label="&apos;interior&apos;" Area="" FailSubtMissing="false" saveVersion="2">
                <Else canSkip="1">
                  <Expression expressions="$pointFound = true" />
                </Else>
              </IsInsideAreaWithLabel>
              <Expression expressions="$iteration += 1" />
              <IfCondition failOnCondition="false" condition="$iteration &gt; 0 &amp; &#10;($iteration % $numIncreaseDistanceAfterIterations) == 0">
                <Expression expressions="$initialMaxRange += 2" />
              </IfCondition>
            </Sequence>
          </While>
          <IfElseCondition failOnCondition="false" condition="$pointFound" saveVersion="2">
            <Then canSkip="1">
              <Expression expressions="$randomPoint = $randomPoint_inside" />
            </Then>
            <Else canSkip="1">
              <Fail />
            </Else>
          </IfElseCondition>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer>
      <LogToConsole LogLevel="Error" Message="&apos;Found random point after &quot;$iteration;&quot; with distance &quot;$initialMaxRange;&quot;&apos;" />
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="iteration" comment="" />
        <Variable name="pointFound" comment="" />
        <Variable name="randomPoint_inside" comment="" />
        <Variable name="initialMaxRange" comment="" />
        <Variable name="maxIterations" comment="" />
        <Variable name="numIncreaseDistanceAfterIterations" comment="" />
        <Variable name="originWuid" comment="" />
        <Variable name="randomPoint" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <GetRandomPos hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </GetRandomPos>
                <IsInsideAreaWithLabel hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                  <OutputBreakpoints />
                  <Else>
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                  </Else>
                </IsInsideAreaWithLabel>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Expression>
                </IfCondition>
              </Sequence>
            </While>
            <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Then>
              <Else>
                <Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Fail>
              </Else>
            </IfElseCondition>
          </Sequence>
        </Behavior>
      </Root>
      <Forest>
        <LogToConsole editorPosX="370" editorPosY="320" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
        </LogToConsole>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>