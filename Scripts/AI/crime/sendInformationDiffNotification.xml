<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_sendInformationDiffNotification" is_function="1">
    <Variables>
      <Variable name="crimeLevel" type="enum:crime_crimeLevel" values="" isPersistent="0" form="single" />
      <Variable name="informationDiffStatus" type="enum:crime_informationDiffStatus" values="" isPersistent="0" form="single" />
      <Variable name="label" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="who_soul" type="cast:wuid_soul" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="information" type="information" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="statusString" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <IfCondition failOnCondition="false" condition="$data:crime[$information.label].isCrime">
            <GetCrimeLevelByLabel Label="$information.label" CrimeLevel="$crimeLevel" />
          </IfCondition>
          <Switch>
            <IfCondition failOnCondition="false" condition="$statusString == &apos;Created&apos; | &#10;$statusString == &apos;Received&apos;">
              <Expression expressions="$informationDiffStatus = $enum:crime_informationDiffStatus.Learned" />
            </IfCondition>
            <IfCondition failOnCondition="false" condition="$statusString == &apos;Deleted&apos;">
              <Expression expressions="$informationDiffStatus = $enum:crime_informationDiffStatus.Forgot" />
            </IfCondition>
            <DefaultBranch>
              <Expression expressions="$informationDiffStatus = $enum:crime_informationDiffStatus.unknown" />
            </DefaultBranch>
          </Switch>
          <Sequence>
            <Expression expressions="$label = $information.label" />
            <Expression expressions="$who_soul.value = $this.id" />
            <SendAIConceptSignal_NPCInformationDiffNotification who="$who_soul" label="$information.label" perceivedWuid="$information.perceivedWuid" isCrime="$data:crime[$information.label].isCrime" crimeLevel="$crimeLevel" status="$informationDiffStatus" />
          </Sequence>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer>
      <LogToConsole LogLevel="Error" Message="&apos;[InformationDiffNotification] Sending &quot;$statusString;&quot; about &quot;$label;&quot;&apos;" />
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="crimeLevel" comment="" />
        <Variable name="informationDiffStatus" comment="" />
        <Variable name="label" comment="" />
        <Variable name="who_soul" comment="" />
        <Variable name="information" comment="" />
        <Variable name="statusString" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <GetCrimeLevelByLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </GetCrimeLevelByLabel>
            </IfCondition>
            <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </IfCondition>
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </IfCondition>
              <DefaultBranch>
                <Expression hasInputBreakpoint="0" comment="shouldn&apos;t happen" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </DefaultBranch>
            </Switch>
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
              <SendAIConceptSignal_NPCInformationDiffNotification hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </SendAIConceptSignal_NPCInformationDiffNotification>
            </Sequence>
          </Sequence>
        </Behavior>
      </Root>
      <Forest>
        <LogToConsole editorPosX="830" editorPosY="170" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
        </LogToConsole>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>