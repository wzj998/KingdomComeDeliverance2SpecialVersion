<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_handleStimulusSound_reactToPebble" is_function="1">
		<Variables>
			<Variable name="canReact" type="_bool" values="true" isPersistent="0" form="single" />
			<Variable name="closerNpcs" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="hotEntity" type="switch:hotEntity" values="" isPersistent="0" form="single" />
			<Variable name="isBandit" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="stimulus_disturbance" type="switch:stimulus:disturbance" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="forced" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="initiator" type="enum:switch_interruptInitiator" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="reactingBecauseAlone" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="shouldReact" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="stimulus" type="switch:stimulus:sound" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<IfElseCondition failOnCondition="false" condition="$stimulus.kind == $enum:sound.decoy_distract" saveVersion="2">
					<Then canSkip="1">
						<HasSeenPlayer NPC="$this.id" FullyAwareOnly="false" saveVersion="2">
							<Then canSkip="1">
								<Sequence>
									<IfCondition failOnCondition="false" condition="~$forced">
										<Sequence>
											<Function_crime_getCloserNpcs pos="$stimulus.position" closerNpcs="$closerNpcs" nodeLabel="31266806" />
											<Expression expressions="$canReact = #closerNpcs == 0" />
										</Sequence>
									</IfCondition>
									<IfElseCondition failOnCondition="false" condition="$canReact" saveVersion="2">
										<Then canSkip="1">
											<Sequence>
												<InstantCallback_empty EventName="&apos;Reacting&apos;" />
												<IsBandit Npc="$this.id" IsBandit="$isBandit" />
												<IfElseCondition failOnCondition="false" condition="$isBandit" saveVersion="2">
													<Then canSkip="1">
														<Function_crime_crimeSwitchBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBarkFromSleep="false" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_ROZPOZNALO_VYTRZNIKA_(KAMINEK)&apos;" priority="$enum:crime_barkPriority.low" nodeLabel="64441553" />
													</Then>
													<Else canSkip="1">
														<Switch>
															<CheckNervousnessInterval Soul="" Flag="alerted" saveVersion="2">
																<Then canSkip="1">
																	<AtomicDecorator>
																		<EntityContext context="crime_stimulusInitiatedByScheduler" target="">
																			<Function_switch_handleStimulusDisturbance stimulus="$stimulus_disturbance" nodeLabel="74096671" />
																		</EntityContext>
																	</AtomicDecorator>
																</Then>
															</CheckNervousnessInterval>
															<CheckNervousnessInterval Soul="" Flag="midToInf" saveVersion="2">
																<Then canSkip="1">
																	<Function_callInterrupt_mindPlayer ignorePriority="true" initiator="$initiator" previousReaction="$enum:crime_reactionKind.unknown" soundType="$enum:sound.invalid" stimulusKind="$enum:crime_stimulusKind.disturbance" nodeLabel="48041366" />
																</Then>
															</CheckNervousnessInterval>
															<DefaultBranch>
																<Function_crime_crimeSwitchBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBarkFromSleep="false" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_ROZPOZNALO_VYTRZNIKA_(KAMINEK)&apos;" priority="$enum:crime_barkPriority.low" nodeLabel="50552418" />
															</DefaultBranch>
														</Switch>
													</Else>
												</IfElseCondition>
											</Sequence>
										</Then>
										<Else canSkip="1">
											<InstantCallback_wuidArray wuidArray="$closerNpcs" EventName="&apos;SubscribeToHearing&apos;" />
										</Else>
									</IfElseCondition>
								</Sequence>
							</Then>
							<Else canSkip="1">
								<Function_callInterrupt_lookAround alarmReactionType="$enum:crime_alarmReactionType.none" amIBuddy="false" corpseState="$enum:corpseState.undiscovered" directHit="false" forceSubscribedSoundReaction="$forced" ignorePriority="false" information_look="" initiator="$initiator" missingNpc="$__null" position="$stimulus.position" previousReaction="$enum:crime_reactionKind.unknown" reactingToSoundBecauseAlone="false" reportedBy="$__null" searchDirection="" searchPointsFromDirection="false" shooter="$__player" soundType="$enum:sound.decoy_distract" source="$enum:crime_source.hearing" stimulusAnimalAbuse="" stimulusKind="$enum:crime_stimulusKind.sound" nodeLabel="41443569" />
							</Else>
						</HasSeenPlayer>
					</Then>
					<Else canSkip="1">
						<HasSeenPlayer NPC="" FullyAwareOnly="true" saveVersion="2">
							<Then canSkip="1">
								<Sequence>
									<IfCondition failOnCondition="false" condition="~$forced">
										<Sequence>
											<Function_crime_getCloserNpcs pos="$stimulus.position" closerNpcs="$closerNpcs" nodeLabel="51945034" />
											<Expression expressions="$canReact = #closerNpcs == 0" />
										</Sequence>
									</IfCondition>
									<IfElseCondition failOnCondition="false" condition="$canReact" saveVersion="2">
										<Then canSkip="1">
											<Sequence>
												<Function_crime_crimeSwitchBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBarkFromSleep="false" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_NASLO_ZDROJ_ZVUKU_(PISKANI_BLIZKO)&apos;" priority="$enum:crime_barkPriority.low" nodeLabel="57728089" />
												<InstantCallback_empty EventName="&apos;Reacting&apos;" />
											</Sequence>
										</Then>
										<Else canSkip="1">
											<InstantCallback_wuidArray wuidArray="$closerNpcs" EventName="&apos;SubscribeToHearing&apos;" />
										</Else>
									</IfElseCondition>
								</Sequence>
							</Then>
							<Else canSkip="1">
								<IfCondition failOnCondition="false" condition="$shouldReact | $forced">
									<Function_callInterrupt_lookAround alarmReactionType="$enum:crime_alarmReactionType.none" amIBuddy="false" corpseState="$enum:corpseState.undiscovered" directHit="false" forceSubscribedSoundReaction="$forced" ignorePriority="false" information_look="" initiator="$initiator" missingNpc="$__null" position="$stimulus.position" previousReaction="$enum:crime_reactionKind.unknown" reactingToSoundBecauseAlone="$reactingBecauseAlone" reportedBy="$__null" searchDirection="" searchPointsFromDirection="false" shooter="$__player" soundType="$stimulus.kind" source="$enum:crime_source.hearing" stimulusAnimalAbuse="" stimulusKind="$enum:crime_stimulusKind.sound" nodeLabel="25145630" />
								</IfCondition>
							</Else>
						</HasSeenPlayer>
					</Else>
				</IfElseCondition>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="switch_handleHearing">
			<Variables>
				<Variable name="canReact" comment="" />
				<Variable name="closerNpcs" comment="" />
				<Variable name="hotEntity" comment="" />
				<Variable name="isBandit" comment="" />
				<Variable name="stimulus_disturbance" comment="" />
				<Variable name="forced" comment="" />
				<Variable name="initiator" comment="" />
				<Variable name="reactingBecauseAlone" comment="" />
				<Variable name="shouldReact" comment="" />
				<Variable name="stimulus" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<HasSeenPlayer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_crime_getCloserNpcs hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_crime_getCloserNpcs>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Sequence>
										</IfCondition>
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantCallback_empty>
													<IsBandit hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</IsBandit>
													<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<Function_crime_crimeSwitchBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_crime_crimeSwitchBark>
														</Then>
														<Else>
															<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<CheckNervousnessInterval hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Then>
																		<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Function_switch_handleStimulusDisturbance hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Function_switch_handleStimulusDisturbance>
																			</EntityContext>
																		</AtomicDecorator>
																	</Then>
																</CheckNervousnessInterval>
																<CheckNervousnessInterval hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Then>
																		<Function_callInterrupt_mindPlayer hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_callInterrupt_mindPlayer>
																	</Then>
																</CheckNervousnessInterval>
																<DefaultBranch>
																	<Function_crime_crimeSwitchBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_crime_crimeSwitchBark>
																</DefaultBranch>
															</Switch>
														</Else>
													</IfElseCondition>
												</Sequence>
											</Then>
											<Else>
												<InstantCallback_wuidArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</InstantCallback_wuidArray>
											</Else>
										</IfElseCondition>
									</Sequence>
								</Then>
								<Else>
									<Function_callInterrupt_lookAround hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_callInterrupt_lookAround>
								</Else>
							</HasSeenPlayer>
						</Then>
						<Else>
							<HasSeenPlayer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_crime_getCloserNpcs hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_crime_getCloserNpcs>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Sequence>
										</IfCondition>
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_crime_crimeSwitchBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_crime_crimeSwitchBark>
													<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantCallback_empty>
												</Sequence>
											</Then>
											<Else>
												<InstantCallback_wuidArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</InstantCallback_wuidArray>
											</Else>
										</IfElseCondition>
									</Sequence>
								</Then>
								<Else>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_callInterrupt_lookAround hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_callInterrupt_lookAround>
									</IfCondition>
								</Else>
							</HasSeenPlayer>
						</Else>
					</IfElseCondition>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>