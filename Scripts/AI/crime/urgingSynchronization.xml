<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_urgingSynchronization" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<GetCurrentPerceptionFocus PerceptionNfo="$perceptionInfo" />
							<Expression expressions="$lookingAtPlayer = $perceptionInfo.perceptible == $__player" />
							<Parallel successMode="Any" failureMode="Any">
								<Loop count="-1">
									<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$shareData" senderInfo="" inbox="&apos;crime_playersLastSeenPositionShared&apos;" condition="" answerVar="">
										<Sequence>
											<IfElseCondition failOnCondition="false" condition="$allowAnimations" saveVersion="2">
												<Then canSkip="1">
													<SubtreeDecorator saveVersion="2">
														<Init canSkip="1">
															<InstantCallback_empty EventName="&apos;PointingStart&apos;" />
														</Init>
														<Subtree canSkip="1">
															<Sequence>
																<WaitAction />
																<Turn target="$position" align="false" />
																<Parallel successMode="All" failureMode="Any">
																	<IfElseCondition failOnCondition="false" condition="$lookingAtPlayer" saveVersion="2">
																		<Then canSkip="1">
																			<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$shareData.receiver" metarole="&apos;CUMIL_PROZRAZUJE_HRACE&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="59444265" />
																		</Then>
																		<Else canSkip="1">
																			<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$shareData.receiver" metarole="&apos;CUMIL_PROZRAZUJE_KUDY_HRAC_BEZEL&apos;" priority="$enum:crime_barkPriority.medium" nodeLabel="68937638" />
																		</Else>
																	</IfElseCondition>
																	<AnimationAction fragment="&apos;Pointing&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
																</Parallel>
															</Sequence>
														</Subtree>
														<Cleanup canSkip="1">
															<InstantCallback_empty EventName="&apos;PointingEnd&apos;" />
														</Cleanup>
													</SubtreeDecorator>
												</Then>
												<Else canSkip="1">
													<IfElseCondition failOnCondition="false" condition="$lookingAtPlayer" saveVersion="2">
														<Then canSkip="1">
															<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$shareData.receiver" metarole="&apos;CUMIL_PROZRAZUJE_HRACE&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="58422111" />
														</Then>
														<Else canSkip="1">
															<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$shareData.receiver" metarole="&apos;CUMIL_PROZRAZUJE_KUDY_HRAC_BEZEL&apos;" priority="$enum:crime_barkPriority.medium" nodeLabel="23428776" />
														</Else>
													</IfElseCondition>
												</Else>
											</IfElseCondition>
											<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
									</ProcessMessage>
								</Loop>
								<While doFail="false" propagateChildFail="false" condition="true">
									<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$perceptionInfo" senderInfo="" inbox="&apos;perceptionInfo_sharePlayersLastSeenPosition&apos;" condition="" answerVar="">
										<CheckWuidValid wuid="$perceptionInfo.perceptible" FailSubtMissing="false" saveVersion="2">
											<Then canSkip="1">
												<Switch>
													<IfCondition failOnCondition="false" condition="$perceptionInfo.threshold == 0 &amp; &#10;$perceptionInfo.perceptible == $__player">
														<Expression expressions="$lookingAtPlayer = false" />
													</IfCondition>
													<IfCondition failOnCondition="false" condition="$perceptionInfo.threshold == 1 &amp; &#10;$perceptionInfo.perceptible == $__player">
														<Expression expressions="$lookingAtPlayer = true" />
													</IfCondition>
													<IfCondition failOnCondition="false" condition="$perceptionInfo.threshold == 1 &amp; &#10;$perceptionSearchActive">
														<Expression expressions="$dismissReady = true" />
													</IfCondition>
													<DefaultBranch>
														<Success />
													</DefaultBranch>
												</Switch>
											</Then>
										</CheckWuidValid>
									</ProcessMessage>
								</While>
								<ContinuousSwitch>
									<IfCondition failOnCondition="false" condition="$lookingAtPlayer">
										<Loop count="-1">
											<Sequence>
												<AtomicDecorator>
													<Sequence>
														<GetSpatialInfo In="$__player" Out="$position" What="Position" />
														<Expression expressions="$lastSeenData.position = $position" />
														<GetTime TimeType="GameTime" OutVar="$lastSeenData.time" Delta="" />
														<AddLink From="$__player" To="$this.id" Tag="&apos;crime_playerLastSeen&apos;" Data="$lastSeenData" LinkOpHandleMode="OverWrite" />
													</Sequence>
												</AtomicDecorator>
												<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</Loop>
									</IfCondition>
									<IfCondition failOnCondition="false" condition="~$lookingAtPlayer">
										<Parallel successMode="Any" failureMode="Any">
											<Loop count="-1">
												<Sequence>
													<SuppressFailure>
														<AtomicDecorator>
															<Sequence>
																<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																	<LinkTagFilter tag="&apos;crime_playerLastSeen&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																	<LinkDataFilter tag="&apos;crime_playerLastSeen&apos;" condition="$__link_crime_playerLastSeen.time &gt; $lastSeenData.time" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																	<RangeFilter min="0.000000" max="15.000000" point="$this.id" excludeRef="true" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
																	<EvaLLyzer Expresion="$lastSeenDataFromNearbys[$__to] = $__link_crime_playerLastSeen" Quantifiers="ForAll" saveVersion="2" />
																</GraphSearch>
																<VarOperation varName="$sharedFrom" targetVarName="" operation="Reinit" argument="" />
																<ForEach startIndex="0" step="1" array="$lastSeenDataFromNearbys" iterator="$lastSeenDataFromNearbys_key" value="$lastSeenDataFromNearbys_value" break="">
																	<IfCondition failOnCondition="false" condition="$lastSeenDataFromNearbys_value.time &gt; $lastSeenData.time">
																		<Expression expressions="$lastSeenData = $lastSeenDataFromNearbys_value &#10;$sharedFrom = $lastSeenDataFromNearbys_key &#10; &#10;$newPosition = $lastSeenDataFromNearbys_value.position" />
																	</IfCondition>
																</ForEach>
																<IfCondition failOnCondition="false" condition="$sharedFrom ~= $__null">
																	<Sequence>
																		<Expression expressions="$direction.x = $position.x - $newPosition.x &#10;$direction.y = $position.y - $newPosition.y &#10;$direction.z = $position.z - $newPosition.z &#10; &#10;$position = $newPosition" />
																		<AddLink From="$__player" To="$this.id" Tag="&apos;crime_playerLastSeen&apos;" Data="$lastSeenData" LinkOpHandleMode="OverWrite" />
																		<IfCondition failOnCondition="false" condition="$requestVisualAssistanceFromOthers">
																			<InstantSendMessageToNPC target="$sharedFrom" type="&apos;crime:playersLastSeenPositionShare&apos;" values="receiver($this.id)" />
																		</IfCondition>
																		<InstantCallback_empty EventName="&apos;PositionUpdatedFromOtherNpc&apos;" />
																	</Sequence>
																</IfCondition>
															</Sequence>
														</AtomicDecorator>
													</SuppressFailure>
													<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
												</Sequence>
											</Loop>
											<EntityContext context="crime_disabledRecurrentPerceptionIgnore" target="">
												<Loop count="-1">
													<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
														<Child canSkip="1">
															<Sequence>
																<Expression expressions="$perceptionSearchActive = true" />
																<EntityContext context="crime_disabledRecurrentPerceptionIgnore" target="">
																	<Sequence>
																		<CancelPerceptionIgnore PerceptorObject="$this.id" PerceptibleObject="$__player" WasIgnoredAtLeastFor="&apos;0s&apos;" />
																		<PerceptionSearch ComponentToBoost="BoostPlayer" saveVersion="2">
																			<Search canSkip="1">
																				<IfGate atomic="true" condition="$dismissReady" RunLogic="KeepRunning">
																					<Sequence>
																						<Expression expressions="$dismissReady = false" />
																						<DismissSearchCandidate PerceptibleObject="$perceptionInfo.perceptible" />
																					</Sequence>
																				</IfGate>
																			</Search>
																			<NoCandidate canSkip="1">
																				<Success />
																			</NoCandidate>
																		</PerceptionSearch>
																	</Sequence>
																</EntityContext>
															</Sequence>
														</Child>
														<OnFail canSkip="1">
															<Expression expressions="$perceptionSearchActive = false" />
														</OnFail>
													</FuseBox>
												</Loop>
											</EntityContext>
										</Parallel>
									</IfCondition>
								</ContinuousSwitch>
							</Parallel>
						</Sequence>
					</Child>
					<OnSuccess canSkip="1">
						<RemoveLink From="$__player" To="$this.id" Tag="&apos;crime_playerLastSeen&apos;" LinkOpHandleMode="Success" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer>
			<Expression expressions="$state = $state == $enum:crime_chaseState.lockedOut  &#10;? $enum:crime_chaseState.lockingOn  &#10;: $enum:crime_chaseState.lockedOn" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GetCurrentPerceptionFocus hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetCurrentPerceptionFocus>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<SubtreeDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Init>
																<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</InstantCallback_empty>
															</Init>
															<Subtree>
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</WaitAction>
																	<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Turn>
																	<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																			<OutputBreakpoints />
																			<Then>
																				<Function_crime_crimeBark hasInputBreakpoint="0" comment="duplicated below, make sure to reflect changes, or refac" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Function_crime_crimeBark>
																			</Then>
																			<Else>
																				<Function_crime_crimeBark hasInputBreakpoint="0" comment="duplicated below, make sure to reflect changes, or refac" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Function_crime_crimeBark>
																			</Else>
																		</IfElseCondition>
																		<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</AnimationAction>
																	</Parallel>
																</Sequence>
															</Subtree>
															<Cleanup>
																<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</InstantCallback_empty>
															</Cleanup>
														</SubtreeDecorator>
													</Then>
													<Else>
														<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Function_crime_crimeBark hasInputBreakpoint="0" comment="duplicated above, make sure to reflect changes, or refac" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_crime_crimeBark>
															</Then>
															<Else>
																<Function_crime_crimeBark hasInputBreakpoint="0" comment="duplicated above, make sure to reflect changes, or refac" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_crime_crimeBark>
															</Else>
														</IfElseCondition>
													</Else>
												</IfElseCondition>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</ProcessMessage>
									</Loop>
									<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<CheckWuidValid hasInputBreakpoint="0" comment="NPC might read message AFTER the entity gets destroyed" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</IfCondition>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</IfCondition>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</IfCondition>
														<DefaultBranch>
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</DefaultBranch>
													</Switch>
												</Then>
											</CheckWuidValid>
										</ProcessMessage>
									</While>
									<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</GetSpatialInfo>
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
															<GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</GetTime>
															<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</AddLink>
														</Sequence>
													</AtomicDecorator>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</Loop>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</LinkTagFilter>
																		<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</LinkDataFilter>
																		<RangeFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</RangeFilter>
																		<EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																			<OutputBreakpoints />
																		</EvaLLyzer>
																	</GraphSearch>
																	<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</VarOperation>
																	<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Expression>
																		</IfCondition>
																	</ForEach>
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Expression hasInputBreakpoint="0" comment="TODO: is z relevant?" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Expression>
																			<AddLink hasInputBreakpoint="0" comment="TODO: this was above the if, was there a reason? i cant see one atm" breakpointFlags="0">
																				<OutputBreakpoints />
																			</AddLink>
																			<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</InstantSendMessageToNPC>
																			</IfCondition>
																			<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</InstantCallback_empty>
																		</Sequence>
																	</IfCondition>
																</Sequence>
															</AtomicDecorator>
														</SuppressFailure>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Sequence>
												</Loop>
												<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Child>
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																	<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<CancelPerceptionIgnore hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</CancelPerceptionIgnore>
																			<PerceptionSearch hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																				<OutputBreakpoints />
																				<Search>
																					<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</Expression>
																							<DismissSearchCandidate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</DismissSearchCandidate>
																						</Sequence>
																					</IfGate>
																				</Search>
																				<NoCandidate>
																					<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Success>
																				</NoCandidate>
																			</PerceptionSearch>
																		</Sequence>
																	</EntityContext>
																</Sequence>
															</Child>
															<OnFail>
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</OnFail>
														</FuseBox>
													</Loop>
												</EntityContext>
											</Parallel>
										</IfCondition>
									</ContinuousSwitch>
								</Parallel>
							</Sequence>
						</Child>
						<OnSuccess>
							<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</RemoveLink>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest>
				<Expression editorPosX="2900" editorPosY="850" hasInputBreakpoint="0" comment="See player -&gt; lock on" breakpointFlags="0">
					<OutputBreakpoints />
				</Expression>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>