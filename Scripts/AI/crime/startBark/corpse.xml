<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_startBark_corpse" is_function="1">
		<Variables>
			<Variable name="areMates" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="dialogContext" type="_float" values="" isPersistent="0" form="associative" />
			<Variable name="metarole" type="_string" values="&apos;NPC_VIDI_MRTVOLU_(MRTVOLA&apos;" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="corpse" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="corpseState" type="enum:corpseState" values="$enum:corpseState.undiscovered" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<CheckWuidValid wuid="$corpse" FailSubtMissing="false" saveVersion="2">
					<Then canSkip="1">
						<Sequence>
							<GetAreMates Npc1="$this.id" Npc2="$corpse" AreMates="$areMates" />
							<Function_crime_startBark_corpse_getMetarole areMates="$areMates" corpseState="$corpseState" metarole="$metarole" nodeLabel="20360391" />
							<HasGenderCheck Gender="Female" SoulWUID="$corpse" FailSubtMissing="false" saveVersion="2">
								<Then canSkip="1">
									<Expression expressions="$dialogContext[&apos;isMan&apos;] = 0" />
								</Then>
								<Else canSkip="1">
									<Expression expressions="$dialogContext[&apos;isMan&apos;] = 1" />
								</Else>
							</HasGenderCheck>
							<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="false" lookAt="$corpse" metarole="$metarole" priority="$enum:crime_barkPriority.important" nodeLabel="92260581" />
						</Sequence>
					</Then>
				</CheckWuidValid>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="areMates" comment="" />
				<Variable name="dialogContext" comment="" />
				<Variable name="metarole" comment="" />
				<Variable name="corpse" comment="" />
				<Variable name="corpseState" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GetAreMates hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetAreMates>
								<Function_crime_startBark_corpse_getMetarole hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_startBark_corpse_getMetarole>
								<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Then>
									<Else>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Else>
								</HasGenderCheck>
								<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_crimeBark>
							</Sequence>
						</Then>
					</CheckWuidValid>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="crime_startBark_corpse_getMetarole" is_function="1">
		<Variables />
		<Parameters>
			<Variable name="areMates" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="corpseState" type="enum:corpseState" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="metarole" type="_string" values="&apos;NPC_VIDI_MRTVOLU_(MRTVOLA&apos;" isPersistent="0" form="single" requirementType="Out" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<IfElseCondition failOnCondition="false" condition="$areMates" saveVersion="2">
						<Then canSkip="1">
							<Expression expressions="$metarole += &apos;__SPOLUBYDLICI&apos;" />
						</Then>
						<Else canSkip="1">
							<Expression expressions="$metarole += &apos;__PRITEL&apos;" />
						</Else>
					</IfElseCondition>
					<IfElseCondition failOnCondition="false" condition="$corpseState &lt; $enum:corpseState.watched" saveVersion="2">
						<Then canSkip="1">
							<IfElseCondition failOnCondition="false" condition="$corpseState == $enum:corpseState.undiscovered" saveVersion="2">
								<Then canSkip="1">
									<Success />
								</Then>
								<Else canSkip="1">
									<Expression expressions="$metarole += &apos;__NAHLASOVANA&apos;" />
								</Else>
							</IfElseCondition>
						</Then>
						<Else canSkip="1">
							<Expression expressions="$metarole += &apos;__HLIDANA&apos;" />
						</Else>
					</IfElseCondition>
					<Expression expressions="$metarole += &apos;)&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="areMates" comment="" />
				<Variable name="corpseState" comment="" />
				<Variable name="metarole" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Then>
							<Else>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Else>
						</IfElseCondition>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Then>
									<Else>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Else>
								</IfElseCondition>
							</Then>
							<Else>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Else>
						</IfElseCondition>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>