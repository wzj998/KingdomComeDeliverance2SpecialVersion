<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_crimeSwitchBark" is_function="1">
    <Variables>
      <Variable name="barkRequest" type="crime:barkRequest" values="" isPersistent="0" form="single" />
      <Variable name="skipBark" type="_bool" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="animationApproach" type="enum:animationApproach" values="$enum:animationApproach.dontPlayDialogAnimations" isPersistent="0" form="single" requirementType="In" />
      <Variable name="canBarkFromSleep" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="canBeDelayed" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="dialogContext" type="_float" values="" isPersistent="0" form="associative" requirementType="In" optional="1" />
      <Variable name="dramaticBark" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="lookAt" type="_wuid" values="$__null" isPersistent="0" form="single" requirementType="In" />
      <Variable name="metarole" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="priority" type="enum:crime_barkPriority" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <EntityContextCheck context="crime_sleeping" target="" saveVersion="2">
            <Then canSkip="1">
              <Expression expressions="$skipBark = ~$canBarkFromSleep" />
            </Then>
          </EntityContextCheck>
          <IsDeadCheck SoulWUID="" FailSubtMissing="false" saveVersion="2">
            <Then canSkip="1">
              <Expression expressions="$skipBark = true" />
            </Then>
          </IsDeadCheck>
          <IfCondition failOnCondition="false" condition="~$skipBark">
            <Sequence>
              <Function_switch_serializeDialogueContext dialogContext="$dialogContext" serializedString="$barkRequest.contextAsText" nodeLabel="83728733" />
              <Expression expressions="$barkRequest.metarole = $metarole &#10;$barkRequest.isDramaticBark = $dramaticBark &#10;$barkRequest.priority = $priority &#10;$barkRequest.lookAtId = $lookAt &#10;$barkRequest.canBeDelayed = $canBeDelayed &#10;$barkRequest.animationApproach = $animationApproach" />
              <InstantSendMessageToNPC target="$this.id" variable="$barkRequest" />
            </Sequence>
          </IfCondition>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="barkRequest" comment="" />
        <Variable name="skipBark" comment="" />
        <Variable name="animationApproach" comment="" />
        <Variable name="canBarkFromSleep" comment="" />
        <Variable name="canBeDelayed" comment="" />
        <Variable name="dialogContext" comment="" />
        <Variable name="dramaticBark" comment="" />
        <Variable name="lookAt" comment="" />
        <Variable name="metarole" comment="" />
        <Variable name="priority" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Then>
            </EntityContextCheck>
            <IsDeadCheck hasInputBreakpoint="0" comment="KCD2-322534" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Then>
            </IsDeadCheck>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Function_switch_serializeDialogueContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Function_switch_serializeDialogueContext>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
                <InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </InstantSendMessageToNPC>
              </Sequence>
            </IfCondition>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>