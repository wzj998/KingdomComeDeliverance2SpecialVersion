<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_chooseReportDestination_authority" is_function="1">
    <Variables>
      <Variable name="break" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="crimeScoreMultiplier" type="_float" values="1" isPersistent="0" form="single" />
      <Variable name="crime_districtOrigin" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="crime_districtOrigins" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="distanceConditionType" type="enum:crime_reportDestinationDistanceConditionType" values="$enum:crime_reportDestinationDistanceConditionType.close" isPersistent="0" form="single" />
      <Variable name="insideArea" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="isInsideCrimeDistrict" type="_bool" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" requirementType="Out" />
      <Variable name="extraDistance" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
      <Variable name="isViolent" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <ErrorNode Message="&apos;Function is obsolete. Use its code successor.&apos;" />
      </Behavior>
    </Root>
    <ForestContainer>
        <SuppressFailure>
          <Sequence>
            <IfCondition failOnCondition="false" condition="$isViolent">
              <Expression expressions="$crimeScoreMultiplier = $data:script_param[&apos;crime_report_violentCrime_scoreMultiplier&apos;].value" />
            </IfCondition>
          <GetCrimeDistrict District="$insideArea" IsInside="$isInsideCrimeDistrict" />
            <Switch>
              <IfCondition failOnCondition="false" condition="$isInsideCrimeDistrict">
                <Expression expressions="$distanceConditionType = $enum:crime_reportDestinationDistanceConditionType.unlimited" />
              </IfCondition>
              <IfCondition failOnCondition="false" condition="$extraDistance">
                <Expression expressions="$distanceConditionType = $enum:crime_reportDestinationDistanceConditionType.far" />
              </IfCondition>
              <DefaultBranch>
                <Success />
              </DefaultBranch>
            </Switch>
          <GetReportDestinationFromDistrict DistanceConditionType="$distanceConditionType" District="$insideArea" ScoreMultiplier="$crimeScoreMultiplier" Destination="$destination" />
            <IfCondition failOnCondition="false" condition="$destination == $__null">
              <Sequence>
                <GraphSearch Origin="$insideArea" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="" AllowedEdges="" SubGraph="&apos;crime_neighbourDistrict,crime_neighbourDistrictReverse,crime_districtOrigin&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                  <LinkTagFilter tag="&apos;crime_districtOrigin&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
                  <Nodalyzer Quantifiers="ForAll" Parent="" Child="$crime_districtOrigins" saveVersion="2">
                    <Child0 canSkip="1">
                      <RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
                    </Child0>
                  </Nodalyzer>
                </GraphSearch>
                <ForEach startIndex="0" step="1" array="$crime_districtOrigins" iterator="" value="$crime_districtOrigin" break="$break">
                  <Sequence>
                    <GraphSearch Origin="$crime_districtOrigin" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                      <LinkTagFilter tag="&apos;crime_districtOriginReverse&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
                      <Nodalyzer Quantifiers="ForAll" Parent="" Child="$insideArea" saveVersion="2" />
                    </GraphSearch>
                  <GetReportDestinationFromDistrict DistanceConditionType="$distanceConditionType" District="$insideArea" ScoreMultiplier="$crimeScoreMultiplier" Destination="$destination" />
                    <IfCondition failOnCondition="false" condition="$destination ~= $__null">
                      <Expression expressions="$break = true" />
                    </IfCondition>
                  </Sequence>
                </ForEach>
              </Sequence>
            </IfCondition>
          </Sequence>
        </SuppressFailure>
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="break" comment="" />
        <Variable name="crimeScoreMultiplier" comment="" />
        <Variable name="crime_districtOrigin" comment="" />
        <Variable name="crime_districtOrigins" comment="" />
        <Variable name="distanceConditionType" comment="" />
        <Variable name="insideArea" comment="" />
        <Variable name="isInsideCrimeDistrict" comment="" />
        <Variable name="destination" comment="" />
        <Variable name="extraDistance" comment="" />
        <Variable name="isViolent" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="830" editorPosY="930" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </ErrorNode>
        </Behavior>
      </Root>
      <Forest>
        <SuppressFailure editorPosX="1060" editorPosY="1480" hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </IfCondition>
            <GetCrimeDistrict hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
            </GetCrimeDistrict>
              <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Expression>
                </IfCondition>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Expression>
                </IfCondition>
                <DefaultBranch>
                  <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Success>
                </DefaultBranch>
              </Switch>
            <GetReportDestinationFromDistrict hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
            </GetReportDestinationFromDistrict>
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </LinkTagFilter>
                    <Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                      <OutputBreakpoints />
                      <Child0>
                        <RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </RangeSorter>
                      </Child0>
                    </Nodalyzer>
                  </GraphSearch>
                  <ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </LinkTagFilter>
                        <Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                          <OutputBreakpoints />
                        </Nodalyzer>
                      </GraphSearch>
                    <GetReportDestinationFromDistrict hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                    </GetReportDestinationFromDistrict>
                      <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                      </IfCondition>
                    </Sequence>
                  </ForEach>
                </Sequence>
              </IfCondition>
            </Sequence>
          </SuppressFailure>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>