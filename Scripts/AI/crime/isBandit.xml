<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_isBandit" is_function="1">
    <Variables />
    <Parameters>
      <Variable name="isBandit" type="_bool" values="" isPersistent="0" form="single" requirementType="Out" />
      <Variable name="target" type="_wuid" values="$this.id" isPersistent="0" form="single" requirementType="In" optional="1" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <ErrorNode Message="&apos;Function is obsolete. Use its code successor.&apos;" />
      </Behavior>
    </Root>
    <ForestContainer>
      <IsPublicEnemy Soul="$this.id" FailOnSubtreeMissing="false" saveVersion="2">
        <Then canSkip="1">
          <EntityContextCheck context="crime_isCamper" target="" saveVersion="2">
            <Then canSkip="1">
              <Expression expressions="$isBandit = true" />
            </Then>
          </EntityContextCheck>
        </Then>
      </IsPublicEnemy>
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="isBandit" comment="" />
        <Variable name="target" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="10" editorPosY="20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </ErrorNode>
        </Behavior>
      </Root>
      <Forest>
        <IsPublicEnemy editorPosX="250" editorPosY="190" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
          <OutputBreakpoints />
          <Then>
            <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Then>
            </EntityContextCheck>
          </Then>
        </IsPublicEnemy>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>