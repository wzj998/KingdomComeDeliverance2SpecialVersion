<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_addFollowUp_checkHomeStashes" is_function="1">
		<Variables>
			<Variable name="checkStashesFollowUpData" type="crime:followUpBehavior:checkHomeStashes" values="" isPersistent="0" form="single" />
			<Variable name="uselessArea" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="added" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" optional="1" />
			<Variable name="home" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" requirementType="In" optional="1" />
			<Variable name="playerRelated" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="resetStolenItemsFound" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="stolenItemsFound" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextCheck context="crime_disableCheckHomeStashes" target="" saveVersion="2">
					<Else canSkip="1">
						<IsInsideAreaWithLabel Position="$home" Label="&apos;castle&apos;" Area="$uselessArea" FailSubtMissing="false" saveVersion="2">
							<Else canSkip="1">
								<Sequence>
									<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;crime_followUpBehavior_checkHomeStashes&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$checkStashesFollowUpData" />
										<WUIDFilter WUID="$home" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
									</GraphSearch>
									<Expression expressions="$checkStashesFollowUpData.playerRelated = $checkStashesFollowUpData.playerRelated | $playerRelated" />
									<IfElseCondition failOnCondition="false" condition="$resetStolenItemsFound" saveVersion="2">
										<Then canSkip="1">
											<Expression expressions="$checkStashesFollowUpData.stolenItemsFound = false" />
										</Then>
										<Else canSkip="1">
											<Expression expressions="$checkStashesFollowUpData.stolenItemsFound = $checkStashesFollowUpData.stolenItemsFound | $stolenItemsFound" />
										</Else>
									</IfElseCondition>
									<IfCondition failOnCondition="false" condition="$checkStashesFollowUpData.information.label ~= &apos;theft&apos;  &#10;&amp; ($information.label == &apos;theft&apos;  &#10;  | ($information.label == &apos;nonAttributedCrime&apos;  &#10;    &amp; $checkStashesFollowUpData.information.label == &apos;&apos;))">
										<Expression expressions="$checkStashesFollowUpData.information = $information" />
									</IfCondition>
									<AddLink From="$this.id" To="$home" Tag="&apos;crime_followUpBehavior_checkHomeStashes&apos;" Data="$checkStashesFollowUpData" LinkOpHandleMode="OverWrite" />
									<Expression expressions="$added = true" />
								</Sequence>
							</Else>
						</IsInsideAreaWithLabel>
					</Else>
				</EntityContextCheck>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="checkStashesFollowUpData" comment="" />
				<Variable name="uselessArea" comment="" />
				<Variable name="added" comment="" />
				<Variable name="home" comment="" />
				<Variable name="information" comment="" />
				<Variable name="playerRelated" comment="" />
				<Variable name="resetStolenItemsFound" comment="" />
				<Variable name="stolenItemsFound" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Else>
							<IsInsideAreaWithLabel hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Else>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
											<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</WUIDFilter>
										</GraphSearch>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Then>
											<Else>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Else>
										</IfElseCondition>
										<IfCondition hasInputBreakpoint="0" comment="theft &gt; nonattributed" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</IfCondition>
										<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AddLink>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Sequence>
								</Else>
							</IsInsideAreaWithLabel>
						</Else>
					</EntityContextCheck>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>