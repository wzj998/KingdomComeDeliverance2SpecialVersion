<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_processOpenWorldCooldowns_npc" is_function="1">
		<Variables>
			<Variable name="cooldownEvent" type="openWorld:cooldownEvent" values="" isPersistent="0" form="single" />
			<Variable name="cooldowns" type="crime:npcCooldowns" values="" isPersistent="0" form="single" />
			<Variable name="now" type="_int64" values="" isPersistent="0" form="single" />
			<Variable name="playerGreetedToday" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="resetSituationTimer" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="situationsOnCooldown" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ClearInbox inbox="&apos;openWorldCooldowns&apos;" type="" condition="" />
					<Parallel successMode="Any" failureMode="Any">
						<While doFail="false" propagateChildFail="false" condition="true">
							<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$cooldownEvent" senderInfo="" inbox="&apos;openWorldCooldowns&apos;" condition="" answerVar="">
								<Sequence>
									<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;crime_npcCooldowns&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;crime_npcCooldowns&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$cooldowns" />
									</GraphSearch>
									<IfCondition failOnCondition="false" condition="$cooldownEvent.eventType == $enum:openWorld_cooldownEventType.dialogPlayerGreeting | &#10;$cooldownEvent.eventType == $enum:openWorld_cooldownEventType.playerGreeting">
										<Expression expressions="$playerGreetedToday = true" />
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$cooldownEvent.eventType == $enum:openWorld_cooldownEventType.dialogPlayerGreeting | &#10;$cooldownEvent.eventType == $enum:openWorld_cooldownEventType.playerGreeting | &#10;$cooldownEvent.eventType == $enum:openWorld_cooldownEventType.playerCrimeReaction | &#10;$cooldownEvent.eventType == $enum:openWorld_cooldownEventType.situation_npcGreeting | &#10;$cooldownEvent.eventType == $enum:openWorld_cooldownEventType.situation_other | &#10;$cooldownEvent.eventType == $enum:openWorld_cooldownEventType.soliloquy">
										<Sequence>
											<GetTime TimeType="GameTime" OutVar="$cooldowns.owcd_personal" Delta="" />
											<Expression expressions="$situationsOnCooldown = true &#10;$resetSituationTimer = true" />
										</Sequence>
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$cooldownEvent.eventType == $enum:openWorld_cooldownEventType.situation_npcGreeting">
										<GetTime TimeType="GameTime" OutVar="$cooldowns.owcd_npcGreeting" Delta="" />
									</IfCondition>
									<AddLink From="$this.id" To="$this.id" Tag="&apos;crime_npcCooldowns&apos;" Data="$cooldowns" LinkOpHandleMode="OverWrite" />
								</Sequence>
							</ProcessMessage>
						</While>
						<While doFail="false" propagateChildFail="false" condition="true">
							<IfGate atomic="false" condition="$playerGreetedToday" RunLogic="Halt">
								<EntityContext context="owcd_npc_playerGreeting" target="">
									<While doFail="false" propagateChildFail="false" condition="true">
										<Sequence>
											<Wait duration="&apos;3h&apos;" timeType="WorldTime" doFail="false" variation="" />
											<TimerBox startTime="&apos;02&apos;" endTime="&apos;05&apos;" variation="" duration="">
												<Expression expressions="$playerGreetedToday = false" />
											</TimerBox>
										</Sequence>
									</While>
								</EntityContext>
							</IfGate>
						</While>
						<While doFail="false" propagateChildFail="false" condition="true">
							<IfGate atomic="false" condition="$situationsOnCooldown" RunLogic="Halt">
								<EntityContext context="DisableSituationParticipation" target="">
									<Loop count="-1">
										<Sequence>
											<Expression expressions="$resetSituationTimer = false" />
											<IfGate atomic="false" condition="~$resetSituationTimer" RunLogic="Halt">
												<Sequence>
													<Function_crime_waitMiliseconds miliseconds="$data:script_param[&apos;owcd_npc_situation&apos;].value" nodeLabel="15526077" />
													<Expression expressions="$situationsOnCooldown = false" />
												</Sequence>
											</IfGate>
										</Sequence>
									</Loop>
								</EntityContext>
							</IfGate>
						</While>
					</Parallel>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="cooldownEvent" comment="" />
				<Variable name="cooldowns" comment="" />
				<Variable name="now" comment="" />
				<Variable name="playerGreetedToday" comment="" />
				<Variable name="resetSituationTimer" comment="" />
				<Variable name="situationsOnCooldown" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ClearInbox hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ClearInbox>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</GetTime>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Sequence>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetTime>
										</IfCondition>
										<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AddLink>
									</Sequence>
								</ProcessMessage>
							</While>
							<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
												<TimerBox hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</TimerBox>
											</Sequence>
										</While>
									</EntityContext>
								</IfGate>
							</While>
							<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
												<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_crime_waitMiliseconds hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_crime_waitMiliseconds>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Sequence>
												</IfGate>
											</Sequence>
										</Loop>
									</EntityContext>
								</IfGate>
							</While>
						</Parallel>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="crime_processOpenWorldCooldowns_global" is_function="1">
		<Variables>
			<Variable name="cooldownEvent" type="openWorld:cooldownEvent" values="" isPersistent="0" form="single" />
			<Variable name="cooldowns" type="crime:globalCooldowns" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<While doFail="false" propagateChildFail="false" condition="true">
					<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$cooldownEvent" senderInfo="" inbox="&apos;openWorldCooldowns&apos;" condition="" answerVar="">
						<IfCondition failOnCondition="false" condition="$cooldownEvent.eventType == $enum:openWorld_cooldownEventType.dialogPlayerGreeting | &#10;$cooldownEvent.eventType == $enum:openWorld_cooldownEventType.playerGreeting | &#10;$cooldownEvent.eventType == $enum:openWorld_cooldownEventType.playerCrimeReaction |  &#10;$cooldownEvent.eventType == $enum:openWorld_cooldownEventType.commentCompanionHorse |  &#10;$cooldownEvent.eventType == $enum:openWorld_cooldownEventType.commentCompanionDog">
							<Sequence>
								<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;crime_globalCooldowns&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;crime_globalCooldowns&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$cooldowns" />
								</GraphSearch>
								<Expression expressions="$cooldowns.barkCooldownPriority = $cooldownEvent.crimeReactionPriority" />
								<GetTime TimeType="GameTime" OutVar="$cooldowns.lastBarkTimestamp" Delta="" />
								<AddLink From="$this.id" To="$this.id" Tag="&apos;crime_globalCooldowns&apos;" Data="$cooldowns" LinkOpHandleMode="OverWrite" />
							</Sequence>
						</IfCondition>
					</ProcessMessage>
				</While>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="cooldownEvent" comment="" />
				<Variable name="cooldowns" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-310" editorPosY="-30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetTime>
									<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AddLink>
								</Sequence>
							</IfCondition>
						</ProcessMessage>
					</While>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>