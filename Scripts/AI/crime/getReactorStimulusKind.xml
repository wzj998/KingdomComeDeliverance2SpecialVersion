<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_getReactorStimulusKind" is_function="1">
    <Variables>
      <Variable name="alarmInformation" type="information" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="reactorData" type="crime:reactor" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="stimulusKind" type="enum:crime_stimulusKind" values="" isPersistent="0" form="single" requirementType="Out" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Switch>
          <IfCondition failOnCondition="false" condition="$data:crime[$reactorData.information.label].isCrime">
            <Function_crime_getStimulusKindFromString label="$reactorData.information.label" stimulusKind="$stimulusKind" nodeLabel="40547870" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$reactorData.information.label == &apos;motivation&apos; | &#10;$reactorData.information.label == &apos;nonAttributedCrime&apos;">
            <Sequence>
              <LockDynamicInformationValues Information="$reactorData.information">
                <GetDynamicInformationValue Information="$reactorData.information" Tag="&apos;stimulusKind&apos;" Out="$stimulusKind" />
              </LockDynamicInformationValues>
              <IfCondition failOnCondition="false" condition="$stimulusKind == $enum:crime_stimulusKind.alarm">
                <SuppressFailure>
                  <Sequence>
                    <RetrieveInformation PerceivedWuid="$this.id" label="&apos;alarm&apos;" OutVariable="$alarmInformation" />
                    <LockDynamicInformationValues Information="$alarmInformation">
                      <GetDynamicInformationValue Information="$alarmInformation" Tag="&apos;stimulusKind&apos;" Out="$stimulusKind" />
                    </LockDynamicInformationValues>
                  </Sequence>
                </SuppressFailure>
              </IfCondition>
            </Sequence>
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$reactorData.information.label == &apos;corpse&apos;">
            <Expression expressions="$stimulusKind = $enum:crime_stimulusKind.corpse" />
          </IfCondition>
          <DefaultBranch>
            <ErrorNode Message="&apos;No way to determine stimulusKind for given reactorData&apos;" />
          </DefaultBranch>
        </Switch>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="alarmInformation" comment="" />
        <Variable name="reactorData" comment="" />
        <Variable name="stimulusKind" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Function_crime_getStimulusKindFromString hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Function_crime_getStimulusKindFromString>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </GetDynamicInformationValue>
                </LockDynamicInformationValues>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <RetrieveInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </RetrieveInformation>
                      <LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </GetDynamicInformationValue>
                      </LockDynamicInformationValues>
                    </Sequence>
                  </SuppressFailure>
                </IfCondition>
              </Sequence>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <DefaultBranch>
              <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </ErrorNode>
            </DefaultBranch>
          </Switch>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>