<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_executeReputationHit" is_function="1">
    <Variables>
      <Variable name="alreadyGotRepHit" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="faction" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="factionsAlreadyGotRepHit" type="_string" values="" isPersistent="0" form="array" />
      <Variable name="gotRepHit" type="_int" values="" isPersistent="0" form="single" />
      <Variable name="reputationHit" type="_string" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="information" type="information" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="reputationHitForm" type="enum:crime_reputationHitForm" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <ErrorNode Message="&apos;Function is obsolete. Use its code successor.&apos;" />
      </Behavior>
    </Root>
    <ForestContainer>
      <IfCondition failOnCondition="false" condition="$data:crime[$information.label].isCrime">
        <Switch>
          <IfCondition failOnCondition="false" condition="$reputationHitForm == $enum:crime_reputationHitForm.witness">
            <Sequence>
              <SuppressFailure>
                <LockDynamicInformationValues Information="$information">
                  <GetDynamicInformationValue Information="$information" Tag="&apos;alreadyGotRepHit&apos;" Out="$alreadyGotRepHit" />
                </LockDynamicInformationValues>
              </SuppressFailure>
              <VarOperation varName="$alreadyGotRepHit" targetVarName="$gotRepHit" operation="Find" argument="$this.id" />
              <IfCondition failOnCondition="false" condition="$gotRepHit == -1">
                <IfCondition failOnCondition="false" condition="$information.label ~= &apos;assault&apos; | &#10;$information.perceivedWuid ~= $this.id">
                  <Sequence>
                    <Expression expressions="$reputationHit = &apos;witness_crime_&apos; + $information.label" />
                    <AffectFeelings AffectNervousness="false" AffectReputation="true" Npc="$this.id" Token="$reputationHit" nodeLabel="77779290" />
                    <VarOperation varName="$alreadyGotRepHit" targetVarName="" operation="PushFront" argument="($this.id)" />
                    <LockDynamicInformationValues Information="$information">
                      <SetDynamicInformationValue Information="$information" Tag="&apos;alreadyGotRepHit&apos;" Variable="$alreadyGotRepHit" Type="" Value="" />
                    </LockDynamicInformationValues>
                  </Sequence>
                </IfCondition>
              </IfCondition>
            </Sequence>
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$reputationHitForm == $enum:crime_reputationHitForm.faction">
            <Sequence>
              <GetFactionWithLabel Soul="$this.id" Label="settlement" OutputFaction="$faction" />
              <IfCondition failOnCondition="false" condition="$faction ~= &apos;&apos;">
                <Sequence>
                  <SuppressFailure>
                    <LockDynamicInformationValues Information="$information">
                      <GetDynamicInformationValue Information="$information" Tag="&apos;factionsAlreadyGotRepHit&apos;" Out="$factionsAlreadyGotRepHit" />
                    </LockDynamicInformationValues>
                  </SuppressFailure>
                  <VarOperation varName="$factionsAlreadyGotRepHit" targetVarName="$gotRepHit" operation="Find" argument="$faction" />
                  <IfCondition failOnCondition="false" condition="$gotRepHit == -1">
                    <Sequence>
                      <Expression expressions="$reputationHit = &apos;auto_faction_crime_&apos; + $information.label" />
                      <SetReputationFaction faction="$faction" reputationChange="$reputationHit" />
                      <VarOperation varName="$factionsAlreadyGotRepHit" targetVarName="" operation="PushFront" argument="($faction)" />
                      <LockDynamicInformationValues Information="$information">
                        <SetDynamicInformationValue Information="$information" Tag="&apos;factionsAlreadyGotRepHit&apos;" Variable="$factionsAlreadyGotRepHit" Type="" Value="" />
                      </LockDynamicInformationValues>
                    </Sequence>
                  </IfCondition>
                </Sequence>
              </IfCondition>
            </Sequence>
          </IfCondition>
          <DefaultBranch>
            <ErrorNode Message="&apos;Unhandled reputationHitForm: $reputationHitForm!&apos;" />
          </DefaultBranch>
        </Switch>
      </IfCondition>
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="alreadyGotRepHit" comment="" />
        <Variable name="faction" comment="" />
        <Variable name="factionsAlreadyGotRepHit" comment="" />
        <Variable name="gotRepHit" comment="" />
        <Variable name="reputationHit" comment="" />
        <Variable name="information" comment="" />
        <Variable name="npc" comment="" />
        <Variable name="reputationHitForm" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-760" editorPosY="-150" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </ErrorNode>
        </Behavior>
      </Root>
      <Forest>
        <IfCondition editorPosX="-400" editorPosY="250" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
          <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </GetDynamicInformationValue>
                  </LockDynamicInformationValues>
                </SuppressFailure>
                <VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </VarOperation>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IfCondition hasInputBreakpoint="0" comment="reputace za hity na me resim v handle_hiReaction" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                      <AffectFeelings hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </AffectFeelings>
                      <VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </VarOperation>
                      <LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </SetDynamicInformationValue>
                      </LockDynamicInformationValues>
                    </Sequence>
                  </IfCondition>
                </IfCondition>
              </Sequence>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <GetFactionWithLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </GetFactionWithLabel>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </GetDynamicInformationValue>
                      </LockDynamicInformationValues>
                    </SuppressFailure>
                    <VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </VarOperation>
                    <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                        <SetReputationFaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </SetReputationFaction>
                        <VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </VarOperation>
                        <LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </SetDynamicInformationValue>
                        </LockDynamicInformationValues>
                      </Sequence>
                    </IfCondition>
                  </Sequence>
                </IfCondition>
              </Sequence>
            </IfCondition>
            <DefaultBranch>
              <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </ErrorNode>
            </DefaultBranch>
          </Switch>
        </IfCondition>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>