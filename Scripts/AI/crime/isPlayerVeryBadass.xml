<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_isPlayerVeryBadass" is_function="1">
    <Variables>
      <Variable name="badassness" type="_float" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="isVeryBadass" type="_bool" values="" isPersistent="0" form="single" requirementType="Out" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <ErrorNode Message="&apos;Function is obsolete. Use its code successor.&apos;" />
      </Behavior>
    </Root>
    <ForestContainer>
        <Sequence>
          <ExecuteLua code="data.badassness = player.soul:GetDerivedStat(&apos;bad&apos;)" />
          <Expression expressions="$isVeryBadass = $badassness &gt; $data:script_param[&apos;crime_playerIsVeryBadassThreshold&apos;].value" />
        </Sequence>
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="badassness" comment="" />
        <Variable name="isVeryBadass" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </ErrorNode>
        </Behavior>
      </Root>
      <Forest>
        <Sequence editorPosX="260" editorPosY="180" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
            <ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </ExecuteLua>
            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
          </Sequence>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>