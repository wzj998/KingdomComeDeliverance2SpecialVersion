<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_hasMeleeWeaponDrawn" is_function="1">
    <Variables>
      <Variable name="type" type="_string" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="result" type="_bool" values="" isPersistent="0" form="single" requirementType="Out" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GetType WUID="$npc" OutString="$type" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
          <IfElseCondition failOnCondition="false" condition="$type == &apos;NPC&apos;" saveVersion="2">
            <Then canSkip="1">
              <IsWeaponDrawn who="$npc" WeaponSet="Primary" saveVersion="2">
                <Then canSkip="1">
                  <SuppressFailure>
                    <Sequence>
                      <GraphSearch Origin="$npc" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="" SubGraph="&apos;inventory&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                        <ItemClassFilter ClassId="" Category="&apos;melee_weapon.*.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
                        <NegationOp Results="true" Advance="true" EndOp="true" saveVersion="2">
                          <Child0 canSkip="1">
                            <ItemClassFilter ClassId="" Category="&apos;melee_weapon.torch.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
                          </Child0>
                        </NegationOp>
                        <ItemParamFilter Param="Equip" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
                      </GraphSearch>
                      <Expression expressions="$result = true" />
                    </Sequence>
                  </SuppressFailure>
                </Then>
                <Else canSkip="1">
                  <IsWeaponDrawn who="$npc" WeaponSet="Oversized" saveVersion="2">
                    <Then canSkip="1">
                      <Expression expressions="$result = true" />
                    </Then>
                    <Else canSkip="1">
                      <Expression expressions="$result = false" />
                    </Else>
                  </IsWeaponDrawn>
                </Else>
              </IsWeaponDrawn>
            </Then>
            <Else canSkip="1">
              <Expression expressions="$result = false" />
            </Else>
          </IfElseCondition>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="type" comment="" />
        <Variable name="npc" comment="" />
        <Variable name="result" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="150" editorPosY="-50" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </GetType>
            <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                  <OutputBreakpoints />
                  <Then>
                    <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </ItemClassFilter>
                          <NegationOp hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                            <OutputBreakpoints />
                            <Child0>
                              <ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </ItemClassFilter>
                            </Child0>
                          </NegationOp>
                          <ItemParamFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </ItemParamFilter>
                        </GraphSearch>
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                      </Sequence>
                    </SuppressFailure>
                  </Then>
                  <Else>
                    <IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                      <OutputBreakpoints />
                      <Then>
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                      </Then>
                      <Else>
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                      </Else>
                    </IsWeaponDrawn>
                  </Else>
                </IsWeaponDrawn>
              </Then>
              <Else>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Else>
            </IfElseCondition>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>