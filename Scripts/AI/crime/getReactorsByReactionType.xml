<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_getReactorsByReactionType" is_function="1">
    <Variables>
      <Variable name="reactorData" type="_wuid,crime:reactor" values="" isPersistent="0" form="custom_associative" />
      <Variable name="reactorData_key" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="reactorData_reactionType" type="enum:crime_reactionType" values="" isPersistent="0" form="single" />
      <Variable name="reactorData_stimulusKind" type="enum:crime_stimulusKind" values="" isPersistent="0" form="single" />
      <Variable name="reactorData_value" type="crime:reactor" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="reactionType" type="enum:crime_reactionType" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="reactors" type="_wuid" values="" isPersistent="0" form="array" requirementType="Out" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;crime_reactor&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
            <EvaLLyzer Expresion="$reactorData[$__to] = $__link_crime_reactor" Quantifiers="ForAll" saveVersion="2" />
          </GraphSearch>
          <ForEach startIndex="0" step="1" array="$reactorData" iterator="$reactorData_key" value="$reactorData_value" break="">
            <Sequence>
              <Switch>
                <IfCondition failOnCondition="false" condition="$data:crime[$reactorData_value.information.label].isCrime | &#10;$reactorData_value.information.label == &apos;corpse&apos;">
                  <Function_crime_getStimulusKindFromString label="$reactorData_value.information.label" stimulusKind="$reactorData_stimulusKind" nodeLabel="69594515" />
                </IfCondition>
                <IfCondition failOnCondition="false" condition="$reactorData_value.information.label == &apos;motivation&apos; | &#10;$reactorData_value.information.label == &apos;nonAttributedCrime&apos;">
                  <LockDynamicInformationValues Information="$reactorData_value.information">
                    <GetDynamicInformationValue Information="$reactorData_value.information" Tag="&apos;stimulusKind&apos;" Out="$reactorData_stimulusKind" />
                  </LockDynamicInformationValues>
                </IfCondition>
                <DefaultBranch>
                  <ErrorNode Message="&apos;ERROR: No way to determine stimulusKind for label $reactorData_value.information.label!&apos;" />
                </DefaultBranch>
              </Switch>
              <Function_crime_getReactionType reactionKind="$reactorData.reactionKind" stimulusKind="$reactorData_stimulusKind" reactionType="$reactorData_reactionType" nodeLabel="74284022" />
              <IfCondition failOnCondition="false" condition="$reactionType == $reactorData_reactionType">
                <PushToArray array="$reactors" value="$reactorData_key" direction="Back" />
              </IfCondition>
            </Sequence>
          </ForEach>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="reactorData" comment="" />
        <Variable name="reactorData_key" comment="" />
        <Variable name="reactorData_reactionType" comment="" />
        <Variable name="reactorData_stimulusKind" comment="" />
        <Variable name="reactorData_value" comment="" />
        <Variable name="reactionType" comment="" />
        <Variable name="reactors" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
              <EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
              </EvaLLyzer>
            </GraphSearch>
            <ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Function_crime_getStimulusKindFromString hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Function_crime_getStimulusKindFromString>
                  </IfCondition>
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </GetDynamicInformationValue>
                    </LockDynamicInformationValues>
                  </IfCondition>
                  <DefaultBranch>
                    <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </ErrorNode>
                  </DefaultBranch>
                </Switch>
                <Function_crime_getReactionType hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Function_crime_getReactionType>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </PushToArray>
                </IfCondition>
              </Sequence>
            </ForEach>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>