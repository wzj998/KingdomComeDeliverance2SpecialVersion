<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_findStolenItems" is_function="1">
		<Variables>
			<Variable name="chestInventory" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="isStolen" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="itemsAroundPlayer" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="stolenItems_value" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stolenItems_value_inventory" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="filterByInventory" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" optional="1" />
			<Variable name="stolenItems" type="_wuid" values="" isPersistent="0" form="array" requirementType="Out" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<IfElseCondition failOnCondition="false" condition="$filterByInventory ~= $__null" saveVersion="2">
						<Then canSkip="1">
							<CheckWuidValid wuid="$filterByInventory" FailSubtMissing="false" saveVersion="2">
								<Then canSkip="1">
									<Sequence>
										<GraphSearch Origin="$filterByInventory" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="&apos;inventory&apos;" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;inventory&apos;" prune="true" negprune="unknown" Parent="" Child="$chestInventory" Data="" />
										</GraphSearch>
										<GraphSearch Origin="$__player" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="&apos;inventory&apos;" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<ItemParamFilter Param="Stolen" Source="Child" prune="true" negprune="false" Parent="" Child="" />
											<StolenFromFilter Inventory="$chestInventory" Source="Child" prune="true" negprune="unknown" Condition="" Expression="" />
											<Nodalyzer Quantifiers="ForAll" Parent="" Child="$stolenItems" saveVersion="2" />
										</GraphSearch>
									</Sequence>
								</Then>
								<Else canSkip="1">
									<GraphSearch Origin="$__player" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="&apos;inventory&apos;" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<ItemParamFilter Param="Stolen" Source="Child" prune="true" negprune="false" Parent="" Child="" />
										<Nodalyzer Quantifiers="ForAll" Parent="" Child="$stolenItems" saveVersion="2" />
									</GraphSearch>
								</Else>
							</CheckWuidValid>
						</Then>
						<Else canSkip="1">
							<GraphSearch Origin="$__player" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="&apos;inventory&apos;" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<ItemParamFilter Param="Stolen" Source="Child" prune="true" negprune="false" Parent="" Child="" />
								<Nodalyzer Quantifiers="ForAll" Parent="" Child="$stolenItems" saveVersion="2" />
							</GraphSearch>
						</Else>
					</IfElseCondition>
					<GetPlayerHorse HorseWuid="$horse" />
					<IfCondition failOnCondition="false" condition="$horse ~= $__null">
						<IfElseCondition failOnCondition="false" condition="$filterByInventory ~= $__null" saveVersion="2">
							<Then canSkip="1">
								<CheckWuidValid wuid="$filterByInventory" FailSubtMissing="false" saveVersion="2">
									<Then canSkip="1">
										<GraphSearch Origin="$horse" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="&apos;inventory&apos;" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<ItemParamFilter Param="Stolen" Source="Child" prune="true" negprune="false" Parent="" Child="" />
											<StolenFromFilter Inventory="$chestInventory" Source="Child" prune="true" negprune="unknown" Condition="" Expression="" />
											<Nodalyzer Quantifiers="ForAll" Parent="" Child="$stolenItems" saveVersion="2" />
										</GraphSearch>
									</Then>
									<Else canSkip="1">
										<GraphSearch Origin="$horse" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="&apos;inventory&apos;" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<ItemParamFilter Param="Stolen" Source="Child" prune="true" negprune="false" Parent="" Child="" />
											<Nodalyzer Quantifiers="ForAll" Parent="" Child="$stolenItems" saveVersion="2" />
										</GraphSearch>
									</Else>
								</CheckWuidValid>
							</Then>
							<Else canSkip="1">
								<GraphSearch Origin="$horse" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="&apos;inventory&apos;" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<ItemParamFilter Param="Stolen" Source="Child" prune="true" negprune="false" Parent="" Child="" />
									<Nodalyzer Quantifiers="ForAll" Parent="" Child="$stolenItems" saveVersion="2" />
								</GraphSearch>
							</Else>
						</IfElseCondition>
					</IfCondition>
					<Sequence>
						<CircularSpatialQuery Radius="$data:script_param[&apos;crime_findStolenItems_groundRadius&apos;].value" Center="$__player" ToFill="$itemsAroundPlayer" Precision="Exact" Filter="PerceivableItems" />
						<ForEach startIndex="0" step="1" array="$itemsAroundPlayer" iterator="" value="$stolenItems_value" break="">
							<Sequence>
								<GetStolenInfo Item="$stolenItems_value" InventoryOut="$stolenItems_value_inventory" IsStolenOut="$isStolen" />
								<IfCondition failOnCondition="false" condition="$isStolen &amp; &#10;($filterByInventory ~= $__null | $stolenItems_value_inventory == $filterByInventory)">
									<PushToArray array="$stolenItems" value="$stolenItems_value" direction="Back" />
								</IfCondition>
							</Sequence>
						</ForEach>
					</Sequence>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="chestInventory" comment="" />
				<Variable name="horse" comment="" />
				<Variable name="isStolen" comment="" />
				<Variable name="itemsAroundPlayer" comment="" />
				<Variable name="stolenItems_value" comment="" />
				<Variable name="stolenItems_value_inventory" comment="" />
				<Variable name="filterByInventory" comment="" />
				<Variable name="stolenItems" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
											</GraphSearch>
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ItemParamFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ItemParamFilter>
												<StolenFromFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</StolenFromFilter>
												<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
												</Nodalyzer>
											</GraphSearch>
										</Sequence>
									</Then>
									<Else>
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ItemParamFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</ItemParamFilter>
											<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
											</Nodalyzer>
										</GraphSearch>
									</Else>
								</CheckWuidValid>
							</Then>
							<Else>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ItemParamFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ItemParamFilter>
									<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
									</Nodalyzer>
								</GraphSearch>
							</Else>
						</IfElseCondition>
						<GetPlayerHorse hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetPlayerHorse>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ItemParamFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ItemParamFilter>
												<StolenFromFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</StolenFromFilter>
												<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
												</Nodalyzer>
											</GraphSearch>
										</Then>
										<Else>
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ItemParamFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ItemParamFilter>
												<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
												</Nodalyzer>
											</GraphSearch>
										</Else>
									</CheckWuidValid>
								</Then>
								<Else>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ItemParamFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ItemParamFilter>
										<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
										</Nodalyzer>
									</GraphSearch>
								</Else>
							</IfElseCondition>
						</IfCondition>
						<Sequence hasInputBreakpoint="0" comment="Items that player dropped" breakpointFlags="0">
							<OutputBreakpoints />
							<CircularSpatialQuery hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</CircularSpatialQuery>
							<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetStolenInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetStolenInfo>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</PushToArray>
									</IfCondition>
								</Sequence>
							</ForEach>
						</Sequence>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>