<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_watch_checkSkirmishState" is_function="1">
		<Variables>
			<Variable name="playerInSkirmishIndex" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="skirmishParticipants" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Parameters>
			<Variable name="playerInSkirmish" type="_bool" values="" isPersistent="0" form="single" requirementType="Out" />
			<Variable name="watchTarget" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="watchingCombat" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<CheckWuidValid wuid="$watchTarget" FailSubtMissing="false" saveVersion="2">
						<Then canSkip="1">
							<GetSkirmishParticipants ReferenceNPC="$watchTarget" Active="true" Passive="false" Targets="true" HumanOnly="false" ParticipantsOutVar="$skirmishParticipants" />
						</Then>
						<Else canSkip="1">
							<Expression expressions="$watchingCombat = false" />
						</Else>
					</CheckWuidValid>
					<IfElseCondition failOnCondition="false" condition="#skirmishParticipants &gt; 0" saveVersion="2">
						<Then canSkip="1">
							<Sequence>
								<VarOperation varName="$skirmishParticipants" targetVarName="$playerInSkirmishIndex" operation="Find" argument="$__player" />
								<Expression expressions="$watchingCombat = true &#10;$playerInSkirmish = $playerInSkirmishIndex &gt;= 0" />
							</Sequence>
						</Then>
						<Else canSkip="1">
							<Expression expressions="$watchingCombat = false" />
						</Else>
					</IfElseCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="playerInSkirmishIndex" comment="" />
				<Variable name="skirmishParticipants" comment="" />
				<Variable name="playerInSkirmish" comment="" />
				<Variable name="watchTarget" comment="" />
				<Variable name="watchingCombat" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<GetSkirmishParticipants hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetSkirmishParticipants>
							</Then>
							<Else>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Else>
						</CheckWuidValid>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</VarOperation>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
							</Then>
							<Else>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Else>
						</IfElseCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>