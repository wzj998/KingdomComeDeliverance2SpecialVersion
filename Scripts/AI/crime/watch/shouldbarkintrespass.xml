<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="watch_shouldBarkInTrespass" is_function="1">
		<Variables>
			<Variable name="trespassArea" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="trespassAreaSevereness" type="enum:trespassLevel" values="" isPersistent="0" form="single" />
			<Variable name="trespassReaction" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="trespassReactionSuppressed" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="canBark" type="_bool" values="" isPersistent="0" form="single" requirementType="Out" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<DetermineTrespassReaction Observer="$this.id" Target="$__player" Position="" ForceSemipublicReaction="false" ShouldUseVec3Position="false" TrespassAreaSevereness="$trespassAreaSevereness" TrespassArea="$trespassArea" Reaction="$trespassReaction" ReactionSuppressed="$trespassReactionSuppressed" />
					<IfCondition failOnCondition="false" condition="$trespassAreaSevereness &gt;= $enum:trespassLevel.personal">
						<Expression expressions="$canBark = true" />
					</IfCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="trespassArea" comment="" />
				<Variable name="trespassAreaSevereness" comment="" />
				<Variable name="trespassReaction" comment="" />
				<Variable name="trespassReactionSuppressed" comment="" />
				<Variable name="canBark" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DetermineTrespassReaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</DetermineTrespassReaction>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</IfCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>