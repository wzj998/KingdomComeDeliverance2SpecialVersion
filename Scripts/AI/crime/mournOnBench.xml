<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_mournOnBench" is_function="1">
		<Variables>
			<Variable name="selectedBench" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="availableBenches" type="_wuid" values="" isPersistent="0" form="array" requirementType="Reference" />
			<Variable name="context" type="_float" values="" isPersistent="0" form="associative" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<SuppressFailure>
					<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
						<Child canSkip="1">
							<Sequence>
								<Expression expressions="$selectedBench = $availableBenches[0]" />
								<WaitAction />
								<Parallel successMode="Any" failureMode="Any">
									<EntityContext context="activity_disableSchedulerLooping" target="">
										<EntityContext context="bench_disableSnooze" target="">
											<CallBehavior Target="$selectedBench" BehaviorName="&apos;use&apos;" ignoreDropUnloading="false" nodeLabel="10454158" />
										</EntityContext>
									</EntityContext>
									<LinkGate from="$this.id" to="" tag="&apos;bench&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
										<Parallel successMode="Any" failureMode="Any">
											<While doFail="false" propagateChildFail="false" condition="true">
												<Sequence>
													<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$context" dramaticBark="false" lookAt="$__null" metarole="&apos;NPC_TRUCHLI_NAD_ZMIZENIM_BLIZKEHO&apos;" priority="$enum:crime_barkPriority.flavor" nodeLabel="30091703" />
													<HasGenderCheck Gender="Female" SoulWUID="$this.id" FailSubtMissing="false" saveVersion="2">
														<Then canSkip="1">
															<UnstanceAction unstance="cryingOnBench" locationObject="$selectedBench" slaveObject="" />
														</Then>
														<Else canSkip="1">
															<UnstanceAction unstance="Quest_SittingSad" locationObject="$selectedBench" slaveObject="" />
														</Else>
													</HasGenderCheck>
													<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="&apos;15s&apos;" />
												</Sequence>
											</While>
											<Wait duration="&apos;4h&apos;" timeType="WorldTime" doFail="false" variation="&apos;6h&apos;" />
										</Parallel>
									</LinkGate>
								</Parallel>
							</Sequence>
						</Child>
						<OnFail canSkip="1">
							<EraseFromArray array="$availableBenches" condition="$__value == $selectedBench" />
						</OnFail>
					</FuseBox>
				</SuppressFailure>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="selectedBench" comment="" />
				<Variable name="availableBenches" comment="" />
				<Variable name="context" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<CallBehavior hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</CallBehavior>
											</EntityContext>
										</EntityContext>
										<LinkGate hasInputBreakpoint="0" comment="triggers at the right time after Action has finished, unlike ActorState / Stance Barrier" breakpointFlags="0">
											<OutputBreakpoints />
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_crime_crimeBark>
														<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</UnstanceAction>
															</Then>
															<Else>
																<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</UnstanceAction>
															</Else>
														</HasGenderCheck>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Sequence>
												</While>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Parallel>
										</LinkGate>
									</Parallel>
								</Sequence>
							</Child>
							<OnFail>
								<EraseFromArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</EraseFromArray>
							</OnFail>
						</FuseBox>
					</SuppressFailure>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>