<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_addHearingSubscriptionHotEntity" is_function="1">
		<Variables>
			<Variable name="hotEntityData" type="switch:hotEntity" values="" isPersistent="0" form="single" />
			<Variable name="hotEntityTarget" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="sound" type="enum:sound" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$hotEntityData.reason = $enum:switch_hotEntityReason.sound &#10;$hotEntityTarget = $__player" />
					<Switch>
						<IfCondition failOnCondition="false" condition="$sound == $enum:sound.decoy_distract">
							<Expression expressions="$hotEntityData.reason = $enum:switch_hotEntityReason.shooter &#10;$hotEntityData.stimulusShooter.projectileType = $enum:crime_projectileType.pebble" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$sound == $enum:sound.dog_distract">
							<Expression expressions="$hotEntityTarget = $__playerDog" />
						</IfCondition>
						<DefaultBranch>
							<Success />
						</DefaultBranch>
					</Switch>
					<Function_switch_addHotEntity data="$hotEntityData" entity="$hotEntityTarget" expiration="20" nodeLabel="86859530" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="hotEntityData" comment="" />
				<Variable name="hotEntityTarget" comment="" />
				<Variable name="sound" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<DefaultBranch>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</DefaultBranch>
						</Switch>
						<Function_switch_addHotEntity hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_switch_addHotEntity>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>