<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_isInformationRelatedToNpc" is_function="1">
    <Variables>
      <Variable name="victim" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="information" type="information" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="isRelated" type="_bool" values="" isPersistent="0" form="single" requirementType="Out" />
      <Variable name="npc" type="_wuid" values="$this.id" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <ErrorNode Message="&apos;Function is obsolete. Use its code successor.&apos;" />
      </Behavior>
    </Root>
    <ForestContainer>
        <Sequence>
          <IfElseCondition failOnCondition="false" condition="$data:crime[$information.label].isCrime" saveVersion="2">
            <Then canSkip="1">
              <Function_crime_determineCrimeVictim information="$information" victim="$victim" nodeLabel="88656195" />
            </Then>
            <Else canSkip="1">
              <Switch>
                <IfCondition failOnCondition="false" condition="$information.label == &apos;corpse&apos; | &#10;$information.label == &apos;alarm&apos;">
                  <Expression expressions="$victim = $information.perceivedWuid" />
                </IfCondition>
                <DefaultBranch>
                  <ErrorNode Message="&apos;ERROR: no way to determine relation for information \&apos;$information.label;\&apos;&apos;" />
                </DefaultBranch>
              </Switch>
            </Else>
          </IfElseCondition>
          <IfCondition failOnCondition="false" condition="$victim ~= $__null">
          <IfElseCondition failOnCondition="false" condition="$victim == $npc" saveVersion="2">
            <Then canSkip="1">
              <Expression expressions="$isRelated = true" />
            </Then>
            <Else canSkip="1">
              <GetAreMates Npc1="$npc" Npc2="$victim" AreMates="$isRelated" />
            </Else>
          </IfElseCondition>
          </IfCondition>
        </Sequence>
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="victim" comment="" />
        <Variable name="information" comment="" />
        <Variable name="isRelated" comment="" />
        <Variable name="npc" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </ErrorNode>
        </Behavior>
      </Root>
      <Forest>
        <Sequence editorPosX="290" editorPosY="310" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
            <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <Function_crime_determineCrimeVictim hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Function_crime_determineCrimeVictim>
              </Then>
              <Else>
                <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                  </IfCondition>
                  <DefaultBranch>
                    <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </ErrorNode>
                  </DefaultBranch>
                </Switch>
              </Else>
            </IfElseCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Then>
              <Else>
                <GetAreMates hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </GetAreMates>
              </Else>
            </IfElseCondition>
            </IfCondition>
          </Sequence>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>