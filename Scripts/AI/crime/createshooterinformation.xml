<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_createShooterInformation" is_function="1">
		<Variables>
			<Variable name="information" type="information" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="directHit" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="target" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<IsIndifferent NPC="$target" saveVersion="2">
					<Else canSkip="1">
						<CheckRelationshipInterval_SoulToSoul TargetSoul="$this.id" Soul="$target" Flag="friend" saveVersion="2">
							<Then canSkip="1">
								<EntityContextCheck context="combat_suppressInterference" target="$target" saveVersion="2">
									<Else canSkip="1">
										<CreateCombatInformation Victim="$target" AttackKind="missile" DirectHit="$directHit" AddConfiscation="false" Information="$information" />
									</Else>
								</EntityContextCheck>
							</Then>
						</CheckRelationshipInterval_SoulToSoul>
					</Else>
				</IsIndifferent>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="information" comment="" />
				<Variable name="directHit" comment="" />
				<Variable name="target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<IsIndifferent hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Else>
							<CheckRelationshipInterval_SoulToSoul hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Else>
											<CreateCombatInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</CreateCombatInformation>
										</Else>
									</EntityContextCheck>
								</Then>
							</CheckRelationshipInterval_SoulToSoul>
						</Else>
					</IsIndifferent>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>