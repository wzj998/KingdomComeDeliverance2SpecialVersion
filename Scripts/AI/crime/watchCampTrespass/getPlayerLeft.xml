<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_watchCampTrespass_getPlayerLeft" is_function="1">
    <Variables>
      <Variable name="perceptionInfo" type="perceptionInfo" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="playerLeft" type="_bool" values="" isPersistent="0" form="single" requirementType="Out" />
      <Variable name="trespassReaction" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <IfElseCondition failOnCondition="false" condition="$trespassReaction" saveVersion="2">
          <Then canSkip="1">
            <Expression expressions="$playerLeft = false" />
          </Then>
          <Else canSkip="1">
            <Selector>
              <DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="10.000000" High="10.000000" Negation="true" ValueOnMiddle="false" failOnCondition="true">
                <Expression expressions="$playerLeft = true" />
              </DistanceCondition>
              <Expression expressions="$playerLeft = false" />
            </Selector>
          </Else>
        </IfElseCondition>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="perceptionInfo" comment="" />
        <Variable name="playerLeft" comment="" />
        <Variable name="trespassReaction" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Then>
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </Then>
            <Else>
              <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Expression>
                </DistanceCondition>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Selector>
            </Else>
          </IfElseCondition>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>