<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_buildSkirmishParticipantList" is_function="1">
    <Variables>
      <Variable name="allParticipantsMap" type="wuid,_bool" values="" isPersistent="0" form="custom_associative" />
      <Variable name="candidate" type="wuid" values="" isPersistent="0" form="single" />
      <Variable name="candidates" type="wuid" values="" isPersistent="0" form="array" />
      <Variable name="keyParticipant" type="wuid" values="" isPersistent="0" form="single" />
      <Variable name="tags" type="_string" values="&apos;combat_attacker,combat_target,combat_opponent,combat_threat&apos;" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="participant1" type="wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="participant2" type="wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="skirmishParticipants" type="wuid" values="" isPersistent="0" form="array" requirementType="Out" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="$participant1" Borders="" depth="-1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="$tags" SubGraph="$tags" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <AnyLinkFilter Source="Child" prune="false" negprune="unknown" Parent="" Child="" />
            <Nodalyzer Quantifiers="ForAll" Parent="" Child="$candidates" saveVersion="2" />
          </GraphSearch>
          <IfCondition failOnCondition="false" condition="$participant2 ~= $__null">
            <GraphSearch Origin="$participant2" Borders="" depth="-1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="$tags" SubGraph="$tags" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
              <AnyLinkFilter Source="Child" prune="false" negprune="unknown" Parent="" Child="" />
              <Nodalyzer Quantifiers="ForAll" Parent="" Child="$candidates" saveVersion="2" />
            </GraphSearch>
          </IfCondition>
          <Expression expressions="$allParticipantsMap[$participant1] = true &#10;$allParticipantsMap[$participant2] = true" />
          <For startIndex="0" endIndex="-1" step="1" array="$candidates" iterator="" value="$candidate" break="">
            <Expression expressions="$allParticipantsMap[$candidate] = true" />
          </For>
          <For startIndex="0" endIndex="-1" step="1" array="$allParticipantsMap" iterator="$keyParticipant" value="" break="">
            <VarOperation varName="$skirmishParticipants" targetVarName="" operation="PushFront" argument="($keyParticipant)" />
          </For>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="allParticipantsMap" comment="" />
        <Variable name="candidate" comment="" />
        <Variable name="candidates" comment="" />
        <Variable name="keyParticipant" comment="" />
        <Variable name="tags" comment="" />
        <Variable name="participant1" comment="" />
        <Variable name="participant2" comment="" />
        <Variable name="skirmishParticipants" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="40" editorPosY="-100" hasInputBreakpoint="0" comment="" breakpointFlags="4" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </AnyLinkFilter>
              <Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
              </Nodalyzer>
            </GraphSearch>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </AnyLinkFilter>
                <Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                  <OutputBreakpoints />
                </Nodalyzer>
              </GraphSearch>
            </IfCondition>
            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
            <For hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </For>
            <For hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </VarOperation>
            </For>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>
