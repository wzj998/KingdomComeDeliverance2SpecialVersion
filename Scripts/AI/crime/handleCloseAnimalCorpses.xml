<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_handleCloseAnimalCorpses" is_function="1">
    <Variables>
      <Variable name="animal_val" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="animalsAroundMe" type="_wuid" values="" isPersistent="0" form="array" />
    </Variables>
    <Parameters>
      <Variable name="wuidToSearchFrom" type="_wuid" values="$this.id" isPersistent="0" form="single" requirementType="In" optional="1" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <AtomicDecorator>
          <EntityContextCheck context="crime_searchingForNearbyCorpses" target="" saveVersion="2">
            <Else canSkip="1">
              <EntityContext context="crime_searchingForNearbyCorpses" target="">
                <Sequence>
                  <CircularSpatialQuery Radius="$data:script_param[&apos;crime_radiusToCheckForAnimalCorpses&apos;].value" Center="$wuidToSearchFrom" ToFill="$animalsAroundMe" Precision="Exact" Filter="NonHumanNPCs" />
                  <ForEach startIndex="0" step="1" array="$animalsAroundMe" iterator="" value="$animal_val" break="">
                    <IsDeadCheck SoulWUID="$animal_val" FailSubtMissing="false" saveVersion="2">
                      <Then canSkip="1">
                        <Function_switch_handleAwareness_animal_corpse corpse="$animal_val" nodeLabel="13507320" />
                      </Then>
                    </IsDeadCheck>
                  </ForEach>
                </Sequence>
              </EntityContext>
            </Else>
          </EntityContextCheck>
        </AtomicDecorator>
      </Behavior>
    </Root>
    <ForestContainer>
      <EntityContext context="crime_suppressBehavioralReaction" target="" />
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="animal_val" comment="" />
        <Variable name="animalsAroundMe" comment="" />
        <Variable name="wuidToSearchFrom" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <EntityContextCheck hasInputBreakpoint="0" comment="Stop recursion" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Else>
                <EntityContext hasInputBreakpoint="0" comment="Stop recursion" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <CircularSpatialQuery hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </CircularSpatialQuery>
                    <ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                        <OutputBreakpoints />
                        <Then>
                          <Function_switch_handleAwareness_animal_corpse hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Function_switch_handleAwareness_animal_corpse>
                        </Then>
                      </IsDeadCheck>
                    </ForEach>
                  </Sequence>
                </EntityContext>
              </Else>
            </EntityContextCheck>
          </AtomicDecorator>
        </Behavior>
      </Root>
      <Forest>
        <EntityContext editorPosX="1120" editorPosY="470" hasInputBreakpoint="0" comment="So we don&apos;t waste resource on processing interrupts etc.. we just need generated information" breakpointFlags="0">
          <OutputBreakpoints />
        </EntityContext>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>