<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_createInformation" is_function="1">
    <Variables>
      <Variable name="metadata" type="crime:informationMetadata" values="" isPersistent="0" form="single" />
      <Variable name="retrievedInformation" type="information" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="label" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="outVariable" type="information" values="" isPersistent="0" form="single" requirementType="Out" />
      <Variable name="perceivedWuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="positionType" type="enum:crime_createInformationPositionType" values="$enum:crime_createInformationPositionType.perceivedWuid" isPersistent="0" form="single" requirementType="In" />
      <Variable name="positionVec3" type="vec3" values="" isPersistent="0" form="single" requirementType="In" optional="1" />
      <Variable name="positionWuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" optional="1" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <ErrorNode Message="&apos;Function is obsolete. Use its code successor.&apos;" />
      </Behavior>
    </Root>
    <ForestContainer>
      <Sequence>
        <SuppressFailure>
          <RetrieveInformation PerceivedWuid="$perceivedWuid" label="$label" OutVariable="$retrievedInformation" />
        </SuppressFailure>
        <Switch>
          <IfCondition failOnCondition="false" condition="$positionType == $enum:crime_createInformationPositionType.perceivedWuid">
            <CreateInformation PerceivedWuid="$perceivedWuid" label="$label" position="" ToWhom="$this.id" OutVariable="$outVariable" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$positionType == $enum:crime_createInformationPositionType.positionVec3">
            <CreateInformation PerceivedWuid="$perceivedWuid" label="$label" position="$positionVec3" ToWhom="$this.id" OutVariable="$outVariable" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$positionType == $enum:crime_createInformationPositionType.positionWuid">
            <Sequence>
              <GetSpatialInfo In="$positionWuid" Out="$positionVec3" What="Position" />
              <CreateInformation PerceivedWuid="$perceivedWuid" label="$label" position="$positionVec3" ToWhom="$this.id" OutVariable="$outVariable" />
            </Sequence>
          </IfCondition>
        </Switch>
        <IfCondition failOnCondition="false" condition="$retrievedInformation.perceivedWuid == $__null">
          <Sequence>
            <EntityContextCheck context="crime_bff" target="" saveVersion="2">
              <Else canSkip="1">
                <ExecuteReputationHitWitness Npc="$this.id" Information="$outVariable" />
              </Else>
            </EntityContextCheck>
            <GetTime TimeType="GameTime" OutVar="$metadata.createdAt" Delta="" />
            <Expression expressions="$metadata.createdBy = $this.id" />
            <LockDynamicInformationValues Information="$outVariable">
              <SetDynamicInformationValue Information="$outVariable" Tag="&apos;metadata&apos;" Variable="$metadata" Type="" Value="" />
            </LockDynamicInformationValues>
          </Sequence>
        </IfCondition>
      </Sequence>
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="metadata" comment="" />
        <Variable name="retrievedInformation" comment="" />
        <Variable name="label" comment="" />
        <Variable name="outVariable" comment="" />
        <Variable name="perceivedWuid" comment="" />
        <Variable name="positionType" comment="" />
        <Variable name="positionVec3" comment="" />
        <Variable name="positionWuid" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-90" editorPosY="60" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </ErrorNode>
        </Behavior>
      </Root>
      <Forest>
        <Sequence editorPosX="580" editorPosY="630" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
          <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <RetrieveInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </RetrieveInformation>
          </SuppressFailure>
          <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <CreateInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </CreateInformation>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <CreateInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </CreateInformation>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </GetSpatialInfo>
                <CreateInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </CreateInformation>
              </Sequence>
            </IfCondition>
          </Switch>
          <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="Brand new information" breakpointFlags="0">
              <OutputBreakpoints />
              <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Else>
                  <ExecuteReputationHitWitness hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </ExecuteReputationHitWitness>
                </Else>
              </EntityContextCheck>
              <GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </GetTime>
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
              <LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </SetDynamicInformationValue>
              </LockDynamicInformationValues>
            </Sequence>
          </IfCondition>
        </Sequence>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>