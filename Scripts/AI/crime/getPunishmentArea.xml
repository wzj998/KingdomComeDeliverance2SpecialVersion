<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_getPunishmentArea" is_function="1">
    <Variables>
      <Variable name="redirectArea" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="punishmentArea" type="_wuid" values="" isPersistent="0" form="single" requirementType="Out" />
      <Variable name="punishmentLocation" type="enum:crime_punishmentLocation" values="" isPersistent="0" form="single" requirementType="Out" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <IsInsideAreaWithLabel Position="$__player" Label="&apos;crime_punishmentArea&apos;" Area="$punishmentArea" FailSubtMissing="false" saveVersion="2">
            <Then canSkip="1">
              <SuppressFailure>
                <GraphSearch Origin="$punishmentArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                  <LinkTagFilter tag="&apos;punishment_redirectArea&apos;" prune="true" negprune="unknown" Parent="" Child="$redirectArea" Data="" />
                </GraphSearch>
              </SuppressFailure>
            </Then>
            <Else canSkip="1">
              <Selector>
                <GraphSearch Origin="$__land" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                  <LinkTagFilter tag="&apos;punishment_fallbackArea&apos;" prune="true" negprune="unknown" Parent="" Child="$punishmentArea" Data="" />
                </GraphSearch>
                <ErrorNode Message="&apos;[GetPunishmentLocation] No fallback area found ?!&apos;" />
              </Selector>
            </Else>
          </IsInsideAreaWithLabel>
          <IfCondition failOnCondition="false" condition="$redirectArea ~= $__null">
            <Expression expressions="$punishmentArea = $redirectArea" />
          </IfCondition>
          <Selector>
            <GraphSearch Origin="$punishmentArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
              <LinkTagFilter tag="&apos;punishment_location&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$punishmentLocation" />
            </GraphSearch>
            <ErrorNode Message="&apos;[GetPunishmentLocation] Unable to retrieve punishment location &apos;" />
          </Selector>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="redirectArea" comment="" />
        <Variable name="punishmentArea" comment="" />
        <Variable name="punishmentLocation" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <IsInsideAreaWithLabel hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </LinkTagFilter>
                  </GraphSearch>
                </SuppressFailure>
              </Then>
              <Else>
                <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </LinkTagFilter>
                  </GraphSearch>
                  <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </ErrorNode>
                </Selector>
              </Else>
            </IsInsideAreaWithLabel>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </LinkTagFilter>
              </GraphSearch>
              <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </ErrorNode>
            </Selector>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>