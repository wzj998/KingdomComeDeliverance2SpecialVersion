<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_report_startBark" is_function="1">
		<Variables>
			<Variable name="amIWitness" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="animalAbuse_archetype" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="dialogContext" type="_float" values="" isPersistent="0" form="associative" />
			<Variable name="horseTheft_isImmediate" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="isBandit" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="lockType" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="metarole" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="owner" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stimulusAnimalAbuse" type="switch:stimulus:animalAbuse" values="" isPersistent="0" form="single" />
			<Variable name="trespassCounter" type="_int" values="0" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="reportData" type="switch:interruptData:report" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Switch>
					<IfCondition failOnCondition="false" condition="$reportData.freshlyAttributedCrime">
						<Sequence>
							<IsBandit Npc="" IsBandit="$isBandit" />
							<Switch>
								<IfCondition failOnCondition="false" condition="$isBandit">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;NPC_VIDI_NEPRITELE_A_BUDE_UTIKAT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="54012400" />
								</IfCondition>
								<EntityContextCheck context="crime_isCuman" target="" saveVersion="2">
									<Then canSkip="1">
										<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;NPC_VIDI_NEPRITELE_A_BUDE_UTIKAT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="71581494" />
									</Then>
								</EntityContextCheck>
								<DefaultBranch>
									<Function_crime_startBark_freshlyAttributed information="$reportData.information" nodeLabel="26367741" />
								</DefaultBranch>
							</Switch>
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.criminalFreshness &gt; $enum:crime_criminalFreshness.veryFresh">
						<IfElseCondition failOnCondition="false" condition="$reportData.criminalFreshness == $enum:crime_criminalFreshness.somewhatFresh" saveVersion="2">
							<Then canSkip="1">
								<Success />
							</Then>
							<Else canSkip="1">
								<Sequence>
									<IsBandit Npc="" IsBandit="$isBandit" />
									<Switch>
										<IfCondition failOnCondition="false" condition="$isBandit">
											<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;NPC_VIDI_NEPRITELE_A_BUDE_UTIKAT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="64859564" />
										</IfCondition>
										<EntityContextCheck context="crime_isCuman" target="" saveVersion="2">
											<Then canSkip="1">
												<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;NPC_VIDI_NEPRITELE_A_BUDE_UTIKAT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="58193152" />
											</Then>
										</EntityContextCheck>
										<DefaultBranch>
											<Function_crime_startBark_alreadyCriminal information="$reportData.information" nodeLabel="28258446" />
										</DefaultBranch>
									</Switch>
								</Sequence>
							</Else>
						</IfElseCondition>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.previousReaction == $enum:crime_reactionKind.scan &amp;  &#10;$reportData.stimulusKind == $enum:crime_stimulusKind.disturbance">
						<IfElseCondition failOnCondition="false" condition="$reportData.information.label == &apos;disturbance&apos;" saveVersion="2">
							<Then canSkip="1">
								<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_ROZPOZNALO_VYTRZNIKA_(KAMINEK)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="61027587" />
							</Then>
							<Else canSkip="1">
								<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;NPC_NEROZPOZNALO_VYTRZNIKA_(KAMINEK)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="67889821" />
							</Else>
						</IfElseCondition>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.previousReaction == $enum:crime_reactionKind.selfhelp">
						<Sequence>
							<Expression expressions="$dialogContext[&apos;report&apos;] = 1 &#10;$dialogContext[&apos;flee&apos;] = 0 &#10;$dialogContext[&apos;attack&apos;] = 0" />
							<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_PRESTANE_ZKOUSET_SVEPOMOC_A_JDE_TO_RESIT_JINAK&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="79506540" />
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.stimulusKind == $enum:crime_stimulusKind.aim">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;NPC_JE_ZAMEREN_HRACEM&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="92755007" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.previousReaction == $enum:crime_reactionKind.attack | &#10;$reportData.previousReaction == $enum:crime_reactionKind.mercy">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;SKIRMISH_SOULFLEE&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="73868313" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.stimulusKind == $enum:crime_stimulusKind.hit | &#10;$reportData.stimulusKind  == $enum:crime_stimulusKind.combat">
						<IfCondition failOnCondition="false" condition="$reportData.assaultData.victim ~= $__player">
							<Sequence>
								<Expression expressions="$amIWitness = $reportData.assaultData.victim ~= this.id" />
								<IfElseCondition failOnCondition="false" condition="$reportData.information.label ==  &apos;assaultByDog&apos; &amp; &#10;$reportData.stimulusKind == $enum:crime_stimulusKind.combat &amp; &#10;~$amIWitness" saveVersion="2">
									<Then canSkip="1">
										<Sequence>
											<Expression expressions="$metarole = &apos;NPC_VIDI_HRACOVA_PSA_UTOCIT&apos;" />
											<DetermineCrimeVictim Information="$reportData.information" Victim="$owner" />
											<HasGenderCheck Gender="Female" SoulWUID="$owner" FailSubtMissing="false" saveVersion="2">
												<Then canSkip="1">
													<Expression expressions="$dialogContext[&apos;isMan&apos;] = 0" />
												</Then>
												<Else canSkip="1">
													<Expression expressions="$dialogContext[&apos;isMan&apos;] = 1" />
												</Else>
											</HasGenderCheck>
										</Sequence>
									</Then>
									<Else canSkip="1">
										<IfElseCondition failOnCondition="false" condition="$reportData.assaultData.directHit" saveVersion="2">
											<Then canSkip="1">
												<Function_crime_getHitMetaroleLabel attackKind="$reportData.assaultData.kind" attacker="$reportData.assaultData.attacker" hitStrength="$reportData.assaultData.hitStrength" isWitness="$amIWitness" victim="$reportData.assaultData.victim" dialogContext="$dialogContext" metaroleLabel="$metarole" nodeLabel="13965998" />
											</Then>
											<Else canSkip="1">
												<Switch>
													<IfCondition failOnCondition="false" condition="$reportData.assaultData.kind == $enum:crime_attackKind.missile">
														<Expression expressions="$metarole = &apos;NPC_VIDI_NEPRITELE_A_BUDE_UTIKAT&apos;" />
													</IfCondition>
													<IfCondition failOnCondition="false" condition="$reportData.assaultData.kind == $enum:crime_attackKind.unarmed">
														<IfElseCondition failOnCondition="false" condition="$amIWitness" saveVersion="2">
															<Then canSkip="1">
																<Expression expressions="$metarole = &apos;SVEDEK_REAGUJE_NA_NEARMISS_(UNARMED)&apos;" />
															</Then>
															<Else canSkip="1">
																<Expression expressions="$metarole = &apos;OBET_REAGUJE_NA_NEARMISS_(UNARMED)&apos;" />
															</Else>
														</IfElseCondition>
													</IfCondition>
													<IfCondition failOnCondition="false" condition="$reportData.assaultData.kind == $enum:crime_attackKind.armed">
														<IfElseCondition failOnCondition="false" condition="$amIWitness" saveVersion="2">
															<Then canSkip="1">
																<Expression expressions="$metarole = &apos;SVEDEK_REAGUJE_NA_NEARMISS_(MELEE)&apos;" />
															</Then>
															<Else canSkip="1">
																<Expression expressions="$metarole = &apos;OBET_REAGUJE_NA_NEARMISS_(MELEE)&apos;" />
															</Else>
														</IfElseCondition>
													</IfCondition>
													<DefaultBranch>
														<Success />
													</DefaultBranch>
												</Switch>
											</Else>
										</IfElseCondition>
									</Else>
								</IfElseCondition>
								<SuppressFailure>
									<Sequence>
										<IfCondition failOnCondition="false" condition="~$amIWitness">
											<Timeout duration="&apos;3s&apos;" timeType="GameTime" doFail="true" variation="">
												<DialogGate Who="$this.id" Negation="true" EndDialogInRoot="false" Condition="InIngame" RunLogic="KeepRunning">
													<Success />
												</DialogGate>
											</Timeout>
										</IfCondition>
										<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="true" lookAt="$reportData.assaultData.attacker" metarole="$metarole" priority="$enum:crime_barkPriority.important" nodeLabel="25443861" />
									</Sequence>
								</SuppressFailure>
							</Sequence>
						</IfCondition>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.stimulusKind == $enum:crime_stimulusKind.takedown">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;NPC_VIDI_CLOVEKA_V_BEZVEDOMI_BEZVEDOMI_PRITEL&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="23582936" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.stimulusKind  == $enum:crime_stimulusKind.pilloryBreak">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_VIDI_OSVOBOZENI_Z_PRANYRE&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="76118696" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.stimulusKind == $enum:crime_stimulusKind.lockpick">
						<Sequence>
							<LockDynamicInformationValues Information="$reportData.information">
								<Sequence>
									<GetDynamicInformationValue Information="$reportData.information" Tag="&apos;lockType&apos;" Out="$lockType" />
									<GetDynamicInformationValue Information="$reportData.information" Tag="&apos;victim&apos;" Out="$owner" />
								</Sequence>
							</LockDynamicInformationValues>
							<IfElseCondition failOnCondition="false" condition="$owner == $this.id" saveVersion="2">
								<Then canSkip="1">
									<Expression expressions="$metarole = &apos;OWNER_VIDI_ZLOCIN_(LOCKPICK__&apos;" />
								</Then>
								<Else canSkip="1">
									<Expression expressions="$metarole = &apos;SVEDEK_VIDI_ZLOCIN_(LOCKPICK__&apos;" />
								</Else>
							</IfElseCondition>
							<IfElseCondition failOnCondition="false" condition="$lockType == &apos;STASH&apos; | $lockType == &apos;UNK&apos;" saveVersion="2">
								<Then canSkip="1">
									<Expression expressions="$metarole = $metarole + &apos;STASH)&apos;" />
								</Then>
								<Else canSkip="1">
									<Expression expressions="$metarole = $metarole + &apos;DVERE)&apos;" />
								</Else>
							</IfElseCondition>
							<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="$metarole" priority="$enum:crime_barkPriority.important" nodeLabel="52938865" />
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.stimulusKind  == $enum:crime_stimulusKind.murder">
						<Function_crime_startBark_murder information="$reportData.information" nodeLabel="83074190" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.stimulusKind  == $enum:crime_stimulusKind.pickpocket">
						<Sequence>
							<LockDynamicInformationValues Information="$reportData.information">
								<GetDynamicInformationValue Information="$reportData.information" Tag="&apos;victim&apos;" Out="$owner" />
							</LockDynamicInformationValues>
							<IfElseCondition failOnCondition="false" condition="$owner == $this.id" saveVersion="2">
								<Then canSkip="1">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;OBET_PRISTIHLA_HRACE_(PICKPOCKET)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="87647850" />
								</Then>
								<Else canSkip="1">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;SVEDEK_VIDI_ZLOCIN_(PICKPOCKET)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="24109105" />
								</Else>
							</IfElseCondition>
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.stimulusKind  == $enum:crime_stimulusKind.theft">
						<IfCondition failOnCondition="false" condition="$reportData.source &lt; $enum:crime_source.personal">
							<IfElseCondition failOnCondition="false" condition="($reportData.previousReaction == $enum:crime_reactionKind.checkHomeStashes | &#10; $reportData.previousReaction == $enum:crime_reactionKind.scan) &amp; &#10;$reportData.initiatedBy == $enum:switch_interruptInitiator.scheduler" saveVersion="2">
								<Then canSkip="1">
									<Success />
								</Then>
								<Else canSkip="1">
									<Function_crime_startBark_theft information="$reportData.information" nodeLabel="43764519" />
								</Else>
							</IfElseCondition>
						</IfCondition>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.stimulusKind == $enum:crime_stimulusKind.graveRobbing">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_VIDI_HRACE_VYKRADAT_HROB&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="98357913" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.stimulusKind == $enum:crime_stimulusKind.corpseViolation">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_VIDI_HRACE_JAK_HANOBI_MRTVOLU_(PRITEL)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="33378939" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.stimulusKind  == $enum:crime_stimulusKind.trespass | &#10;$reportData.stimulusKind  == $enum:crime_stimulusKind.escalatedTrespass">
						<Switch>
							<IfCondition failOnCondition="false" condition="$reportData.previousReaction == $enum:crime_reactionKind.watchTrespass">
								<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_ESKALUJE_TRESPASS_V_CRIME&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="42164124" />
							</IfCondition>
							<IfCondition failOnCondition="false" condition="$reportData.previousReaction == $enum:crime_reactionKind.watchCampTrespass">
								<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;NPC_VIDI_NEPRITELE_A_BUDE_UTIKAT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="20448590" />
							</IfCondition>
							<DefaultBranch>
								<Function_crime_trespass_playerEnteredBark counter="$trespassCounter" isPaused="false" previousReaction="$enum:crime_reactionKind.unknown" trespassSevereness="$enum:trespassLevel.prohibited" nodeLabel="77311471" />
							</DefaultBranch>
						</Switch>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.stimulusKind == $enum:crime_stimulusKind.corpse">
						<Function_crime_startBark_corpse corpse="$reportData.information.perceivedWuid" corpseState="$reportData.corpseState" nodeLabel="98881182" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.stimulusKind == $enum:crime_stimulusKind.animalAbuse">
						<Sequence>
							<LockDynamicInformationValues Information="$reportData.information">
								<Sequence>
									<GetDynamicInformationValue Information="$reportData.information" Tag="&apos;animalArchetype&apos;" Out="$animalAbuse_archetype" />
									<GetDynamicInformationValue Information="$reportData.information" Tag="&apos;stimulusAnimalAbuse&apos;" Out="$stimulusAnimalAbuse" />
								</Sequence>
							</LockDynamicInformationValues>
							<Function_crime_getAnimalContextFromString animal_archetype="$animalAbuse_archetype" animal_archetype_float="$dialogContext[&apos;animalAbuse_species&apos;]" nodeLabel="18830019" />
							<Switch>
								<IfCondition failOnCondition="false" condition="$reportData.information.label == &apos;assaultAnimal&apos;">
									<IfElseCondition failOnCondition="false" condition="$stimulusAnimalAbuse.isRanged" saveVersion="2">
										<Then canSkip="1">
											<IfElseCondition failOnCondition="false" condition="$stimulusAnimalAbuse.attributedCrime" saveVersion="2">
												<Then canSkip="1">
													<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_NASLO_HRACE_PO_UTOKU_NA_ZVIRE&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="14499692" />
												</Then>
												<Else canSkip="1">
													<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="true" lookAt="$__player" metarole="&apos;SVEDEK_VIDI_ASSAULT_NA_ZVIRE_RANGED_VI_O_HRACI&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="65290301" />
												</Else>
											</IfElseCondition>
										</Then>
										<Else canSkip="1">
											<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="true" lookAt="$__player" metarole="&apos;SVEDEK_VIDI_ASSAULT_NA_ZVIRE_MELEE_VI_O_HRACI&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="58980210" />
										</Else>
									</IfElseCondition>
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$reportData.information.label == &apos;murderAnimal&apos;">
									<IfElseCondition failOnCondition="false" condition="$stimulusAnimalAbuse.attributedCrime" saveVersion="2">
										<Then canSkip="1">
											<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_NASLO_HRACE_PO_VRAZDE_ZVIRETE&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="27155076" />
										</Then>
										<Else canSkip="1">
											<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="true" lookAt="$__player" metarole="&apos;SVEDEK_VIDI_VRAZDU_ZVIRETE_VI_O_HRACI&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="53745686" />
										</Else>
									</IfElseCondition>
								</IfCondition>
							</Switch>
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.stimulusKind == $enum:crime_stimulusKind.kettlePoisoning">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;NPC_VIDI_HRACE_JAK_NECO_VLEVA_DO_KOTLIKU&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="76755196" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.stimulusKind == $enum:crime_stimulusKind.disturbance">
						<IfCondition failOnCondition="false" condition="$reportData.initiatedBy ~= $enum:switch_interruptInitiator.concept">
							<IfElseCondition failOnCondition="false" condition="$reportData.information.perceivedWuid == $this.id" saveVersion="2">
								<Then canSkip="1">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="true" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_ROZPOZNALO_VYTRZNIKA_(KAMINEK)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="41044211" />
								</Then>
								<Else canSkip="1">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_JE_SVEDKEM_VYTRZNOSTI_UNIVERZAL&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="35589062" />
								</Else>
							</IfElseCondition>
						</IfCondition>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$reportData.stimulusKind == $enum:crime_stimulusKind.horseTheft">
						<Sequence>
							<LockDynamicInformationValues Information="$reportData.information">
								<GetDynamicInformationValue Information="$reportData.information" Tag="&apos;immediate&apos;" Out="$horseTheft_isImmediate" />
							</LockDynamicInformationValues>
							<IfElseCondition failOnCondition="false" condition="$horseTheft_isImmediate" saveVersion="2">
								<Then canSkip="1">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;NPC_VIDI_HRACE_KRAST_KONE&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="65173052" />
								</Then>
								<Else canSkip="1">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_VIDI_HRACE_JET_NA_KRADENEM_KONI&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="31071428" />
								</Else>
							</IfElseCondition>
						</Sequence>
					</IfCondition>
					<DefaultBranch>
						<Success />
					</DefaultBranch>
				</Switch>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="amIWitness" comment="" />
				<Variable name="animalAbuse_archetype" comment="" />
				<Variable name="dialogContext" comment="" />
				<Variable name="horseTheft_isImmediate" comment="" />
				<Variable name="isBandit" comment="" />
				<Variable name="lockType" comment="" />
				<Variable name="metarole" comment="" />
				<Variable name="owner" comment="" />
				<Variable name="stimulusAnimalAbuse" comment="" />
				<Variable name="trespassCounter" comment="" />
				<Variable name="reportData" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-340" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IsBandit hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</IsBandit>
								<Switch hasInputBreakpoint="0" comment="not available for these guys" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</IfCondition>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_crimeBark>
										</Then>
									</EntityContextCheck>
									<DefaultBranch>
										<Function_crime_startBark_freshlyAttributed hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_startBark_freshlyAttributed>
									</DefaultBranch>
								</Switch>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Success hasInputBreakpoint="0" comment="ask karel" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</Then>
								<Else>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IsBandit hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</IsBandit>
										<Switch hasInputBreakpoint="0" comment="not available for these guys" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_crime_crimeBark>
											</IfCondition>
											<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_crime_crimeBark>
												</Then>
											</EntityContextCheck>
											<DefaultBranch>
												<Function_crime_startBark_alreadyCriminal hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_crime_startBark_alreadyCriminal>
											</DefaultBranch>
										</Switch>
									</Sequence>
								</Else>
							</IfElseCondition>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_crimeBark>
								</Then>
								<Else>
									<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_crimeBark>
								</Else>
							</IfElseCondition>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_crimeBark>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
												<DetermineCrimeVictim hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</DetermineCrimeVictim>
												<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Then>
													<Else>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Else>
												</HasGenderCheck>
											</Sequence>
										</Then>
										<Else>
											<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Function_crime_getHitMetaroleLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_crime_getHitMetaroleLabel>
												</Then>
												<Else>
													<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfCondition hasInputBreakpoint="0" comment="we dont have shit" breakpointFlags="0">
															<OutputBreakpoints />
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</IfCondition>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Then>
																<Else>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Else>
															</IfElseCondition>
														</IfCondition>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Then>
																<Else>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Else>
															</IfElseCondition>
														</IfCondition>
														<DefaultBranch>
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</DefaultBranch>
													</Switch>
												</Else>
											</IfElseCondition>
										</Else>
									</IfElseCondition>
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Timeout hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<DialogGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</DialogGate>
												</Timeout>
											</IfCondition>
											<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_crimeBark>
										</Sequence>
									</SuppressFailure>
								</Sequence>
							</IfCondition>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetDynamicInformationValue>
										<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetDynamicInformationValue>
									</Sequence>
								</LockDynamicInformationValues>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Then>
									<Else>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Else>
								</IfElseCondition>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Then>
									<Else>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Else>
								</IfElseCondition>
								<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_crimeBark>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_startBark_murder hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_startBark_murder>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetDynamicInformationValue>
								</LockDynamicInformationValues>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Then>
									<Else>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Else>
								</IfElseCondition>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfElseCondition hasInputBreakpoint="0" comment="no good bark after checkHomeStashes, but there is one at the end there, so dont say anything here" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Then>
									<Else>
										<Function_crime_startBark_theft hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_startBark_theft>
									</Else>
								</IfElseCondition>
							</IfCondition>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_crimeBark>
								</IfCondition>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_crimeBark>
								</IfCondition>
								<DefaultBranch>
									<Function_crime_trespass_playerEnteredBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_trespass_playerEnteredBark>
								</DefaultBranch>
							</Switch>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_startBark_corpse hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_startBark_corpse>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetDynamicInformationValue>
										<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetDynamicInformationValue>
									</Sequence>
								</LockDynamicInformationValues>
								<Function_crime_getAnimalContextFromString hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_getAnimalContextFromString>
								<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_crime_crimeBark>
													</Then>
													<Else>
														<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_crime_crimeBark>
													</Else>
												</IfElseCondition>
											</Then>
											<Else>
												<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_crime_crimeBark>
											</Else>
										</IfElseCondition>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_crime_crimeBark>
											</Then>
											<Else>
												<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_crime_crimeBark>
											</Else>
										</IfElseCondition>
									</IfCondition>
								</Switch>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Then>
									<Else>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Else>
								</IfElseCondition>
							</IfCondition>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetDynamicInformationValue>
								</LockDynamicInformationValues>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Then>
									<Else>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Else>
								</IfElseCondition>
							</Sequence>
						</IfCondition>
						<DefaultBranch>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</DefaultBranch>
					</Switch>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>