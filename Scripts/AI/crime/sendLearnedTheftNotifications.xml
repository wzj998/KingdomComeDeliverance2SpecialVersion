<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_sendLearnedTheftNotifications" is_function="1">
    <Variables>
      <Variable name="item_item" type="cast:wuid_item" values="" isPersistent="0" form="single" />
      <Variable name="item_value" type="itemPrescriptor" values="" isPersistent="0" form="single" />
      <Variable name="items" type="itemPrescriptor" values="" isPersistent="0" form="array" />
      <Variable name="who_soul" type="cast:wuid_soul" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="information" type="information" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="statusString" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <IfCondition failOnCondition="false" condition="$information.label == &apos;theft&apos; &amp; &#10;( &#10;$statusString == &apos;Created&apos; | &#10;$statusString == &apos;Received&apos; &#10;)">
          <Sequence>
            <LockDynamicInformationValues Information="$information">
              <GetDynamicInformationValue Information="$information" Tag="&apos;items&apos;" Out="$items" />
            </LockDynamicInformationValues>
            <Expression expressions="$who_soul.value = $this.id" />
            <ForEach startIndex="0" step="1" array="$items" iterator="" value="$item_value" break="">
              <IfCondition failOnCondition="false" condition="$item_value.instance ~= $__null">
                <Sequence>
                  <Expression expressions="$item_item.value = $item_value.instance" />
                  <SendAIConceptSignal_NPCLearnsAboutTheftCrime who="$who_soul" item="$item_item" />
                </Sequence>
              </IfCondition>
            </ForEach>
          </Sequence>
        </IfCondition>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="item_item" comment="" />
        <Variable name="item_value" comment="" />
        <Variable name="items" comment="" />
        <Variable name="who_soul" comment="" />
        <Variable name="information" comment="" />
        <Variable name="statusString" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </GetDynamicInformationValue>
              </LockDynamicInformationValues>
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
              <ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                    <SendAIConceptSignal_NPCLearnsAboutTheftCrime hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </SendAIConceptSignal_NPCLearnsAboutTheftCrime>
                  </Sequence>
                </IfCondition>
              </ForEach>
            </Sequence>
          </IfCondition>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>