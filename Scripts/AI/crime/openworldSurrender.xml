<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_openworldSurrender" is_function="1">
    <Variables>
      <Variable name="break" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="reactors" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="reactors_value" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="surrenderMsg" type="crime:playerSurrenderChatFeedback" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;crime_reactor&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
            <LinkDataFilter tag="&apos;crime_reactor&apos;" condition="$__link_crime_reactor.reactionKind == $enum:crime_reactionKind.attack" prune="true" negprune="unknown" Parent="" Child="" Data="" />
            <Nodalyzer Quantifiers="ForAll" Parent="" Child="$reactors" saveVersion="2">
              <Child0 canSkip="1">
                <RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
              </Child0>
            </Nodalyzer>
          </GraphSearch>
          <ForEach startIndex="0" step="1" array="$reactors" iterator="" value="$reactors_value" break="$break">
            <EntityContextCheck context="combat_ableToReceiveSurrenderMessage" target="$reactors_value" saveVersion="2">
              <Then canSkip="1">
                <Sequence>
                  <InstantSendMessageToNPC target="$reactors_value" variable="$surrenderMsg" />
                  <Expression expressions="$break = true" />
                </Sequence>
              </Then>
            </EntityContextCheck>
          </ForEach>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="break" comment="" />
        <Variable name="reactors" comment="" />
        <Variable name="reactors_value" comment="" />
        <Variable name="surrenderMsg" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
              <LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkDataFilter>
              <Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Child0>
                  <RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </RangeSorter>
                </Child0>
              </Nodalyzer>
            </GraphSearch>
            <ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </InstantSendMessageToNPC>
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                  </Sequence>
                </Then>
              </EntityContextCheck>
            </ForEach>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>