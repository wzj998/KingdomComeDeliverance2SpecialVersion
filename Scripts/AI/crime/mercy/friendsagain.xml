<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_mercy_friendsAgain" is_function="1">
		<Variables>
			<Variable name="globalCooldowns" type="crime:globalCooldowns" values="" isPersistent="0" form="single" />
			<Variable name="isBandit" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="knownInformations" type="information" values="" isPersistent="0" form="array" />
			<Variable name="knownInformations_value" type="information" values="" isPersistent="0" form="single" />
			<Variable name="playerInTrespass" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="reactionSuppressed" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="resolveInformation" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="trespassArea" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="trespassAreaSevereness" type="enum:trespassLevel" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Reconcile faction="&lt;INVALID&gt;" SoulWUID="$this.id" />
					<GetKnownInformations OutArray="$knownInformations" Holder="$this.id" />
					<ForEach startIndex="0" step="1" array="$knownInformations" iterator="" value="$knownInformations_value" break="">
						<IfCondition failOnCondition="false" condition="$data:crime[$knownInformations_value.label].isCrime">
							<Sequence>
								<ReinitVariable variable="$resolveInformation" />
								<EntityContextCheck context="crime_isAuthority" target="" saveVersion="2">
									<Then canSkip="1">
										<Expression expressions="$resolveInformation = true" />
									</Then>
									<Else canSkip="1">
										<IsInformationRelatedToNpc Information="$knownInformations_value" Npc="$this.id" IsRelated="$resolveInformation" />
									</Else>
								</EntityContextCheck>
								<IfElseCondition failOnCondition="false" condition="$resolveInformation" saveVersion="2">
									<Then canSkip="1">
										<FuseBox StatusPropagation="Success" OneCleanup="false" saveVersion="2">
											<Child canSkip="1">
												<Function_crime_resolveCrimeInformation information="$knownInformations_value" resolutionKindIsSkillcheck="false" nodeLabel="37172280" />
											</Child>
											<OnSuccess canSkip="1">
												<Success />
											</OnSuccess>
											<OnFail canSkip="1">
												<ErrorNode Message="&apos;ERROR: C R I M E - ResolveCrimeInformation failed for information $knownInformation_value.label, $knownInformation_value.perceivedWuid!&apos;" />
											</OnFail>
										</FuseBox>
									</Then>
									<Else canSkip="1">
										<DestroyInformationFromHolder Information="$knownInformations_value" />
									</Else>
								</IfElseCondition>
							</Sequence>
						</IfCondition>
					</ForEach>
					<Function_crime_broadcastCooperationNotification cooperationNotification="$enum:crime_cooperationNotification.crimeResolved" nodeLabel="31555257" />
					<EntityContextCheck context="crime_isAuthority" target="" saveVersion="2">
						<Then canSkip="1">
							<Sequence>
								<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;crime_globalCooldowns&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$globalCooldowns" />
								</GraphSearch>
								<GetTime TimeType="GameTime" OutVar="$globalCooldowns.lastFriskTimestamp" Delta="" />
								<AddLink From="$__player" To="$__player" Tag="&apos;crime_globalCooldowns&apos;" Data="$globalCooldowns" LinkOpHandleMode="OverWrite" />
							</Sequence>
						</Then>
					</EntityContextCheck>
					<DetermineTrespassReaction Observer="$this.id" Target="$__player" Position="" ForceSemipublicReaction="false" ShouldUseVec3Position="false" TrespassAreaSevereness="$trespassAreaSevereness" TrespassArea="$trespassArea" Reaction="$playerInTrespass" ReactionSuppressed="$reactionSuppressed" />
					<IfCondition failOnCondition="false" condition="$playerInTrespass">
						<Sequence>
							<IsBandit Npc="$this.id" IsBandit="$isBandit" />
							<IfElseCondition failOnCondition="false" condition="$isBandit" saveVersion="2">
								<Then canSkip="1">
									<Function_callInterrupt_watchCampTrespass ignorePriority="true" initiator="$enum:switch_interruptInitiator.scheduler" postSurrender="true" previousReaction="$enum:crime_reactionKind.mercy" nodeLabel="33546200" />
								</Then>
								<Else canSkip="1">
									<Function_callInterrupt_watchTrespass ignorePriority="true" initiator="$enum:switch_interruptInitiator.scheduler" onlyWaitingForDeparture="true" previousReaction="$enum:crime_reactionKind.mercy" nodeLabel="84447532" />
								</Else>
							</IfElseCondition>
						</Sequence>
					</IfCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="globalCooldowns" comment="" />
				<Variable name="isBandit" comment="" />
				<Variable name="knownInformations" comment="" />
				<Variable name="knownInformations_value" comment="" />
				<Variable name="playerInTrespass" comment="" />
				<Variable name="reactionSuppressed" comment="" />
				<Variable name="resolveInformation" comment="" />
				<Variable name="trespassArea" comment="" />
				<Variable name="trespassAreaSevereness" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Reconcile hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Reconcile>
						<GetKnownInformations hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetKnownInformations>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ReinitVariable>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Then>
										<Else>
											<IsInformationRelatedToNpc hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</IsInformationRelatedToNpc>
										</Else>
									</EntityContextCheck>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Child>
													<Function_crime_resolveCrimeInformation hasInputBreakpoint="0" comment="KCD2-461072: resolutionKind is not skillcheck to keep items stolen" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_crime_resolveCrimeInformation>
												</Child>
												<OnSuccess>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</OnSuccess>
												<OnFail>
													<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ErrorNode>
												</OnFail>
											</FuseBox>
										</Then>
										<Else>
											<DestroyInformationFromHolder hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</DestroyInformationFromHolder>
										</Else>
									</IfElseCondition>
								</Sequence>
							</IfCondition>
						</ForEach>
						<Function_crime_broadcastCooperationNotification hasInputBreakpoint="0" comment="Notify reactors that SOME information got resolved, they have to check for themselves" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_crime_broadcastCooperationNotification>
						<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetTime>
									<AddLink hasInputBreakpoint="0" comment="set player as just frisked, cause he was searched in this dialog too" breakpointFlags="0">
										<OutputBreakpoints />
									</AddLink>
								</Sequence>
							</Then>
						</EntityContextCheck>
						<DetermineTrespassReaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</DetermineTrespassReaction>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IsBandit hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</IsBandit>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Function_callInterrupt_watchCampTrespass hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_callInterrupt_watchCampTrespass>
									</Then>
									<Else>
										<Function_callInterrupt_watchTrespass hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_callInterrupt_watchTrespass>
									</Else>
								</IfElseCondition>
							</Sequence>
						</IfCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>