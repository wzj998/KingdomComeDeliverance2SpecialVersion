<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_mercy_run" is_function="1">
		<Variables>
			<Variable name="canReport" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="reportDestination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="reportDestinationType" type="enum:crime_reportDestinationType" values="" isPersistent="0" form="single" />
			<Variable name="useless" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="leaveLevel" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="mercyData" type="switch:interruptData:mercy" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="mercyDialogResult" type="enum:crime_mercyDialogueResult" values="$enum:crime_mercyDialogueResult.unknown" isPersistent="0" form="single" requirementType="In" />
			<Variable name="priority" type="_int" values="135" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AtomicDecorator>
					<Sequence>
						<IfCondition failOnCondition="false" condition="~$leaveLevel &amp; &#10;$data:crime[$mercyData.information.label].isCrime">
							<Sequence>
								<ChooseReportDestination Information="$mercyData.information" IsImportant="false" Destination="$reportDestination" DestinationType="" />
								<IfCondition failOnCondition="false" condition="$reportDestinationType &gt; $enum:crime_reportDestinationType.none">
									<CheckReactionLimit DesiredReactionType="$enum:crime_reactionType.report" Information="$mercyData.information" Position="" StimulusKind="$enum:crime_stimulusKind.unknown" ShouldReact="$canReport" ShouldWatch="$useless" />
								</IfCondition>
							</Sequence>
						</IfCondition>
						<IfElseCondition failOnCondition="false" condition="$canReport" saveVersion="2">
							<Then canSkip="1">
								<Function_callInterrupt_report assaultData="" corpseState="$enum:corpseState.undiscovered" criminalFreshness="$enum:crime_criminalFreshness.unknown" disableDetectedIcon="true" disableEmitting="false" freshlyAttributedCrime="false" ignorePriority="true" information="$mercyData.information" initiator="$enum:switch_interruptInitiator.scheduler" movementSpeed="$enum:movementSpeed.sprint" previousReaction="$enum:crime_reactionKind.attack" reportDestination="$reportDestination" reportDestinationType="$reportDestinationType" source="$enum:crime_source.direct" stimulusKind="$mercyData.stimulusKind" nodeLabel="84357111" />
							</Then>
							<Else canSkip="1">
								<Function_callInterrupt_flee assaultData="" corpseState="$enum:corpseState.undiscovered" criminalFreshness="$enum:crime_criminalFreshness.unknown" freshlyAttributedCrime="false" ignorePriority="true" information="$mercyData.information" initiator="$enum:switch_interruptInitiator.scheduler" isIndifferent="$mercyData.isIndifferent" leaveLevel="$leaveLevel" mercyDialogueResult="$mercyDialogResult" previousReaction="$enum:crime_reactionKind.mercy" priority="$priority" source="$enum:crime_source.direct" stimulusKind="$mercyData.stimulusKind" target="$__player" nodeLabel="56164052" />
							</Else>
						</IfElseCondition>
					</Sequence>
				</AtomicDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="canReport" comment="" />
				<Variable name="reportDestination" comment="" />
				<Variable name="reportDestinationType" comment="" />
				<Variable name="useless" comment="" />
				<Variable name="leaveLevel" comment="" />
				<Variable name="mercyData" comment="" />
				<Variable name="mercyDialogResult" comment="" />
				<Variable name="priority" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ChooseReportDestination hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ChooseReportDestination>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<CheckReactionLimit hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</CheckReactionLimit>
									</IfCondition>
								</Sequence>
							</IfCondition>
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Function_callInterrupt_report hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_callInterrupt_report>
								</Then>
								<Else>
									<Function_callInterrupt_flee hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_callInterrupt_flee>
								</Else>
							</IfElseCondition>
						</Sequence>
					</AtomicDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>