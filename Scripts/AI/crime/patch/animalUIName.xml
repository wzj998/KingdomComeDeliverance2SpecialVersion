<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_patch_animalUIName" is_function="1">
		<Variables>
			<Variable name="information" type="information" values="" isPersistent="0" form="array" />
			<Variable name="information_soulArchetype" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="information_uiName" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="information_val" type="information" values="" isPersistent="0" form="single" />
			<Variable name="information_wuidType" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="useArchetype" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Selector>
					<Sequence>
						<GetKnownInformations OutArray="$information" Holder="$this.id" />
						<ForEach startIndex="0" step="1" array="$information" iterator="" value="$information_val" break="">
							<IfCondition failOnCondition="false" condition="$information_val.label == &apos;murderAnimal&apos; |  &#10;$information_val.label == &apos;assaultAnimal&apos; | &#10;$information_val.label == &apos;poaching&apos;">
								<LockDynamicInformationValues Information="$information_val">
									<Selector>
										<GetDynamicInformationValue Information="$information_val" Tag="&apos;animalUIName&apos;" Out="$information_uiName" />
										<Sequence>
											<Expression expressions="$useArchetype = false" />
											<CheckWuidValid wuid="$information_val.perceivedWuid" FailSubtMissing="false" saveVersion="2">
												<Then canSkip="1">
													<Sequence>
														<GetType WUID="$information_val.perceivedWuid" OutString="$information_wuidType" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
														<IfElseCondition failOnCondition="false" condition="$information_wuidType == &apos;NHNPC&apos;" saveVersion="2">
															<Then canSkip="1">
																<Function_crime_getSoulUIName soul="$information_val.perceivedWuid" UIName="$information_uiName" nodeLabel="61996281" />
															</Then>
															<Else canSkip="1">
																<Expression expressions="$useArchetype = true" />
															</Else>
														</IfElseCondition>
													</Sequence>
												</Then>
												<Else canSkip="1">
													<Expression expressions="$useArchetype = true" />
												</Else>
											</CheckWuidValid>
											<IfCondition failOnCondition="false" condition="$useArchetype">
												<Sequence>
													<GetDynamicInformationValue Information="$information_val" Tag="&apos;animalArchetype&apos;" Out="$information_soulArchetype" />
													<Switch>
														<IfCondition failOnCondition="false" condition="$information_soulArchetype == &apos;Boar&apos;">
															<Expression expressions="$information_uiName = &apos;soul_ui_name_boar&apos;" />
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$information_soulArchetype == &apos;Pig&apos;">
															<Expression expressions="$information_uiName = &apos;soul_ui_name_pig&apos;" />
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$information_soulArchetype == &apos;RedDeerDoe&apos;">
															<Expression expressions="$information_uiName = &apos;soul_ui_name_redDeerDoe&apos;" />
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$information_soulArchetype == &apos;RedDeerStag&apos;">
															<Expression expressions="$information_uiName = &apos;soul_ui_name_redDeerStag&apos;" />
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$information_soulArchetype == &apos;RoeDeerHind&apos;">
															<Expression expressions="$information_uiName = &apos;soul_ui_name_roeDeerHind&apos;" />
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$information_soulArchetype == &apos;RoeDeerBuck&apos;">
															<Expression expressions="$information_uiName = &apos;soul_ui_name_roeDeerBuck&apos;" />
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$information_soulArchetype == &apos;CattleCow&apos;">
															<Expression expressions="$information_uiName = &apos;soul_ui_name_cattleCow&apos;" />
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$information_soulArchetype == &apos;CattleBull&apos;">
															<Expression expressions="$information_uiName = &apos;soul_ui_name_cattleBull&apos;" />
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$information_soulArchetype == &apos;SheepEwe&apos;">
															<Expression expressions="$information_uiName = &apos;soul_ui_name_sheepEwe&apos;" />
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$information_soulArchetype == &apos;SheepRam&apos;">
															<Expression expressions="$information_uiName = &apos;soul_ui_name_sheepRam&apos;" />
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$information_soulArchetype == &apos;Dog&apos;">
															<Expression expressions="$information_uiName = &apos;soul_ui_name_dog&apos;" />
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$information_soulArchetype == &apos;Horse&apos;">
															<Expression expressions="$information_uiName = &apos;soul_ui_name_horse&apos;" />
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$information_soulArchetype == &apos;Chicken&apos;">
															<Expression expressions="$information_uiName = &apos;soul_ui_name_hen&apos;" />
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$information_soulArchetype == &apos;Wolf&apos;">
															<Expression expressions="$information_uiName = &apos;soul_ui_name_wolf&apos;" />
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$information_soulArchetype == &apos;WildDog&apos;">
															<Expression expressions="$information_uiName = &apos;soul_ui_name_wildDog&apos;" />
														</IfCondition>
														<DefaultBranch>
															<Expression expressions="$information_uiName = &apos;char_RYCHTAR_DROZD_uiName&apos;" />
														</DefaultBranch>
													</Switch>
												</Sequence>
											</IfCondition>
											<SetDynamicInformationValue Information="$information_val" Tag="&apos;animalUIName&apos;" Variable="$information_uiName" Type="" Value="" />
										</Sequence>
									</Selector>
								</LockDynamicInformationValues>
							</IfCondition>
						</ForEach>
					</Sequence>
					<LogToConsole LogLevel="Error" Message="&apos;[$this.name;] crime_patch_animalUIName failed&apos;" />
				</Selector>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="information" comment="" />
				<Variable name="information_soulArchetype" comment="" />
				<Variable name="information_uiName" comment="" />
				<Variable name="information_val" comment="" />
				<Variable name="information_wuidType" comment="" />
				<Variable name="useArchetype" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="KCD2-448181" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GetKnownInformations hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetKnownInformations>
							<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetDynamicInformationValue>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
												<CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</GetType>
															<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Function_crime_getSoulUIName hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_crime_getSoulUIName>
																</Then>
																<Else>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Else>
															</IfElseCondition>
														</Sequence>
													</Then>
													<Else>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Else>
												</CheckWuidValid>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</GetDynamicInformationValue>
														<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<DefaultBranch>
																<Expression hasInputBreakpoint="0" comment="bitch" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</DefaultBranch>
														</Switch>
													</Sequence>
												</IfCondition>
												<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</SetDynamicInformationValue>
											</Sequence>
										</Selector>
									</LockDynamicInformationValues>
								</IfCondition>
							</ForEach>
						</Sequence>
						<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LogToConsole>
					</Selector>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>