<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_checkPlayerConspicuousness" is_function="1">
		<Variables>
			<Variable name="playerDirtiness" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="playerHealth" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="playerStench" type="_float" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="isPlayerConspicuous" type="_bool" values="" isPersistent="0" form="single" requirementType="Out" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<SuppressFailure>
					<Sequence>
						<Selector>
							<BuffTagCheck SoulId="$__player" buffAITagId="1" FailWithSubtreeMissing="false" saveVersion="2">
								<Then canSkip="1">
									<Success />
								</Then>
								<Else canSkip="1">
									<Fail />
								</Else>
							</BuffTagCheck>
							<BuffTagCheck SoulId="$__player" buffAITagId="4" FailWithSubtreeMissing="false" saveVersion="2">
								<Then canSkip="1">
									<Success />
								</Then>
								<Else canSkip="1">
									<Fail />
								</Else>
							</BuffTagCheck>
							<GameContextCheck context="speech_disableNakedPlayerReactions" saveVersion="2">
								<Then canSkip="1">
									<Fail />
								</Then>
								<Else canSkip="1">
									<Invertor>
										<Sequence>
											<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="" SubGraph="&apos;inventory&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<UnionOp Results="true" Advance="true" EndOp="true" ShortCircuit="false" LocalNodalyzers="false">
													<ItemClassFilter ClassId="" Category="&apos;armor.TunicShort.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.TunicLong.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.GambesonShort.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.GambesonLong.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.Caftan.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.Pourpoint.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.MailShort.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.MailLong.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.Cuirass.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.Brigandine.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.Coat.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.Waffenrock.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.Habit.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.ArmPlate.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.ArmBrigandine.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.LeatherApron.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
												</UnionOp>
												<ItemParamFilter Param="Equip" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
											</GraphSearch>
											<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="" SubGraph="&apos;inventory&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<UnionOp Results="true" Advance="true" EndOp="true" ShortCircuit="false" LocalNodalyzers="false">
													<ItemClassFilter ClassId="" Category="&apos;armor.HoseJoined.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.HoseLoose.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.LegsChain.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.HoseSeparate.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.LegsPadded.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.LegsBrigandine.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemClassFilter ClassId="" Category="&apos;armor.LegsPlate.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
												</UnionOp>
												<ItemParamFilter Param="Equip" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
											</GraphSearch>
										</Sequence>
									</Invertor>
								</Else>
							</GameContextCheck>
							<Sequence>
								<ExecuteLua code="data.playerHealth = player.soul:GetState(&apos;health&apos;) &#10;data.playerDirtiness = player.soul:GetDerivedStat(&apos;drt&apos;) &#10;data.playerStench = player.soul:GetDerivedStat(&apos;sml&apos;)" />
								<IfElseCondition failOnCondition="false" condition="$playerHealth &lt; $data:script_param[&apos;speech_greeting_lowHealthThreshold&apos;].value | &#10;$playerDirtiness &gt; $data:script_param[&apos;rpg_drt_high&apos;].value | &#10;$playerStench &gt; $data:script_param[&apos;rpg_sml_high&apos;].value" saveVersion="2">
									<Then canSkip="1">
										<Success />
									</Then>
									<Else canSkip="1">
										<Fail />
									</Else>
								</IfElseCondition>
							</Sequence>
						</Selector>
						<Expression expressions="$isPlayerConspicuous = true" />
					</Sequence>
				</SuppressFailure>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="playerDirtiness" comment="" />
				<Variable name="playerHealth" comment="" />
				<Variable name="playerStench" comment="" />
				<Variable name="isPlayerConspicuous" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<BuffTagCheck hasInputBreakpoint="0" comment="Check drunkenness" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Then>
									<Else>
										<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Fail>
									</Else>
								</BuffTagCheck>
								<BuffTagCheck hasInputBreakpoint="0" comment="Check bleeding" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Then>
									<Else>
										<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Fail>
									</Else>
								</BuffTagCheck>
								<GameContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Fail>
									</Then>
									<Else>
										<Invertor hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<UnionOp hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
													</UnionOp>
													<ItemParamFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ItemParamFilter>
												</GraphSearch>
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<UnionOp hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
													</UnionOp>
													<ItemParamFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ItemParamFilter>
												</GraphSearch>
											</Sequence>
										</Invertor>
									</Else>
								</GameContextCheck>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExecuteLua>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Then>
										<Else>
											<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Fail>
										</Else>
									</IfElseCondition>
								</Sequence>
							</Selector>
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</Sequence>
					</SuppressFailure>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>