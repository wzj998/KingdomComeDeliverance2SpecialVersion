<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_updateUnconsciousBodyData" is_function="1">
    <Variables>
      <Variable name="unconsciousBodyData" type="switch:unconsciousBody" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="body" type="_wuid" values="$this.id" isPersistent="0" form="single" requirementType="In" optional="1" />
      <Variable name="discover" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="reset" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <IfElseCondition failOnCondition="false" condition="$reset" saveVersion="2">
          <Then canSkip="1">
            <RemoveLink From="$body" To="$body" Tag="&apos;switch_unconsciousBody&apos;" LinkOpHandleMode="Success" />
          </Then>
          <Else canSkip="1">
            <Sequence>
              <IfElseCondition failOnCondition="false" condition="$discover" saveVersion="2">
                <Then canSkip="1">
                  <Expression expressions="$unconsciousBodyData.state = $enum:switch_unconsciousBodyState.discovered" />
                </Then>
                <Else canSkip="1">
                  <Expression expressions="$unconsciousBodyData.state = $enum:switch_unconsciousBodyState.undiscovered" />
                </Else>
              </IfElseCondition>
              <AddLink From="$body" To="$body" Tag="&apos;switch_unconsciousBody&apos;" Data="$unconsciousBodyData" LinkOpHandleMode="OverWrite" />
            </Sequence>
          </Else>
        </IfElseCondition>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="unconsciousBodyData" comment="" />
        <Variable name="body" comment="" />
        <Variable name="discover" comment="" />
        <Variable name="reset" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Then>
              <RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </RemoveLink>
            </Then>
            <Else>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                  <OutputBreakpoints />
                  <Then>
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                  </Then>
                  <Else>
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                  </Else>
                </IfElseCondition>
                <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </AddLink>
              </Sequence>
            </Else>
          </IfElseCondition>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>