<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_attack_startBark" is_function="1">
		<Variables>
			<Variable name="amIWitness" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="animalAbuse_archetype" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="dialogContext" type="_float" values="" isPersistent="0" form="associative" />
			<Variable name="horseTheft_isImmediate" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="isAuthority" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="isBandit" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="lockType" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="metarole" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="owner" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="playerHasWeapon" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="stimulusAnimalAbuse" type="switch:stimulus:animalAbuse" values="" isPersistent="0" form="single" />
			<Variable name="trespassCounter" type="_int" values="0" isPersistent="0" form="single" />
			<Variable name="type" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="attackData" type="switch:interruptData:attack" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Switch>
					<IfCondition failOnCondition="false" condition="$attackData.previousReaction == $enum:crime_reactionKind.mercy &amp; &#10;$attackData.initiatedBy == $enum:switch_interruptInitiator.scheduler">
						<Success />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.previousReaction == $enum:crime_reactionKind.arrest">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;STRAZ_ZATYKANI_ESKALACE&apos;" priority="$enum:crime_barkPriority.addressingPlayer" nodeLabel="74225776" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.previousReaction == $enum:crime_reactionKind.selfhelp">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;SVEPOMOC_ESKALACE&apos;" priority="$enum:crime_barkPriority.addressingPlayer" nodeLabel="53014642" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.defenceMode">
						<Sequence>
							<IfElseCondition failOnCondition="false" condition="$attackData.assaultData.directHit" saveVersion="2">
								<Then canSkip="1">
									<Function_crime_getHitMetaroleLabel attackKind="$attackData.assaultData.kind" attacker="$attackData.assaultData.attacker" hitStrength="$attackData.assaultData.hitStrength" isWitness="false" victim="$attackData.assaultData.victim" dialogContext="$dialogContext" metaroleLabel="$metarole" nodeLabel="97938356" />
								</Then>
								<Else canSkip="1">
									<Switch>
										<IfCondition failOnCondition="false" condition="$attackData.assaultData.kind == $enum:crime_attackKind.unarmed">
											<Expression expressions="$metarole = &apos;OBET_REAGUJE_NA_NEARMISS_(UNARMED)&apos;" />
										</IfCondition>
										<IfCondition failOnCondition="false" condition="$attackData.assaultData.kind == $enum:crime_attackKind.armed">
											<Expression expressions="$metarole = &apos;OBET_REAGUJE_NA_NEARMISS_(MELEE)&apos;" />
										</IfCondition>
										<DefaultBranch>
											<Success />
										</DefaultBranch>
									</Switch>
								</Else>
							</IfElseCondition>
							<SuppressFailure>
								<Sequence>
									<IfCondition failOnCondition="false" condition="~$amIWitness">
										<Timeout duration="&apos;3s&apos;" timeType="GameTime" doFail="true" variation="">
											<DialogGate Who="$this.id" Negation="true" EndDialogInRoot="false" Condition="InIngame" RunLogic="KeepRunning">
												<Success />
											</DialogGate>
										</Timeout>
									</IfCondition>
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="true" lookAt="$attackData.assaultData.attacker" metarole="$metarole" priority="$enum:crime_barkPriority.important" nodeLabel="72690630" />
								</Sequence>
							</SuppressFailure>
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.previousReaction == $enum:crime_reactionKind.watchCampTrespass &amp; &#10;$attackData.initiatedBy == $enum:switch_interruptInitiator.scheduler">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;CAMPER_UTOCI_KDYZ_HRAC_NEODESEL&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="73361437" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.previousReaction == $enum:crime_reactionKind.frisk">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;STRAZ_VYZYVA_K_FRISKU_ESKALACE&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="81523648" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.freshlyAttributedCrime">
						<Sequence>
							<IsBandit Npc="" IsBandit="$isBandit" />
							<Switch>
								<IfCondition failOnCondition="false" condition="$isBandit">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$attackData.target" metarole="&apos;NPC_VIDI_NEPRITELE_A_BUDE_UTOCIT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="79960768" />
								</IfCondition>
								<EntityContextCheck context="crime_isCuman" target="" saveVersion="2">
									<Then canSkip="1">
										<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$attackData.target" metarole="&apos;NPC_VIDI_NEPRITELE_A_BUDE_UTOCIT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="34443422" />
									</Then>
								</EntityContextCheck>
								<DefaultBranch>
									<Function_crime_startBark_freshlyAttributed information="$attackData.information" nodeLabel="19223546" />
								</DefaultBranch>
							</Switch>
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.criminalFreshness &gt; $enum:crime_criminalFreshness.veryFresh">
						<IfElseCondition failOnCondition="false" condition="$attackData.criminalFreshness == $enum:crime_criminalFreshness.somewhatFresh" saveVersion="2">
							<Then canSkip="1">
								<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$attackData.target" metarole="&apos;NPC_VIDI_NEPRITELE_A_BUDE_UTOCIT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="13881261" />
							</Then>
							<Else canSkip="1">
								<Sequence>
									<IsBandit Npc="" IsBandit="$isBandit" />
									<Switch>
										<IfCondition failOnCondition="false" condition="$isBandit">
											<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$attackData.target" metarole="&apos;NPC_VIDI_NEPRITELE_A_BUDE_UTOCIT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="46100931" />
										</IfCondition>
										<EntityContextCheck context="crime_isCuman" target="" saveVersion="2">
											<Then canSkip="1">
												<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$attackData.target" metarole="&apos;NPC_VIDI_NEPRITELE_A_BUDE_UTOCIT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="44025746" />
											</Then>
										</EntityContextCheck>
										<DefaultBranch>
											<Sequence>
												<EntityContext context="crime_isAuthority" target="">
													<Expression expressions="$isAuthority = true" />
												</EntityContext>
												<IfElseCondition failOnCondition="false" condition="$attackData.previousReaction == $enum:crime_reactionKind.lookAround &amp; &#10;$isAuthority" saveVersion="2">
													<Then canSkip="1">
														<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;STRAZ_PATRA_NA_MISTE_CINU_A_ROZPOZNA_HRACE&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="88651374" />
													</Then>
													<Else canSkip="1">
														<Function_crime_startBark_alreadyCriminal information="$attackData.information" nodeLabel="88747144" />
													</Else>
												</IfElseCondition>
											</Sequence>
										</DefaultBranch>
									</Switch>
								</Sequence>
							</Else>
						</IfElseCondition>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.previousReaction == $enum:crime_reactionKind.selfhelp">
						<Sequence>
							<Expression expressions="$dialogContext[&apos;report&apos;] = 0 &#10;$dialogContext[&apos;flee&apos;] = 0 &#10;$dialogContext[&apos;attack&apos;] = 1" />
							<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_PRESTANE_ZKOUSET_SVEPOMOC_A_JDE_TO_RESIT_JINAK&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="89483749" />
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.previousReaction == $enum:crime_reactionKind.scan &amp;  &#10;$attackData.stimulusKind == $enum:crime_stimulusKind.disturbance">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_ROZPOZNALO_VYTRZNIKA_(KAMINEK)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="13792719" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.stimulusKind == $enum:crime_stimulusKind.aim">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;NPC_JE_ZAMEREN_HRACEM&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="68896687" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.stimulusKind  == $enum:crime_stimulusKind.combat &amp; &#10;( &#10; $attackData.previousReaction ~= $enum:crime_reactionKind.arrest | &#10; $attackData.information.label ==  &apos;assaultByDog&apos; &#10;)">
						<Sequence>
							<GetType WUID="$attackData.target" OutString="$type" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
							<IfElseCondition failOnCondition="false" condition="($attackData.information.label == &apos;assaultByDog&apos; &amp; &#10;$attackData.information.perceivedWuid == $this.id) | $type ~= &apos;NPC&apos;" saveVersion="2">
								<Then canSkip="1">
									<Sequence>
										<IfElseCondition failOnCondition="false" condition="$attackData.information.label == &apos;assaultByDog&apos;" saveVersion="2">
											<Then canSkip="1">
												<DetermineCrimeVictim Information="$attackData.information" Victim="$owner" />
											</Then>
											<Else canSkip="1">
												<GetTarget ReferenceNPC="$attackData.target" TargetVarOut="$owner" />
											</Else>
										</IfElseCondition>
										<HasGenderCheck Gender="Female" SoulWUID="$owner" FailSubtMissing="false" saveVersion="2">
											<Then canSkip="1">
												<Expression expressions="$dialogContext[&apos;isMan&apos;] = 0" />
											</Then>
											<Else canSkip="1">
												<Expression expressions="$dialogContext[&apos;isMan&apos;] = 1" />
											</Else>
										</HasGenderCheck>
										<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="false" lookAt="$__playerDog" metarole="&apos;NPC_VIDI_HRACOVA_PSA_UTOCIT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="92207716" />
									</Sequence>
								</Then>
								<Else canSkip="1">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$attackData.target" metarole="&apos;NPC_VIDI_COMBAT_A_BUDE_SE_ZAPOJOVAT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="10950898" />
								</Else>
							</IfElseCondition>
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.stimulusKind == $enum:crime_stimulusKind.hit">
						<IfCondition failOnCondition="false" condition="$attackData.assaultData.victim ~= $__player">
							<Sequence>
								<Expression expressions="$amIWitness = $attackData.assaultData.victim ~= this.id" />
								<IfElseCondition failOnCondition="false" condition="$attackData.information.label ==  &apos;assaultByDog&apos; &amp; &#10;$attackData.stimulusKind == $enum:crime_stimulusKind.combat &amp; &#10;~$amIWitness" saveVersion="2">
									<Then canSkip="1">
										<Sequence>
											<Expression expressions="$metarole = &apos;NPC_VIDI_HRACOVA_PSA_UTOCIT&apos;" />
											<DetermineCrimeVictim Information="$attackData.information" Victim="$owner" />
											<HasGenderCheck Gender="Female" SoulWUID="$owner" FailSubtMissing="false" saveVersion="2">
												<Then canSkip="1">
													<Expression expressions="$dialogContext[&apos;isMan&apos;] = 0" />
												</Then>
												<Else canSkip="1">
													<Expression expressions="$dialogContext[&apos;isMan&apos;] = 1" />
												</Else>
											</HasGenderCheck>
										</Sequence>
									</Then>
									<Else canSkip="1">
										<IfElseCondition failOnCondition="false" condition="$attackData.assaultData.directHit" saveVersion="2">
											<Then canSkip="1">
												<Function_crime_getHitMetaroleLabel attackKind="$attackData.assaultData.kind" attacker="$attackData.assaultData.attacker" hitStrength="$attackData.assaultData.hitStrength" isWitness="$amIWitness" victim="$attackData.assaultData.victim" dialogContext="$dialogContext" metaroleLabel="$metarole" nodeLabel="77029770" />
											</Then>
											<Else canSkip="1">
												<Switch>
													<IfCondition failOnCondition="false" condition="$attackData.assaultData.kind == $enum:crime_attackKind.missile">
														<Expression expressions="$metarole = &apos;NPC_VIDI_NEPRITELE_A_BUDE_UTOCIT&apos;" />
													</IfCondition>
													<IfCondition failOnCondition="false" condition="$attackData.assaultData.kind == $enum:crime_attackKind.unarmed">
														<IfElseCondition failOnCondition="false" condition="$amIWitness" saveVersion="2">
															<Then canSkip="1">
																<Expression expressions="$metarole = &apos;SVEDEK_REAGUJE_NA_NEARMISS_(UNARMED)&apos;" />
															</Then>
															<Else canSkip="1">
																<Expression expressions="$metarole = &apos;OBET_REAGUJE_NA_NEARMISS_(UNARMED)&apos;" />
															</Else>
														</IfElseCondition>
													</IfCondition>
													<IfCondition failOnCondition="false" condition="$attackData.assaultData.kind == $enum:crime_attackKind.armed">
														<IfElseCondition failOnCondition="false" condition="$amIWitness" saveVersion="2">
															<Then canSkip="1">
																<Expression expressions="$metarole = &apos;SVEDEK_REAGUJE_NA_NEARMISS_(MELEE)&apos;" />
															</Then>
															<Else canSkip="1">
																<Expression expressions="$metarole = &apos;OBET_REAGUJE_NA_NEARMISS_(MELEE)&apos;" />
															</Else>
														</IfElseCondition>
													</IfCondition>
													<DefaultBranch>
														<Success />
													</DefaultBranch>
												</Switch>
											</Else>
										</IfElseCondition>
									</Else>
								</IfElseCondition>
								<SuppressFailure>
									<Sequence>
										<IfCondition failOnCondition="false" condition="~$amIWitness">
											<Timeout duration="&apos;3s&apos;" timeType="GameTime" doFail="true" variation="">
												<DialogGate Who="$this.id" Negation="true" EndDialogInRoot="false" Condition="InIngame" RunLogic="KeepRunning">
													<Success />
												</DialogGate>
											</Timeout>
										</IfCondition>
										<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="true" lookAt="$attackData.assaultData.attacker" metarole="$metarole" priority="$enum:crime_barkPriority.important" nodeLabel="63179343" />
									</Sequence>
								</SuppressFailure>
							</Sequence>
						</IfCondition>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.stimulusKind  == $enum:crime_stimulusKind.enemy | &#10;$attackData.stimulusKind  == $enum:crime_stimulusKind.disturbance">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$attackData.target" metarole="&apos;NPC_VIDI_NEPRITELE_A_BUDE_UTOCIT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="53930721" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.stimulusKind  == $enum:crime_stimulusKind.pilloryBreak">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_VIDI_OSVOBOZENI_Z_PRANYRE&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="74243806" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.stimulusKind == $enum:crime_stimulusKind.lockpick">
						<Sequence>
							<LockDynamicInformationValues Information="$attackData.information">
								<Sequence>
									<GetDynamicInformationValue Information="$attackData.information" Tag="&apos;lockType&apos;" Out="$lockType" />
									<GetDynamicInformationValue Information="$attackData.information" Tag="&apos;victim&apos;" Out="$owner" />
								</Sequence>
							</LockDynamicInformationValues>
							<EntityContextCheck context="crime_isAuthority" target="" saveVersion="2">
								<Then canSkip="1">
									<Expression expressions="$metarole = &apos;STRAZ_VIDI_ZLOCIN_(LOCKPICK__&apos;" />
								</Then>
								<Else canSkip="1">
									<IfElseCondition failOnCondition="false" condition="$owner == $this.id" saveVersion="2">
										<Then canSkip="1">
											<Expression expressions="$metarole = &apos;OWNER_VIDI_ZLOCIN_(LOCKPICK__&apos;" />
										</Then>
										<Else canSkip="1">
											<Expression expressions="$metarole = &apos;SVEDEK_VIDI_ZLOCIN_(LOCKPICK__&apos;" />
										</Else>
									</IfElseCondition>
								</Else>
							</EntityContextCheck>
							<IfElseCondition failOnCondition="false" condition="$lockType == &apos;STASH&apos; | $lockType == &apos;UNK&apos;" saveVersion="2">
								<Then canSkip="1">
									<Expression expressions="$metarole = $metarole + &apos;STASH)&apos;" />
								</Then>
								<Else canSkip="1">
									<Expression expressions="$metarole = $metarole + &apos;DVERE)&apos;" />
								</Else>
							</IfElseCondition>
							<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="$metarole" priority="$enum:crime_barkPriority.important" nodeLabel="52938865" />
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.stimulusKind  == $enum:crime_stimulusKind.murder">
						<Function_crime_startBark_murder information="$attackData.information" nodeLabel="15403412" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.stimulusKind  == $enum:crime_stimulusKind.pickpocket">
						<Sequence>
							<LockDynamicInformationValues Information="$attackData.information">
								<GetDynamicInformationValue Information="$attackData.information" Tag="&apos;victim&apos;" Out="$owner" />
							</LockDynamicInformationValues>
							<IfElseCondition failOnCondition="false" condition="$owner == $this.id" saveVersion="2">
								<Then canSkip="1">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;OBET_PRISTIHLA_HRACE_(PICKPOCKET)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="55228566" />
								</Then>
								<Else canSkip="1">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;SVEDEK_VIDI_ZLOCIN_(PICKPOCKET)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="24109105" />
								</Else>
							</IfElseCondition>
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.stimulusKind  == $enum:crime_stimulusKind.escalatedTrespass">
						<Sequence>
							<IsBandit Npc="$this.id" IsBandit="$isBandit" />
							<Function_crime_hasWeaponDrawn checkingMethod="$enum:crime_weaponCheckingMethod.perceivableState" npc="$__player" result="$playerHasWeapon" nodeLabel="49958159" />
							<IfElseCondition failOnCondition="false" condition="$isBandit &amp; $playerHasWeapon" saveVersion="2">
								<Then canSkip="1">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;CAMPER_VIDI_HRACE_SE_ZBRANI_V_RUCE_V_TRESPASSU_A_BUDE_UTOCIT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="30830783" />
								</Then>
								<Else canSkip="1">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$attackData.target" metarole="&apos;NPC_VIDI_NEPRITELE_A_BUDE_UTOCIT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="90654560" />
								</Else>
							</IfElseCondition>
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.stimulusKind  == $enum:crime_stimulusKind.theft">
						<Function_crime_startBark_theft information="$attackData.information" nodeLabel="11747313" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.stimulusKind == $enum:crime_stimulusKind.graveRobbing">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;NPC_VIDI_HRACE_VYKRADAT_HROB&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="12380915" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.stimulusKind == $enum:crime_stimulusKind.corpseViolation">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;NPC_VIDI_HRACE_JAK_HANOBI_MRTVOLU_(PRITEL)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="83986920" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.stimulusKind == $enum:crime_stimulusKind.trespass | &#10;$attackData.stimulusKind == $enum:crime_stimulusKind.escalatedTrespass">
						<IfElseCondition failOnCondition="false" condition="$attackData.previousReaction == $enum:crime_reactionKind.watchTrespass" saveVersion="2">
							<Then canSkip="1">
								<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_ESKALUJE_TRESPASS_V_CRIME&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="13561871" />
							</Then>
							<Else canSkip="1">
								<Function_crime_trespass_playerEnteredBark counter="$trespassCounter" isPaused="false" previousReaction="$enum:crime_reactionKind.unknown" trespassSevereness="$enum:trespassLevel.prohibited" nodeLabel="27086983" />
							</Else>
						</IfElseCondition>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.stimulusKind == $enum:crime_stimulusKind.animalAbuse">
						<Sequence>
							<LockDynamicInformationValues Information="$attackData.information">
								<Sequence>
									<GetDynamicInformationValue Information="$attackData.information" Tag="&apos;animalArchetype&apos;" Out="$animalAbuse_archetype" />
									<GetDynamicInformationValue Information="$attackData.information" Tag="&apos;stimulusAnimalAbuse&apos;" Out="$stimulusAnimalAbuse" />
								</Sequence>
							</LockDynamicInformationValues>
							<Function_crime_getAnimalContextFromString animal_archetype="$animalAbuse_archetype" animal_archetype_float="$dialogContext[&apos;animalAbuse_species&apos;]" nodeLabel="91675283" />
							<Switch>
								<IfCondition failOnCondition="false" condition="$attackData.information.label == &apos;assaultAnimal&apos;">
									<IfElseCondition failOnCondition="false" condition="$stimulusAnimalAbuse.isRanged" saveVersion="2">
										<Then canSkip="1">
											<IfElseCondition failOnCondition="false" condition="$stimulusAnimalAbuse.attributedCrime" saveVersion="2">
												<Then canSkip="1">
													<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="true" lookAt="$__player" metarole="&apos;NPC_NASLO_HRACE_PO_UTOKU_NA_ZVIRE&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="37418978" />
												</Then>
												<Else canSkip="1">
													<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="true" lookAt="$__player" metarole="&apos;SVEDEK_VIDI_ASSAULT_NA_ZVIRE_RANGED_VI_O_HRACI&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="70066936" />
												</Else>
											</IfElseCondition>
										</Then>
										<Else canSkip="1">
											<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="true" lookAt="$__player" metarole="&apos;SVEDEK_VIDI_ASSAULT_NA_ZVIRE_MELEE_VI_O_HRACI&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="59536288" />
										</Else>
									</IfElseCondition>
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$attackData.information.label == &apos;murderAnimal&apos;">
									<IfElseCondition failOnCondition="false" condition="$stimulusAnimalAbuse.attributedCrime" saveVersion="2">
										<Then canSkip="1">
											<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="true" lookAt="$__player" metarole="&apos;NPC_NASLO_HRACE_PO_VRAZDE_ZVIRETE&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="99824373" />
										</Then>
										<Else canSkip="1">
											<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="true" lookAt="$__player" metarole="&apos;SVEDEK_VIDI_VRAZDU_ZVIRETE_VI_O_HRACI&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="78595624" />
										</Else>
									</IfElseCondition>
								</IfCondition>
							</Switch>
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.stimulusKind == $enum:crime_stimulusKind.kettlePoisoning">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;NPC_VIDI_HRACE_JAK_NECO_VLEVA_DO_KOTLIKU&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="23334340" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$attackData.stimulusKind == $enum:crime_stimulusKind.horseTheft">
						<Sequence>
							<LockDynamicInformationValues Information="$attackData.information">
								<GetDynamicInformationValue Information="$attackData.information" Tag="&apos;immediate&apos;" Out="$horseTheft_isImmediate" />
							</LockDynamicInformationValues>
							<IfElseCondition failOnCondition="false" condition="$horseTheft_isImmediate" saveVersion="2">
								<Then canSkip="1">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;NPC_VIDI_HRACE_KRAST_KONE&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="88162297" />
								</Then>
								<Else canSkip="1">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;NPC_VIDI_HRACE_JET_NA_KRADENEM_KONI&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="42004263" />
								</Else>
							</IfElseCondition>
						</Sequence>
					</IfCondition>
					<DefaultBranch>
						<Success />
					</DefaultBranch>
				</Switch>
			</Behavior>
		</Root>
		<ForestContainer>
			<IfElseCondition failOnCondition="false" condition="$stimulusAnimalAbuse.isRanged" saveVersion="2">
				<Then canSkip="1">
					<IfElseCondition failOnCondition="false" condition="$stimulusAnimalAbuse.attributedCrime" saveVersion="2">
						<Then canSkip="1">
							<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="true" lookAt="$__player" metarole="&apos;NPC_NASLO_HRACE_PO_VRAZDE_ZVIRETE&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="67932497" />
						</Then>
						<Else canSkip="1">
							<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="true" lookAt="$__player" metarole="&apos;SVEDEK_VIDI_VRAZDU_ZVIRETE_VI_O_HRACI&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="80089054" />
						</Else>
					</IfElseCondition>
				</Then>
			</IfElseCondition>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="amIWitness" comment="" />
				<Variable name="animalAbuse_archetype" comment="" />
				<Variable name="dialogContext" comment="" />
				<Variable name="horseTheft_isImmediate" comment="" />
				<Variable name="isAuthority" comment="" />
				<Variable name="isBandit" comment="" />
				<Variable name="lockType" comment="" />
				<Variable name="metarole" comment="" />
				<Variable name="owner" comment="" />
				<Variable name="playerHasWeapon" comment="" />
				<Variable name="stimulusAnimalAbuse" comment="" />
				<Variable name="trespassCounter" comment="" />
				<Variable name="type" comment="" />
				<Variable name="attackData" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-430" editorPosY="-60" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Success hasInputBreakpoint="0" comment="KCD2-122095" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Function_crime_getHitMetaroleLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_getHitMetaroleLabel>
									</Then>
									<Else>
										<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</IfCondition>
											<DefaultBranch>
												<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Success>
											</DefaultBranch>
										</Switch>
									</Else>
								</IfElseCondition>
								<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Timeout hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<DialogGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</DialogGate>
											</Timeout>
										</IfCondition>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Sequence>
								</SuppressFailure>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IsBandit hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</IsBandit>
								<Switch hasInputBreakpoint="0" comment="not available for these guys" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</IfCondition>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_crimeBark>
										</Then>
									</EntityContextCheck>
									<DefaultBranch>
										<Function_crime_startBark_freshlyAttributed hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_startBark_freshlyAttributed>
									</DefaultBranch>
								</Switch>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_crimeBark>
								</Then>
								<Else>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IsBandit hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</IsBandit>
										<Switch hasInputBreakpoint="0" comment="not available for these guys" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_crime_crimeBark>
											</IfCondition>
											<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_crime_crimeBark>
												</Then>
											</EntityContextCheck>
											<DefaultBranch>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</EntityContext>
													<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_crime_crimeBark>
														</Then>
														<Else>
															<Function_crime_startBark_alreadyCriminal hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_crime_startBark_alreadyCriminal>
														</Else>
													</IfElseCondition>
												</Sequence>
											</DefaultBranch>
										</Switch>
									</Sequence>
								</Else>
							</IfElseCondition>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_crimeBark>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetType>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<DetermineCrimeVictim hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</DetermineCrimeVictim>
												</Then>
												<Else>
													<GetTarget hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetTarget>
												</Else>
											</IfElseCondition>
											<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Then>
												<Else>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Else>
											</HasGenderCheck>
											<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_crimeBark>
										</Sequence>
									</Then>
									<Else>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Else>
								</IfElseCondition>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
												<DetermineCrimeVictim hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</DetermineCrimeVictim>
												<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Then>
													<Else>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Else>
												</HasGenderCheck>
											</Sequence>
										</Then>
										<Else>
											<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Function_crime_getHitMetaroleLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_crime_getHitMetaroleLabel>
												</Then>
												<Else>
													<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfCondition hasInputBreakpoint="0" comment="best role we have" breakpointFlags="0">
															<OutputBreakpoints />
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</IfCondition>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Then>
																<Else>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Else>
															</IfElseCondition>
														</IfCondition>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Then>
																<Else>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Else>
															</IfElseCondition>
														</IfCondition>
														<DefaultBranch>
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</DefaultBranch>
													</Switch>
												</Else>
											</IfElseCondition>
										</Else>
									</IfElseCondition>
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Timeout hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<DialogGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</DialogGate>
												</Timeout>
											</IfCondition>
											<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_crimeBark>
										</Sequence>
									</SuppressFailure>
								</Sequence>
							</IfCondition>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetDynamicInformationValue>
										<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetDynamicInformationValue>
									</Sequence>
								</LockDynamicInformationValues>
								<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Then>
									<Else>
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Then>
											<Else>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Else>
										</IfElseCondition>
									</Else>
								</EntityContextCheck>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Then>
									<Else>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Else>
								</IfElseCondition>
								<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_crimeBark>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_startBark_murder hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_startBark_murder>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetDynamicInformationValue>
								</LockDynamicInformationValues>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Then>
									<Else>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Else>
								</IfElseCondition>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IsBandit hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</IsBandit>
								<Function_crime_hasWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_hasWeaponDrawn>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Then>
									<Else>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Else>
								</IfElseCondition>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_startBark_theft hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_startBark_theft>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_crimeBark>
								</Then>
								<Else>
									<Function_crime_trespass_playerEnteredBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_trespass_playerEnteredBark>
								</Else>
							</IfElseCondition>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetDynamicInformationValue>
										<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetDynamicInformationValue>
									</Sequence>
								</LockDynamicInformationValues>
								<Function_crime_getAnimalContextFromString hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_getAnimalContextFromString>
								<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_crime_crimeBark>
													</Then>
													<Else>
														<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_crime_crimeBark>
													</Else>
												</IfElseCondition>
											</Then>
											<Else>
												<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_crime_crimeBark>
											</Else>
										</IfElseCondition>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_crime_crimeBark>
											</Then>
											<Else>
												<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_crime_crimeBark>
											</Else>
										</IfElseCondition>
									</IfCondition>
								</Switch>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetDynamicInformationValue>
								</LockDynamicInformationValues>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Then>
									<Else>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Else>
								</IfElseCondition>
							</Sequence>
						</IfCondition>
						<DefaultBranch>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</DefaultBranch>
					</Switch>
				</Behavior>
			</Root>
			<Forest>
				<IfElseCondition editorPosX="2080" editorPosY="2220" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Then>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_crimeBark>
							</Then>
							<Else>
								<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_crimeBark>
							</Else>
						</IfElseCondition>
					</Then>
				</IfElseCondition>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>