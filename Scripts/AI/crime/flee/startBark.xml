<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_flee_startBark" is_function="1">
		<Variables>
			<Variable name="amIWitness" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="dialogContext" type="_float" values="" isPersistent="0" form="associative" />
			<Variable name="isBandit" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="lockType" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="metarole" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="owner" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="trespassCounter" type="_int" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="fleeData" type="switch:interruptData:flee" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Switch>
					<IfCondition failOnCondition="false" condition="$fleeData.freshlyAttributedCrime">
						<Sequence>
							<IsBandit Npc="" IsBandit="$isBandit" />
							<Switch>
								<IfCondition failOnCondition="false" condition="$isBandit">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$fleeData.target" metarole="&apos;NPC_VIDI_NEPRITELE_A_BUDE_UTIKAT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="25482642" />
								</IfCondition>
								<EntityContextCheck context="crime_isCuman" target="" saveVersion="2">
									<Then canSkip="1">
										<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$fleeData.target" metarole="&apos;NPC_VIDI_NEPRITELE_A_BUDE_UTIKAT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="42285309" />
									</Then>
								</EntityContextCheck>
								<DefaultBranch>
									<Function_crime_startBark_freshlyAttributed information="$fleeData.information" nodeLabel="95294156" />
								</DefaultBranch>
							</Switch>
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fleeData.criminalFreshness &gt; $enum:crime_criminalFreshness.veryFresh">
						<IfElseCondition failOnCondition="false" condition="$fleeData.criminalFreshness == $enum:crime_criminalFreshness.somewhatFresh" saveVersion="2">
							<Then canSkip="1">
								<Success />
							</Then>
							<Else canSkip="1">
								<Sequence>
									<IsBandit Npc="" IsBandit="$isBandit" />
									<Switch>
										<IfCondition failOnCondition="false" condition="$isBandit">
											<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$fleeData.target" metarole="&apos;NPC_VIDI_NEPRITELE_A_BUDE_UTIKAT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="62828598" />
										</IfCondition>
										<EntityContextCheck context="crime_isCuman" target="" saveVersion="2">
											<Then canSkip="1">
												<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$fleeData.target" metarole="&apos;NPC_VIDI_NEPRITELE_A_BUDE_UTIKAT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="88827489" />
											</Then>
										</EntityContextCheck>
										<DefaultBranch>
											<Function_crime_startBark_alreadyCriminal information="$fleeData.information" nodeLabel="63965085" />
										</DefaultBranch>
									</Switch>
								</Sequence>
							</Else>
						</IfElseCondition>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fleeData.previousReaction == $enum:crime_reactionKind.attack &amp; &#10;$fleeData.initiatedBy == $enum:switch_interruptInitiator.scheduler">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;SKIRMISH_SOULFLEE&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="52993787" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fleeData.previousReaction == $enum:crime_reactionKind.selfhelp">
						<Sequence>
							<Expression expressions="$dialogContext[&apos;report&apos;] = 0 &#10;$dialogContext[&apos;flee&apos;] = 1 &#10;$dialogContext[&apos;attack&apos;] = 0" />
							<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_PRESTANE_ZKOUSET_SVEPOMOC_A_JDE_TO_RESIT_JINAK&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="13984534" />
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fleeData.previousReaction == $enum:crime_reactionKind.mercy &amp; &#10;$fleeData.initiatedBy == $enum:switch_interruptInitiator.scheduler">
						<Switch>
							<IfCondition failOnCondition="false" condition="$fleeData.mercyDialogueResult == $enum:crime_mercyDialogueResult.playerAway">
								<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;NPC_UTIKA_Z_COMBATU&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="70687914" />
							</IfCondition>
							<IfCondition failOnCondition="false" condition="$fleeData.mercyDialogueResult == $enum:crime_mercyDialogueResult.itemsGiven">
								<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;NPC_PREDALO_VECI_A_UTIKA&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="72505896" />
							</IfCondition>
							<IfCondition failOnCondition="false" condition="$fleeData.mercyDialogueResult == $enum:crime_mercyDialogueResult.run">
								<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;NPC_PROPUSTENE_PO_VZDAVANI&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="63569961" />
							</IfCondition>
							<DefaultBranch>
								<Success />
							</DefaultBranch>
						</Switch>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fleeData.stimulusKind == $enum:crime_stimulusKind.aim">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$fleeData.target" metarole="&apos;NPC_JE_ZAMEREN_HRACEM&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="72786802" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fleeData.stimulusKind  == $enum:crime_stimulusKind.combat | &#10;$fleeData.stimulusKind  == $enum:crime_stimulusKind.hit">
						<Sequence>
							<Expression expressions="$amIWitness = $fleeData.assaultData.victim ~= this.id" />
							<IfElseCondition failOnCondition="false" condition="$fleeData.information.label ==  &apos;assaultByDog&apos; &amp; &#10;$fleeData.stimulusKind == $enum:crime_stimulusKind.combat &amp; &#10;~$amIWitness" saveVersion="2">
								<Then canSkip="1">
									<Sequence>
										<Expression expressions="$metarole = &apos;NPC_VIDI_HRACOVA_PSA_UTOCIT&apos;" />
										<DetermineCrimeVictim Information="$fleeData.information" Victim="$owner" />
										<HasGenderCheck Gender="Female" SoulWUID="$owner" FailSubtMissing="false" saveVersion="2">
											<Then canSkip="1">
												<Expression expressions="$dialogContext[&apos;isMan&apos;] = 0" />
											</Then>
											<Else canSkip="1">
												<Expression expressions="$dialogContext[&apos;isMan&apos;] = 1" />
											</Else>
										</HasGenderCheck>
									</Sequence>
								</Then>
								<Else canSkip="1">
									<IfElseCondition failOnCondition="false" condition="$fleeData.assaultData.directHit" saveVersion="2">
										<Then canSkip="1">
											<Function_crime_getHitMetaroleLabel attackKind="$fleeData.assaultData.kind" attacker="$fleeData.assaultData.attacker" hitStrength="$fleeData.assaultData.hitStrength" isWitness="$amIWitness" victim="$fleeData.assaultData.victim" dialogContext="$dialogContext" metaroleLabel="$metarole" nodeLabel="64527300" />
										</Then>
										<Else canSkip="1">
											<Switch>
												<IfCondition failOnCondition="false" condition="$fleeData.assaultData.kind == $enum:crime_attackKind.missile">
													<Expression expressions="$metarole = &apos;NPC_UTIKA_Z_COMBATU&apos;" />
												</IfCondition>
												<IfCondition failOnCondition="false" condition="$fleeData.assaultData.kind == $enum:crime_attackKind.unarmed">
													<IfElseCondition failOnCondition="false" condition="$amIWitness" saveVersion="2">
														<Then canSkip="1">
															<Expression expressions="$metarole = &apos;SVEDEK_REAGUJE_NA_NEARMISS_(UNARMED)&apos;" />
														</Then>
														<Else canSkip="1">
															<Expression expressions="$metarole = &apos;OBET_REAGUJE_NA_NEARMISS_(UNARMED)&apos;" />
														</Else>
													</IfElseCondition>
												</IfCondition>
												<IfCondition failOnCondition="false" condition="$fleeData.assaultData.kind == $enum:crime_attackKind.armed">
													<IfElseCondition failOnCondition="false" condition="$amIWitness" saveVersion="2">
														<Then canSkip="1">
															<Expression expressions="$metarole = &apos;SVEDEK_REAGUJE_NA_NEARMISS_(MELEE)&apos;" />
														</Then>
														<Else canSkip="1">
															<Expression expressions="$metarole = &apos;OBET_REAGUJE_NA_NEARMISS_(MELEE)&apos;" />
														</Else>
													</IfElseCondition>
												</IfCondition>
												<DefaultBranch>
													<Success />
												</DefaultBranch>
											</Switch>
										</Else>
									</IfElseCondition>
								</Else>
							</IfElseCondition>
							<SuppressFailure>
								<Sequence>
									<IfCondition failOnCondition="false" condition="~$amIWitness">
										<Timeout duration="&apos;3s&apos;" timeType="GameTime" doFail="true" variation="">
											<DialogGate Who="$this.id" Negation="true" EndDialogInRoot="false" Condition="InIngame" RunLogic="KeepRunning">
												<Success />
											</DialogGate>
										</Timeout>
									</IfCondition>
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="true" lookAt="$fleeData.assaultData.attacker" metarole="$metarole" priority="$enum:crime_barkPriority.important" nodeLabel="55091892" />
								</Sequence>
							</SuppressFailure>
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fleeData.stimulusKind  == $enum:crime_stimulusKind.enemy">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$fleeData.target" metarole="&apos;NPC_VIDI_NEPRITELE_A_BUDE_UTIKAT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="20935389" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fleeData.stimulusKind  == $enum:crime_stimulusKind.pilloryBreak">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_VIDI_OSVOBOZENI_Z_PRANYRE&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="89191413" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fleeData.stimulusKind == $enum:crime_stimulusKind.lockpick">
						<Sequence>
							<LockDynamicInformationValues Information="$fleeData.information">
								<Sequence>
									<GetDynamicInformationValue Information="$fleeData.information" Tag="&apos;lockType&apos;" Out="$lockType" />
									<GetDynamicInformationValue Information="$fleeData.information" Tag="&apos;victim&apos;" Out="$owner" />
								</Sequence>
							</LockDynamicInformationValues>
							<EntityContextCheck context="crime_isAuthority" target="" saveVersion="2">
								<Then canSkip="1">
									<Expression expressions="$metarole = &apos;STRAZ_VIDI_ZLOCIN_(LOCKPICK__&apos;" />
								</Then>
								<Else canSkip="1">
									<IfElseCondition failOnCondition="false" condition="$owner == $this.id" saveVersion="2">
										<Then canSkip="1">
											<Expression expressions="$metarole = &apos;OWNER_VIDI_ZLOCIN_(LOCKPICK__&apos;" />
										</Then>
										<Else canSkip="1">
											<Expression expressions="$metarole = &apos;SVEDEK_VIDI_ZLOCIN_(LOCKPICK__&apos;" />
										</Else>
									</IfElseCondition>
								</Else>
							</EntityContextCheck>
							<IfElseCondition failOnCondition="false" condition="$lockType == &apos;STASH&apos; | $lockType == &apos;UNK&apos;" saveVersion="2">
								<Then canSkip="1">
									<Expression expressions="$metarole = $metarole + &apos;STASH)&apos;" />
								</Then>
								<Else canSkip="1">
									<Expression expressions="$metarole = $metarole + &apos;DVERE)&apos;" />
								</Else>
							</IfElseCondition>
							<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="$metarole" priority="$enum:crime_barkPriority.important" nodeLabel="52938865" />
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fleeData.stimulusKind  == $enum:crime_stimulusKind.murder">
						<Function_crime_startBark_murder information="$fleeData.information" nodeLabel="69938107" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fleeData.stimulusKind  == $enum:crime_stimulusKind.pickpocket">
						<Sequence>
							<LockDynamicInformationValues Information="$fleeData.information">
								<GetDynamicInformationValue Information="$fleeData.information" Tag="&apos;victim&apos;" Out="$owner" />
							</LockDynamicInformationValues>
							<IfElseCondition failOnCondition="false" condition="$owner == $this.id" saveVersion="2">
								<Then canSkip="1">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;OBET_PRISTIHLA_HRACE_(PICKPOCKET)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="30026174" />
								</Then>
								<Else canSkip="1">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;SVEDEK_VIDI_ZLOCIN_(PICKPOCKET)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="24109105" />
								</Else>
							</IfElseCondition>
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fleeData.stimulusKind  == $enum:crime_stimulusKind.theft">
						<IfCondition failOnCondition="false" condition="$fleeData.source &lt; $enum:crime_source.personal">
							<Function_crime_startBark_theft information="$fleeData.information" nodeLabel="97954964" />
						</IfCondition>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fleeData.stimulusKind == $enum:crime_stimulusKind.corpse">
						<Function_crime_startBark_corpse corpse="$fleeData.information.perceivedWuid" corpseState="$fleeData.corpseState" nodeLabel="13307768" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fleeData.stimulusKind == $enum:crime_stimulusKind.graveRobbing">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_VIDI_HRACE_VYKRADAT_HROB&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="96336311" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fleeData.stimulusKind == $enum:crime_stimulusKind.corpseViolation">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_VIDI_HRACE_JAK_HANOBI_MRTVOLU_(PRITEL)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="23824054" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$fleeData.stimulusKind == $enum:crime_stimulusKind.trespass | &#10;$fleeData.stimulusKind == $enum:crime_stimulusKind.escalatedTrespass">
						<Switch>
							<IfCondition failOnCondition="false" condition="$isBandit">
								<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;NPC_UTIKA_Z_COMBATU&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="25137253" />
							</IfCondition>
							<EntityContextCheck context="crime_isCuman" target="" saveVersion="2">
								<Then canSkip="1">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;NPC_UTIKA_Z_COMBATU&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="21999480" />
								</Then>
							</EntityContextCheck>
							<DefaultBranch>
								<IfElseCondition failOnCondition="false" condition="$fleeData.previousReaction == $enum:crime_reactionKind.watchTrespass" saveVersion="2">
									<Then canSkip="1">
										<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_ESKALUJE_TRESPASS_V_CRIME&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="92474774" />
									</Then>
									<Else canSkip="1">
										<Function_crime_trespass_playerEnteredBark counter="$trespassCounter" isPaused="false" previousReaction="$enum:crime_reactionKind.unknown" trespassSevereness="$enum:trespassLevel.prohibited" nodeLabel="98855024" />
									</Else>
								</IfElseCondition>
							</DefaultBranch>
						</Switch>
					</IfCondition>
					<DefaultBranch>
						<Success />
					</DefaultBranch>
				</Switch>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="amIWitness" comment="" />
				<Variable name="dialogContext" comment="" />
				<Variable name="isBandit" comment="" />
				<Variable name="lockType" comment="" />
				<Variable name="metarole" comment="" />
				<Variable name="owner" comment="" />
				<Variable name="trespassCounter" comment="" />
				<Variable name="fleeData" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-120" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IsBandit hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</IsBandit>
								<Switch hasInputBreakpoint="0" comment="not available for these guys" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</IfCondition>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_crimeBark>
										</Then>
									</EntityContextCheck>
									<DefaultBranch>
										<Function_crime_startBark_freshlyAttributed hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_startBark_freshlyAttributed>
									</DefaultBranch>
								</Switch>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Success hasInputBreakpoint="0" comment="ask karel" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</Then>
								<Else>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IsBandit hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</IsBandit>
										<Switch hasInputBreakpoint="0" comment="not available for these guys" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_crime_crimeBark>
											</IfCondition>
											<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_crime_crimeBark>
												</Then>
											</EntityContextCheck>
											<DefaultBranch>
												<Function_crime_startBark_alreadyCriminal hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_crime_startBark_alreadyCriminal>
											</DefaultBranch>
										</Switch>
									</Sequence>
								</Else>
							</IfElseCondition>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_crimeBark>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_crimeBark>
								</IfCondition>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_crimeBark>
								</IfCondition>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_crimeBark>
								</IfCondition>
								<DefaultBranch>
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</DefaultBranch>
							</Switch>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<DetermineCrimeVictim hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</DetermineCrimeVictim>
											<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Then>
												<Else>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Else>
											</HasGenderCheck>
										</Sequence>
									</Then>
									<Else>
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Function_crime_getHitMetaroleLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_crime_getHitMetaroleLabel>
											</Then>
											<Else>
												<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</IfCondition>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</Then>
															<Else>
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</Else>
														</IfElseCondition>
													</IfCondition>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</Then>
															<Else>
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</Else>
														</IfElseCondition>
													</IfCondition>
													<DefaultBranch>
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</DefaultBranch>
												</Switch>
											</Else>
										</IfElseCondition>
									</Else>
								</IfElseCondition>
								<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Timeout hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<DialogGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</DialogGate>
											</Timeout>
										</IfCondition>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Sequence>
								</SuppressFailure>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetDynamicInformationValue>
										<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetDynamicInformationValue>
									</Sequence>
								</LockDynamicInformationValues>
								<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Then>
									<Else>
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Then>
											<Else>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Else>
										</IfElseCondition>
									</Else>
								</EntityContextCheck>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Then>
									<Else>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Else>
								</IfElseCondition>
								<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_crimeBark>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_startBark_murder hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_startBark_murder>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetDynamicInformationValue>
								</LockDynamicInformationValues>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Then>
									<Else>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Else>
								</IfElseCondition>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_crime_startBark_theft hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_startBark_theft>
							</IfCondition>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_startBark_corpse hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_startBark_corpse>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Switch hasInputBreakpoint="0" comment="not available for these guys" breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_crimeBark>
								</IfCondition>
								<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Then>
								</EntityContextCheck>
								<DefaultBranch>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_crimeBark>
										</Then>
										<Else>
											<Function_crime_trespass_playerEnteredBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_trespass_playerEnteredBark>
										</Else>
									</IfElseCondition>
								</DefaultBranch>
							</Switch>
						</IfCondition>
						<DefaultBranch>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</DefaultBranch>
					</Switch>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>