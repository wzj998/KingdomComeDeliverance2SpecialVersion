<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_getMostImportantCrimeInformation" is_function="1">
    <Variables>
      <Variable name="importance" type="_int" values="" isPersistent="0" form="single" />
      <Variable name="informations" type="information" values="" isPersistent="0" form="array" />
      <Variable name="informations_value" type="information" values="" isPersistent="0" form="single" />
      <Variable name="isRelated" type="_bool" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="mostImportantInformation" type="information" values="" isPersistent="0" form="single" requirementType="Out" />
      <Variable name="npcToCheck" type="_wuid" values="$this.id" isPersistent="0" form="single" requirementType="In" />
      <Variable name="onlyRelated" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <ErrorNode Message="&apos;Function is obsolete. Use its code successor.&apos;" />
      </Behavior>
    </Root>
    <ForestContainer>
      <Sequence>
        <GetKnownInformations OutArray="$informations" Holder="$npcToCheck" />
        <ForEach startIndex="0" step="1" array="$informations" iterator="" value="$informations_value" break="">
          <IfCondition failOnCondition="false" condition="$data:crime[$informations_value.label].isCrime &amp;  &#10;$data:crime[$informations_value.label].importance &gt; $importance">
            <Sequence>
              <IfCondition failOnCondition="false" condition="$onlyRelated">
                <IsInformationRelatedToNpc Information="$informations_value" Npc="$this.id" IsRelated="$isRelated" />
              </IfCondition>
              <IfCondition failOnCondition="false" condition="~$onlyRelated | $isRelated">
                <Expression expressions="$importance = $data:crime[$informations_value.label].importance &#10;$mostImportantInformation = $informations_value" />
              </IfCondition>
            </Sequence>
          </IfCondition>
        </ForEach>
      </Sequence>
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="importance" comment="" />
        <Variable name="informations" comment="" />
        <Variable name="informations_value" comment="" />
        <Variable name="isRelated" comment="" />
        <Variable name="mostImportantInformation" comment="" />
        <Variable name="npcToCheck" comment="" />
        <Variable name="onlyRelated" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </ErrorNode>
        </Behavior>
      </Root>
      <Forest>
        <Sequence editorPosX="360" editorPosY="340" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
          <GetKnownInformations hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </GetKnownInformations>
          <ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IsInformationRelatedToNpc hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </IsInformationRelatedToNpc>
                </IfCondition>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Expression>
                </IfCondition>
              </Sequence>
            </IfCondition>
          </ForEach>
        </Sequence>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>