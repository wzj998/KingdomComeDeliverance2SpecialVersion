<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="callFollowUpBehavior" is_function="1">
		<Variables>
			<Variable name="breakLoop" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="currentTime" type="_int64" values="" isPersistent="0" form="single" />
			<Variable name="distance" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="handCheck_left" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="handCheck_right" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" />
			<Variable name="itemPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="item_isInInventory" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="reactionTargets_bandageMyself" type="_wuid,crime:followUpBehavior:bandageMyself" values="" isPersistent="0" form="custom_associative" />
			<Variable name="reactionTargets_checkHomeStashes_value" type="crime:followUpBehavior:checkHomeStashes" values="" isPersistent="0" form="single" />
			<Variable name="reactionTargets_checkStash" type="_wuid,crime:followUpBehavior:checkStash" values="" isPersistent="0" form="custom_associative" />
			<Variable name="reactionTargets_checkhomeStashes" type="_wuid,crime:followUpBehavior:checkHomeStashes" values="" isPersistent="0" form="custom_associative" />
			<Variable name="reactionTargets_haulGameMeat" type="_wuid,crime:followUpBehavior:haulGameMeat" values="" isPersistent="0" form="custom_associative" />
			<Variable name="reactionTargets_haulGameMeat_break" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="reactionTargets_haulGameMeat_value" type="crime:followUpBehavior:haulGameMeat" values="" isPersistent="0" form="single" />
			<Variable name="reactionTargets_key" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="reactionTargets_kickMissingNpc" type="_wuid,crime:followUpBehavior:kickMissingNpc" values="" isPersistent="0" form="custom_associative" />
			<Variable name="reactionTargets_kickMissingNpc_value" type="crime:followUpBehavior:kickMissingNpc" values="" isPersistent="0" form="single" />
			<Variable name="reactionTargets_lookAround" type="_wuid,crime:followUpBehavior:lookAround" values="" isPersistent="0" form="custom_associative" />
			<Variable name="reactionTargets_lookAround_value" type="crime:followUpBehavior:lookAround" values="" isPersistent="0" form="single" />
			<Variable name="reactionTargets_markKettleAsPoisoned" type="_wuid,crime:followUpBehavior:markKettleAsPoisoned" values="" isPersistent="0" form="custom_associative" />
			<Variable name="reactionTargets_markKettleAsPoisoned_value" type="crime:followUpBehavior:markKettleAsPoisoned" values="" isPersistent="0" form="single" />
			<Variable name="reactionTargets_mourn" type="_wuid,crime:followUpBehavior:mourn" values="" isPersistent="0" form="custom_associative" />
			<Variable name="reactionTargets_mourn_value" type="crime:followUpBehavior:mourn" values="" isPersistent="0" form="single" />
			<Variable name="reactionTargets_pickUpItem" type="_wuid,crime:followUpBehavior:pickUpItem" values="" isPersistent="0" form="custom_associative" />
			<Variable name="reactionTargets_pickUpItem_value" type="crime:followUpBehavior:pickUpItem" values="" isPersistent="0" form="single" />
			<Variable name="reactionTargets_report" type="_wuid,crime:followUpBehavior:report" values="" isPersistent="0" form="custom_associative" />
			<Variable name="reactionTargets_report_value" type="crime:followUpBehavior:report" values="" isPersistent="0" form="single" />
			<Variable name="reactionTargets_returnStartledAnimal" type="_wuid,crime:followUpBehavior:returnStartledAnimal" values="" isPersistent="0" form="custom_associative" />
			<Variable name="reactionTargets_returnStartledAnimal_val" type="crime:followUpBehavior:returnStartledAnimal" values="" isPersistent="0" form="single" />
			<Variable name="reactionTargets_wakeUp" type="_wuid,crime:followUpBehavior:wakeUp" values="" isPersistent="0" form="custom_associative" />
			<Variable name="reactionTargets_wakeUp_value" type="crime:followUpBehavior:wakeUp" values="" isPersistent="0" form="single" />
			<Variable name="reactionTargets_watchCorpse" type="_wuid,crime:followUpBehavior:watchCorpse" values="" isPersistent="0" form="custom_associative" />
			<Variable name="reactionTargets_watchCorpse_value" type="crime:followUpBehavior:watchCorpse" values="" isPersistent="0" form="single" />
			<Variable name="reactors" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="reportDestainationType" type="enum:crime_reportDestinationType" values="" isPersistent="0" form="single" />
			<Variable name="reportDestination" type="_wuid" values="false" isPersistent="0" form="single" />
			<Variable name="shouldReact" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="stimulus_corpse" type="switch:stimulus:corpse" values="" isPersistent="0" form="single" />
			<Variable name="stimulus_unconsciousBody" type="switch:stimulus:unconsciousBody" values="" isPersistent="0" form="single" />
			<Variable name="useless" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="previousReaction" type="enum:crime_reactionKind" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<AtomicDecorator>
						<SuppressFailure>
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;crime_followUpBehavior_kickMissingNpc&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									<EvaLLyzer Expresion="$reactionTargets_kickMissingNpc[$__to] = $__link_crime_followUpBehavior_kickMissingNpc" Quantifiers="ForAll" saveVersion="2" />
								</GraphSearch>
								<ForEach startIndex="0" step="1" array="$reactionTargets_kickMissingNpc" iterator="$reactionTargets_key" value="$reactionTargets_kickMissingNpc_value" break="">
									<Selector>
										<Sequence>
											<GraphSearch Origin="$reactionTargets_key" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;crime_spawnMissingNpcVolume_smartObject&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
												<WUIDFilter WUID="$reactionTargets_kickMissingNpc_value.smartObject" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
											</GraphSearch>
											<Function_callInterrupt_kickNpcFromBehavior ignorePriority="true" npc="$reactionTargets_key" smartObject="$reactionTargets_kickMissingNpc_value.smartObject" nodeLabel="42809099" />
										</Sequence>
										<RemoveLink From="$this.id" To="$reactionTargets_key" Tag="&apos;crime_followUpBehavior_kickMissingNpc&apos;" LinkOpHandleMode="Success" />
									</Selector>
								</ForEach>
							</Sequence>
						</SuppressFailure>
					</AtomicDecorator>
					<AtomicDecorator>
						<SuppressFailure>
							<EntityContextCheck context="crime_suppressBandageMyself" target="" saveVersion="2">
								<Else canSkip="1">
									<Sequence>
										<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;crime_followUpBehavior_bandageMyself&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
											<EvaLLyzer Expresion="$reactionTargets_bandageMyself[$__to] = $__link_crime_followUpBehavior_bandageMyself" Quantifiers="ForAll" saveVersion="2" />
										</GraphSearch>
										<ForEach startIndex="0" step="1" array="$reactionTargets_bandageMyself" iterator="$reactionTargets_key" value="" break="">
											<Function_callInterrupt_bandageMyself ignorePriority="true" initiator="$enum:switch_interruptInitiator.scheduler" previousReaction="$enum:crime_reactionKind.unknown" source="$enum:crime_source.direct" stimulusKind="$enum:crime_stimulusKind.unknown" nodeLabel="17200864" />
										</ForEach>
									</Sequence>
								</Else>
							</EntityContextCheck>
						</SuppressFailure>
					</AtomicDecorator>
					<AtomicDecorator>
						<SuppressFailure>
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;crime_followUpBehavior_markKettleAsPoisoned&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									<EvaLLyzer Expresion="$reactionTargets_markKettleAsPoisoned[$__to] = $__link_crime_followUpBehavior_markKettleAsPoisoned" Quantifiers="ForAll" saveVersion="2" />
								</GraphSearch>
								<ForEach startIndex="0" step="1" array="$reactionTargets_markKettleAsPoisoned" iterator="" value="$reactionTargets_markKettleAsPoisoned_value" break="">
									<IfElseCondition failOnCondition="false" condition="$reactionTargets_markKettleAsPoisoned_value.active" saveVersion="2">
										<Then canSkip="1">
											<Function_callInterrupt_markKettleAsPoisoned ignorePriority="true" initiator="$enum:switch_interruptInitiator.scheduler" kettle="$reactionTargets_markKettleAsPoisoned_value.kettle" kettleType="$reactionTargets_markKettleAsPoisoned_value.kettleType" previousReaction="$enum:crime_reactionKind.unknown" realizedPoisonAfterEating="$reactionTargets_markKettleAsPoisoned_value.realizedPoisonAfterEating" stimulusKind="$enum:crime_stimulusKind.unknown" nodeLabel="25864611" />
										</Then>
										<Else canSkip="1">
											<RemoveLink From="$this.id" To="$reactionTargets_markKettleAsPoisoned_value.kettle" Tag="&apos;crime_followUpBehavior_markKettleAsPoisoned&apos;" LinkOpHandleMode="Success" />
										</Else>
									</IfElseCondition>
								</ForEach>
							</Sequence>
						</SuppressFailure>
					</AtomicDecorator>
					<AtomicDecorator>
						<SuppressFailure>
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;crime_followUpBehavior_lookAround&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									<EvaLLyzer Expresion="$reactionTargets_lookAround[$__to] = $__link_crime_followUpBehavior_lookAround" Quantifiers="ForAll" saveVersion="2" />
								</GraphSearch>
								<ForEach startIndex="0" step="1" array="$reactionTargets_lookAround" iterator="$reactionTargets_key" value="$reactionTargets_lookAround_value" break="">
									<SuppressFailure>
										<Selector>
											<Sequence>
												<RetrieveInformation PerceivedWuid="$reactionTargets_lookAround_value.information.perceivedWuid" label="$reactionTargets_lookAround_value.information.label" OutVariable="$information" />
												<Function_callInterrupt_lookAround alarmReactionType="$enum:crime_alarmReactionType.none" amIBuddy="false" corpseState="$enum:corpseState.undiscovered" directHit="false" forcePebbleReaction="false" ignorePriority="true" information_look="$reactionTargets_lookAround_value.information" initiator="$enum:switch_interruptInitiator.scheduler" missingNpc="$__null" position="$reactionTargets_lookAround_value.information.position" previousReaction="$previousReaction" reportedBy="$__null" searchDirection="" shooter="$__player" soundType="$enum:sound.movement" source="$reactionTargets_lookAround_value.source" stimulusAnimalAbuse="" stimulusKind="$reactionTargets_lookAround_value.stimulusKind" nodeLabel="60868599" />
											</Sequence>
											<RemoveLink From="$this.id" To="$reactionTargets_key" Tag="&apos;crime_followUpBehavior_lookAround&apos;" LinkOpHandleMode="Success" />
										</Selector>
									</SuppressFailure>
								</ForEach>
							</Sequence>
						</SuppressFailure>
					</AtomicDecorator>
					<AtomicDecorator>
						<SuppressFailure>
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;crime_followUpBehavior_report&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									<EvaLLyzer Expresion="$reactionTargets_report[$__to] = $__link_crime_followUpBehavior_report" Quantifiers="ForAll" saveVersion="2" />
								</GraphSearch>
								<ForEach startIndex="0" step="1" array="$reactionTargets_report" iterator="$reactionTargets_key" value="$reactionTargets_report_value" break="">
									<SuppressFailure>
										<Selector>
											<Sequence>
												<RetrieveInformation PerceivedWuid="$reactionTargets_report_value.information.perceivedWuid" label="$reactionTargets_report_value.information.label" OutVariable="$information" />
												<ChooseReportDestination Information="$reactionTargets_report_value.information" IsImportant="true" Destination="$reportDestination" DestinationType="$reportDestinationType" />
												<IfCondition failOnCondition="true" condition="$reportDestainationType &gt; $enum:crime_reportDestinationType.none">
													<Function_callInterrupt_report alreadyCriminal="false" assaultData="$reactionTargets_report_value.assaultData" corpseState="$enum:corpseState.undiscovered" disableDetectedIcon="true" disableEmitting="false" freshlyAttributedCrime="false" ignorePriority="true" information="$reactionTargets_report_value.information" initiator="$enum:switch_interruptInitiator.scheduler" movementSpeed="$enum:movementSpeed.fastRun" previousReaction="$previousReaction" reportDestination="$reportDestination" reportDestinationType="$reportDestainationType" source="$reactionTargets_report_value.source" stimulusKind="$reactionTargets_report_value.stimulusKind" nodeLabel="56770756" />
												</IfCondition>
											</Sequence>
											<RemoveLink From="$this.id" To="$reactionTargets_key" Tag="&apos;crime_followUpBehavior_report&apos;" LinkOpHandleMode="Success" />
										</Selector>
									</SuppressFailure>
								</ForEach>
							</Sequence>
						</SuppressFailure>
					</AtomicDecorator>
					<AtomicDecorator>
						<SuppressFailure>
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;crime_followUpBehavior_watchCorpse&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									<EvaLLyzer Expresion="$reactionTargets_watchCorpse[$__to] = $__link_crime_followUpBehavior_watchCorpse" Quantifiers="ForAll" saveVersion="2">
										<Child0 canSkip="1">
											<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
										</Child0>
									</EvaLLyzer>
								</GraphSearch>
								<ForEach startIndex="0" step="1" array="$reactionTargets_watchCorpse" iterator="$reactionTargets_key" value="$reactionTargets_watchCorpse_value" break="">
									<IfElseCondition failOnCondition="false" condition="$reactionTargets_watchCorpse_value.active" saveVersion="2">
										<Then canSkip="1">
											<Sequence>
												<Expression expressions="$stimulus_corpse.corpse = $reactionTargets_key &#10;$stimulus_corpse.isFollowUp = true" />
												<EntityContext context="crime_stimulusInitiatedByScheduler" target="">
													<Function_switch_handleStimulusCorpse stimulus="$stimulus_corpse" nodeLabel="75850924" />
												</EntityContext>
											</Sequence>
										</Then>
										<Else canSkip="1">
											<RemoveLink From="$this.id" To="$reactionTargets_key" Tag="&apos;crime_followUpBehavior_watchCorpse&apos;" LinkOpHandleMode="Error" />
										</Else>
									</IfElseCondition>
								</ForEach>
							</Sequence>
						</SuppressFailure>
					</AtomicDecorator>
					<AtomicDecorator>
						<SuppressFailure>
							<Sequence>
								<VarOperation varName="$reactors" targetVarName="" operation="Reinit" argument="" />
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;crime_followUpBehavior_wakeUp&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									<EvaLLyzer Expresion="$reactionTargets_wakeUp[$__to] = $__link_crime_followUpBehavior_wakeUp" Quantifiers="ForAll" saveVersion="2">
										<Child0 canSkip="1">
											<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
										</Child0>
									</EvaLLyzer>
								</GraphSearch>
								<ForEach startIndex="0" step="1" array="$reactionTargets_wakeUp" iterator="$reactionTargets_key" value="$reactionTargets_wakeUp_value" break="">
									<IfElseCondition failOnCondition="false" condition="$reactionTargets_wakeUp_value.active" saveVersion="2">
										<Then canSkip="1">
											<IsUnconsciousCheck SoulWUID="$reactionTargets_key" FailSubtMissing="false" saveVersion="2">
												<Then canSkip="1">
													<Selector>
														<Sequence>
															<GraphSearch Origin="$reactionTargets_key" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																<LinkTagFilter tag="&apos;bodyCarrier&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
															</GraphSearch>
															<RemoveLink From="$this.id" To="$reactionTargets_key" Tag="&apos;crime_followUpBehavior_wakeUp&apos;" LinkOpHandleMode="Error" />
														</Sequence>
														<Sequence>
															<Expression expressions="$stimulus_unconsciousBody.body = $reactionTargets_key" />
															<EntityContext context="crime_stimulusInitiatedByScheduler" target="">
																<Function_switch_handleStimulusUnconsciousBody stimulus="$stimulus_unconsciousBody" nodeLabel="89720761" />
															</EntityContext>
														</Sequence>
													</Selector>
												</Then>
												<Else canSkip="1">
													<RemoveLink From="$this.id" To="$reactionTargets_key" Tag="&apos;crime_followUpBehavior_wakeUp&apos;" LinkOpHandleMode="Error" />
												</Else>
											</IsUnconsciousCheck>
										</Then>
										<Else canSkip="1">
											<RemoveLink From="$this.id" To="$reactionTargets_key" Tag="&apos;crime_followUpBehavior_wakeUp&apos;" LinkOpHandleMode="Error" />
										</Else>
									</IfElseCondition>
								</ForEach>
							</Sequence>
						</SuppressFailure>
					</AtomicDecorator>
					<AtomicDecorator>
						<SuppressFailure>
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;crime_followUpBehavior_checkHomeStashes&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									<EvaLLyzer Expresion="$reactionTargets_checkhomeStashes[$__to] = $__link_crime_followUpBehavior_checkHomeStashes" Quantifiers="ForAll" saveVersion="2">
										<Child0 canSkip="1">
											<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
										</Child0>
									</EvaLLyzer>
								</GraphSearch>
								<ForEach startIndex="0" step="1" array="$reactionTargets_checkhomeStashes" iterator="$reactionTargets_key" value="$reactionTargets_checkHomeStashes_value" break="">
									<Sequence>
										<CheckReactionLimit DesiredReactionType="$enum:crime_reactionType.checkHomeStashes" Information="" Position="" StimulusKind="$enum:crime_stimulusKind.trespass" ShouldReact="$shouldReact" ShouldWatch="$useless" />
										<IfElseCondition failOnCondition="false" condition="$shouldReact" saveVersion="2">
											<Then canSkip="1">
												<Function_callInterrupt_checkHomeStashes home="$reactionTargets_key" ignorePriority="true" information="$reactionTargets_checkHomeStashes_value.information" initiator="$enum:switch_interruptInitiator.scheduler" playerRelated="$reactionTargets_checkHomeStashes_value.playerRelated" previousReaction="$previousReaction" stimulusKind="$enum:crime_stimulusKind.trespass" stolenItemsFound="$reactionTargets_checkHomeStashes_value.stolenItemsFound" nodeLabel="16099618" />
											</Then>
											<Else canSkip="1">
												<RemoveLink From="$this.id" To="$reactionTargets_key" Tag="&apos;crime_followUpBehavior_checkHomeStashes&apos;" LinkOpHandleMode="Error" />
											</Else>
										</IfElseCondition>
									</Sequence>
								</ForEach>
							</Sequence>
						</SuppressFailure>
					</AtomicDecorator>
					<AtomicDecorator>
						<SuppressFailure>
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;crime_followUpBehavior_checkStash&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									<EvaLLyzer Expresion="$reactionTargets_checkStash[$__to] = $__link_crime_followUpBehavior_checkStash" Quantifiers="ForAll" saveVersion="2" />
								</GraphSearch>
								<ForEach startIndex="0" step="1" array="$reactionTargets_checkStash" iterator="$reactionTargets_key" value="" break="">
									<Function_callInterrupt_checkStash ignorePriority="true" initiator="$enum:switch_interruptInitiator.scheduler" previousReaction="$previousReaction" stash="$reactionTargets_key" stimulusKind="$enum:crime_stimulusKind.unknown" nodeLabel="35113840" />
								</ForEach>
							</Sequence>
						</SuppressFailure>
					</AtomicDecorator>
					<AtomicDecorator>
						<SuppressFailure>
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;crime_followUpBehavior_mourn&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									<EvaLLyzer Expresion="$reactionTargets_mourn[$__to] = $__link_crime_followUpBehavior_mourn" Quantifiers="ForAll" saveVersion="2" />
								</GraphSearch>
								<ForEach startIndex="0" step="1" array="$reactionTargets_mourn" iterator="$reactionTargets_key" value="$reactionTargets_mourn_value" break="">
									<Function_callInterrupt_mourn ignorePriority="true" initiator="$enum:switch_interruptInitiator.scheduler" mournTarget="$reactionTargets_key" previousReaction="$previousReaction" stimulusKind="$enum:crime_stimulusKind.missingNpc" nodeLabel="90319124" />
								</ForEach>
							</Sequence>
						</SuppressFailure>
					</AtomicDecorator>
					<AtomicDecorator>
						<SuppressFailure>
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;crime_followUpBehavior_haulGameMeat&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									<EvaLLyzer Expresion="$reactionTargets_haulGameMeat[$__to] = $__link_crime_followUpBehavior_haulGameMeat" Quantifiers="ForAll" saveVersion="2">
										<Child0 canSkip="1">
											<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
										</Child0>
									</EvaLLyzer>
								</GraphSearch>
								<Expression expressions="$reactionTargets_haulGameMeat_break = false" />
								<ForEach startIndex="0" step="1" array="$reactionTargets_haulGameMeat" iterator="$reactionTargets_key" value="$reactionTargets_haulGameMeat_value" break="$reactionTargets_haulGameMeat_break">
									<IfElseCondition failOnCondition="false" condition="$reactionTargets_haulGameMeat_value.active" saveVersion="2">
										<Then canSkip="1">
											<Selector>
												<GraphSearch Origin="$reactionTargets_key" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;crime_haulGameMeatReserved_reverse&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
												</GraphSearch>
												<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;crime_haulGameMeatReserved&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
												</GraphSearch>
												<Sequence>
													<Function_callInterrupt_haulGameMeat corpse="$reactionTargets_key" ignorePriority="true" initiator="$enum:switch_interruptInitiator.scheduler" previousReaction="$previousReaction" nodeLabel="19643592" />
													<Expression expressions="$reactionTargets_haulGameMeat_break = true" />
												</Sequence>
											</Selector>
										</Then>
										<Else canSkip="1">
											<RemoveLink From="$this.id" To="$reactionTargets_key" Tag="&apos;crime_followUpBehavior_haulGameMeat&apos;" LinkOpHandleMode="Error" />
										</Else>
									</IfElseCondition>
								</ForEach>
							</Sequence>
						</SuppressFailure>
					</AtomicDecorator>
					<AtomicDecorator>
						<SuppressFailure>
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;crime_followUpBehavior_returnStartledAnimal&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									<EvaLLyzer Expresion="$reactionTargets_returnStartledAnimal[$__to] = $__link_crime_followUpBehavior_returnStartledAnimal" Quantifiers="ForAll" saveVersion="2" />
								</GraphSearch>
								<ForEach startIndex="0" step="1" array="$reactionTargets_returnStartledAnimal" iterator="$reactionTargets_key" value="$reactionTargets_returnStartledAnimal_val" break="">
									<IfElseCondition failOnCondition="false" condition="$reactionTargets_returnStartledAnimal_val.active" saveVersion="2">
										<Then canSkip="1">
											<IfElseCondition failOnCondition="false" condition="$reactionTargets_returnStartledAnimal_val.returnReason == $enum:crime_horseReturnReason.afterArrest" saveVersion="2">
												<Then canSkip="1">
													<EntityContextCheck context="crime_animal_interruptHorseWait" target="$reactionTargets_key" saveVersion="2">
														<Then canSkip="1">
															<Function_callInterrupt_returnStartledAnimal animal="$reactionTargets_returnStartledAnimal_val.animal" ignorePriority="true" initiator="$enum:switch_interruptInitiator.scheduler" previousReaction="$previousReaction" returnReason="$enum:crime_horseReturnReason.afterArrest" source="$enum:crime_source.direct" stimulusKind="$enum:crime_stimulusKind.unknown" nodeLabel="97975684" />
														</Then>
														<Else canSkip="1">
															<RemoveLink From="$this.id" To="$reactionTargets_key" Tag="&apos;crime_followUpBehavior_returnStartledAnimal&apos;" LinkOpHandleMode="Error" />
														</Else>
													</EntityContextCheck>
												</Then>
												<Else canSkip="1">
													<EntityContextCheck context="crime_animal_interruptStartle" target="$reactionTargets_key" saveVersion="2">
														<Then canSkip="1">
															<Function_callInterrupt_returnStartledAnimal animal="$reactionTargets_returnStartledAnimal_val.animal" ignorePriority="true" initiator="$enum:switch_interruptInitiator.scheduler" previousReaction="$previousReaction" returnReason="$enum:crime_horseReturnReason.fromFollowUp" source="$enum:crime_source.direct" stimulusKind="$enum:crime_stimulusKind.unknown" nodeLabel="34339855" />
														</Then>
														<Else canSkip="1">
															<RemoveLink From="$this.id" To="$reactionTargets_key" Tag="&apos;crime_followUpBehavior_returnStartledAnimal&apos;" LinkOpHandleMode="Error" />
														</Else>
													</EntityContextCheck>
												</Else>
											</IfElseCondition>
										</Then>
										<Else canSkip="1">
											<RemoveLink From="$this.id" To="$reactionTargets_key" Tag="&apos;crime_followUpBehavior_returnStartledAnimal&apos;" LinkOpHandleMode="Error" />
										</Else>
									</IfElseCondition>
								</ForEach>
							</Sequence>
						</SuppressFailure>
					</AtomicDecorator>
					<AtomicDecorator>
						<SuppressFailure>
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;crime_followUpBehavior_pickUpItem&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									<EvaLLyzer Expresion="$reactionTargets_pickUpItem[$__to] = $__link_crime_followUpBehavior_pickUpItem" Quantifiers="ForAll" saveVersion="2" />
								</GraphSearch>
								<ForEach startIndex="0" step="1" array="$reactionTargets_pickUpItem" iterator="$reactionTargets_key" value="$reactionTargets_pickUpItem_value" break="$breakLoop">
									<Selector>
										<GraphSearch Origin="$reactionTargets_key" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;crime_pickUpItemReserved_reverse&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
										</GraphSearch>
										<CheckWuidValid wuid="$reactionTargets_key" FailSubtMissing="false" saveVersion="2">
											<Then canSkip="1">
												<Sequence>
													<GetTime TimeType="GameTime" OutVar="$currentTime" Delta="" />
													<GetItemProperty itemId="$reactionTargets_key" property="InInventory" result="$item_isInInventory" />
													<HandCheck who="$this.id" LeftHand="$handCheck_left" RightHand="$handCheck_right" />
													<MeasureDistance position1="$reactionTargets_key" position2="$__player" mode="ThreeDimensions" result="$distance" />
													<IfElseCondition failOnCondition="false" condition="~$item_isInInventory &#10;&amp; $handCheck_left == $__null &#10;&amp; $handCheck_right == $__null &#10;&amp;  &#10;( &#10;$reactionTargets_pickUpItem_value.ignoreExpiration | &#10;($currentTime &lt; $reactionTargets_pickUpItem_value.timestamp + $data:script_param[&apos;crime_pickUpItem_memoryExpiration&apos;].value * 1000 &amp; $distance&gt; $data:script_param[&apos;crime_pickUpItem_minDistanceToPlayer&apos;].value) &#10;)" saveVersion="2">
														<Then canSkip="1">
															<Sequence>
																<GetSpatialInfo In="$reactionTargets_key" Out="$itemPos" What="Position" />
																<CheckReactionLimit DesiredReactionType="$enum:crime_reactionType.pickUpItem" Information="" Position="$itemPos" StimulusKind="$enum:crime_stimulusKind.item" ShouldReact="$shouldReact" ShouldWatch="$useless" />
																<IfElseCondition failOnCondition="false" condition="$shouldReact" saveVersion="2">
																	<Then canSkip="1">
																		<Sequence>
																			<Function_callInterrupt_pickUpItem ignorePriority="true" initiator="$enum:switch_interruptInitiator.scheduler" item="$reactionTargets_key" previousReaction="$previousReaction" source="$enum:crime_source.direct" stimulusKind="$enum:crime_stimulusKind.item" nodeLabel="93424531" />
																			<Expression expressions="$breakLoop = true" />
																		</Sequence>
																	</Then>
																	<Else canSkip="1">
																		<RemoveLink From="$this.id" To="$reactionTargets_key" Tag="&apos;crime_followUpBehavior_pickUpItem&apos;" LinkOpHandleMode="Success" />
																	</Else>
																</IfElseCondition>
															</Sequence>
														</Then>
														<Else canSkip="1">
															<RemoveLink From="$this.id" To="$reactionTargets_key" Tag="&apos;crime_followUpBehavior_pickUpItem&apos;" LinkOpHandleMode="Success" />
														</Else>
													</IfElseCondition>
												</Sequence>
											</Then>
										</CheckWuidValid>
									</Selector>
								</ForEach>
							</Sequence>
						</SuppressFailure>
					</AtomicDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<Expression expressions="$stimulusItem.item = $reactionTargets_key" />
				<Function_switch_handleStimulusItem stimulus="$stimulusItem" nodeLabel="75947564" />
				<RemoveLink From="$this.id" To="$reactionTargets_key" Tag="&apos;crime_followUpBehavior_pickUpItem&apos;" LinkOpHandleMode="Success" />
				<Expression expressions="$breakLoop = true" />
			</Sequence>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="breakLoop" comment="" />
				<Variable name="currentTime" comment="" />
				<Variable name="distance" comment="" />
				<Variable name="handCheck_left" comment="" />
				<Variable name="handCheck_right" comment="" />
				<Variable name="information" comment="" />
				<Variable name="itemPos" comment="" />
				<Variable name="item_isInInventory" comment="" />
				<Variable name="reactionTargets_bandageMyself" comment="" />
				<Variable name="reactionTargets_checkHomeStashes_value" comment="" />
				<Variable name="reactionTargets_checkStash" comment="" />
				<Variable name="reactionTargets_checkhomeStashes" comment="" />
				<Variable name="reactionTargets_haulGameMeat" comment="" />
				<Variable name="reactionTargets_haulGameMeat_break" comment="" />
				<Variable name="reactionTargets_haulGameMeat_value" comment="" />
				<Variable name="reactionTargets_key" comment="" />
				<Variable name="reactionTargets_kickMissingNpc" comment="" />
				<Variable name="reactionTargets_kickMissingNpc_value" comment="" />
				<Variable name="reactionTargets_lookAround" comment="" />
				<Variable name="reactionTargets_lookAround_value" comment="" />
				<Variable name="reactionTargets_markKettleAsPoisoned" comment="" />
				<Variable name="reactionTargets_markKettleAsPoisoned_value" comment="" />
				<Variable name="reactionTargets_mourn" comment="" />
				<Variable name="reactionTargets_mourn_value" comment="" />
				<Variable name="reactionTargets_pickUpItem" comment="" />
				<Variable name="reactionTargets_pickUpItem_value" comment="" />
				<Variable name="reactionTargets_report" comment="" />
				<Variable name="reactionTargets_report_value" comment="" />
				<Variable name="reactionTargets_returnStartledAnimal" comment="" />
				<Variable name="reactionTargets_returnStartledAnimal_val" comment="" />
				<Variable name="reactionTargets_wakeUp" comment="" />
				<Variable name="reactionTargets_wakeUp_value" comment="" />
				<Variable name="reactionTargets_watchCorpse" comment="" />
				<Variable name="reactionTargets_watchCorpse_value" comment="" />
				<Variable name="reactors" comment="" />
				<Variable name="reportDestainationType" comment="" />
				<Variable name="reportDestination" comment="" />
				<Variable name="shouldReact" comment="" />
				<Variable name="stimulus_corpse" comment="" />
				<Variable name="stimulus_unconsciousBody" comment="" />
				<Variable name="useless" comment="" />
				<Variable name="previousReaction" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-130" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
										</EvaLLyzer>
									</GraphSearch>
									<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
													<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WUIDFilter>
												</GraphSearch>
												<Function_callInterrupt_kickNpcFromBehavior hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_callInterrupt_kickNpcFromBehavior>
											</Sequence>
											<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</RemoveLink>
										</Selector>
									</ForEach>
								</Sequence>
							</SuppressFailure>
						</AtomicDecorator>
						<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Else>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
												<EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
												</EvaLLyzer>
											</GraphSearch>
											<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_callInterrupt_bandageMyself hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_callInterrupt_bandageMyself>
											</ForEach>
										</Sequence>
									</Else>
								</EntityContextCheck>
							</SuppressFailure>
						</AtomicDecorator>
						<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
										</EvaLLyzer>
									</GraphSearch>
									<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Function_callInterrupt_markKettleAsPoisoned hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_callInterrupt_markKettleAsPoisoned>
											</Then>
											<Else>
												<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</RemoveLink>
											</Else>
										</IfElseCondition>
									</ForEach>
								</Sequence>
							</SuppressFailure>
						</AtomicDecorator>
						<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
										</EvaLLyzer>
									</GraphSearch>
									<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<RetrieveInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</RetrieveInformation>
													<Function_callInterrupt_lookAround hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_callInterrupt_lookAround>
												</Sequence>
												<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</RemoveLink>
											</Selector>
										</SuppressFailure>
									</ForEach>
								</Sequence>
							</SuppressFailure>
						</AtomicDecorator>
						<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
										</EvaLLyzer>
									</GraphSearch>
									<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<RetrieveInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</RetrieveInformation>
													<ChooseReportDestination hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ChooseReportDestination>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_callInterrupt_report hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_callInterrupt_report>
													</IfCondition>
												</Sequence>
												<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</RemoveLink>
											</Selector>
										</SuppressFailure>
									</ForEach>
								</Sequence>
							</SuppressFailure>
						</AtomicDecorator>
						<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="watchCorpse" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child0>
												<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</RangeSorter>
											</Child0>
										</EvaLLyzer>
									</GraphSearch>
									<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_switch_handleStimulusCorpse hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_switch_handleStimulusCorpse>
													</EntityContext>
												</Sequence>
											</Then>
											<Else>
												<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</RemoveLink>
											</Else>
										</IfElseCondition>
									</ForEach>
								</Sequence>
							</SuppressFailure>
						</AtomicDecorator>
						<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</VarOperation>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child0>
												<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</RangeSorter>
											</Child0>
										</EvaLLyzer>
									</GraphSearch>
									<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<IsUnconsciousCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</LinkTagFilter>
																</GraphSearch>
																<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</RemoveLink>
															</Sequence>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
																<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Function_switch_handleStimulusUnconsciousBody hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_switch_handleStimulusUnconsciousBody>
																</EntityContext>
															</Sequence>
														</Selector>
													</Then>
													<Else>
														<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</RemoveLink>
													</Else>
												</IsUnconsciousCheck>
											</Then>
											<Else>
												<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</RemoveLink>
											</Else>
										</IfElseCondition>
									</ForEach>
								</Sequence>
							</SuppressFailure>
						</AtomicDecorator>
						<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child0>
												<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</RangeSorter>
											</Child0>
										</EvaLLyzer>
									</GraphSearch>
									<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<CheckReactionLimit hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</CheckReactionLimit>
											<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Function_callInterrupt_checkHomeStashes hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_callInterrupt_checkHomeStashes>
												</Then>
												<Else>
													<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</RemoveLink>
												</Else>
											</IfElseCondition>
										</Sequence>
									</ForEach>
								</Sequence>
							</SuppressFailure>
						</AtomicDecorator>
						<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
										</EvaLLyzer>
									</GraphSearch>
									<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_callInterrupt_checkStash hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_callInterrupt_checkStash>
									</ForEach>
								</Sequence>
							</SuppressFailure>
						</AtomicDecorator>
						<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
										</EvaLLyzer>
									</GraphSearch>
									<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_callInterrupt_mourn hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_callInterrupt_mourn>
									</ForEach>
								</Sequence>
							</SuppressFailure>
						</AtomicDecorator>
						<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child0>
												<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</RangeSorter>
											</Child0>
										</EvaLLyzer>
									</GraphSearch>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch hasInputBreakpoint="0" comment="Corpse is already reserved" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
													</GraphSearch>
													<GraphSearch hasInputBreakpoint="0" comment="I have something reserved (shouldn&apos;t happen)" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
													</GraphSearch>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_callInterrupt_haulGameMeat hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_callInterrupt_haulGameMeat>
														<Expression hasInputBreakpoint="0" comment="We only want the closest one, then exit (callInterrupt is going to break it anyway)" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Sequence>
												</Selector>
											</Then>
											<Else>
												<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</RemoveLink>
											</Else>
										</IfElseCondition>
									</ForEach>
								</Sequence>
							</SuppressFailure>
						</AtomicDecorator>
						<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
										</EvaLLyzer>
									</GraphSearch>
									<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Function_callInterrupt_returnStartledAnimal hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_callInterrupt_returnStartledAnimal>
															</Then>
															<Else>
																<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</RemoveLink>
															</Else>
														</EntityContextCheck>
													</Then>
													<Else>
														<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Function_callInterrupt_returnStartledAnimal hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_callInterrupt_returnStartledAnimal>
															</Then>
															<Else>
																<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</RemoveLink>
															</Else>
														</EntityContextCheck>
													</Else>
												</IfElseCondition>
											</Then>
											<Else>
												<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</RemoveLink>
											</Else>
										</IfElseCondition>
									</ForEach>
								</Sequence>
							</SuppressFailure>
						</AtomicDecorator>
						<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
										</EvaLLyzer>
									</GraphSearch>
									<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="Item is already reserved" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
											</GraphSearch>
											<CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</GetTime>
														<GetItemProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</GetItemProperty>
														<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</HandCheck>
														<MeasureDistance hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</MeasureDistance>
														<IfElseCondition hasInputBreakpoint="0" comment="Check for expiration" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Sequence hasInputBreakpoint="0" comment="Check limits last" breakpointFlags="0">
																	<OutputBreakpoints />
																	<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</GetSpatialInfo>
																	<CheckReactionLimit hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</CheckReactionLimit>
																	<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																		<Then>
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Function_callInterrupt_pickUpItem hasInputBreakpoint="0" comment="Item not reserved, try geting into pickUpItem" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Function_callInterrupt_pickUpItem>
																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Expression>
																			</Sequence>
																		</Then>
																		<Else>
																			<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</RemoveLink>
																		</Else>
																	</IfElseCondition>
																</Sequence>
															</Then>
															<Else>
																<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</RemoveLink>
															</Else>
														</IfElseCondition>
													</Sequence>
												</Then>
											</CheckWuidValid>
										</Selector>
									</ForEach>
								</Sequence>
							</SuppressFailure>
						</AtomicDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="3390" editorPosY="2160" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
					<Function_switch_handleStimulusItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_switch_handleStimulusItem>
					<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</RemoveLink>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>