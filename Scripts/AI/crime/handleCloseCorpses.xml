<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_handleCloseCorpses" is_function="1">
		<Variables>
			<Variable name="corpseInInterior" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="human_val" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="humansAroundMe" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="radius" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="searchPointInInterior" type="_bool" values="false" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="wuidToSearchFrom" type="_wuid" values="$this.id" isPersistent="0" form="single" requirementType="In" optional="1" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AtomicDecorator>
					<EntityContextCheck context="crime_searchingForNearbyCorpses" target="" saveVersion="2">
						<Else canSkip="1">
							<EntityContext context="crime_searchingForNearbyCorpses" target="">
								<Sequence>
									<IsInsideAreaWithLabel Position="$wuidToSearchFrom" Label="&apos;interior&apos;" Area="" FailSubtMissing="false" saveVersion="2">
										<Then canSkip="1">
											<Expression expressions="$searchPointInInterior = true &#10;$radius = $data:script_param[&apos;crime_radiusToCheckForCorpses_interior&apos;].value" />
										</Then>
										<Else canSkip="1">
											<Expression expressions="$searchPointInInterior = false &#10;$radius = $data:script_param[&apos;crime_radiusToCheckForCorpses&apos;].value" />
										</Else>
									</IsInsideAreaWithLabel>
									<CircularSpatialQuery Radius="$radius" Center="$wuidToSearchFrom" ToFill="$humansAroundMe" Precision="Approximate" Filter="HumanNPCs" />
									<ForEach startIndex="0" step="1" array="$humansAroundMe" iterator="" value="$human_val" break="">
										<IfCondition failOnCondition="false" condition="$human_val ~= $wuidToSearchFrom">
											<IsDeadCheck SoulWUID="$human_val" FailSubtMissing="false" saveVersion="2">
												<Then canSkip="1">
													<Sequence>
														<IsInsideAreaWithLabel Position="$human_val" Label="&apos;interior&apos;" Area="" FailSubtMissing="false" saveVersion="2">
															<Then canSkip="1">
																<Expression expressions="$corpseInInterior = true" />
															</Then>
															<Else canSkip="1">
																<Expression expressions="$corpseInInterior = false" />
															</Else>
														</IsInsideAreaWithLabel>
														<IfCondition failOnCondition="false" condition="$searchPointInInterior &amp; $corpseInInterior | &#10;~$searchPointInInterior &amp; ~$corpseInInterior &#10; &#10;// ~XOR(A, B)">
															<Function_switch_handleAwareness_corpse corpse="$human_val" reactionIntermediateData="" nodeLabel="64569446" />
														</IfCondition>
													</Sequence>
												</Then>
											</IsDeadCheck>
										</IfCondition>
									</ForEach>
								</Sequence>
							</EntityContext>
						</Else>
					</EntityContextCheck>
				</AtomicDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="corpseInInterior" comment="" />
				<Variable name="human_val" comment="" />
				<Variable name="humansAroundMe" comment="" />
				<Variable name="radius" comment="" />
				<Variable name="searchPointInInterior" comment="" />
				<Variable name="wuidToSearchFrom" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextCheck hasInputBreakpoint="0" comment="Stop recursion" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Else>
								<EntityContext hasInputBreakpoint="0" comment="Stop recursion" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IsInsideAreaWithLabel hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Then>
											<Else>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Else>
										</IsInsideAreaWithLabel>
										<CircularSpatialQuery hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</CircularSpatialQuery>
										<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<IsInsideAreaWithLabel hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Then>
																<Else>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Else>
															</IsInsideAreaWithLabel>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_switch_handleAwareness_corpse hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_switch_handleAwareness_corpse>
															</IfCondition>
														</Sequence>
													</Then>
												</IsDeadCheck>
											</IfCondition>
										</ForEach>
									</Sequence>
								</EntityContext>
							</Else>
						</EntityContextCheck>
					</AtomicDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>