<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_getKnownInformationForQuestPunishment" is_function="1">
    <Variables>
      <Variable name="humanInhabitants" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="inhabitants" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="inhabitants_var" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="npcType" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="reconcileArea" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="knownInformation" type="information" values="" isPersistent="0" form="array" requirementType="Out" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <AtomicDecorator>
          <Sequence>
            <IsInsideAreaWithLabel Position="$__player" Label="&apos;crime_questPunishment_reconcileArea&apos;" Area="$reconcileArea" FailSubtMissing="false" saveVersion="2">
              <Then canSkip="1">
                <SuppressFailure>
                  <Sequence>
                    <GetAreaInhabitants area="$reconcileArea" targetVar="$inhabitants" />
                    <ForEach startIndex="0" step="1" array="$inhabitants" iterator="" value="$inhabitants_var" break="">
                      <Sequence>
                        <GetType WUID="$inhabitants_var" OutString="$npcType" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
                        <IfCondition failOnCondition="false" condition="$npcType == &apos;NPC&apos;">
                          <Expression expressions="$humanInhabitants[#humanInhabitants] = $inhabitants_var" />
                        </IfCondition>
                      </Sequence>
                    </ForEach>
                    <SpreadInformation WuidArray="$humanInhabitants" />
                  </Sequence>
                </SuppressFailure>
              </Then>
              <Else canSkip="1">
                <Success />
              </Else>
            </IsInsideAreaWithLabel>
            <GetKnownInformations OutArray="$knownInformation" Holder="$this.id" />
          </Sequence>
        </AtomicDecorator>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="humanInhabitants" comment="" />
        <Variable name="inhabitants" comment="" />
        <Variable name="inhabitants_var" comment="" />
        <Variable name="npcType" comment="" />
        <Variable name="reconcileArea" comment="" />
        <Variable name="knownInformation" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <IsInsideAreaWithLabel hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <GetAreaInhabitants hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </GetAreaInhabitants>
                      <ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </GetType>
                          <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Expression>
                          </IfCondition>
                        </Sequence>
                      </ForEach>
                      <SpreadInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </SpreadInformation>
                    </Sequence>
                  </SuppressFailure>
                </Then>
                <Else>
                  <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Success>
                </Else>
              </IsInsideAreaWithLabel>
              <GetKnownInformations hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </GetKnownInformations>
            </Sequence>
          </AtomicDecorator>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>