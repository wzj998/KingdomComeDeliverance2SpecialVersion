<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_handlePlayersEscape" is_function="1">
		<Variables>
			<Variable name="perceptionFocus" type="perceptionInfo" values="" isPersistent="0" form="single" />
			<Variable name="playerLostCounter" type="_int" values="7" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="npcPersistency" type="_int" values="7" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<LogToLabel Name="&apos;playersEscape&apos;" Wuid="$this.id" Message="&apos;playerLostIn: $playerLostCounter&apos;">
					<Loop count="-1">
						<Sequence>
							<Expression expressions="$playerLostCounter = $npcPersistency" />
							<While doFail="false" propagateChildFail="false" condition="$playerLostCounter &gt; 0">
								<Sequence>
									<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
									<HasSeenPlayer NPC="$this.id" FullyAwareOnly="true" saveVersion="2">
										<Then canSkip="1">
											<Expression expressions="$playerLostCounter = $npcPersistency" />
										</Then>
										<Else canSkip="1">
											<Sequence>
												<CancelPerceptionIgnore PerceptorObject="$this.id" PerceptibleObject="$__player" WasIgnoredAtLeastFor="&apos;0s&apos;" />
												<GetCurrentPerceptionFocus PerceptionNfo="$perceptionFocus" />
												<IfElseCondition failOnCondition="false" condition="$perceptionFocus.perceptible==$__player" saveVersion="2">
													<Then canSkip="1">
														<Expression expressions="$playerLostCounter = $npcPersistency" />
													</Then>
													<Else canSkip="1">
														<Expression expressions="$playerLostCounter -= 1" />
													</Else>
												</IfElseCondition>
											</Sequence>
										</Else>
									</HasSeenPlayer>
								</Sequence>
							</While>
							<InstantCallback_empty EventName="&apos;PlayerLost&apos;" />
						</Sequence>
					</Loop>
				</LogToLabel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="crime_handlePlayersEscape">
			<Variables>
				<Variable name="perceptionFocus" comment="" />
				<Variable name="playerLostCounter" comment="" />
				<Variable name="npcPersistency" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
										<HasSeenPlayer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Then>
											<Else>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<CancelPerceptionIgnore hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</CancelPerceptionIgnore>
													<GetCurrentPerceptionFocus hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetCurrentPerceptionFocus>
													<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</Then>
														<Else>
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</Else>
													</IfElseCondition>
												</Sequence>
											</Else>
										</HasSeenPlayer>
									</Sequence>
								</While>
								<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantCallback_empty>
							</Sequence>
						</Loop>
					</LogToLabel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>