<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_getPlayerCompanionType" is_function="1">
    <Variables>
      <Variable name="playerHorse" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="companionType" type="enum:crime_banishCompanionType" values="" isPersistent="0" form="single" requirementType="Out" />
      <Variable name="entity" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GetPlayerHorse HorseWuid="$playerHorse" />
          <Switch>
            <IfCondition failOnCondition="false" condition="$entity == $__playerDog">
              <Expression expressions="$companionType = $enum:crime_banishCompanionType.Dog" />
            </IfCondition>
            <IfCondition failOnCondition="false" condition="$entity == $playerHorse">
              <Expression expressions="$companionType = $enum:crime_banishCompanionType.Horse" />
            </IfCondition>
            <DefaultBranch>
              <Expression expressions="$companionType = $enum:crime_banishCompanionType.Unknown" />
            </DefaultBranch>
          </Switch>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="playerHorse" comment="" />
        <Variable name="companionType" comment="" />
        <Variable name="entity" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GetPlayerHorse hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </GetPlayerHorse>
            <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </IfCondition>
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </IfCondition>
              <DefaultBranch>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </DefaultBranch>
            </Switch>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>