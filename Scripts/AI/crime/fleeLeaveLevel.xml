<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_fleeLeaveLevel" is_function="1">
		<Variables>
			<Variable name="const_false" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="levelExits" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="moveParams" type="additionalMoveParams" values="" isPersistent="0" form="single" />
			<Variable name="pathFindingParams" type="pathFindingParams" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="emittingInformation" type="information" values="" isPersistent="0" form="single" requirementType="Reference" />
			<Variable name="fleeData" type="switch:interruptData:flee" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="shouldEmitAlarm" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__land" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<CategoryFilter categories="&apos;levelExit&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$levelExits" saveVersion="2">
							<Child0 canSkip="1">
								<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
							</Child0>
						</Nodalyzer>
					</GraphSearch>
					<Parallel successMode="Any" failureMode="Any">
						<AnyDecorator preset="crime_keepStateAndItems" enabled="true">
							<MoveParamsDecorator speed="Sprint" pathFindingParams="$pathFindingParams" doorClosingPolicy="LeaveOpened">
								<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$levelExits[0]" destinationSpecification2="" destinationSpecification3="" speed="SlowSprint" additionalParams="$moveParams" pathFindingParams="$pathFindingParams" staminaPolicy="" pathInfo="" />
							</MoveParamsDecorator>
						</AnyDecorator>
						<Loop count="-1">
							<IfGate atomic="false" condition="$emittingInformation.label ~= &apos;&apos;" RunLogic="Halt">
								<Function_crime_emitInformation crimeInformation="$emittingInformation" emitCrimeInformation="true" longDistanceModeEnabled="$const_false" reactionKind="$enum:crime_reactionKind.flee" emitAlarmInformation="$shouldEmitAlarm" nodeLabel="91226061" />
							</IfGate>
						</Loop>
						<Loop count="-1">
							<Sequence>
								<Wait duration="&apos;8s&apos;" timeType="GameTime" doFail="false" variation="" />
								<Function_crime_flee_runningBark fleeData="$fleeData" nodeLabel="67002323" />
							</Sequence>
						</Loop>
					</Parallel>
					<IsPublicEnemy Soul="$this.id" FailOnSubtreeMissing="false" saveVersion="2">
						<Then canSkip="1">
							<KillNPC KillTarget="$this.id" Scream="false" />
						</Then>
						<Else canSkip="1">
							<Success />
						</Else>
					</IsPublicEnemy>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="const_false" comment="" />
				<Variable name="levelExits" comment="" />
				<Variable name="moveParams" comment="" />
				<Variable name="pathFindingParams" comment="" />
				<Variable name="emittingInformation" comment="" />
				<Variable name="fleeData" comment="" />
				<Variable name="shouldEmitAlarm" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-70" editorPosY="150" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<CategoryFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</CategoryFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child0>
									<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</RangeSorter>
								</Child0>
							</Nodalyzer>
						</GraphSearch>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Move>
								</MoveParamsDecorator>
							</AnyDecorator>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_crime_emitInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_emitInformation>
								</IfGate>
							</Loop>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<Function_crime_flee_runningBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_flee_runningBark>
								</Sequence>
							</Loop>
						</Parallel>
						<IsPublicEnemy hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</KillNPC>
							</Then>
							<Else>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Else>
						</IsPublicEnemy>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>