<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="crime_lookAround_getStopDistanceData" is_function="1">
    <Variables />
    <Parameters>
      <Variable name="approachType" type="enum:crime_lookAround_approachType" values="" isPersistent="0" form="single" requirementType="ConstReference" />
      <Variable name="stopDistance" type="_float" values="" isPersistent="0" form="single" requirementType="Out" />
      <Variable name="stopDistanceVariation" type="_float" values="" isPersistent="0" form="single" requirementType="Out" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Switch>
          <IfCondition failOnCondition="false" condition="$approachType == $enum:crime_lookAround_approachType.special_corpse">
            <Expression expressions="$stopDistance = 1.5 &#10;$stopDistanceVariation = 0.1" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$approachType == $enum:crime_lookAround_approachType.special_animal_corpse">
            <Expression expressions="$stopDistance = 1 &#10;$stopDistanceVariation = 0.1" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$approachType == $enum:crime_lookAround_approachType.close">
            <Expression expressions="$stopDistance = 0.2 &#10;$stopDistanceVariation = 0.1" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$approachType == $enum:crime_lookAround_approachType.approximate">
            <Expression expressions="$stopDistance = 6 &#10;$stopDistanceVariation = 4" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$approachType == $enum:crime_lookAround_approachType.special_sound_dog_bark_align">
            <Expression expressions="$stopDistance = 1.5 &#10;$stopDistanceVariation = 0.1" />
          </IfCondition>
          <DefaultBranch>
            <Expression expressions="$stopDistance = 3 &#10;$stopDistanceVariation = 2" />
          </DefaultBranch>
        </Switch>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="approachType" comment="" />
        <Variable name="stopDistance" comment="" />
        <Variable name="stopDistanceVariation" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </IfCondition>
            <DefaultBranch>
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </DefaultBranch>
          </Switch>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>