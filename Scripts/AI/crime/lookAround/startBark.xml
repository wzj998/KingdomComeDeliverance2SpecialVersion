<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_lookAround_startBark" is_function="1">
		<Variables>
			<Variable name="animalAbuse_species" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="buddy" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="dialogContext" type="_float" values="" isPersistent="0" form="associative" />
			<Variable name="lookAt" type="_wuid" values="$__player" isPersistent="0" form="single" />
			<Variable name="metarole" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="playerIsTrespassing" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="reactionSuppressed" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="trespassArea" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="trespassAreaSevereness" type="enum:trespassLevel" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="lookAroundData" type="switch:interruptData:lookAround" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Switch>
					<IfCondition failOnCondition="false" condition="$lookAroundData.previousReaction == $enum:crime_reactionKind.attack  &#10;&amp; $lookAroundData.initiatedBy == $enum:switch_interruptInitiator.scheduler">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;NPC_ZTRATILO_CIL_PRI_PRONASLEDOVANI_BEHEM_COMBATU&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="18458644" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$lookAroundData.previousReaction == $enum:crime_reactionKind.watchTrespass &#10;&amp; $lookAroundData.initiatedBy == $enum:switch_interruptInitiator.scheduler">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;NPC_PATRA_NA_MISTE_CINU_(VYTRZNOST)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="64538170" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$lookAroundData.stimulusKind == $enum:crime_stimulusKind.sound">
						<Sequence>
							<Function_crime_getBuddy origin="$this.id" buddy="$buddy" nodeLabel="46871055" />
							<Switch>
								<IfCondition failOnCondition="false" condition="$buddy ~= $__null">
									<Expression expressions="$metarole = &apos;NPC_REAGUJE_NA_ZVUK_(INFORMUJE_BUDDYHO)&apos;" />
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$lookAroundData.soundType == $enum:sound.bio_drunkeness">
									<Expression expressions="$metarole = &apos;NPC_REAGUJE_NA_ZVUK_BIO_OPILOST&apos;" />
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$lookAroundData.soundType == $enum:sound.bio_exhaustion">
									<Expression expressions="$metarole = &apos;NPC_REAGUJE_NA_ZVUK_BIO_UNAVA&apos;" />
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$lookAroundData.soundType == $enum:sound.bio_hunger">
									<Expression expressions="$metarole = &apos;NPC_REAGUJE_NA_ZVUK_BIO_HLAD&apos;" />
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$lookAroundData.soundType == $enum:sound.smell | &#10;$lookAroundData.soundType == $enum:sound.perfume">
									<Expression expressions="$metarole = &apos;NPC_REAGUJE_NA_PACH_UNIVERZAL&apos;" />
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$lookAroundData.soundType == $enum:sound.startled_critter">
									<Expression expressions="$metarole = &apos;NPC_REAGUJE_NA_ZVUK_ZVUK_PLASENI&apos;" />
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$lookAroundData.soundType == $enum:sound.dog_bark">
									<Expression expressions="$metarole = &apos;NPC_REAGUJE_NA_ZVUK_PES&apos;" />
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$lookAroundData.soundType == $enum:sound.combat">
									<Sequence>
										<Expression expressions="$lookAt = $__null" />
										<Selector>
											<Sequence>
												<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;crime_lastHitByPlayer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
													<LinkDataFilter tag="&apos;crime_lastHitByPlayer&apos;" condition="$__link_crime_lastHitByPlayer.kind == $enum:crime_attackKind.unarmed | &#10;$__link_crime_lastHitByPlayer.kind == $enum:crime_attackKind.armed" prune="true" negprune="unknown" Parent="" Child="" Data="" />
													<RangeFilter min="0.000000" max="$data:script_param[&apos;crime_combatSoundImmediateReactionMaxDistance&apos;].value" point="$lookAroundData.position" excludeRef="true" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
												</GraphSearch>
												<Expression expressions="$metarole = &apos;NPC_REAGUJE_NA_ZVUK_COMBAT&apos;" />
											</Sequence>
											<Expression expressions="$metarole = &apos;NPC_REAGUJE_NA_ZVUK_UNIVERZAL&apos;" />
										</Selector>
									</Sequence>
								</IfCondition>
								<DefaultBranch>
									<Sequence>
										<DetermineTrespassReaction Observer="$this.id" Target="$__player" Position="" ForceSemipublicReaction="true" ShouldUseVec3Position="false" TrespassAreaSevereness="$trespassAreaSevereness" TrespassArea="$trespassArea" Reaction="$playerIsTrespassing" ReactionSuppressed="$reactionSuppressed" />
										<IfElseCondition failOnCondition="false" condition="$playerIsTrespassing" saveVersion="2">
											<Then canSkip="1">
												<Expression expressions="$metarole = &apos;NPC_REAGUJE_NA_ZVUK_TRESPASS&apos;" />
											</Then>
											<Else canSkip="1">
												<Expression expressions="$metarole = &apos;NPC_REAGUJE_NA_ZVUK_UNIVERZAL&apos;" />
											</Else>
										</IfElseCondition>
									</Sequence>
								</DefaultBranch>
							</Switch>
							<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$lookAt" metarole="$metarole" priority="$enum:crime_barkPriority.important" nodeLabel="71845472" />
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$lookAroundData.stimulusKind == $enum:crime_stimulusKind.theft &amp; &#10;($lookAroundData.previousReaction ~= $enum:crime_reactionKind.scan | &#10; $lookAroundData.initiatedBy ~= $enum:switch_interruptInitiator.scheduler)">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;NPC_VIDI_UKRADENOU_VEC&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="53291701" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$lookAroundData.stimulusKind == $enum:crime_stimulusKind.corpse">
						<Function_crime_startBark_corpse corpse="$lookAroundData.information.perceivedWuid" corpseState="$lookAroundData.corpseState" nodeLabel="70802788" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$lookAroundData.stimulusKind == $enum:crime_stimulusKind.corpseMissing">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;STRAZ_VIDI_ABSENCI_MRTVOLY&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="31319272" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$lookAroundData.stimulusKind == $enum:crime_stimulusKind.corpseViolation">
						<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;NPC_VIDI_HRACE_JAK_HANOBI_MRTVOLU_(PRITEL)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="89338176" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$lookAroundData.stimulusKind == $enum:crime_stimulusKind.missingNpc">
						<Sequence>
							<IfElseCondition failOnCondition="false" condition="$lookAroundData.amIBuddy" saveVersion="2">
								<Then canSkip="1">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;BUDDY_SI_VSIML_ZMIZENI_NPC_A_JDE_HO_HLEDAT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="46252786" />
								</Then>
								<Else canSkip="1">
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;NPC_SI_VSIMLO_ZMIZENI_NPC_A_JDE_HO_HLEDAT&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="19469806" />
								</Else>
							</IfElseCondition>
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$lookAroundData.previousReaction == $enum:crime_reactionKind.scan &amp;  &#10;($lookAroundData.stimulusKind == $enum:crime_stimulusKind.shooter | &#10; $lookAroundData.stimulusKind == $enum:crime_stimulusKind.disturbance | &#10; $lookAroundData.stimulusKind == $enum:crime_stimulusKind.unknownShooter)">
						<IfElseCondition failOnCondition="false" condition="$lookAroundData.stimulusKind == $enum:crime_stimulusKind.shooter | &#10;$lookAroundData.stimulusKind == $enum:crime_stimulusKind.unknownShooter" saveVersion="2">
							<Then canSkip="1">
								<IfElseCondition failOnCondition="false" condition="$lookAroundData.directHit" saveVersion="2">
									<Then canSkip="1">
										<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;NPC_ROZPOZNAVA_STRELCE_PO_ZASAHU_(MISSILE)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="52091064" />
									</Then>
									<Else canSkip="1">
										<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;NPC_ROZPOZNAVA_STRELCE_PO_NEZASAHU_(MISSILE)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="90359747" />
									</Else>
								</IfElseCondition>
							</Then>
							<Else canSkip="1">
								<IfElseCondition failOnCondition="false" condition="$lookAroundData.information.label == &apos;disturbance&apos;" saveVersion="2">
									<Then canSkip="1">
										<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;NPC_ROZPOZNALO_VYTRZNIKA_(KAMINEK)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="15640261" />
									</Then>
									<Else canSkip="1">
										<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;NPC_NEROZPOZNALO_VYTRZNIKA_(KAMINEK)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="14610063" />
									</Else>
								</IfElseCondition>
							</Else>
						</IfElseCondition>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$lookAroundData.stimulusKind == $enum:crime_stimulusKind.animalAbuse">
						<Sequence>
							<Function_crime_getSoulArchetype soul="$lookAroundData.stimulusAnimalAbuse.victim" archetype="$animalAbuse_species" nodeLabel="52108242" />
							<IfElseCondition failOnCondition="false" condition="$lookAroundData.stimulusAnimalAbuse.isPoaching" saveVersion="2">
								<Then canSkip="1">
									<Sequence>
										<Function_crime_getAnimalContextFromString animal_archetype="$animalAbuse_species" animal_archetype_float="$dialogContext[&apos;poaching_animalSpecies&apos;]" nodeLabel="45269145" />
										<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="false" lookAt="$lookAroundData.stimulusAnimalAbuse.victim" metarole="&apos;HAJNY_VIDI_MRTVE_ZVIRE&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="80407061" />
									</Sequence>
								</Then>
								<Else canSkip="1">
									<Sequence>
										<Function_crime_getAnimalContextFromString animal_archetype="$animalAbuse_species" animal_archetype_float="$dialogContext[&apos;animalAbuse_species&apos;]" nodeLabel="63153760" />
										<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="false" lookAt="$lookAroundData.stimulusAnimalAbuse.victim" metarole="&apos;SVEDEK_VIDI_NAPADENI_ZVIRETE_NEVI_O_HRACI&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="97267087" />
									</Sequence>
								</Else>
							</IfElseCondition>
						</Sequence>
					</IfCondition>
					<DefaultBranch>
						<Success />
					</DefaultBranch>
				</Switch>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="animalAbuse_species" comment="" />
				<Variable name="buddy" comment="" />
				<Variable name="dialogContext" comment="" />
				<Variable name="lookAt" comment="" />
				<Variable name="metarole" comment="" />
				<Variable name="playerIsTrespassing" comment="" />
				<Variable name="reactionSuppressed" comment="" />
				<Variable name="trespassArea" comment="" />
				<Variable name="trespassAreaSevereness" comment="" />
				<Variable name="lookAroundData" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-120" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_crime_getBuddy hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_getBuddy>
								<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="only use combat bark when someone got hit at that position recently" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
														<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkDataFilter>
														<RangeFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</RangeFilter>
													</GraphSearch>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Sequence>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Selector>
										</Sequence>
									</IfCondition>
									<DefaultBranch>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DetermineTrespassReaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</DetermineTrespassReaction>
											<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Then>
												<Else>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Else>
											</IfElseCondition>
										</Sequence>
									</DefaultBranch>
								</Switch>
								<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_crimeBark>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_startBark_corpse hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_startBark_corpse>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="TODO: why is this here? can it ever happen?" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_crimeBark>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Then>
									<Else>
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
									</Else>
								</IfElseCondition>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_crimeBark>
										</Then>
										<Else>
											<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_crimeBark>
										</Else>
									</IfElseCondition>
								</Then>
								<Else>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_crimeBark>
										</Then>
										<Else>
											<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_crimeBark>
										</Else>
									</IfElseCondition>
								</Else>
							</IfElseCondition>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_crime_getSoulArchetype hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_getSoulArchetype>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_crime_getAnimalContextFromString hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_getAnimalContextFromString>
											<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_crimeBark>
										</Sequence>
									</Then>
									<Else>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_crime_getAnimalContextFromString hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_getAnimalContextFromString>
											<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_crimeBark>
										</Sequence>
									</Else>
								</IfElseCondition>
							</Sequence>
						</IfCondition>
						<DefaultBranch>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</DefaultBranch>
					</Switch>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>