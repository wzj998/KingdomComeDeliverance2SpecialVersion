<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="crime_trespass_playerEnteredBark" is_function="1">
		<Variables>
			<Variable name="dialogContext" type="_float" values="" isPersistent="0" form="associative" />
			<Variable name="now" type="_int64" values="" isPersistent="0" form="single" />
			<Variable name="npcCooldowns" type="crime:npcCooldowns" values="" isPersistent="0" form="single" />
			<Variable name="severenessInt" type="_int" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="counter" type="_int" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="isPaused" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="previousReaction" type="enum:crime_reactionKind" values="$enum:crime_reactionKind.unknown" isPersistent="0" form="single" requirementType="In" />
			<Variable name="trespassSevereness" type="enum:trespassLevel" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<WUIDFilter WUID="$this.id" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
						<LinkTagFilter tag="&apos;crime_npcCooldowns&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;crime_npcCooldowns&apos;" Quantifiers="Exists" Parent="" Child="" Data="$npcCooldowns" saveVersion="2" />
					</GraphSearch>
					<GetTime TimeType="GameTime" OutVar="$now" Delta="" />
					<IfElseCondition failOnCondition="false" condition="$previousReaction ~= $enum:crime_reactionKind.watchTrespass &amp; &#10;(  &#10;  $npcCooldowns.playerLostInTrespass == 0 | &#10;  $npcCooldowns.playerLostInTrespass + $data:script_param[&apos;crime_playerLostInTrespassCooldown&apos;].value &lt; $now &#10;) &amp; &#10;($counter &gt; 1 | $isPaused)" saveVersion="2">
						<Then canSkip="1">
							<IfCondition failOnCondition="false" condition="$trespassSevereness &gt;= $enum:trespassLevel.personal">
								<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_VIDI_HRACE_V_TRESPASSU_OPAKOVANE&apos;" priority="$enum:crime_barkPriority.addressingPlayer" nodeLabel="54124535" />
							</IfCondition>
						</Then>
						<Else canSkip="1">
							<Sequence>
								<Function_crime_trespassSeverenessToInt trespassSevereness="$trespassSevereness" trespassSeverenessInt="$severenessInt" nodeLabel="48991654" />
								<Expression expressions="$dialogContext[&apos;trespassSevereness&apos;] = $severenessInt &#10; &#10;$dialogContext[&apos;severeness_semipublic&apos;] = 0 &#10;$dialogContext[&apos;severeness_semipersonal&apos;] = 1 &#10;$dialogContext[&apos;severeness_personal&apos;] = 2 &#10;$dialogContext[&apos;severeness_prohibited&apos;] = 3" />
								<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="$dialogContext" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_VIDI_HRACE_V_TRESPASSU&apos;" priority="$enum:crime_barkPriority.addressingPlayer" nodeLabel="66027359" />
							</Sequence>
						</Else>
					</IfElseCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="dialogContext" comment="" />
				<Variable name="now" comment="" />
				<Variable name="npcCooldowns" comment="" />
				<Variable name="severenessInt" comment="" />
				<Variable name="counter" comment="" />
				<Variable name="isPaused" comment="" />
				<Variable name="previousReaction" comment="" />
				<Variable name="trespassSevereness" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WUIDFilter>
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetTime>
						<IfElseCondition hasInputBreakpoint="0" comment="when trespassing again, but this has to ignore situations when NPC switches interrupts priority from semipersonal to personal" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_crimeBark>
								</IfCondition>
							</Then>
							<Else>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_crime_trespassSeverenessToInt hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_trespassSeverenessToInt>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_crimeBark>
								</Sequence>
							</Else>
						</IfElseCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>