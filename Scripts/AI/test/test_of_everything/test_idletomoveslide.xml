<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="test_idleToMoveSlide" is_function="0">
		<Variables>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="followFormationParams" type="followFormationParams" values="" isPersistent="0" form="single" />
			<Variable name="trigger" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;trigger&apos;" prune="true" negprune="unknown" Parent="" Child="$trigger" Data="" />
					</GraphSearch>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;start&apos;" prune="true" negprune="unknown" Parent="" Child="$destination" Data="" />
					</GraphSearch>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;leader&apos;" prune="true" negprune="unknown" Parent="" Child="$followFormationParams.formation.leader" Data="" />
					</GraphSearch>
					<Expression expressions="$followFormationParams.formation.type = &apos;zachranaPtacka_rideToRatborSnake&apos; &#10;$followFormationParams.formation.speedLimit = $enum:movementSpeed.walk" />
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<IfElseCondition failOnCondition="false" condition="$followFormationParams.formation.leader == $this.id" saveVersion="2">
					<Then canSkip="1">
						<AreaPresenceGate aiObjects="$__player" area="$trigger" amount="AtLeastOne" presence="Present" RunLogic="Halt">
							<Loop count="-1">
								<Sequence>
									<Function_moveInFormation_leader destination="$destination" followEnabled="false" followFormationParams="$followFormationParams" pathOffset="0.000000" successDistance="0.000000" nodeLabel="61846585" />
									<GraphSearch Origin="$destination" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;next&apos;" prune="true" negprune="unknown" Parent="" Child="$destination" Data="" />
									</GraphSearch>
								</Sequence>
							</Loop>
						</AreaPresenceGate>
					</Then>
					<Else canSkip="1">
						<Function_moveInFormation_slave followFormationParams="$followFormationParams" nodeLabel="41840277" />
					</Else>
				</IfElseCondition>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="destination" comment="" />
				<Variable name="followFormationParams" comment="" />
				<Variable name="trigger" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-50" editorPosY="-50" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</Sequence>
				</OnInit>
				<Behavior>
					<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_moveInFormation_leader hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_moveInFormation_leader>
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
									</Sequence>
								</Loop>
							</AreaPresenceGate>
						</Then>
						<Else>
							<Function_moveInFormation_slave hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_moveInFormation_slave>
						</Else>
					</IfElseCondition>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>