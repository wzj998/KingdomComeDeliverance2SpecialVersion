<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="test_rideHorse" is_function="0">
		<Variables>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="wait" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;destination&apos;" prune="true" negprune="unknown" Parent="" Child="$destination" Data="" />
					</GraphSearch>
					<Parallel successMode="All" failureMode="Any">
						<HorseUsageElement horse="$horse" decisionLabel="tour_horse" useDecision="true" enabled="true" saveVersion="2">
							<Search canSkip="1">
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									<IsHorseAvailableFilter reservationHolder="" Source="Child" prune="true" negprune="unknown" Parent="" Child="$horse" />
								</GraphSearch>
							</Search>
							<Exec canSkip="1">
								<StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
									<ContinuousSwitch>
										<IfCondition failOnCondition="false" condition="!$wait">
											<Sequence>
												<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</IfCondition>
										<IfCondition failOnCondition="false" condition="true">
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
										</IfCondition>
									</ContinuousSwitch>
								</StanceElement>
							</Exec>
						</HorseUsageElement>
						<SuppressFailure>
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;waitForPlayer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								</GraphSearch>
								<Loop count="-1">
									<Sequence>
										<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="5.000000" High="5.000000" Negation="true" OpenInMiddle="false" RunLogic="Halt">
											<Sequence>
												<Expression expressions="$wait = true" />
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</DistanceGate>
										<Expression expressions="$wait = false" />
									</Sequence>
								</Loop>
							</Sequence>
						</SuppressFailure>
					</Parallel>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
				<LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
				<IsHorseAvailableFilter reservationHolder="" Source="Child" prune="true" negprune="unknown" Parent="" Child="$horse" />
			</GraphSearch>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="destination" comment="" />
				<Variable name="horse" comment="" />
				<Variable name="wait" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<HorseUsageElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Search>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<IsHorseAvailableFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</IsHorseAvailableFilter>
									</GraphSearch>
								</Search>
								<Exec>
									<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Move>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</IfCondition>
										</ContinuousSwitch>
									</StanceElement>
								</Exec>
							</HorseUsageElement>
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</DistanceGate>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Sequence>
									</Loop>
								</Sequence>
							</SuppressFailure>
						</Parallel>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<GraphSearch editorPosX="270" editorPosY="-360" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</LinkTagFilter>
					<IsHorseAvailableFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</IsHorseAvailableFilter>
				</GraphSearch>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>