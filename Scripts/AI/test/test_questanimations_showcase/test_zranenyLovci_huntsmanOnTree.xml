<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="test_questanimations_showcase_zranenyLovci_huntsmanOnTree" is_function="0">
    <Variables>
      <Variable name="finished" type="_bool" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="stringRef" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <Parallel successMode="Any" failureMode="Any">
            <UrgencyDecorator Urgency="Slow">
              <ContinuousSwitch>
                <IfCondition failOnCondition="false" condition="$stringRef == &apos;scaredOnTree&apos;">
                  <Sequence>
                    <UnstanceAction unstance="QuestHunterInjuryIdleScared" locationObject="$__object.id" slaveObject="" />
                    <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                  </Sequence>
                </IfCondition>
                <IfCondition failOnCondition="false" condition="$stringRef == &apos;calmOnTree&apos;">
                  <Sequence>
                    <UnstanceAction unstance="QuestHunterInjuryIdle" locationObject="$__object.id" slaveObject="" />
                    <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                  </Sequence>
                </IfCondition>
                <IfCondition failOnCondition="false" condition="$stringRef == &apos;jumpDown&apos;">
                  <Sequence>
                    <UnstanceElement unstance="QuestHunterInjuryIdle" locationObject="$__object.id" slaveObject="" enabled="true">
                      <AnimationAction fragment="&apos;Quest_HunterInjury_jump&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
                    </UnstanceElement>
                    <Expression expressions="$finished = true" />
                    <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                  </Sequence>
                </IfCondition>
              </ContinuousSwitch>
            </UrgencyDecorator>
            <IfGate atomic="false" condition="$finished" RunLogic="KeepRunning">
              <Success />
            </IfGate>
          </Parallel>
          <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="stringRef" EventSet="DialogNotifications">
      <Variables>
        <Variable name="finished" comment="" />
        <Variable name="stringRef" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </UnstanceAction>
                      <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Wait>
                    </Sequence>
                  </IfCondition>
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </UnstanceAction>
                      <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Wait>
                    </Sequence>
                  </IfCondition>
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </AnimationAction>
                      </UnstanceElement>
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                      <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Wait>
                    </Sequence>
                  </IfCondition>
                </ContinuousSwitch>
              </UrgencyDecorator>
              <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Success>
              </IfGate>
            </Parallel>
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>