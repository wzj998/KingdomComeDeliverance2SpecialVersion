<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="Fun" is_function="0">
    <Variables>
      <Variable name="area" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="behavior" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="fragmentName" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="rand" type="_int" values="" isPersistent="0" form="single" />
      <Variable name="targetPosition" type="vec3" values="" isPersistent="0" form="single" />
      <Variable name="targetSo" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;area&apos;" prune="true" negprune="unknown" Parent="" Child="$area" Data="" />
          </GraphSearch>
          <Sequence>
            <GenerateRandomInteger lowerBoundary="0" upperBoundary="1" result="$rand" />
            <IfElseCondition failOnCondition="false" condition="$rand==0" saveVersion="2">
              <Then canSkip="1">
                <Sequence>
                  <GetDogPointSo TargetDog="$this.id" SearchedArea="$area" SmartObjectOut="$targetSo" BehaviorName="$behavior" />
                  <CallBehavior Target="$targetSo" BehaviorName="$behavior" ignoreDropUnloading="false" nodeLabel="75292945" />
                </Sequence>
              </Then>
              <Else canSkip="1">
                <Sequence>
                  <GetDogPointNormal TargetDog="$this.id" SearchedArea="$area" PointPositionOut="$targetPosition" PointDirectionOut="" FragmentNameOut="$fragmentName" />
                  <Move stopWithinDistance="0.050000" stopDistanceVariation="0.010000" rayCasteFlee="false" successDistance="0.060000" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$targetPosition" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
                  <AnimationAction fragment="$fragmentName" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
                  <Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
                </Sequence>
              </Else>
            </IfElseCondition>
          </Sequence>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="area" comment="" />
        <Variable name="behavior" comment="" />
        <Variable name="fragmentName" comment="" />
        <Variable name="rand" comment="" />
        <Variable name="targetPosition" comment="" />
        <Variable name="targetSo" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-900" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="1">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <GenerateRandomInteger hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </GenerateRandomInteger>
              <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <GetDogPointSo hasInputBreakpoint="0" comment="" breakpointFlags="1">
                      <OutputBreakpoints />
                    </GetDogPointSo>
                    <CallBehavior hasInputBreakpoint="0" comment="" breakpointFlags="1">
                      <OutputBreakpoints />
                    </CallBehavior>
                  </Sequence>
                </Then>
                <Else>
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <GetDogPointNormal hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </GetDogPointNormal>
                    <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Move>
                    <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AnimationAction>
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </Sequence>
                </Else>
              </IfElseCondition>
            </Sequence>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>