<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="test_allowSituations" is_function="0">
    <Variables>
      <Variable name="currentPoint" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="moveParams" type="additionalMoveParams" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <ExecuteLua code="local soul = XGenAIModule.GetEntityByWUID(data.this.id).soul &#10;Dump(soul)" />
          <Expression expressions="$moveParams.allowSituations = true" />
          <GraphSearch Origin="$__area.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;pnt&apos;" prune="true" negprune="unknown" Parent="" Child="$currentPoint" Data="" />
          </GraphSearch>
          <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" destinationSpecification="$currentPoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="$moveParams" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="currentPoint" comment="" />
        <Variable name="moveParams" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </ExecuteLua>
            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Move>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="test_situation" is_function="0">
    <Variables>
      <Variable name="currentPoint" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="moveParams" type="additionalMoveParams" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <LogToConsole LogLevel="Error" Message="&apos;[;$this.id;] called test_situation on $__area.id&apos;" />
          <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="currentPoint" comment="" />
        <Variable name="moveParams" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="10" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </LogToConsole>
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="test_situation_2" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <LogToConsole LogLevel="Error" Message="&apos;[;$this.id;] called test_situation_2 on $__area.id&apos;" />
          <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </LogToConsole>
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="test_situation_1" is_function="0">
    <Variables>
      <Variable name="currentPoint" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="moveParams" type="additionalMoveParams" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <LogToConsole LogLevel="Error" Message="&apos;[;$this.id;] called test_situation_1 on $__area.id&apos;" />
          <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="currentPoint" comment="" />
        <Variable name="moveParams" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="10" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </LogToConsole>
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="test_situation_blocking" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <EntityContext context="DisableSituationParticipation" target="$this.id">
          <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
        </EntityContext>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
          </EntityContext>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="test_situationDialogue_initiator" is_function="0">
    <Variables>
      <Variable name="recipient" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <IfElseCondition failOnCondition="false" condition="$__sit_roleName == &apos;test_situation_npc_1&apos;" saveVersion="2">
            <Then canSkip="1">
              <Expression expressions="$recipient = $__sit_roleHolders[&apos;test_situation_npc_2&apos;].id" />
            </Then>
            <Else canSkip="1">
              <Expression expressions="$recipient = $__sit_roleHolders[&apos;test_situation_npc_1&apos;].id" />
            </Else>
          </IfElseCondition>
          <SuppressFailure>
            <Synchronize SemaphoreCount="2" InsideTimerValue="&apos;10s&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;test_situationDialogueLock&apos;" RunLogic="KeepRunning">
              <Function_speech_dialogInitiator alias="" context="" customParameters="" metarole="&apos;GOSSIP&apos;" preset="$enum:dialogPreset.ingame" recipient="$recipient" nodeLabel="12516246" />
            </Synchronize>
          </SuppressFailure>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer>
      <LuaWrapper onEnter="entity.soul:AddMetaRoleByName(&apos;GOSSIP&apos;)" onExit="entity.soul:RemoveMetaRoleByName(&apos;GOSSIP&apos;)" />
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="recipient" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Then>
              <Else>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Else>
            </IfElseCondition>
            <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Function_speech_dialogInitiator>
              </Synchronize>
            </SuppressFailure>
          </Sequence>
        </Behavior>
      </Root>
      <Forest>
        <LuaWrapper editorPosX="220" editorPosY="-200" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
        </LuaWrapper>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="test_situationDialogue_receiver" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <SuppressFailure>
          <Synchronize SemaphoreCount="2" InsideTimerValue="&apos;10s&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;test_situationDialogueLock&apos;" RunLogic="Halt">
            <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
          </Synchronize>
        </SuppressFailure>
      </Behavior>
    </Root>
    <ForestContainer>
      <LuaWrapper onEnter="entity.soul:AddMetaRoleByName(&apos;GOSSIP&apos;)" onExit="entity.soul:RemoveMetaRoleByName(&apos;GOSSIP&apos;)" />
    </ForestContainer>
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root editorPosX="30" editorPosY="-190" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Synchronize hasInputBreakpoint="0" comment="Wait until initiator&apos;s synchronize finishes." breakpointFlags="0">
              <OutputBreakpoints />
              <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Wait>
            </Synchronize>
          </SuppressFailure>
        </Behavior>
      </Root>
      <Forest>
        <LuaWrapper editorPosX="390" editorPosY="-430" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
        </LuaWrapper>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="test_beggar" is_function="0">
    <Variables>
      <Variable name="animLockName" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="beggarSpot" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="beggarStyle" type="_string" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;situation_begSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$beggarSpot" Data="$beggarStyle" />
          </GraphSearch>
          <Concatenation OutString="$animLockName" Pattern="&apos;beggarLock_$__sit_contextVar&apos;" />
          <IfElseCondition failOnCondition="false" condition="$beggarStyle == &apos;kneeling&apos;" saveVersion="2">
            <Then canSkip="1">
              <UnstanceElement unstance="BeggarKneeling" locationObject="$beggarSpot" slaveObject="">
                <JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="$animLockName" lockCount="2" timeout="&apos;-1&apos;" fragment="&apos;BeggarTake&apos;" tags="&apos;beggarKneel&apos;" eventReferenceObject="" alignObject="$beggarSpot" slaveObject="" />
              </UnstanceElement>
            </Then>
            <Else canSkip="1">
              <IfCondition failOnCondition="false" condition="$beggarStyle == &apos;laying&apos;">
                <UnstanceElement unstance="BeggarLaying" locationObject="$beggarSpot" slaveObject="">
                  <JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="$animLockName" lockCount="2" timeout="&apos;-1&apos;" fragment="&apos;BeggarTake&apos;" tags="&apos;beggar&apos;" eventReferenceObject="" alignObject="$beggarSpot" slaveObject="" />
                </UnstanceElement>
              </IfCondition>
            </Else>
          </IfElseCondition>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="animLockName" comment="" />
        <Variable name="beggarSpot" comment="" />
        <Variable name="beggarStyle" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Concatenation>
            <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="4">
                    <OutputBreakpoints />
                    <OutputBreakpoints />
                  </JoinedAnimationAction>
                </UnstanceElement>
              </Then>
              <Else>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <OutputBreakpoints />
                    </JoinedAnimationAction>
                  </UnstanceElement>
                </IfCondition>
              </Else>
            </IfElseCondition>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="test_beggarGiver" is_function="0">
    <Variables>
      <Variable name="animLockName" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="beggarData" type="beggarData" values="" isPersistent="0" form="single" />
      <Variable name="beggarRef" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Sequence>
          <Expression expressions="$beggarRef = $__sit_roleHolders[&apos;test_npc_beggar&apos;].id" />
          <Concatenation OutString="$animLockName" Pattern="&apos;situation_;$__sit_contextVar&apos;" />
          <AddLink From="$beggarRef" To="$this.id" Tag="&apos;situation_beggarRequest&apos;" Data="$animLockName" LinkOpHandleMode="Error" />
        </Sequence>
      </OnInit>
      <Behavior canSkip="1">
        <Sequence>
          <LogToConsole LogLevel="Error" Message="&apos;[$this.id;] created request $animLockName&apos;" />
          <GraphSearch Origin="$beggarRef" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;situation_beggarData&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;situation_beggarData&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$beggarData" />
          </GraphSearch>
          <LogToConsole LogLevel="Error" Message="&apos;[$this.id;] beggarData ( $beggarData.type , $beggarData.spot;)&apos;" />
          <IfElseCondition failOnCondition="false" condition="$beggarData.type == &apos;Kneeling&apos;" saveVersion="2">
            <Then canSkip="1">
              <JoinedAnimationAction requiresMovement="true" lockContext="$__object.id" lockName="$animLockName" lockCount="2" timeout="&apos;-1&apos;" fragment="&apos;BeggarGive&apos;" tags="&apos;beggarKneeling&apos;" eventReferenceObject="" alignObject="$beggarData.spot" slaveObject="" />
            </Then>
            <Else canSkip="1">
              <IfCondition failOnCondition="false" condition="$beggarData.type == &apos;Laying&apos;">
                <JoinedAnimationAction requiresMovement="true" lockContext="$__object.id" lockName="$animLockName" lockCount="2" timeout="&apos;-1&apos;" fragment="&apos;BeggarGive&apos;" tags="&apos;beggarLaying&apos;" eventReferenceObject="" alignObject="$beggarData.spot" slaveObject="" />
              </IfCondition>
            </Else>
          </IfElseCondition>
          <RemoveLink From="$beggarRef" To="$this.id" Tag="&apos;situation_beggarRequest&apos;" LinkOpHandleMode="Error" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer>
      <Sequence>
        <Expression expressions="$beggarRef = $__sit_roleHolders[&apos;test_npc_beggar&apos;].id" />
        <Sequence>
          <GraphSearch Origin="$beggarRef" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;situation_begSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$beggarSpot" Data="$beggarStyle" />
          </GraphSearch>
        </Sequence>
      </Sequence>
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="animLockName" comment="" />
        <Variable name="beggarData" comment="" />
        <Variable name="beggarRef" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-20" editorPosY="30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
            <Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Concatenation>
            <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </AddLink>
          </Sequence>
        </OnInit>
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </LogToConsole>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </LogToConsole>
            <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <OutputBreakpoints />
                </JoinedAnimationAction>
              </Then>
              <Else>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <OutputBreakpoints />
                  </JoinedAnimationAction>
                </IfCondition>
              </Else>
            </IfElseCondition>
            <RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </RemoveLink>
          </Sequence>
        </Behavior>
      </Root>
      <Forest>
        <Sequence editorPosX="1160" editorPosY="-340" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
          <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Expression>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
          </Sequence>
        </Sequence>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="test_randomWalk" is_function="0">
    <Variables>
      <Variable name="currentPoint" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="$__area.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;next&apos;" prune="true" negprune="unknown" Parent="" Child="$currentPoint" Data="" />
          </GraphSearch>
          <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$currentPoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="currentPoint" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Move>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="test_wait" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root editorPosX="-60" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Wait>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>
