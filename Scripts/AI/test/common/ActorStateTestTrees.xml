<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="TenseCircumstance" is_function="0">
    <Variables>
      <Variable name="MessageData" type="_string" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Loop count="-1">
          <ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$MessageData" senderInfo="" inbox="&apos;battle_TestControlMB&apos;" condition="" answerVar="">
            <Switch>
              <IfCondition failOnCondition="false" condition="$MessageData==&apos;requestTenseCircumstance&apos;">
                <TenseCircumstanceBarrier RunLogic="Halt">
                  <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                </TenseCircumstanceBarrier>
              </IfCondition>
            </Switch>
          </ProcessMessage>
        </Loop>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="MessageData" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-430" editorPosY="80" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <TenseCircumstanceBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </TenseCircumstanceBarrier>
                </IfCondition>
              </Switch>
            </ProcessMessage>
          </Loop>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="MovePoint2Point" is_function="0">
    <Variables>
      <Variable name="context" type="_int" values="0" isPersistent="0" form="single" />
      <Variable name="contextValue" type="_int" values="0" isPersistent="0" form="single" />
      <Variable name="item" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="looktarget" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="looktargetName" type="_string" values="&apos;looktarget1&apos;" isPersistent="0" form="single" />
      <Variable name="speed" type="_int" values="1" isPersistent="0" form="single" />
      <Variable name="startTiming" type="_int" values="2000" isPersistent="0" form="single" />
      <Variable name="targetName" type="_string" values="&apos;target1&apos;" isPersistent="0" form="single" />
      <Variable name="targetpt" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <SuppressFailure>
            <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
              <LinkDataFilter tag="&apos;benchUser&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$startTiming" />
            </GraphSearch>
          </SuppressFailure>
          <SuppressFailure>
            <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
              <LinkTagFilter tag="$looktargetName" prune="true" negprune="unknown" Parent="" Child="$looktarget" Data="" />
            </GraphSearch>
          </SuppressFailure>
          <SuppressFailure>
            <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
              <LinkDataFilter tag="&apos;tavernChicken&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$speed" />
            </GraphSearch>
          </SuppressFailure>
          <SuppressFailure>
            <Sequence>
              <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                <LinkDataFilter tag="&apos;tavernCheering&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$contextValue" />
              </GraphSearch>
            </Sequence>
          </SuppressFailure>
          <Wait duration="$startTiming" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
          <Parallel successMode="All" failureMode="All">
            <Sequence>
              <IfCondition failOnCondition="false" condition="$contextValue==1">
                <EntityContext context="actorCondition_forcedArmored" target="">
                  <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                </EntityContext>
              </IfCondition>
              <IfCondition failOnCondition="false" condition="$contextValue==2">
                <EntityContext context="actorCondition_forcedInjured" target="">
                  <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                </EntityContext>
              </IfCondition>
              <IfCondition failOnCondition="false" condition="$contextValue==3">
                <Sequence>
                  <CreateItem ItemGUID="&apos;bd3b7884-dca8-41f8-8ea8-393a11474554&apos;" Amount="1" CreatedItem="$item" Target="$this.id" NotifyUI="false" />
                  <EquipItem item="$item" Target="" />
                  <UrgencyDecorator Urgency="Instant">
                    <DrawAction WeaponSet="Oversized" fullBody="false" tags="" useSelectedWeaponSet="false" />
                  </UrgencyDecorator>
                  <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                </Sequence>
              </IfCondition>
              <IfCondition failOnCondition="false" condition="$contextValue==4">
                <EntityContext context="actorCondition_forcedDrunkenness" target="">
                  <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                </EntityContext>
              </IfCondition>
            </Sequence>
            <Loop count="-1">
              <Sequence>
                <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                  <LinkTagFilter tag="$targetName" prune="true" negprune="unknown" Parent="" Child="$targetpt" Data="" />
                </GraphSearch>
                <Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                <Parallel successMode="All" failureMode="All">
                  <ForceLook LookTarget="$looktarget" DisableVariations="false">
                    <Wait duration="&apos;6s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                  </ForceLook>
                  <IfElseCondition failOnCondition="false" condition="$speed==1" saveVersion="2">
                    <Then canSkip="1">
                      <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$targetpt" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
                    </Then>
                    <Else canSkip="1">
                      <IfElseCondition failOnCondition="false" condition="$speed==2" saveVersion="2">
                        <Then canSkip="1">
                          <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$targetpt" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
                        </Then>
                        <Else canSkip="1">
                          <IfElseCondition failOnCondition="false" condition="$speed==3" saveVersion="2">
                            <Then canSkip="1">
                              <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$targetpt" destinationSpecification2="" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
                            </Then>
                            <Else canSkip="1">
                              <IfElseCondition failOnCondition="false" condition="$speed==4" saveVersion="2">
                                <Then canSkip="1">
                                  <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$targetpt" destinationSpecification2="" destinationSpecification3="" speed="Dash" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
                                </Then>
                                <Else canSkip="1">
                                  <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$targetpt" destinationSpecification2="" destinationSpecification3="" speed="FastRun" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
                                </Else>
                              </IfElseCondition>
                            </Else>
                          </IfElseCondition>
                        </Else>
                      </IfElseCondition>
                    </Else>
                  </IfElseCondition>
                </Parallel>
                <Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                <IfElseCondition failOnCondition="false" condition="$targetName==&apos;target1&apos;" saveVersion="2">
                  <Then canSkip="1">
                    <SetVariable variable="$targetName" script="" values="&apos;target2&apos;" />
                  </Then>
                  <Else canSkip="1">
                    <SetVariable variable="$targetName" script="" values="&apos;target1&apos;" />
                  </Else>
                </IfElseCondition>
                <IfElseCondition failOnCondition="false" condition="$looktargetName==&apos;looktarget1&apos;" saveVersion="2">
                  <Then canSkip="1">
                    <SetVariable variable="$looktargetName" script="" values="&apos;looktarget2&apos;" />
                  </Then>
                  <Else canSkip="1">
                    <SetVariable variable="$looktargetName" script="" values="&apos;looktarget1&apos;" />
                  </Else>
                </IfElseCondition>
              </Sequence>
            </Loop>
          </Parallel>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer>
      <ExactMove directionType="AlignWithEntity" directionSpecification="$targetpt" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$targetpt" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="context" comment="" />
        <Variable name="contextValue" comment="" />
        <Variable name="item" comment="" />
        <Variable name="looktarget" comment="" />
        <Variable name="looktargetName" comment="" />
        <Variable name="speed" comment="" />
        <Variable name="startTiming" comment="" />
        <Variable name="targetName" comment="" />
        <Variable name="targetpt" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </LinkDataFilter>
              </GraphSearch>
            </SuppressFailure>
            <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </LinkTagFilter>
              </GraphSearch>
            </SuppressFailure>
            <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </LinkDataFilter>
              </GraphSearch>
            </SuppressFailure>
            <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </LinkDataFilter>
                </GraphSearch>
              </Sequence>
            </SuppressFailure>
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
            <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="1">
                <OutputBreakpoints>
                  <Breakpoint PortIndex="1" />
                </OutputBreakpoints>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </EntityContext>
                </IfCondition>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </EntityContext>
                </IfCondition>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <CreateItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </CreateItem>
                    <EquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </EquipItem>
                    <UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </DrawAction>
                    </UrgencyDecorator>
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </Sequence>
                </IfCondition>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </EntityContext>
                </IfCondition>
              </Sequence>
              <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </LinkTagFilter>
                  </GraphSearch>
                  <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Wait>
                  <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Wait>
                    </ForceLook>
                    <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                      <OutputBreakpoints />
                      <Then>
                        <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Move>
                      </Then>
                      <Else>
                        <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                          <OutputBreakpoints />
                          <Then>
                            <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Move>
                          </Then>
                          <Else>
                            <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                              <OutputBreakpoints />
                              <Then>
                                <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </Move>
                              </Then>
                              <Else>
                                <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                                  <OutputBreakpoints />
                                  <Then>
                                    <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                      <OutputBreakpoints />
                                    </Move>
                                  </Then>
                                  <Else>
                                    <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                      <OutputBreakpoints />
                                    </Move>
                                  </Else>
                                </IfElseCondition>
                              </Else>
                            </IfElseCondition>
                          </Else>
                        </IfElseCondition>
                      </Else>
                    </IfElseCondition>
                  </Parallel>
                  <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Wait>
                  <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <SetVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </SetVariable>
                    </Then>
                    <Else>
                      <SetVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </SetVariable>
                    </Else>
                  </IfElseCondition>
                  <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <SetVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </SetVariable>
                    </Then>
                    <Else>
                      <SetVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </SetVariable>
                    </Else>
                  </IfElseCondition>
                </Sequence>
              </Loop>
            </Parallel>
          </Sequence>
        </Behavior>
      </Root>
      <Forest>
        <ExactMove editorPosX="1670" editorPosY="80" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
        </ExactMove>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="MovePoint2Sit" is_function="0">
    <Variables>
      <Variable name="startTiming" type="_int" values="2000" isPersistent="0" form="single" />
      <Variable name="targetpt" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Loop count="-1">
          <Sequence>
            <SuppressFailure>
              <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                <LinkDataFilter tag="&apos;benchUser&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$startTiming" />
              </GraphSearch>
            </SuppressFailure>
            <Wait duration="$startTiming" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
            <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
              <LinkTagFilter tag="&apos;sittarget&apos;" prune="true" negprune="unknown" Parent="" Child="$targetpt" Data="" />
            </GraphSearch>
            <StanceElement smartObject="$targetpt" stance="sitting" allowAny="false">
              <Sequence>
                <WaitAction />
                <Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
              </Sequence>
            </StanceElement>
            <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
              <LinkTagFilter tag="&apos;target1&apos;" prune="true" negprune="unknown" Parent="" Child="$targetpt" Data="" />
            </GraphSearch>
            <WaitAction />
            <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$targetpt" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
            <Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
          </Sequence>
        </Loop>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="startTiming" comment="" />
        <Variable name="targetpt" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </LinkDataFilter>
                </GraphSearch>
              </SuppressFailure>
              <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Wait>
              <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </LinkTagFilter>
              </GraphSearch>
              <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </WaitAction>
                  <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Wait>
                </Sequence>
              </StanceElement>
              <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </LinkTagFilter>
              </GraphSearch>
              <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </WaitAction>
              <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Move>
              <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Wait>
            </Sequence>
          </Loop>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="MoveOnHorse" is_function="0">
    <Variables>
      <Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="targetpt" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Loop count="-1">
          <Sequence>
            <HorseUsageElement horse="$horse" decisionLabel="Label1" saveVersion="2">
              <Search canSkip="1">
                <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                  <LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
                </GraphSearch>
              </Search>
              <Exec canSkip="1">
                <StanceElement smartObject="$horse" stance="horse" allowAny="false">
                  <Sequence>
                    <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                      <LinkTagFilter tag="&apos;target1&apos;" prune="true" negprune="unknown" Parent="" Child="$targetpt" Data="" />
                    </GraphSearch>
                    <WaitAction />
                    <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$targetpt" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
                  </Sequence>
                </StanceElement>
              </Exec>
            </HorseUsageElement>
            <StanceElement smartObject="" stance="standing" allowAny="false">
              <Sequence>
                <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                  <LinkTagFilter tag="&apos;target2&apos;" prune="true" negprune="unknown" Parent="" Child="$targetpt" Data="" />
                </GraphSearch>
                <SuppressFailure>
                  <WaitAction />
                </SuppressFailure>
                <Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$targetpt" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
                <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
              </Sequence>
            </StanceElement>
          </Sequence>
        </Loop>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="horse" comment="" />
        <Variable name="targetpt" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <HorseUsageElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Search>
                  <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </LinkTagFilter>
                  </GraphSearch>
                </Search>
                <Exec>
                  <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </LinkTagFilter>
                      </GraphSearch>
                      <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </WaitAction>
                      <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Move>
                    </Sequence>
                  </StanceElement>
                </Exec>
              </HorseUsageElement>
              <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </LinkTagFilter>
                  </GraphSearch>
                  <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </WaitAction>
                  </SuppressFailure>
                  <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Wait>
                  <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Move>
                  <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Wait>
                </Sequence>
              </StanceElement>
            </Sequence>
          </Loop>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="TestHalberd" is_function="0">
    <Variables>
      <Variable name="halberd" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="slot" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <HandContentElement hand="Right" item="$halberd" allowAny="false" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
          <Search canSkip="1">
            <Sequence>
              <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                <AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$slot" />
              </GraphSearch>
              <GetItemInSlot slot="$slot" useHomeItem="true" item="$halberd" />
            </Sequence>
          </Search>
          <Exec canSkip="1">
            <Sequence>
              <WaitAction />
              <Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
              <MeleeGuardAutomationDecorator GuardMode="automate" active="true">
                <WeaponAutomationDecorator WeaponChange="none" active="true">
                  <MeleeOffenseAutomationDecorator active="true">
                    <CombatAction TargetNPC="$__player" RelationOverride="Hostile" />
                  </MeleeOffenseAutomationDecorator>
                </WeaponAutomationDecorator>
              </MeleeGuardAutomationDecorator>
              <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
            </Sequence>
          </Exec>
        </HandContentElement>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="halberd" comment="" />
        <Variable name="slot" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Search>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </AnyLinkFilter>
                </GraphSearch>
                <GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </GetItemInSlot>
              </Sequence>
            </Search>
            <Exec>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </WaitAction>
                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Wait>
                <MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </CombatAction>
                    </MeleeOffenseAutomationDecorator>
                  </WeaponAutomationDecorator>
                </MeleeGuardAutomationDecorator>
                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Wait>
              </Sequence>
            </Exec>
          </HandContentElement>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="LookOnTarget" is_function="0">
    <Variables>
      <Variable name="targetPoint" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;targetPoint&apos;" prune="true" negprune="unknown" Parent="" Child="$targetPoint" Data="" />
          </GraphSearch>
          <While doFail="false" propagateChildFail="false" condition="true">
            <Sequence>
              <ForceLook LookTarget="$targetPoint" DisableVariations="false">
                <Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
              </ForceLook>
              <Wait duration="&apos;50s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
            </Sequence>
          </While>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="targetPoint" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Wait>
                </ForceLook>
                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Wait>
              </Sequence>
            </While>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="Default" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <WaitAction />
          <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </WaitAction>
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="IdleTurns" is_function="0">
    <Variables>
      <Variable name="context" type="_int" values="" isPersistent="0" form="single" />
      <Variable name="contextValue" type="_int" values="" isPersistent="0" form="single" />
      <Variable name="item" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <SuppressFailure>
            <Sequence>
              <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                <LinkDataFilter tag="&apos;tavernCheering&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$contextValue" />
              </GraphSearch>
            </Sequence>
          </SuppressFailure>
          <Parallel successMode="Any" failureMode="Any">
            <Sequence>
              <IfCondition failOnCondition="false" condition="$contextValue==1">
                <EntityContext context="actorCondition_forcedArmored" target="">
                  <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                </EntityContext>
              </IfCondition>
              <IfCondition failOnCondition="false" condition="$contextValue==2">
                <EntityContext context="actorCondition_forcedInjured" target="">
                  <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                </EntityContext>
              </IfCondition>
              <IfCondition failOnCondition="false" condition="$contextValue==3">
                <Sequence>
                  <CreateItem ItemGUID="&apos;bd3b7884-dca8-41f8-8ea8-393a11474554&apos;" Amount="1" CreatedItem="$item" Target="$this.id" NotifyUI="false" />
                  <EquipItem item="$item" Target="" />
                  <UrgencyDecorator Urgency="Instant">
                    <DrawAction WeaponSet="Oversized" fullBody="false" tags="" useSelectedWeaponSet="false" />
                  </UrgencyDecorator>
                  <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                </Sequence>
              </IfCondition>
              <IfCondition failOnCondition="false" condition="$contextValue==4">
                <EntityContext context="actorCondition_forcedDrunkenness" target="">
                  <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                </EntityContext>
              </IfCondition>
            </Sequence>
            <While doFail="false" propagateChildFail="false" condition="true">
              <Sequence>
                <Turn target="$__player" align="false" />
                <Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
              </Sequence>
            </While>
          </Parallel>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="context" comment="" />
        <Variable name="contextValue" comment="" />
        <Variable name="item" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-360" editorPosY="-280" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </LinkDataFilter>
                </GraphSearch>
              </Sequence>
            </SuppressFailure>
            <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </EntityContext>
                </IfCondition>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </EntityContext>
                </IfCondition>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <CreateItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </CreateItem>
                    <EquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </EquipItem>
                    <UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </DrawAction>
                    </UrgencyDecorator>
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </Sequence>
                </IfCondition>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </EntityContext>
                </IfCondition>
              </Sequence>
              <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Turn>
                  <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Wait>
                </Sequence>
              </While>
            </Parallel>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>