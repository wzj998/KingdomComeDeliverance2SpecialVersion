<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="walk" is_function="0">
		<Variables>
			<Variable name="points" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="points_value" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;point&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$points" saveVersion="2" />
					</GraphSearch>
					<ForEach startIndex="0" step="1" array="$points" iterator="" value="$points_value" break="">
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$points_value" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					</ForEach>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="points" comment="" />
				<Variable name="points_value" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
						</ForEach>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ride" is_function="0">
		<Variables>
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="path" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="pathParams" type="predefinedPathParams" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
					</GraphSearch>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;path&apos;" prune="true" negprune="unknown" Parent="" Child="$path" Data="" />
					</GraphSearch>
					<StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$path" destinationSpecification2="$pathParams" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					</StanceElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="horse" comment="" />
				<Variable name="path" comment="" />
				<Variable name="pathParams" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
						</StanceElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="lookAtPlayer" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ForceLook LookTarget="$__player" DisableVariations="true">
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</ForceLook>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</ForceLook>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="standUpToCombat" is_function="0">
		<Variables>
			<Variable name="bench" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<WaitAction />
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;bench&apos;" prune="true" negprune="unknown" Parent="" Child="$bench" Data="" />
					</GraphSearch>
					<Parallel successMode="Any" failureMode="Any">
						<EntityContext context="activity_disableSchedulerLooping" target="">
							<CallBehavior Target="$bench" BehaviorName="&apos;use&apos;" ignoreDropUnloading="false" nodeLabel="47602329" />
						</EntityContext>
						<StanceBarrier soul="$this.id" stance="sitting" smartObject="$bench" negate="false" failOnCondition="false" RunLogic="Halt">
							<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="3.000000" High="3.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
								<Success />
							</DistanceGate>
						</StanceBarrier>
					</Parallel>
					<UrgencyDecorator Urgency="Fast">
						<StanceCheck soul="$__player" stance="crouch" smartObject="" negate="false" failOnCondition="false" saveVersion="2">
							<Then canSkip="1">
								<MeleeGuardAutomationDecorator GuardMode="forceEnable" active="true">
									<WeaponAutomationDecorator WeaponChange="melee" active="true">
										<Parallel successMode="Any" failureMode="Any">
											<CombatAction TargetNPC="$__player" RelationOverride="Hostile" />
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										</Parallel>
									</WeaponAutomationDecorator>
								</MeleeGuardAutomationDecorator>
							</Then>
							<Else canSkip="1">
								<Sequence>
									<MeleeGuardAutomationDecorator GuardMode="forceEnable" active="true">
										<Sequence>
											<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
											<IfElseCondition failOnCondition="false" condition="$rightHand ~= $__null" saveVersion="2">
												<Then canSkip="1">
													<HandContentElement hand="Right" item="$rightHand" allowAny="false" decisionLabel="crime_weapon_rightHand" useDecision="true" enabled="true" saveVersion="2">
														<Search canSkip="1">
															<Success />
														</Search>
														<Exec canSkip="1">
															<IfElseCondition failOnCondition="false" condition="$leftHand ~= $__null" saveVersion="2">
																<Then canSkip="1">
																	<HandContentElement hand="Left" item="$leftHand" allowAny="false" decisionLabel="crime_weapon_leftHand" useDecision="true" enabled="true" saveVersion="2">
																		<Search canSkip="1">
																			<Success />
																		</Search>
																		<Exec canSkip="1">
																			<WaitAction />
																		</Exec>
																	</HandContentElement>
																</Then>
																<Else canSkip="1">
																	<WaitAction />
																</Else>
															</IfElseCondition>
														</Exec>
													</HandContentElement>
												</Then>
												<Else canSkip="1">
													<WaitAction />
												</Else>
											</IfElseCondition>
										</Sequence>
									</MeleeGuardAutomationDecorator>
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Sequence>
							</Else>
						</StanceCheck>
					</UrgencyDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="bench" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<CallBehavior hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</CallBehavior>
							</EntityContext>
							<StanceBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</DistanceGate>
							</StanceBarrier>
						</Parallel>
						<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<StanceCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</CombatAction>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Parallel>
										</WeaponAutomationDecorator>
									</MeleeGuardAutomationDecorator>
								</Then>
								<Else>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</GetWeaponsFromWeaponSet>
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Search>
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</Search>
															<Exec>
																<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Then>
																		<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																			<OutputBreakpoints />
																			<Search>
																				<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Success>
																			</Search>
																			<Exec>
																				<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</WaitAction>
																			</Exec>
																		</HandContentElement>
																	</Then>
																	<Else>
																		<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</WaitAction>
																	</Else>
																</IfElseCondition>
															</Exec>
														</HandContentElement>
													</Then>
													<Else>
														<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</WaitAction>
													</Else>
												</IfElseCondition>
											</Sequence>
										</MeleeGuardAutomationDecorator>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Else>
							</StanceCheck>
						</UrgencyDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="playTrespassAnims" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<PlayAdditiveAnimation Fragment="&apos;CrimeGoAwayEasy&apos;" Tags="" />
					<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" />
					<PlayAdditiveAnimation Fragment="&apos;CrimeGoAwayHard&apos;" Tags="" />
					<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</PlayAdditiveAnimation>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</PlayAdditiveAnimation>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="crimeFollower_noMove" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<LogToLabel Name="&apos;role&apos;" Wuid="$this.id" Message="&apos;noMoveObserver&apos;">
					<CrimeFollower Target="$__player" Mode="NoMoveOnlyTurn" Role="Observer" RelativeSpeedLimit="Dash" DisableGhosting="false" />
				</LogToLabel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<CrimeFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</CrimeFollower>
					</LogToLabel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="crimeFollower_mainWithDelay" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
					<LogToLabel Name="&apos;role&apos;" Wuid="$this.id" Message="&apos;main&apos;">
						<CrimeFollower Target="$__player" Mode="DontBackOff" Role="Main" RelativeSpeedLimit="Dash" DisableGhosting="false" />
					</LogToLabel>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<CrimeFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</CrimeFollower>
						</LogToLabel>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sitOnGround" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$__object.id" stance="sitting" allowAny="false" enabled="true">
					<Sequence>
						<WaitAction />
						<UnstanceElement unstance="m42_SharpeningSwordGround" locationObject="$__object.id" slaveObject="" enabled="true">
							<Sequence>
								<UnstanceAction unstance="m42_SharpeningSwordGround" locationObject="$__object.id" slaveObject="" />
								<Loop count="-1">
									<Sequence>
										<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
										<AnimationAction fragment="&apos;CampSharpeningSwordLoop_VAR&apos;" tags="&apos;sittingGround&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
									</Sequence>
								</Loop>
							</Sequence>
						</UnstanceElement>
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
											<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AnimationAction>
										</Sequence>
									</Loop>
								</Sequence>
							</UnstanceElement>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="getCarried" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="CarryLivingActor" target="">
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="guard_stationaryDuty" is_function="0">
		<Variables>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="destinationVec" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="setWeapons" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="spawnMissingNpcVolume" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;station&apos;" prune="true" negprune="unknown" Parent="" Child="$destination" Data="" />
					</GraphSearch>
					<EntityContextCheck context="crime_spawnMissingNpcVolume" target="" saveVersion="2">
						<Then canSkip="1">
							<Expression expressions="$spawnMissingNpcVolume = true" />
						</Then>
					</EntityContextCheck>
					<GetSpatialInfo In="$destination" Out="$destinationVec" What="Position" />
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<EntityContext context="crime_isAuthorityOnStationaryDuty" target="">
					<EntityContext context="soliloquy_enable" target="">
						<EntityContext context="soliloquy_specific_guard" target="">
							<Sequence>
								<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$setWeapons[0]" RightHand="$setWeapons[1]" UseTorchWhenAppropriate="true" />
								<HandContentElement hand="Left" item="$setWeapons[0]" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="guard_crossbow" useDecision="true" enabled="true" saveVersion="2">
									<Search canSkip="1">
										<Success />
									</Search>
									<Exec canSkip="1">
										<EntityContext context="crime_canFriskPlayerBehavior" target="">
											<EntityContextElement context="crime_spawnMissingNpcVolume_behavior" enabled="$spawnMissingNpcVolume">
												<AddLinkElement from="$this.id" to="$destination" tag="&apos;scheduler_currentBehaviorDestination&apos;" data="$destinationVec" enabled="$spawnMissingNpcVolume">
													<Sequence>
														<ExactMove directionType="AlignWithEntity" directionSpecification="$destination" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
														<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
													</Sequence>
												</AddLinkElement>
											</EntityContextElement>
										</EntityContext>
									</Exec>
								</HandContentElement>
							</Sequence>
						</EntityContext>
					</EntityContext>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer>
			<UnstanceAction unstance="guard" locationObject="$destination" slaveObject="" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="destination" comment="" />
				<Variable name="destinationVec" comment="" />
				<Variable name="setWeapons" comment="" />
				<Variable name="spawnMissingNpcVolume" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Then>
						</EntityContextCheck>
						<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetSpatialInfo>
					</Sequence>
				</OnInit>
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetWeaponsFromWeaponSet>
									<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Search>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Search>
										<Exec>
											<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</ExactMove>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
													</AddLinkElement>
												</EntityContextElement>
											</EntityContext>
										</Exec>
									</HandContentElement>
								</Sequence>
							</EntityContext>
						</EntityContext>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest>
				<UnstanceAction editorPosX="2440" editorPosY="580" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</UnstanceAction>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="fastAction" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="crime_keepStateAndItems" enabled="true">
					<Sequence>
						<ShockNPC Target="$this.id" Source="$__player" Type="Low" />
						<WaitAction />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ShockNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ShockNPC>
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="dramaticBark" is_function="0">
		<Variables>
			<Variable name="pos" type="vec3" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
					<GetSpatialInfo In="$__player" Out="$pos" What="Position" />
					<TeleportAction Position="$pos" EndInterruptOnActionStart="false" />
					<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;NPC_JE_ZAMEREN_HRACEM&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="32417591" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="pos" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetSpatialInfo>
						<TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</TeleportAction>
						<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_crime_crimeBark>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="shockReaction" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
					<StanceCheck soul="$__player" stance="crouch" smartObject="" negate="false" failOnCondition="false" saveVersion="2">
						<Then canSkip="1">
							<LogToLabel Name="&apos;shock&apos;" Wuid="$this.id" Message="&apos;shock: MEDIUM&apos;">
								<Sequence>
									<ShockNPC Target="$this.id" Source="$__player" Type="Medium" />
									<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</LogToLabel>
						</Then>
						<Else canSkip="1">
							<LogToLabel Name="&apos;shock&apos;" Wuid="$this.id" Message="&apos;shock: LOW&apos;">
								<Sequence>
									<ShockNPC Target="$this.id" Source="$__player" Type="Low" />
									<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</LogToLabel>
						</Else>
					</StanceCheck>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<StanceCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ShockNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ShockNPC>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</LogToLabel>
							</Then>
							<Else>
								<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ShockNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ShockNPC>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</LogToLabel>
							</Else>
						</StanceCheck>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="shockReaction_onBench" is_function="0">
		<Variables>
			<Variable name="bench" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;bench&apos;" prune="true" negprune="unknown" Parent="" Child="$bench" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Loop count="-1">
						<CallBehavior Target="$bench" BehaviorName="&apos;use&apos;" ignoreDropUnloading="false" nodeLabel="65871391" />
					</Loop>
					<StanceBarrier soul="$this.id" stance="sitting" smartObject="$bench" negate="false" failOnCondition="false" RunLogic="Halt">
						<Loop count="-1">
							<IncludeTree File="&apos;test/zbynek.xml&apos;" Name="&apos;shockReaction&apos;" nodeLabel="63613606" />
						</Loop>
					</StanceBarrier>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="bench" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<CallBehavior hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</CallBehavior>
						</Loop>
						<StanceBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</IncludeTree>
							</Loop>
						</StanceBarrier>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="wait" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<WaitAction />
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="crimeFollower_noMoveWithShock" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ShockNPC Target="$this.id" Source="$__player" Type="Medium" />
					<LogToLabel Name="&apos;role&apos;" Wuid="$this.id" Message="&apos;noMoveObserver&apos;">
						<CrimeFollower Target="$__player" Mode="NoMoveOnlyTurn" Role="Observer" RelativeSpeedLimit="Dash" DisableGhosting="false" />
					</LogToLabel>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ShockNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ShockNPC>
						<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<CrimeFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</CrimeFollower>
						</LogToLabel>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="debug" is_function="0">
		<Variables>
			<Variable name="linkedEntity" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="xname" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="xwuid" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Loop count="-1">
						<Sequence>
							<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
							<PlayAdditiveAnimation Fragment="&apos;StealthRecognitionSmell&apos;" Tags="" />
						</Sequence>
					</Loop>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$__player" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<Selector>
					<Sequence>
						<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;crime_door_reverse&apos;" prune="true" negprune="unknown" Parent="" Child="$linkedEntity" Data="" />
							<ExistPath Origin="$linkedEntity" Borders="" depth="3" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;area_union_member,home_area_reverse,home_inhabitant&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<EntityClassFilter Class="NPC" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
								<NegationOp Results="true" Advance="true" EndOp="true" saveVersion="2">
									<Child0 canSkip="1">
										<SoulIsUnconsciousFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
									</Child0>
								</NegationOp>
								<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
							</ExistPath>
						</GraphSearch>
						<GraphSearch Origin="$linkedEntity" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;crime_door&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							<LinkDataFilter tag="&apos;crime_door&apos;" condition="$__link_crime_door.type == $enum:crime_doorKind.entrance | &#10;$__link_crime_door.type == $enum:crime_doorKind.storage" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							<WUIDFilter WUID="$this.id" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
						</GraphSearch>
					</Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;crime_door_reverse&apos;" prune="true" negprune="unknown" Parent="" Child="$linkedEntity" Data="" />
						<ExistPath Origin="$linkedEntity" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;crime_door&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							<LinkDataFilter tag="&apos;crime_door&apos;" condition="$__link_crime_door.type == $enum:crime_doorKind.entrance | &#10;$__link_crime_door.type == $enum:crime_doorKind.storage" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							<WUIDFilter WUID="$this.id" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
						</ExistPath>
						<ExistPath Origin="$linkedEntity" Borders="" depth="3" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;area_union_member,home_area_reverse,home_inhabitant&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<EntityClassFilter Class="NPC" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
							<NegationOp Results="true" Advance="true" EndOp="true" saveVersion="2">
								<Child0 canSkip="1">
									<SoulIsUnconsciousFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
								</Child0>
							</NegationOp>
							<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
						</ExistPath>
					</GraphSearch>
					<Success />
				</Selector>
				<SuppressFailure>
					<ErrorNode Message="&apos;DONE&apos;" />
				</SuppressFailure>
			</Sequence>
			<Parallel successMode="Any" failureMode="Any">
				<While doFail="false" propagateChildFail="false" condition="true">
					<OnWeaponChange WeaponChangeFilter="any" Combatants="Who" Who="$__player" RunLogic="KeepRunning">
						<LogToConsole LogLevel="Error" Message="&apos;--&gt; weaponchanged&apos;" />
					</OnWeaponChange>
				</While>
				<While doFail="false" propagateChildFail="false" condition="true">
					<Sequence>
						<IsWeaponDrawn who="$__player" WeaponSet="Primary" saveVersion="2">
							<Then canSkip="1">
								<LogToConsole LogLevel="Error" Message="&apos;weapon drawn&apos;" />
							</Then>
							<Else canSkip="1">
								<LogToConsole LogLevel="Error" Message="&apos;weapon holstered&apos;" />
							</Else>
						</IsWeaponDrawn>
						<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</While>
			</Parallel>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="linkedEntity" comment="" />
				<Variable name="xname" comment="" />
				<Variable name="xwuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
								<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</PlayAdditiveAnimation>
							</Sequence>
						</Loop>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
					</Parallel>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="710" editorPosY="-670" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
								<ExistPath hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<EntityClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</EntityClassFilter>
									<NegationOp hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Child0>
											<SoulIsUnconsciousFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</SoulIsUnconsciousFilter>
										</Child0>
									</NegationOp>
									<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</SoulIsAliveFilter>
								</ExistPath>
							</GraphSearch>
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
								<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkDataFilter>
								<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WUIDFilter>
							</GraphSearch>
						</Sequence>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<ExistPath hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
								<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkDataFilter>
								<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WUIDFilter>
							</ExistPath>
							<ExistPath hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</EntityClassFilter>
								<NegationOp hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Child0>
										<SoulIsUnconsciousFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SoulIsUnconsciousFilter>
									</Child0>
								</NegationOp>
								<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SoulIsAliveFilter>
							</ExistPath>
						</GraphSearch>
						<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Success>
					</Selector>
					<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ErrorNode>
					</SuppressFailure>
				</Sequence>
				<Parallel editorPosX="990" editorPosY="120" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<OnWeaponChange hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LogToConsole>
						</OnWeaponChange>
					</While>
					<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LogToConsole>
								</Then>
								<Else>
									<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LogToConsole>
								</Else>
							</IsWeaponDrawn>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</While>
				</Parallel>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="shockReaction_withSecondaryWeapon" is_function="0">
		<Variables>
			<Variable name="const_true" type="_bool" values="true" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Function_crime_weaponDecorator suppressWaitAction="false" weaponSet="&apos;Secondary&apos;" shouldHaveDrawnWeapon="$const_true" nodeLabel="54342490" />
					<Loop count="-1">
						<IncludeTree File="&apos;test/zbynek.xml&apos;" Name="&apos;shockReaction&apos;" nodeLabel="65508222" />
					</Loop>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="const_true" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_crime_weaponDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_crime_weaponDecorator>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</IncludeTree>
						</Loop>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sendDiceInterrupts" is_function="0">
		<Variables>
			<Variable name="table" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;table&apos;" prune="true" negprune="unknown" Parent="" Child="$table" Data="" />
					</GraphSearch>
					<AddInterrupt Target="$__player" Host="$table" Behavior="&apos;interrupt_playerSit&apos;" Priority="201" IgnorePriorityOnPreviousInterrupt="false" urgency="Instant" Aliveness="Alive" Privileged="false" FastForward="true" />
					<AddInterrupt_dice_interrupt_playDiceMinigame forceBadgeSubtype="0" gameType="$enum:diceGameTypes.beggar" isQuest="false" Target="$this.id" Host="$table" Behavior="&apos;interrupt_playDiceMinigame&apos;" Priority="201" IgnorePriorityOnPreviousInterrupt="true" urgency="Instant" Aliveness="Alive" Privileged="false" FastForward="true" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="table" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<AddInterrupt hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AddInterrupt>
						<AddInterrupt_dice_interrupt_playDiceMinigame hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AddInterrupt_dice_interrupt_playDiceMinigame>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pointAtPlayer" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Loop count="-1">
					<Sequence>
						<Parallel successMode="All" failureMode="Any">
							<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_REPORTUJE_STRAZI_(STRAZ_ZATYKA)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="64978515" />
							<Sequence>
								<Turn target="$__player" align="false" />
								<AnimationAction fragment="&apos;Pointing&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
							</Sequence>
						</Parallel>
						<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</Loop>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_crimeBark>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Turn>
									<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AnimationAction>
								</Sequence>
							</Parallel>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Loop>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="watchPlayer_violent" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ForceLook LookTarget="$__player" DisableVariations="false">
					<LogToLabel Name="&apos;watchType&apos;" Wuid="$this.id" Message="&apos;violent&apos;">
						<EntityContext context="actorCondition_forcedCrimeWatching_violent" target="">
							<CrimeFollower Target="$__player" Mode="Default" Role="Observer" RelativeSpeedLimit="Dash" DisableGhosting="false" />
						</EntityContext>
					</LogToLabel>
				</ForceLook>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<CrimeFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</CrimeFollower>
							</EntityContext>
						</LogToLabel>
					</ForceLook>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="watchPlayer_nonviolent" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ForceLook LookTarget="$__player" DisableVariations="false">
					<LogToLabel Name="&apos;watchType&apos;" Wuid="$this.id" Message="&apos;nonviolent&apos;">
						<EntityContext context="actorCondition_forcedCrimeWatching_nonViolent" target="">
							<CrimeFollower Target="$__player" Mode="NoMoveOnlyTurn" Role="Observer" RelativeSpeedLimit="Dash" DisableGhosting="false" />
						</EntityContext>
					</LogToLabel>
				</ForceLook>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<CrimeFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</CrimeFollower>
							</EntityContext>
						</LogToLabel>
					</ForceLook>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="kibitzer" is_function="0">
		<Variables>
			<Variable name="anim" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="anims" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="place" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tagpoint&apos;" prune="true" negprune="unknown" Parent="" Child="$place" Data="" />
					</GraphSearch>
					<Expression expressions="$anims[#anims] = &apos;DiceGameKibitzerFacepalm&apos; &#10;$anims[#anims] = &apos;DiceGameKibitzerNeutral&apos; &#10;$anims[#anims] = &apos;DiceGameKibitzerMildlyHappy&apos; &#10;$anims[#anims] = &apos;DiceGameKibitzerExstaticHappy&apos;" />
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<UnstanceElement unstance="diceKibitzer" locationObject="$place" slaveObject="" enabled="true">
					<Sequence>
						<WaitAction />
						<ForEach startIndex="0" step="1" array="$anims" iterator="" value="$anim" break="">
							<Sequence>
								<LogToLabel Name="&apos;debug anim&apos;" Wuid="$this.id" Message="&apos;Playing fragment: $anim .&apos;">
									<AnimationAction fragment="$anim" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
								</LogToLabel>
								<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</ForEach>
					</Sequence>
				</UnstanceElement>
			</Behavior>
		</Root>
		<ForestContainer>
			<Parallel successMode="All" failureMode="Any">
				<AnimationAction fragment="$animFragment" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
			</Parallel>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="anim" comment="" />
				<Variable name="anims" comment="" />
				<Variable name="place" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</Sequence>
				</OnInit>
				<Behavior>
					<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AnimationAction>
									</LogToLabel>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</ForEach>
						</Sequence>
					</UnstanceElement>
				</Behavior>
			</Root>
			<Forest>
				<Parallel editorPosX="2445" editorPosY="587" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</AnimationAction>
				</Parallel>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="shockReaction_onBenchWithNoTable" is_function="0">
		<Variables>
			<Variable name="bench" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;bench&apos;" prune="true" negprune="unknown" Parent="" Child="$bench" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Loop count="-1">
						<CallBehavior Target="$bench" BehaviorName="&apos;use&apos;" ignoreDropUnloading="false" nodeLabel="62597360" />
					</Loop>
					<StanceBarrier soul="$this.id" stance="sitting" smartObject="$bench" negate="false" failOnCondition="false" RunLogic="Halt">
						<Loop count="-1">
							<IncludeTree File="&apos;test/zbynek.xml&apos;" Name="&apos;shockReaction&apos;" nodeLabel="72993454" />
						</Loop>
					</StanceBarrier>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="bench" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<CallBehavior hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</CallBehavior>
						</Loop>
						<StanceBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</IncludeTree>
							</Loop>
						</StanceBarrier>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="conceptMove" is_function="0">
		<Variables>
			<Variable name="moveParams" type="additionalMoveParams" values="destChangedThreshold(&apos;500ms&apos;)" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="1.000000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="$moveParams" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="moveParams" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantCallback_empty>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="mourn" is_function="0">
		<Variables>
			<Variable name="corpse" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;corpse&apos;" prune="true" negprune="unknown" Parent="" Child="$corpse" Data="" />
					</GraphSearch>
					<IgnorePerception PerceptorObject="$this.id" PerceptibleObject="$corpse" IgnoreFor="&apos;-1&apos;" TimerType="GameTime" Uninterruptible="false" Persistent="true" />
					<DeadUnconsciousGate Who="$corpse" State="Dead" Negation="false" RunLogic="KeepRunning">
						<Sequence>
							<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
							<Function_callInterrupt_mourn ignorePriority="false" initiator="$enum:switch_interruptInitiator.unknown" mournTarget="$corpse" previousReaction="$enum:crime_reactionKind.unknown" stimulusKind="$enum:crime_stimulusKind.unknown" nodeLabel="76346097" />
						</Sequence>
					</DeadUnconsciousGate>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="corpse" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<IgnorePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</IgnorePerception>
						<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
								<Function_callInterrupt_mourn hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_callInterrupt_mourn>
							</Sequence>
						</DeadUnconsciousGate>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="run" is_function="0">
		<Variables>
			<Variable name="path" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="pathParams" type="predefinedPathParams" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;path&apos;" prune="true" negprune="unknown" Parent="" Child="$path" Data="" />
					</GraphSearch>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$path" destinationSpecification2="$pathParams" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="path" comment="" />
				<Variable name="pathParams" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>