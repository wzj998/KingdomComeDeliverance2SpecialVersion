<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="requestChat" is_function="0">
		<Variables>
			<Variable name="dialogPreset" type="enum:dialogPreset" values="" isPersistent="0" form="single" />
			<Variable name="t_alias" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="t_delay" type="_string" values="&apos;0s&apos;" isPersistent="0" form="single" />
			<Variable name="t_dialogParameters" type="dialog:parameters:initiator" values="" isPersistent="0" form="single" />
			<Variable name="t_dialogParticipants" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="t_dialogType" type="_string" values="&apos;chat&apos;" isPersistent="0" form="single" />
			<Variable name="t_metarole" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Parallel successMode="Any" failureMode="Any">
							<Selector>
								<Sequence>
									<Function_walkAround nodeLabel="90283082" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Sequence>
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Selector>
							<Selector>
								<Sequence>
									<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;passOut&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									</GraphSearch>
									<LuaWrapper onEnter="Contexts.SetPersistentOption(entity,&apos;keepRunningDaycycleActivitiesWhileUnconscious&apos;,&apos;dialogTesting&apos;);" onExit="Contexts.ClearOption(entity,&apos;keepRunningDaycycleActivitiesWhileUnconscious&apos;,&apos;dialogTesting&apos;)">
										<Sequence>
											<AddBuff SoulWUID="$this.id" BuffGUID="&apos;97828156-42a0-40e2-b772-7c328d2ead98&apos;" />
											<AddBuff SoulWUID="$this.id" BuffGUID="&apos;c75aa0db-65ca-44d7-9001-e4b6d38c6875&apos;" />
											<AddBuff SoulWUID="$this.id" BuffGUID="&apos;5145bb5c-ac08-43b9-92a7-0a6766516d53&apos;" />
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										</Sequence>
									</LuaWrapper>
								</Sequence>
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Selector>
							<Sequence>
								<Selector>
									<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkDataFilter tag="&apos;dialogTest_delay&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$t_delay" />
									</GraphSearch>
									<Sequence>
										<LogToConsole LogLevel="Error" Message="&apos;Delay Reading Failed&apos;" />
										<Expression expressions="$t_delay = &apos;0s&apos;" />
									</Sequence>
								</Selector>
								<Selector>
									<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkDataFilter tag="&apos;dialogTest_alias&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$t_alias" />
									</GraphSearch>
									<LogToConsole LogLevel="Error" Message="&apos;Alias Reading Failed&apos;" />
								</Selector>
								<Selector>
									<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkDataFilter tag="&apos;dialogTest_metarole&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$t_metarole" />
									</GraphSearch>
									<LogToConsole LogLevel="Error" Message="&apos;Metarole Reading Failed&apos;" />
								</Selector>
								<Selector>
									<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkDataFilter tag="&apos;dialogTest_type&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$t_dialogType" />
									</GraphSearch>
									<Success />
								</Selector>
								<Wait duration="$t_delay" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								<Selector>
									<Sequence>
										<Switch>
											<IfCondition failOnCondition="false" condition="$t_dialogType == &apos;chat&apos;">
												<Expression expressions="$dialogPreset = $enum:dialogPreset.chat" />
											</IfCondition>
											<IfCondition failOnCondition="false" condition="$t_dialogType == &apos;crimeconfrontation&apos;">
												<Sequence>
													<Expression expressions="$dialogPreset = $enum:dialogPreset.fader" />
													<SetGlobalVar key="&apos;crimeConfrontationDialog_jail&apos;" value="78" />
													<SetGlobalVar key="&apos;crimeConfrontationDialog_crime_mix&apos;" value="1" />
													<SetGlobalVar key="&apos;crimeConfrontationDialog_crime_murder&apos;" value="1" />
													<SetGlobalVar key="&apos;crimeConfrontationDialog_source_indirect&apos;" value="1" />
												</Sequence>
											</IfCondition>
										</Switch>
										<Function_speech_dialogInitiator alias="$t_alias" context="$__null" customParameters="$__null" metarole="$t_metarole" preset="$dialogPreset" recipient="$__player" recipientMetaroles="" nodeLabel="41821169" />
									</Sequence>
									<LogToConsole LogLevel="Error" Message="&apos;dialogInitiator Failed&apos;" />
								</Selector>
								<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;timeChanged&apos;" RunLogic="KeepRunning">
									<Success />
								</ExternalLock>
							</Sequence>
						</Parallel>
					</Child>
					<OnSuccess canSkip="1">
						<Callback_empty EventName="&apos;Success&apos;" />
					</OnSuccess>
					<OnFail canSkip="1">
						<Callback_empty EventName="&apos;Fail&apos;" />
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer>
			<IncludeTree File="&apos;_tomasv/so_test_dialog.xml&apos;" Name="&apos;walkAround&apos;" nodeLabel="10017339" />
		</ForestContainer>
		<EditorData Signature="empty" EventSet="resultNotification">
			<Variables>
				<Variable name="dialogPreset" comment="" />
				<Variable name="t_alias" comment="" />
				<Variable name="t_delay" comment="" />
				<Variable name="t_dialogParameters" comment="" />
				<Variable name="t_dialogParticipants" comment="" />
				<Variable name="t_dialogType" comment="" />
				<Variable name="t_metarole" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_walkAround hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_walkAround>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Selector>
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<LuaWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="1">
												<OutputBreakpoints />
												<AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</AddBuff>
												<AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</AddBuff>
												<AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</AddBuff>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</LuaWrapper>
									</Sequence>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Selector>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkDataFilter>
										</GraphSearch>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LogToConsole>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Sequence>
									</Selector>
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkDataFilter>
										</GraphSearch>
										<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LogToConsole>
									</Selector>
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkDataFilter>
										</GraphSearch>
										<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LogToConsole>
									</Selector>
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkDataFilter>
										</GraphSearch>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Selector>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</IfCondition>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
														<SetGlobalVar hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</SetGlobalVar>
														<SetGlobalVar hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</SetGlobalVar>
														<SetGlobalVar hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</SetGlobalVar>
														<SetGlobalVar hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</SetGlobalVar>
													</Sequence>
												</IfCondition>
											</Switch>
											<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_dialogInitiator>
										</Sequence>
										<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LogToConsole>
									</Selector>
									<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</ExternalLock>
								</Sequence>
							</Parallel>
						</Child>
						<OnSuccess>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnSuccess>
						<OnFail>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest>
				<IncludeTree editorPosX="680" editorPosY="-250" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</IncludeTree>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="wait" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="-420" editorPosY="30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="racek_requestChat" is_function="0">
		<Variables>
			<Variable name="t_alias" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$t_alias = &apos;chatWithRacek&apos;" />
					<IncludeTree File="_tomasv/so_test_dialog.xml" Name="requestChat" nodeLabel="65419009" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="t_alias" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="0" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence editorPosX="230" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression editorPosX="364" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<IncludeTree editorPosX="364" editorPosY="92" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</IncludeTree>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="walkAround" is_function="1">
		<Variables>
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="nextPatrolPoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="previousPatrolPoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="t_distanceMove_params" type="" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Expression expressions="$previousPatrolPoint = $this.id" />
			</OnInit>
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Selector>
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;singPtacek&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Loop count="-1">
								<Function_speech_schedulerMonolog alias="&apos;testOfSubtitles_ptacekZpevacek&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" subtitlesDown="true" nodeLabel="92211451" />
							</Loop>
						</Sequence>
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;singWoman&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Loop count="-1">
								<Function_speech_schedulerMonolog alias="&apos;testOfSubtitles_ptackaZpevacka&apos;" animationApproach="$enum:animationApproach.tryDialogAnimations" context="" lookAtId="$__player" metarole="" subtitlesDown="true" nodeLabel="72050230" />
							</Loop>
						</Sequence>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Selector>
					<Loop count="-1">
						<Sequence>
							<GraphSearch Origin="$previousPatrolPoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;patrolLink&apos;" prune="true" negprune="unknown" Parent="" Child="$nextPatrolPoint" Data="" />
							</GraphSearch>
							<Selector>
								<Sequence>
									<GraphSearch Origin="$nextPatrolPoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
									</GraphSearch>
									<StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
										<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="3.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$nextPatrolPoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									</StanceElement>
								</Sequence>
								<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="5.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$nextPatrolPoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							</Selector>
							<Expression expressions="$previousPatrolPoint = $nextPatrolPoint" />
						</Sequence>
					</Loop>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer>
			<IfElseCondition failOnCondition="false" condition="$t_distanceMove_params.forceUseHorse == true" saveVersion="2">
				<Then canSkip="1">
					<Sequence>
						<Expression expressions="$t_distanceMove_params.target = $nextPatrolPoint &#10;$t_distanceMove_params.checkTC = false &#10;$t_distanceMove_params.useSituations = false &#10;$t_distanceMove_params.speed = $enum:movementSpeed.walk" />
						<IncludeTree File="&apos;final/moveUtils.xml&apos;" Name="&apos;distanceMove&apos;" nodeLabel="45985288" />
					</Sequence>
				</Then>
			</IfElseCondition>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="horse" comment="" />
				<Variable name="nextPatrolPoint" comment="" />
				<Variable name="previousPatrolPoint" comment="" />
				<Variable name="t_distanceMove_params" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</OnInit>
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Selector hasInputBreakpoint="0" comment="hack, no time" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
								</Loop>
							</Sequence>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
								</Loop>
							</Sequence>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Selector>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Move>
										</StanceElement>
									</Sequence>
									<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Move>
								</Selector>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
						</Loop>
					</Parallel>
				</Behavior>
			</Root>
			<Forest>
				<IfElseCondition editorPosX="1520" editorPosY="1110" hasInputBreakpoint="0" comment="not working atm" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Then>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</IncludeTree>
						</Sequence>
					</Then>
				</IfElseCondition>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="onUpdate" is_function="0">
		<Variables>
			<Variable name="amIInTestLevel" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="iterator" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="stringtest" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="testLevel" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Sequence>
						<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;yesYouAreInDialogTestLevel&apos;" prune="true" negprune="unknown" Parent="" Child="$testLevel" Data="" />
						</GraphSearch>
						<IfCondition failOnCondition="false" condition="$testLevel ~= $__null">
							<SuppressFailure>
								<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;0s&apos;" LockManagerType="Global" SemaphoreName="&apos;testDialog_workPerlevel&apos;">
									<Sequence>
										<ExecuteLua code="System.SetCVar(&apos;wh_ai_triggerAreas_debugDraw&apos;, 1 ) &#10;System.SetCVar(&apos;wh_ai_SmartAreaDebugDraw&apos;, 1 ) &#10;System.SetCVar(&apos;wh_horse_spawnOnCall&apos;, 1 )" />
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</Semaphore>
							</SuppressFailure>
						</IfCondition>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
					<Sequence>
						<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
					<Sequence>
						<Wait duration="&apos;3m&apos;" timeType="WorldTime" doFail="false" variation="" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer>
			<ExecuteLua code="local horse = System.GetEntityByName(&apos;player_horse_cheat&apos;) &#10;player.player:SetPlayerHorse(horse.id);" />
			<ExecuteLua code="local dogVorech = System.GetEntityByName(&apos;player_dogCompanion_vorech&apos;) &#10;if dogVorech then &#10; local dogChangeRequestMessage = table.MakeFromType(&apos;dog:changeRequest&apos;,{newMaster=true,master=player.this.id,newMode=true,mode=enum_dogCompanionMode.free}) &#10; XGenAIModule.SendMessageToEntityData(System.GetEntityByName(&apos;player_dogCompanion_vorech&apos;).this.id,&quot;dog:changeRequest&quot;,dogChangeRequestMessage); &#10;end" />
			<Expression expressions="$stringtest = &apos;0&apos;" />
			<While doFail="false" propagateChildFail="false" condition="$iterator &lt; 30">
				<Sequence>
					<Expression expressions="$stringtest = $stringtest + $stringtest" />
					<Expression expressions="$iterator = $iterator + 1" />
				</Sequence>
			</While>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="amIInTestLevel" comment="" />
				<Variable name="iterator" comment="" />
				<Variable name="stringtest" comment="" />
				<Variable name="testLevel" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="20" editorPosY="20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ExecuteLua hasInputBreakpoint="0" comment="debugs" breakpointFlags="0">
												<OutputBreakpoints />
											</ExecuteLua>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</Semaphore>
								</SuppressFailure>
							</IfCondition>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Parallel>
				</Behavior>
			</Root>
			<Forest>
				<ExecuteLua editorPosX="1310" editorPosY="-710" hasInputBreakpoint="0" comment="horse cheat" breakpointFlags="0">
					<OutputBreakpoints />
				</ExecuteLua>
				<ExecuteLua editorPosX="1460" editorPosY="-260" hasInputBreakpoint="0" comment="dog cheat" breakpointFlags="0">
					<OutputBreakpoints />
				</ExecuteLua>
				<Expression editorPosX="1180" editorPosY="-540" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Expression>
				<While editorPosX="1180" editorPosY="-430" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</Sequence>
				</While>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npcMonolog" is_function="0">
		<Variables>
			<Variable name="context" type="_float" values="" isPersistent="0" form="associative" />
			<Variable name="monolog" type="dialog:monologRequest" values="" isPersistent="0" form="single" />
			<Variable name="t_alias" type="_string" values="unspecifiedAlias" isPersistent="0" form="single" />
			<Variable name="t_delay" type="_string" values="0s" isPersistent="0" form="single" />
			<Variable name="targets" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Selector>
						<Sequence>
							<Function_walkAround nodeLabel="96029450" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Selector>
					<Sequence>
						<Selector>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkDataFilter tag="&apos;dialogTest_delay&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$t_delay" />
							</GraphSearch>
							<Sequence>
								<LogToConsole LogLevel="Error" Message="&apos;Delay Reading Failed&apos;" />
								<Expression expressions="$t_delay = &apos;0s&apos;" />
							</Sequence>
						</Selector>
						<Selector>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkDataFilter tag="&apos;dialogTest_alias&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$t_alias" />
							</GraphSearch>
							<LogToConsole LogLevel="Error" Message="&apos;Alias Reading Failed&apos;" />
						</Selector>
						<Selector>
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;context&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								</GraphSearch>
								<Expression expressions="$context[&apos;foo&apos;] = 0.1 &#10;$context[&apos;bar&apos;] = 0.2" />
							</Sequence>
							<LogToConsole LogLevel="Error" Message="&apos;Alias Reading Failed&apos;" />
						</Selector>
						<Wait duration="$t_delay" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						<Function_speech_monolog alias="$t_alias" canBeDelayed="false" context="$context" dramaticBark="false" lookAtId="" metarole="" target="" wait="false" nodeLabel="93160827" />
						<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;timeChanged&apos;" RunLogic="KeepRunning">
							<Success />
						</ExternalLock>
					</Sequence>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="context" comment="" />
				<Variable name="monolog" comment="" />
				<Variable name="t_alias" comment="" />
				<Variable name="t_delay" comment="" />
				<Variable name="targets" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_walkAround hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_walkAround>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Selector>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkDataFilter>
								</GraphSearch>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LogToConsole>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
							</Selector>
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkDataFilter>
								</GraphSearch>
								<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LogToConsole>
							</Selector>
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
								<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LogToConsole>
							</Selector>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_monolog>
							<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</ExternalLock>
						</Sequence>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="requestIngameDialog" is_function="0">
		<Variables>
			<Variable name="context" type="_float" values="" isPersistent="0" form="associative" />
			<Variable name="customParameters" type="dialog:parameters:initiator" values="" isPersistent="0" form="single" />
			<Variable name="dialogObject" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="dialogParticipant" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="percept" type="perceptionInfo" values="" isPersistent="0" form="single" />
			<Variable name="personToGreet" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="t_alias" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="t_delay" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="t_dialogParameters" type="dialog:parameters:initiator" values="" isPersistent="0" form="single" />
			<Variable name="t_dialogParticipants" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;dialogParticipant&apos;" prune="true" negprune="unknown" Parent="" Child="$dialogParticipant" Data="" />
					</GraphSearch>
					<Selector>
						<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkDataFilter tag="&apos;dialogTest_delay&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$t_delay" />
						</GraphSearch>
						<Sequence>
							<LogToConsole LogLevel="Error" Message="&apos;Delay Reading Failed&apos;" />
							<Expression expressions="$t_delay = &apos;0s&apos;" />
						</Sequence>
					</Selector>
					<Selector>
						<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkDataFilter tag="&apos;dialogTest_alias&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$t_alias" />
						</GraphSearch>
						<LogToConsole LogLevel="Error" Message="&apos;Alias Reading Failed&apos;" />
					</Selector>
					<Wait duration="$t_delay" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					<Selector>
						<Sequence>
							<Expression expressions="$context[&apos;foo&apos;] = 0.5" />
							<Function_speech_dialogInitiator alias="$t_alias" animationApproach="$enum:animationApproach.tryDialogAnimations" context="$context" customParameters="$__null" metarole="" preset="$enum:dialogPreset.ingame" recipient="$dialogParticipant" recipientMetaroles="" nodeLabel="42011258" />
						</Sequence>
						<LogToConsole LogLevel="Error" Message="&apos;dialogInitiator Failed&apos;" />
					</Selector>
					<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;timeChanged&apos;" RunLogic="KeepRunning">
						<Success />
					</ExternalLock>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="context" comment="" />
				<Variable name="customParameters" comment="" />
				<Variable name="dialogObject" comment="" />
				<Variable name="dialogParticipant" comment="" />
				<Variable name="participants" comment="" />
				<Variable name="percept" comment="" />
				<Variable name="personToGreet" comment="" />
				<Variable name="t_alias" comment="" />
				<Variable name="t_delay" comment="" />
				<Variable name="t_dialogParameters" comment="" />
				<Variable name="t_dialogParticipants" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkDataFilter>
							</GraphSearch>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LogToConsole>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
						</Selector>
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkDataFilter>
							</GraphSearch>
							<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LogToConsole>
						</Selector>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_dialogInitiator>
							</Sequence>
							<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LogToConsole>
						</Selector>
						<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</ExternalLock>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="recieveIngameDialog" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="0" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="forceGreeting" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="0" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="greet" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="0" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait editorPosX="225" editorPosY="33" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="requestNormalDialog" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Selector>
						<Sequence>
							<Function_walkAround nodeLabel="25360711" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Selector>
					<Selector>
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;passOut&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<LuaWrapper onEnter="Contexts.SetPersistentOption(entity,&apos;keepRunningDaycycleActivitiesWhileUnconscious&apos;,&apos;dialogTesting&apos;);" onExit="Contexts.ClearOption(entity,&apos;keepRunningDaycycleActivitiesWhileUnconscious&apos;,&apos;dialogTesting&apos;)">
								<Sequence>
									<AddBuff SoulWUID="$this.id" BuffGUID="&apos;97828156-42a0-40e2-b772-7c328d2ead98&apos;" />
									<AddBuff SoulWUID="$this.id" BuffGUID="&apos;c75aa0db-65ca-44d7-9001-e4b6d38c6875&apos;" />
									<AddBuff SoulWUID="$this.id" BuffGUID="&apos;5145bb5c-ac08-43b9-92a7-0a6766516d53&apos;" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Sequence>
							</LuaWrapper>
						</Sequence>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Selector>
					<Sequence>
						<Selector>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkDataFilter tag="&apos;dialogTest_delay&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$t_delay" />
							</GraphSearch>
							<Sequence>
								<LogToConsole LogLevel="Error" Message="&apos;Delay Reading Failed&apos;" />
								<Expression expressions="$t_delay = &apos;0s&apos;" />
							</Sequence>
						</Selector>
						<Selector>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkDataFilter tag="&apos;dialogTest_alias&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$t_alias" />
							</GraphSearch>
							<LogToConsole LogLevel="Error" Message="&apos;Alias Reading Failed&apos;" />
						</Selector>
						<Selector>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkDataFilter tag="&apos;dialogTest_metarole&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$t_metarole" />
							</GraphSearch>
							<LogToConsole LogLevel="Error" Message="&apos;Metarole Reading Failed&apos;" />
						</Selector>
						<Wait duration="$t_delay" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						<Selector>
							<Sequence>
								<Expression expressions="$t_dialogParticipants[0] = $__player &#10;$t_dialogParameters.dialogPreset = $enum:dialogPreset.chat &#10;$t_dialogParameters.alias = $t_alias &#10;$t_dialogParameters.metarole = $t_metarole" />
								<IncludeTree File="&apos;speech/dialogutils.xml&apos;" Name="&apos;dialogInitiator&apos;" nodeLabel="85948551" />
							</Sequence>
							<LogToConsole LogLevel="Error" Message="&apos;dialogInitiator Failed&apos;" />
						</Selector>
						<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;timeChanged&apos;" RunLogic="KeepRunning">
							<Success />
						</ExternalLock>
					</Sequence>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="0" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel editorPosX="230" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Selector editorPosX="432" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence editorPosX="566" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_walkAround editorPosX="700" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_walkAround>
								<Wait editorPosX="700" editorPosY="104" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
							<Wait editorPosX="566" editorPosY="211" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Selector>
						<Selector editorPosX="432" editorPosY="318" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence editorPosX="566" editorPosY="318" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch editorPosX="700" editorPosY="318" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter editorPosX="915" editorPosY="318" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<LuaWrapper editorPosX="700" editorPosY="425" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence editorPosX="1394" editorPosY="425" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AddBuff editorPosX="1528" editorPosY="425" hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AddBuff>
										<AddBuff editorPosX="1528" editorPosY="517" hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AddBuff>
										<AddBuff editorPosX="1528" editorPosY="609" hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AddBuff>
										<Wait editorPosX="1528" editorPosY="701" hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</LuaWrapper>
							</Sequence>
							<Wait editorPosX="566" editorPosY="808" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Selector>
						<Sequence editorPosX="432" editorPosY="915" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Selector editorPosX="566" editorPosY="915" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch editorPosX="700" editorPosY="915" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkDataFilter editorPosX="915" editorPosY="915" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkDataFilter>
								</GraphSearch>
								<Sequence editorPosX="700" editorPosY="1035" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LogToConsole editorPosX="834" editorPosY="1035" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LogToConsole>
									<Expression editorPosX="834" editorPosY="1127" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
							</Selector>
							<Selector editorPosX="566" editorPosY="1219" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch editorPosX="700" editorPosY="1219" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkDataFilter editorPosX="915" editorPosY="1219" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkDataFilter>
								</GraphSearch>
								<LogToConsole editorPosX="700" editorPosY="1339" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LogToConsole>
							</Selector>
							<Selector editorPosX="566" editorPosY="1431" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch editorPosX="700" editorPosY="1431" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkDataFilter editorPosX="915" editorPosY="1431" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkDataFilter>
								</GraphSearch>
								<LogToConsole editorPosX="700" editorPosY="1551" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LogToConsole>
							</Selector>
							<Wait editorPosX="566" editorPosY="1643" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<Selector editorPosX="566" editorPosY="1750" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence editorPosX="700" editorPosY="1750" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression editorPosX="834" editorPosY="1750" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<IncludeTree editorPosX="834" editorPosY="1858" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</IncludeTree>
								</Sequence>
								<LogToConsole editorPosX="700" editorPosY="2084" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LogToConsole>
							</Selector>
							<ExternalLock editorPosX="566" editorPosY="2176" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Success editorPosX="847" editorPosY="2176" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</ExternalLock>
						</Sequence>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="tour" is_function="0">
		<Variables>
			<Variable name="currentTagpoint" type="wuid" values="" isPersistent="0" form="single" />
			<Variable name="nextTagpoint" type="wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$currentTagpoint = $__object.id" />
					<Loop count="-1">
						<Sequence>
							<GraphSearch Origin="$currentTagpoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;nextTagpoint&apos;" prune="true" negprune="unknown" Parent="" Child="$nextTagpoint" Data="" />
							</GraphSearch>
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$nextTagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							<Expression expressions="$currentTagpoint = $nextTagpoint" />
						</Sequence>
					</Loop>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Function_speech_monolog alias="" canBeDelayed="false" important="false" lookAtId="$__null" metarole="" target="$this.id" wait="false" nodeLabel="98346826" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="currentTagpoint" comment="" />
				<Variable name="nextTagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="0" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence editorPosX="230" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression editorPosX="364" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<Loop editorPosX="364" editorPosY="92" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence editorPosX="516" editorPosY="92" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch editorPosX="650" editorPosY="92" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter editorPosX="879" editorPosY="92" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Move editorPosX="650" editorPosY="199" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
								<Expression editorPosX="650" editorPosY="455" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
						</Loop>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Function_speech_monolog editorPosX="193" editorPosY="363" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Function_speech_monolog>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="playersMonolog" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="0" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sitAndWait" is_function="0">
		<Variables>
			<Variable name="bench" type="wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;bench&apos;" prune="true" negprune="unknown" Parent="" Child="$bench" Data="" />
					</GraphSearch>
					<StanceElement smartObject="$bench" stance="sitting" allowAny="false">
						<Sequence>
							<WaitAction />
							<ForceLook LookTarget="$__player" DisableVariations="false">
								<Synchronize SemaphoreCount="6" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;bard&apos;" RunLogic="KeepRunning">
									<CallBehavior Target="$__object.id" BehaviorName="&apos;fakeDialogAnimations&apos;" stopAfterFirstFound="true" ignoreDropUnloading="false" nodeLabel="38768904" />
								</Synchronize>
							</ForceLook>
						</Sequence>
					</StanceElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Loop count="-1">
				<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$message" senderInfo="" inbox="&apos;kcd1_string_no_rules&apos;" condition="" answerVar="">
					<AnimationAction fragment="&apos;ADLG_You&apos;" tags="" eventReferenceObject="" alignObject="" alignHelper="-2" context="" keepContext="false" />
				</ProcessMessage>
			</Loop>
			<Sequence>
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;bench&apos;" prune="true" negprune="unknown" Parent="" Child="$bench" Data="" />
				</GraphSearch>
				<StanceElement smartObject="$bench" stance="sitting" allowAny="false">
					<Sequence>
						<UnstanceAction unstance="healingLeft" locationObject="$bench" />
						<Synchronize SemaphoreCount="6" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;bard&apos;" RunLogic="KeepRunning">
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Synchronize>
					</Sequence>
				</StanceElement>
			</Sequence>
			<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="bench" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-20" editorPosY="-40" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<CallBehavior hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</CallBehavior>
									</Synchronize>
								</ForceLook>
							</Sequence>
						</StanceElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Loop editorPosX="2260" editorPosY="-410" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<OutputBreakpoints />
						</AnimationAction>
					</ProcessMessage>
				</Loop>
				<Sequence editorPosX="200" editorPosY="-330" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<OutputBreakpoints />
							</UnstanceAction>
							<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Synchronize>
						</Sequence>
					</StanceElement>
				</Sequence>
				<Wait editorPosX="1240" editorPosY="70" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Wait>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sitAndForcePolylog" is_function="0">
		<Variables>
			<Variable name="amIInitiator" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="bench" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="ptacek" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="racek" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExecuteLua code="data.ptacek = System.GetEntityByName(&apos;tkop_ptacek&apos;).this.id &#10;data.racek = System.GetEntityByName(&apos;tsem_racek&apos;).this.id" />
					<VarOperation varName="$participants" targetVarName="" operation="PushBack" argument="($ptacek)" />
					<VarOperation varName="$participants" targetVarName="" operation="PushBack" argument="($racek)" />
					<IfCondition failOnCondition="false" condition="$this.id == $ptacek">
						<Expression expressions="$amIInitiator = true" />
					</IfCondition>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;bench&apos;" prune="true" negprune="unknown" Parent="" Child="$bench" Data="" />
					</GraphSearch>
					<StanceElement smartObject="$bench" stance="sitting" allowAny="false" enabled="true">
						<Sequence>
							<WaitAction />
							<Function_speech_schedulerPolylog alias="&apos;transitionsfromai_bogStandartQuestIngame&apos;" amIInitiator="$amIInitiator" animationApproach="$enum:animationApproach.ingameDialogPoseAndAnimations" areaForPlayer="" npcs="$participants" nodeLabel="20708034" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</StanceElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="amIInitiator" comment="" />
				<Variable name="bench" comment="" />
				<Variable name="participants" comment="" />
				<Variable name="ptacek" comment="" />
				<Variable name="racek" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExecuteLua>
						<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</VarOperation>
						<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</VarOperation>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</IfCondition>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Function_speech_schedulerPolylog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerPolylog>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</StanceElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="forcePolylog" is_function="0">
		<Variables>
			<Variable name="dialogParameters" type="dialog:parameters:initiator" values="" isPersistent="0" form="single" />
			<Variable name="participants" type="wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;participant&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$participants" saveVersion="2" />
					</GraphSearch>
					<VarOperation varName="$participants" targetVarName="" operation="PushBack" argument="($__player)" />
					<Synchronize SemaphoreCount="6" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;bard&apos;" RunLogic="KeepRunning">
						<Selector>
							<Sequence>
								<Function_speech_getParametersFromPreset preset="$enum:dialogPreset.fader" dialogParameters="$dialogParameters" nodeLabel="45758785" />
								<Expression expressions="$dialogParameters.hideNearbyNpcs = false" />
								<Function_speech_polylogInitiator alias="&apos;bardPrototype&apos;" context="$__null" customParameters="$dialogParameters" metarole="" participants="$participants" preset="$enum:dialogPreset.ignored" nodeLabel="63069996" />
							</Sequence>
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Selector>
					</Synchronize>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="dialogParameters" comment="" />
				<Variable name="participants" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
						<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</VarOperation>
						<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_speech_getParametersFromPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_getParametersFromPreset>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<Function_speech_polylogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_polylogInitiator>
								</Sequence>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Selector>
						</Synchronize>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="fakeDialogAnimations" is_function="0">
		<Variables>
			<Variable name="message" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Loop count="-1">
					<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$message" senderInfo="" inbox="&apos;kcd1_string_no_rules&apos;" condition="" answerVar="">
						<Sequence>
							<Wait duration="&apos;0&apos;" timeType="GameTime" doFail="false" variation="&apos;1200&apos;" skipInLOD="false" />
							<RandomGate opensWithChance="0.800000" saveVersion="2">
								<Then canSkip="1">
									<Switch>
										<IfCondition failOnCondition="false" condition="$message == &apos;positive&apos;">
											<RandomGate opensWithChance="0.500000" saveVersion="2">
												<Then canSkip="1">
													<RandomGate opensWithChance="0.500000" saveVersion="2">
														<Then canSkip="1">
															<AnimationAction fragment="&apos;ADLG_Laugh&apos;" tags="" eventReferenceObject="" alignObject="" alignHelper="-2" context="" keepContext="false" />
														</Then>
														<Else canSkip="1">
															<AnimationAction fragment="&apos;ADLG_You&apos;" tags="" eventReferenceObject="" alignObject="" alignHelper="-2" context="" keepContext="false" />
														</Else>
													</RandomGate>
												</Then>
												<Else canSkip="1">
													<AnimationAction fragment="&apos;ADLG_Agree&apos;" tags="" eventReferenceObject="" alignObject="" alignHelper="-2" context="" keepContext="false" />
												</Else>
											</RandomGate>
										</IfCondition>
										<IfCondition failOnCondition="false" condition="$message == &apos;neutral&apos;">
											<RandomGate opensWithChance="0.500000" saveVersion="2">
												<Then canSkip="1">
													<AnimationAction fragment="&apos;ADLG_Point&apos;" tags="" eventReferenceObject="" alignObject="" alignHelper="-2" context="" keepContext="false" />
												</Then>
												<Else canSkip="1">
													<AnimationAction fragment="&apos;ADLG_Agree&apos;" tags="" eventReferenceObject="" alignObject="" alignHelper="-2" context="" keepContext="false" />
												</Else>
											</RandomGate>
										</IfCondition>
										<IfCondition failOnCondition="false" condition="$message == &apos;tired&apos;">
											<RandomGate opensWithChance="0.500000" saveVersion="2">
												<Then canSkip="1">
													<AnimationAction fragment="&apos;ADLG_Think&apos;" tags="" eventReferenceObject="" alignObject="" alignHelper="-2" context="" keepContext="false" />
												</Then>
												<Else canSkip="1">
													<AnimationAction fragment="&apos;ADLG_Confusion&apos;" tags="" eventReferenceObject="" alignObject="" alignHelper="-2" context="" keepContext="false" />
												</Else>
											</RandomGate>
										</IfCondition>
										<IfCondition failOnCondition="false" condition="$message == &apos;negative&apos;">
											<RandomGate opensWithChance="0.500000" saveVersion="2">
												<Then canSkip="1">
													<RandomGate opensWithChance="0.500000" saveVersion="2">
														<Then canSkip="1">
															<AnimationAction fragment="&apos;ADLG_Frustration&apos;" tags="" eventReferenceObject="" alignObject="" alignHelper="-2" context="" keepContext="false" />
														</Then>
														<Else canSkip="1">
															<AnimationAction fragment="&apos;ADLG_Threat&apos;" tags="" eventReferenceObject="" alignObject="" alignHelper="-2" context="" keepContext="false" />
														</Else>
													</RandomGate>
												</Then>
												<Else canSkip="1">
													<RandomGate opensWithChance="0.500000" saveVersion="2">
														<Then canSkip="1">
															<AnimationAction fragment="&apos;ADLG_Disagree&apos;" tags="" eventReferenceObject="" alignObject="" alignHelper="-2" context="" keepContext="false" />
														</Then>
														<Else canSkip="1">
															<AnimationAction fragment="&apos;ADLG_Deny&apos;" tags="" eventReferenceObject="" alignObject="" alignHelper="-2" context="" keepContext="false" />
														</Else>
													</RandomGate>
												</Else>
											</RandomGate>
										</IfCondition>
									</Switch>
								</Then>
								<Else canSkip="1">
									<Success />
								</Else>
							</RandomGate>
						</Sequence>
					</ProcessMessage>
				</Loop>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="message" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
								<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<OutputBreakpoints />
																</AnimationAction>
															</Then>
															<Else>
																<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<OutputBreakpoints />
																</AnimationAction>
															</Else>
														</RandomGate>
													</Then>
													<Else>
														<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<OutputBreakpoints />
														</AnimationAction>
													</Else>
												</RandomGate>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<OutputBreakpoints />
														</AnimationAction>
													</Then>
													<Else>
														<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<OutputBreakpoints />
														</AnimationAction>
													</Else>
												</RandomGate>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<OutputBreakpoints />
														</AnimationAction>
													</Then>
													<Else>
														<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<OutputBreakpoints />
														</AnimationAction>
													</Else>
												</RandomGate>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<OutputBreakpoints />
																</AnimationAction>
															</Then>
															<Else>
																<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<OutputBreakpoints />
																</AnimationAction>
															</Else>
														</RandomGate>
													</Then>
													<Else>
														<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<OutputBreakpoints />
																</AnimationAction>
															</Then>
															<Else>
																<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<OutputBreakpoints />
																</AnimationAction>
															</Else>
														</RandomGate>
													</Else>
												</RandomGate>
											</IfCondition>
										</Switch>
									</Then>
									<Else>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Else>
								</RandomGate>
							</Sequence>
						</ProcessMessage>
					</Loop>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="requestDialog" is_function="0">
		<Variables>
			<Variable name="context" type="_float" values="" isPersistent="0" form="associative" />
			<Variable name="dialogParameters" type="dialog:parameters:initiator" values="" isPersistent="0" form="single" />
			<Variable name="dialogPreset" type="enum:dialogPreset" values="" isPersistent="0" form="single" />
			<Variable name="gossip" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="recipient" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="recipients" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="synchronized" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="t_alias" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="t_delay" type="_string" values="&apos;0s&apos;" isPersistent="0" form="single" />
			<Variable name="t_dialogParticipants" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="t_dialogType" type="_string" values="&apos;chat&apos;" isPersistent="0" form="single" />
			<Variable name="t_metarole" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="waitABitAfterDialog" type="_bool" values="false" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Parallel successMode="Any" failureMode="Any">
							<Selector>
								<Sequence>
									<Function_walkAround nodeLabel="90283082" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Sequence>
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Selector>
							<Selector>
								<Sequence>
									<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;passOut&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									</GraphSearch>
									<EntityContext context="CarryLivingActor" target="$this.id">
										<Sequence>
											<Expression expressions="$waitABitAfterDialog = true" />
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										</Sequence>
									</EntityContext>
								</Sequence>
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Selector>
							<Loop count="-1">
								<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
									<Child canSkip="1">
										<Sequence>
											<Selector>
												<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkDataFilter tag="&apos;dialogTest_delay&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$t_delay" />
												</GraphSearch>
												<Sequence>
													<LogToConsole LogLevel="Error" Message="&apos;Delay Reading Failed&apos;" />
													<Expression expressions="$t_delay = &apos;0s&apos;" />
												</Sequence>
											</Selector>
											<Selector>
												<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkDataFilter tag="&apos;dialogTest_alias&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$t_alias" />
												</GraphSearch>
												<LogToConsole LogLevel="Error" Message="&apos;Alias Reading Failed&apos;" />
											</Selector>
											<Selector>
												<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkDataFilter tag="&apos;dialogTest_metarole&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$t_metarole" />
												</GraphSearch>
												<LogToConsole LogLevel="Error" Message="&apos;Metarole Reading Failed&apos;" />
											</Selector>
											<Selector>
												<Sequence>
													<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
														<LinkTagFilter tag="&apos;dialogTest_recipient&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
														<Nodalyzer Quantifiers="ForAll" Parent="" Child="$recipients" saveVersion="2" />
													</GraphSearch>
													<SuppressFailure>
														<Sequence>
															<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																<LinkTagFilter tag="&apos;dialogTest_playerRecipient&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
															</GraphSearch>
															<VarOperation varName="$recipients" targetVarName="" operation="PushBack" argument="($__player)" />
														</Sequence>
													</SuppressFailure>
												</Sequence>
												<VarOperation varName="$recipients" targetVarName="" operation="PushBack" argument="($__player)" />
											</Selector>
											<Selector>
												<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkDataFilter tag="&apos;dialogTest_type&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$t_dialogType" />
												</GraphSearch>
												<Success />
											</Selector>
											<Wait duration="$t_delay" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
											<Selector>
												<Sequence>
													<Switch>
														<IfCondition failOnCondition="false" condition="$t_dialogType == &apos;chat&apos;">
															<Expression expressions="$dialogPreset = $enum:dialogPreset.chat" />
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$t_dialogType == &apos;player_ingame&apos;">
															<Expression expressions="$dialogPreset = $enum:dialogPreset.ingame" />
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$t_dialogType == &apos;forcedNormal&apos;">
															<Expression expressions="$dialogPreset = $enum:dialogPreset.fader" />
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$t_dialogType == &apos;npcToNpc_noMove&apos;">
															<Expression expressions="$dialogPreset = $enum:dialogPreset.ingame" />
														</IfCondition>
													</Switch>
													<Function_speech_getParametersFromPreset preset="$dialogPreset" dialogParameters="$dialogParameters" nodeLabel="15568996" />
													<SuppressFailure>
														<Sequence>
															<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																<LinkTagFilter tag="&apos;dialogTest_notImportant&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
															</GraphSearch>
															<Expression expressions="$dialogParameters.important = false" />
														</Sequence>
													</SuppressFailure>
													<SuppressFailure>
														<Sequence>
															<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																<LinkTagFilter tag="&apos;dialogTest_testGossip&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
															</GraphSearch>
															<Expression expressions="$gossip = true" />
														</Sequence>
													</SuppressFailure>
													<SuppressFailure>
														<Sequence>
															<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																<LinkTagFilter tag="&apos;dialogTest_synchronized&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
															</GraphSearch>
															<Expression expressions="$synchronized = true" />
														</Sequence>
													</SuppressFailure>
													<Expression expressions="$context[&apos;contextvar&apos;] = 1" />
													<IfElseCondition failOnCondition="false" condition="$synchronized" saveVersion="2">
														<Then canSkip="1">
															<Function_speech_schedulerPolylog_initiator alias="$t_alias" animationApproach="$enum:animationApproach.tryDialogAnimations" context="$context" customParameters="$dialogParameters" metarole="$t_metarole" participants="$recipients" participantsMetaroles="" preset="$enum:dialogPreset.ignored" nodeLabel="18172060" />
														</Then>
														<Else canSkip="1">
															<IfElseCondition failOnCondition="false" condition="$gossip" saveVersion="2">
																<Then canSkip="1">
																	<Function_speech_dialogInitiator alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="$context" customParameters="" metarole="&apos;GOSSIP&apos;" preset="$enum:dialogPreset.ingame" recipient="$recipients[0]" recipientMetaroles="&apos;GOSSIP&apos;" nodeLabel="66064191" />
																</Then>
																<Else canSkip="1">
																	<Function_speech_polylogInitiator alias="$t_alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="$context" customParameters="$dialogParameters" metarole="$t_metarole" participants="$recipients" participantsMetaroles="" preset="$enum:dialogPreset.ignored" nodeLabel="47113964" />
																</Else>
															</IfElseCondition>
														</Else>
													</IfElseCondition>
													<IfCondition failOnCondition="false" condition="$waitABitAfterDialog">
														<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
													</IfCondition>
												</Sequence>
												<LogToConsole LogLevel="Error" Message="&apos;dialogInitiator Failed&apos;" />
											</Selector>
										</Sequence>
									</Child>
									<OnFail canSkip="1">
										<VarOperation varName="$recipients" targetVarName="" operation="Reinit" argument="" />
									</OnFail>
								</FuseBox>
							</Loop>
						</Parallel>
					</Child>
					<OnSuccess canSkip="1">
						<Callback_empty EventName="&apos;Success&apos;" />
					</OnSuccess>
					<OnFail canSkip="1">
						<Callback_empty EventName="&apos;Fail&apos;" />
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="empty" EventSet="resultNotification">
			<Variables>
				<Variable name="context" comment="" />
				<Variable name="dialogParameters" comment="" />
				<Variable name="dialogPreset" comment="" />
				<Variable name="gossip" comment="" />
				<Variable name="recipient" comment="" />
				<Variable name="recipients" comment="" />
				<Variable name="synchronized" comment="" />
				<Variable name="t_alias" comment="" />
				<Variable name="t_delay" comment="" />
				<Variable name="t_dialogParticipants" comment="" />
				<Variable name="t_dialogType" comment="" />
				<Variable name="t_metarole" comment="" />
				<Variable name="waitABitAfterDialog" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_walkAround hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_walkAround>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Selector>
								<Selector hasInputBreakpoint="0" comment="ragdoll chat" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</EntityContext>
									</Sequence>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Selector>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Child>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkDataFilter>
													</GraphSearch>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LogToConsole>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Sequence>
												</Selector>
												<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkDataFilter>
													</GraphSearch>
													<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LogToConsole>
												</Selector>
												<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkDataFilter>
													</GraphSearch>
													<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LogToConsole>
												</Selector>
												<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</LinkTagFilter>
															<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
															</Nodalyzer>
														</GraphSearch>
														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</LinkTagFilter>
																</GraphSearch>
																<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</VarOperation>
															</Sequence>
														</SuppressFailure>
													</Sequence>
													<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</VarOperation>
												</Selector>
												<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkDataFilter>
													</GraphSearch>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Selector>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
												<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
														</Switch>
														<Function_speech_getParametersFromPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_speech_getParametersFromPreset>
														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</LinkTagFilter>
																</GraphSearch>
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</Sequence>
														</SuppressFailure>
														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</LinkTagFilter>
																</GraphSearch>
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</Sequence>
														</SuppressFailure>
														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</LinkTagFilter>
																</GraphSearch>
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</Sequence>
														</SuppressFailure>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
														<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_schedulerPolylog_initiator>
															</Then>
															<Else>
																<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Then>
																		<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_speech_dialogInitiator>
																	</Then>
																	<Else>
																		<Function_speech_polylogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_speech_polylogInitiator>
																	</Else>
																</IfElseCondition>
															</Else>
														</IfElseCondition>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</IfCondition>
													</Sequence>
													<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LogToConsole>
												</Selector>
											</Sequence>
										</Child>
										<OnFail>
											<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</VarOperation>
										</OnFail>
									</FuseBox>
								</Loop>
							</Parallel>
						</Child>
						<OnSuccess>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnSuccess>
						<OnFail>
							<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Callback_empty>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npcIngameDialog_reciever_wait" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="lockName" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="target" type="wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Function_waitingForNpcDialog lockName="$lockName" target="$target" nodeLabel="11610448" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="waitForNpcDialog" EventSet="">
			<Variables>
				<Variable name="lockName" comment="" />
				<Variable name="target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Function_waitingForNpcDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_waitingForNpcDialog>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npcIngameDialog_initiator_waitAndForce" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="place" type="wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="receiver" type="wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Parallel successMode="Any" failureMode="Any">
						<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						<ExactMove directionType="AlignWithEntity" directionSpecification="$place" animationTriggerDist="0.150000" precise="false" changeNPCState="true" destinationSpecification="$place" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					</Parallel>
					<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$alias&apos;" RunLogic="KeepRunning">
						<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
							<Child canSkip="1">
								<Function_speech_dialogInitiator alias="$alias" context="$__null" customParameters="$__null" metarole="" preset="$enum:dialogPreset.ingame" recipient="$receiver" nodeLabel="23944486" />
							</Child>
							<OnSuccess canSkip="1">
								<Callback_empty EventName="&apos;Success&apos;" />
							</OnSuccess>
							<OnFail canSkip="1">
								<Callback_empty EventName="&apos;Fail&apos;" />
							</OnFail>
						</FuseBox>
					</Synchronize>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="waitAndInitiateNpcDialog" EventSet="resultNotification">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="place" comment="" />
				<Variable name="receiver" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExactMove>
						</Parallel>
						<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child>
									<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_dialogInitiator>
								</Child>
								<OnSuccess>
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
								</OnSuccess>
								<OnFail>
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
								</OnFail>
							</FuseBox>
						</Synchronize>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pub_attraction" is_function="0">
		<Variables>
			<Variable name="message" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="now" type="_int64" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GetTime TimeType="WorldTime" OutVar="$now" Delta="" />
					<Concatenation OutString="$message" Pattern="&apos;I chose pub with attraction. Time: $now&apos;" />
					<LogToConsole LogLevel="Error" Message="&apos;$message&apos;" />
					<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="message" comment="" />
				<Variable name="now" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetTime>
						<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Concatenation>
						<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LogToConsole>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="well_repulsion" is_function="0">
		<Variables>
			<Variable name="message" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="now" type="_int64" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GetTime TimeType="WorldTime" OutVar="$now" Delta="" />
					<Concatenation OutString="$message" Pattern="&apos;I chose well with repulsion. Time: $now&apos;" />
					<LogToConsole LogLevel="Error" Message="&apos;$message&apos;" />
					<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="message" comment="" />
				<Variable name="now" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetTime>
						<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Concatenation>
						<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LogToConsole>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="requestNpcToNpcIngamePolylog_initiator" is_function="0">
		<Variables>
			<Variable name="numberOfParticipants" type="_int" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="initiatorTagpoint" type="wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="receivers" type="wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<IfCondition failOnCondition="false" condition="$initiatorTagpoint ~= $__null">
						<Parallel successMode="Any" failureMode="Any">
							<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							<ExactMove directionType="AlignWithEntity" directionSpecification="$initiatorTagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" destinationSpecification="$initiatorTagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
						</Parallel>
					</IfCondition>
					<Expression expressions="$numberOfParticipants = #receivers + 1" />
					<Synchronize SemaphoreCount="$numberOfParticipants" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$alias&apos;" RunLogic="KeepRunning">
						<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
							<Child canSkip="1">
								<Function_speech_dialogInitiator alias="$alias" context="$__null" customParameters="$__null" metarole="" preset="$enum:dialogPreset.ingame" recipient="$receivers" nodeLabel="23321037" />
							</Child>
							<OnSuccess canSkip="1">
								<Callback_empty EventName="&apos;Success&apos;" />
							</OnSuccess>
							<OnFail canSkip="1">
								<Callback_empty EventName="&apos;Fail&apos;" />
							</OnFail>
						</FuseBox>
					</Synchronize>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="npcPolylogInitiator" EventSet="resultNotification">
			<Variables>
				<Variable name="numberOfParticipants" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="initiatorTagpoint" comment="" />
				<Variable name="receivers" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
								<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
							</Parallel>
						</IfCondition>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child>
									<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_dialogInitiator>
								</Child>
								<OnSuccess>
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
								</OnSuccess>
								<OnFail>
									<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Callback_empty>
								</OnFail>
							</FuseBox>
						</Synchronize>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="requestNpcToNpcIngamePolylog_receiver" is_function="0">
		<Variables>
			<Variable name="iterator" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="myTagpoint" type="wuid" values="" isPersistent="0" form="single" />
			<Variable name="numberOfParticipants" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="receiver" type="wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="receivers" type="wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="receiversTagpoints" type="wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<IfElseCondition failOnCondition="false" condition="#receiversTagpoints &gt; 0" saveVersion="2">
						<Then canSkip="1">
							<ForEach startIndex="0" step="1" array="$receivers" iterator="$iterator" value="$receiver" break="">
								<IfCondition failOnCondition="false" condition="$receiver == this.id">
									<Expression expressions="$myTagpoint = $receiversTagpoints[$iterator]" />
								</IfCondition>
							</ForEach>
						</Then>
						<Else canSkip="1">
							<Expression expressions="$myTagpoint = $__null" />
						</Else>
					</IfElseCondition>
					<Expression expressions="$numberOfParticipants = #receivers + 1" />
					<Function_waitForNpcDialog lockCount="$numberOfParticipants" lockName="$alias" target="$myTagpoint" nodeLabel="42987693" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="npcPolylogReceiver" EventSet="">
			<Variables>
				<Variable name="iterator" comment="" />
				<Variable name="myTagpoint" comment="" />
				<Variable name="numberOfParticipants" comment="" />
				<Variable name="receiver" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="receivers" comment="" />
				<Variable name="receiversTagpoints" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<ForEach hasInputBreakpoint="0" comment="The tagpoint for me should be under the same index as me" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
								</ForEach>
							</Then>
							<Else>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Else>
						</IfElseCondition>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<Function_waitForNpcDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_waitForNpcDialog>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="waitWithDisabledTwins" is_function="0">
		<Variables>
			<Variable name="animSpot" type="wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="speech_disableTwins" target="">
					<Selector>
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;pray&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Sequence>
								<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;praySpot&apos;" prune="true" negprune="unknown" Parent="" Child="$animSpot" Data="" />
								</GraphSearch>
								<UnstanceAction unstance="PrayStanding" locationObject="$animSpot" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</Sequence>
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;lie&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;lyingspot&apos;" prune="true" negprune="unknown" Parent="" Child="$animSpot" Data="" />
							</GraphSearch>
							<StanceElement smartObject="$animSpot" stance="lying" allowAny="false">
								<Sequence>
									<WaitAction />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Sequence>
							</StanceElement>
						</Sequence>
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;stand&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Selector>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="animSpot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<OutputBreakpoints />
									</UnstanceAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Sequence>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</StanceElement>
							</Sequence>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Selector>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="patrol" is_function="0">
		<Variables>
			<Variable name="currentTagpoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="lastTagpoint" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$lastTagpoint = $this.id" />
					<Loop count="-1">
						<Sequence>
							<GraphSearch Origin="$lastTagpoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;next&apos;" prune="true" negprune="unknown" Parent="" Child="$currentTagpoint" Data="" />
							</GraphSearch>
							<ExactMove directionType="AlignWithEntity" directionSpecification="$currentTagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="false" destinationSpecification="$currentTagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							<Expression expressions="$lastTagpoint = $currentTagpoint" />
						</Sequence>
					</Loop>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="currentTagpoint" comment="" />
				<Variable name="lastTagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-50" editorPosY="20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
						</Loop>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="aplayAnimationsFromQuest" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="foo" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="locationObject" type="_wuid" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="unstance" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="unstanceFromQuests" EventSet="">
			<Variables>
				<Variable name="foo" comment="" />
				<Variable name="locationObject" comment="" />
				<Variable name="unstance" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="poseForDialog" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="ingameDialog_standing_02" locationObject="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="moveInFormation_simple" is_function="0">
		<Variables>
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="context" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="followFormationParams" type="followFormationParams" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="formationType" type="enum:formationType" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Switch>
						<IfCondition failOnCondition="false" condition="$formationType == $enum:formationType.KeepDistance">
							<Expression expressions="$followFormationParams.formation.policy = $enum:formationMode.KeepDistance" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$formationType == $enum:formationType.MoveHistory">
							<Expression expressions="$followFormationParams.formation.policy = $enum:formationMode.MoveHistory" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$formationType == $enum:formationType.KeepShape">
							<Expression expressions="$followFormationParams.formation.policy = $enum:formationMode.KeepShape" />
						</IfCondition>
						<DefaultBranch>
							<Expression expressions="$followFormationParams.formation.policy = $enum:formationMode.Relaxed" />
						</DefaultBranch>
					</Switch>
					<IfElseCondition failOnCondition="false" condition="$horse ~= $__null" saveVersion="2">
						<Then canSkip="1">
							<StanceElement smartObject="$horse" stance="horse" allowAny="false">
								<Sequence>
									<WaitAction />
									<Function_moveInFormation_inFormation destination="$destination" followFormationParams="$followFormationParams" nodeLabel="86268303" />
								</Sequence>
							</StanceElement>
						</Then>
						<Else canSkip="1">
							<Function_xxxtest_inFormation destination="$destination" followFormationParams="$followFormationParams" nodeLabel="33064373" />
						</Else>
					</IfElseCondition>
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Function_moveInFormation_inFormation destination="$destination" followFormationParams="$followFormationParams" nodeLabel="21313431" />
		</ForestContainer>
		<EditorData Signature="formationSimple" EventSet="formationSimple">
			<Variables>
				<Variable name="horse" comment="" />
				<Variable name="context" comment="" />
				<Variable name="destination" comment="" />
				<Variable name="followFormationParams" comment="" />
				<Variable name="formationType" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="90" editorPosY="-170" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<DefaultBranch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</DefaultBranch>
						</Switch>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
										<Function_moveInFormation_inFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_moveInFormation_inFormation>
									</Sequence>
								</StanceElement>
							</Then>
							<Else>
								<Function_xxxtest_inFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_xxxtest_inFormation>
							</Else>
						</IfElseCondition>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Function_moveInFormation_inFormation editorPosX="850" editorPosY="300" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Function_moveInFormation_inFormation>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="xxxtest_formation" is_function="1">
		<Variables>
			<Variable name="eliska" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="formationLock" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="formationWUID" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Parameters>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="followFormationParams" type="followFormationParams" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<MakeFormation FormationName="$followFormationParams.formation.type" HandleVariable="$formationWUID" />
			</OnInit>
			<Behavior canSkip="1">
				<Parallel successMode="All" failureMode="All">
					<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
						<Child canSkip="1">
							<Sequence>
								<Concatenation OutString="$formationLock" Pattern="&apos;followNPC_leader_$this.id&apos;" />
								<SetExternalLock LockManagerType="Global" Locked="false" LockName="&apos;$formationLock&apos;" />
								<IfElseCondition failOnCondition="false" condition="$followFormationParams.formation.speedLimit == $__null" saveVersion="2">
									<Then canSkip="1">
										<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
									</Then>
									<Else canSkip="1">
										<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="$followFormationParams.formation.speedLimit" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
									</Else>
								</IfElseCondition>
							</Sequence>
						</Child>
						<OnSuccess canSkip="1">
							<Sequence>
								<EndFormation FormationHandle="$formationWUID" />
								<SetExternalLock LockManagerType="Global" Locked="true" LockName="&apos;$formationLock&apos;" />
							</Sequence>
						</OnSuccess>
					</FuseBox>
					<Sequence>
						<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;dialogTest_recipient&apos;" prune="true" negprune="unknown" Parent="" Child="$eliska" Data="" />
						</GraphSearch>
						<Expression expressions="$participants[0] = $eliska &#10;$participants[1] = $__player" />
						<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						<Function_speech_polylogInitiator alias="&apos;olbram_forced&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" participants="$participants" participantsMetaroles="" preset="$enum:dialogPreset.chat" nodeLabel="66498280" />
					</Sequence>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="eliska" comment="" />
				<Variable name="formationLock" comment="" />
				<Variable name="formationWUID" comment="" />
				<Variable name="participants" comment="" />
				<Variable name="destination" comment="" />
				<Variable name="followFormationParams" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<MakeFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</MakeFormation>
				</OnInit>
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Concatenation>
									<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</SetExternalLock>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Move>
										</Then>
										<Else>
											<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Move>
										</Else>
									</IfElseCondition>
								</Sequence>
							</Child>
							<OnSuccess>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<EndFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</EndFormation>
									<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</SetExternalLock>
								</Sequence>
							</OnSuccess>
						</FuseBox>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<Function_speech_polylogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_polylogInitiator>
						</Sequence>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="xxxtest_inFormation" is_function="1">
		<Variables />
		<Parameters>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="followFormationParams" type="followFormationParams" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<IfElseCondition failOnCondition="false" condition="$followFormationParams.formation.leader == $this.id" saveVersion="2">
					<Then canSkip="1">
						<Function_xxxtest_formation destination="$destination" followFormationParams="$followFormationParams" nodeLabel="24698031" />
					</Then>
					<Else canSkip="1">
						<Function_moveInFormation_slave followFormationParams="$followFormationParams" nodeLabel="32787505" />
					</Else>
				</IfElseCondition>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="destination" comment="" />
				<Variable name="followFormationParams" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<IfElseCondition hasInputBreakpoint="0" comment="Is leader?" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<Function_xxxtest_formation hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_xxxtest_formation>
						</Then>
						<Else>
							<Function_moveInFormation_slave hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_moveInFormation_slave>
						</Else>
					</IfElseCondition>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="player_animation" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<AnimationAction fragment="&apos;PrayKneelingBed&apos;" tags="&apos;prayShort&apos;" eventReferenceObject="" alignObject="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<OutputBreakpoints />
						</AnimationAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="runSchedulerMonolog" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Function_speech_schedulerMonolog alias="&apos;barkdialoganimation_barkSAnimacemi&apos;" animationApproach="$enum:animationApproach.tryDialogAnimations" context="" metarole="" nodeLabel="93854190" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_speech_schedulerMonolog>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="ptacek_forceChat" is_function="0">
		<Variables>
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Function_speech_dialogInitiator alias="&apos;dialogTraining3Types_ptacekChatujeNaHraceAtJdeZaNim&apos;" context="" customParameters="" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="36947494" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="participants" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_speech_dialogInitiator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="beInjured" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="QuestHunterInjuryIdleLie" locationObject="" slaveObject="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npcPolylog" is_function="0">
		<Variables>
			<Variable name="arrayFindResult" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="break" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="index" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="lockCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="place" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="placeCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="placeToNpc" type="_wuid" values="wuid" isPersistent="0" form="associative" />
			<Variable name="potencialNpc" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="teleportPlace" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="wtfPlaces" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="important" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="npcs" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="places" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="teleportPlaces" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$lockCount = #npcs &#10;$placeCount = #places" />
					<IfElseCondition failOnCondition="false" condition="$placeCount == 1" saveVersion="2">
						<Then canSkip="1">
							<Sequence>
								<GraphSearch Origin="$places[0]" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;teleport&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									<Nodalyzer Quantifiers="ForAll" Parent="" Child="$wtfPlaces" saveVersion="2" />
								</GraphSearch>
								<For startIndex="0" endIndex="-1" step="1" array="$wtfPlaces" iterator="" value="$teleportPlace" break="">
									<Sequence>
										<GraphSearch Origin="$teleportPlace" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;setting&apos;" prune="true" negprune="unknown" Parent="" Child="$npc" Data="" />
										</GraphSearch>
										<IfCondition failOnCondition="false" condition="$npc == $this.id">
											<Expression expressions="$place =$teleportPlace" />
										</IfCondition>
									</Sequence>
								</For>
							</Sequence>
						</Then>
						<Else canSkip="1">
							<For startIndex="0" endIndex="-1" step="1" array="$npcs" iterator="$index" value="$npc" break="$break">
								<IfCondition failOnCondition="false" condition="$this.id == $npc">
									<Expression expressions="$place = $places[$index] &#10;$break = true" />
								</IfCondition>
							</For>
						</Else>
					</IfElseCondition>
					<IfCondition failOnCondition="false" condition="$place == $__null">
						<ErrorNode Message="&apos;npcPolylog bad input, use array of places or cutsceneHolder with teleport links&apos;" />
					</IfCondition>
					<IfElseCondition failOnCondition="false" condition="$index==0" saveVersion="2">
						<Then canSkip="1">
							<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
								<Child canSkip="1">
									<Function_speech_schedulerPolylog_initiator alias="$alias" animationApproach="$enum:animationApproach.tryDialogAnimations" context="" customParameters="" metarole="" participants="$npcs" participantsMetaroles="" preset="$enum:dialogPreset.ingame" nodeLabel="73306436" />
								</Child>
								<OnSuccess canSkip="1">
									<Callback_empty EventName="&apos;Success&apos;" />
								</OnSuccess>
								<OnFail canSkip="1">
									<Callback_empty EventName="&apos;Fail&apos;" />
								</OnFail>
							</FuseBox>
						</Then>
						<Else canSkip="1">
							<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$alias" initiator="$npcs[0]" numberOfParticipants="$lockCount" nodeLabel="28805332" />
						</Else>
					</IfElseCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<LinkTagFilter tag="&apos;setting&apos;" prune="true" negprune="unknown" Parent="" Child="$potencialNpc" Data="" />
			<ExactMove directionType="AlignWithEntity" directionSpecification="$place" animationTriggerDist="0.150000" precise="false" changeNPCState="true" destinationSpecification="$place" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
		</ForestContainer>
		<EditorData Signature="npcPolylog" EventSet="resultNotification">
			<Variables>
				<Variable name="arrayFindResult" comment="" />
				<Variable name="break" comment="" />
				<Variable name="index" comment="" />
				<Variable name="lockCount" comment="" />
				<Variable name="npc" comment="" />
				<Variable name="place" comment="" />
				<Variable name="placeCount" comment="" />
				<Variable name="placeToNpc" comment="" />
				<Variable name="potencialNpc" comment="" />
				<Variable name="teleportPlace" comment="" />
				<Variable name="wtfPlaces" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="important" comment="" />
				<Variable name="npcs" comment="" />
				<Variable name="places" comment="" />
				<Variable name="teleportPlaces" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
										</Nodalyzer>
									</GraphSearch>
									<For hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="1">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
											</GraphSearch>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</IfCondition>
										</Sequence>
									</For>
								</Sequence>
							</Then>
							<Else>
								<For hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
								</For>
							</Else>
						</IfElseCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ErrorNode>
						</IfCondition>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Child>
										<Function_speech_schedulerPolylog_initiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_schedulerPolylog_initiator>
									</Child>
									<OnSuccess>
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
									</OnSuccess>
									<OnFail>
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
									</OnFail>
								</FuseBox>
							</Then>
							<Else>
								<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerPolylog_receiver>
							</Else>
						</IfElseCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<LinkTagFilter editorPosX="1560" editorPosY="-90" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</LinkTagFilter>
				<ExactMove editorPosX="-198" editorPosY="343" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</ExactMove>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="unstanceTest" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="butcherSmokeHouseCheck" locationObject="" slaveObject="" />
					<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="40" editorPosY="-20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="receiveDialog" is_function="0">
		<Variables>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="initiator" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="numberOfParticipants" type="_int" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;dialogTest_numberOfParticipants&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$numberOfParticipants" />
					</GraphSearch>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;dialogTest_alias&apos;" condition="true" prune="true" negprune="unknown" Parent="" Child="" Data="$alias" />
					</GraphSearch>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;dialogTest_initiator&apos;" prune="true" negprune="unknown" Parent="" Child="$initiator" Data="" />
					</GraphSearch>
					<Function_speech_schedulerPolylog_receiver aliasOrMetarole="$alias" initiator="$initiator" numberOfParticipants="$numberOfParticipants" nodeLabel="53234045" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="initiator" comment="" />
				<Variable name="numberOfParticipants" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Function_speech_schedulerPolylog_receiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_schedulerPolylog_receiver>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="passOut" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AddBuff SoulWUID="$this.id" BuffGUID="&apos;f8d60fe4-e2c1-420a-946a-213e1cd09264&apos;" />
			</Behavior>
		</Root>
		<ForestContainer>
			<DecoratorBuff BuffId="&apos;f8d60fe4-e2c1-420a-946a-213e1cd09265&apos;" SoulWUID="$this.id">
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</DecoratorBuff>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="30" editorPosY="-40" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</AddBuff>
				</Behavior>
			</Root>
			<Forest>
				<DecoratorBuff editorPosX="280" editorPosY="350" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</DecoratorBuff>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="beEnemy" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<SetReputationNPC NPC="$this.id" reputationChange="sworn_enemy" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="10" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SetReputationNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SetReputationNPC>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="beMuted" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="speech_mute" target="$this.id">
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="waitOnSmartObject" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExactMove directionType="AlignWithEntity" directionSpecification="$__object.id" animationTriggerDist="0.150000" precise="false" changeNPCState="true" destinationSpecification="$__object.id" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExactMove>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sitAndBeInDialogStance" is_function="0">
		<Variables>
			<Variable name="chair" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Selector>
						<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;chair&apos;" prune="true" negprune="unknown" Parent="" Child="$chair" Data="" />
						</GraphSearch>
						<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Selector>
					<IfCondition failOnCondition="false" condition="$chair ~= $__null">
						<StanceElement smartObject="$chair" stance="sitting" allowAny="false">
							<Sequence>
								<WaitAction />
								<Loop count="-1">
									<Function_speech_schedulerMonolog alias="&apos;murder_zikmundSpeech&apos;" animationApproach="$enum:animationApproach.tryDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="57577482" />
								</Loop>
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</StanceElement>
					</IfCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="chair" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Selector>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_schedulerMonolog>
									</Loop>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</StanceElement>
						</IfCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="animationsFromAi" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ContinuousSwitch>
					<IfCondition failOnCondition="false" condition="$data">
						<Sequence>
							<AnimationAction fragment="&apos;BehaviorChasingDog&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="!$data">
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</IfCondition>
				</ContinuousSwitch>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="boolReference" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<OutputBreakpoints />
								</AnimationAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</IfCondition>
					</ContinuousSwitch>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="horseMount" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<IfElseCondition failOnCondition="false" condition="$this.id == $__player" saveVersion="2">
					<Then canSkip="1">
						<Sequence>
							<ExecuteLua code="entity.human:ForceMount(XGenAIModule.GetEntityByWUID(data.horse).id)" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Then>
					<Else canSkip="1">
						<StanceElement smartObject="$horse" stance="horse" allowAny="false">
							<Sequence>
								<WaitAction />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</StanceElement>
					</Else>
				</IfElseCondition>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="horse" EventSet="">
			<Variables>
				<Variable name="horse" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExecuteLua>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Then>
						<Else>
							<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</StanceElement>
						</Else>
					</IfElseCondition>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sitAndDrink" is_function="0">
		<Variables>
			<Variable name="beer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="chair" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;chair&apos;" prune="true" negprune="unknown" Parent="" Child="$chair" Data="" />
					</GraphSearch>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;beer&apos;" prune="true" negprune="unknown" Parent="" Child="$beer" Data="" />
					</GraphSearch>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<StanceElement smartObject="$chair" stance="sitting" allowAny="false">
					<Sequence>
						<WaitAction />
						<Loop count="-1">
							<AnimationAction fragment="&apos;Guest_DrinkBeer&apos;" tags="" eventReferenceObject="$this.id" alignObject="" slaveObject="" resourceOverride="">
								<EventData_pickup Slot="$beer" name="&apos;beer&apos;" />
								<EventData_place Slot="$beer" name="&apos;beer&apos;" />
							</AnimationAction>
						</Loop>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="beer" comment="" />
				<Variable name="chair" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-10" editorPosY="120" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
					</Sequence>
				</OnInit>
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<OutputBreakpoints />
									<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</EventData_pickup>
									<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</EventData_place>
								</AnimationAction>
							</Loop>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="zpivanky" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="All" failureMode="All">
					<Loop count="-1">
						<SuppressFailure>
							<Function_speech_schedulerMonolog alias="&apos;nonexclusiveRole_zpivanky&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="32456050" />
						</SuppressFailure>
					</Loop>
					<Loop count="-1">
						<Sequence>
							<SuppressFailure>
								<Function_speech_dialogInitiator alias="&apos;nonexclusiveRole_akustickaKonstanta&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="60302026" />
							</SuppressFailure>
							<Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Loop>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer>
			<Loop count="-1">
				<Function_speech_schedulerMonolog alias="&apos;nonexclusiveRole_zpivanky&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="" subtitlesDown="false" nodeLabel="47483908" />
			</Loop>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="-30" editorPosY="-20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerMonolog>
							</SuppressFailure>
						</Loop>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_dialogInitiator>
								</SuppressFailure>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Loop>
					</Parallel>
				</Behavior>
			</Root>
			<Forest>
				<Loop editorPosX="1700" editorPosY="620" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_speech_schedulerMonolog>
				</Loop>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="unequip" is_function="0">
		<Variables>
			<Variable name="weapon" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="weapons" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="" SubGraph="&apos;inventory&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<ItemClassFilter ClassId="" Category="&apos;melee_weapon.*.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
						<ItemParamFilter Param="Equip" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$weapons" saveVersion="2" />
					</GraphSearch>
					<ForEach startIndex="0" step="1" array="$weapons" iterator="" value="$weapon" break="">
						<UnEquipItem Target="$this.id" item="$weapon" />
					</ForEach>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="weapon" comment="" />
				<Variable name="weapons" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ItemClassFilter hasInputBreakpoint="0" comment="TODO: change" breakpointFlags="0">
								<OutputBreakpoints />
							</ItemClassFilter>
							<ItemParamFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ItemParamFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnEquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnEquipItem>
						</ForEach>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="mount" is_function="0">
		<Variables>
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;horse&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<StanceElement smartObject="$horse" stance="horse" allowAny="false">
					<Sequence>
						<WaitAction />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="horse" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="bark" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Function_speech_schedulerMonolog alias="&apos;testOfSubtitles_ptacekZpevacek&apos;" animationApproach="$enum:animationApproach.tryDialogAnimations" context="" metarole="" subtitlesDown="true" nodeLabel="70375729" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_speech_schedulerMonolog>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="lieDown" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="SheepLying" locationObject="" slaveObject="" />
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="waitForever" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="aulitzUnstance" is_function="0">
		<Variables>
			<Variable name="chairEntity" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;chair&apos;" prune="true" negprune="unknown" Parent="" Child="$chairEntity" Data="" />
					</GraphSearch>
					<StanceElement smartObject="$chairEntity" stance="sitting" allowAny="false" enabled="true">
						<Sequence>
							<UnstanceAction unstance="slouchedBack" locationObject="$chairEntity" slaveObject="" />
							<Wait duration="&apos;1m&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</StanceElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="chairEntity" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-280" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</StanceElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sitOnBed" is_function="0">
		<Variables>
			<Variable name="bedEntity" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;bed&apos;" prune="true" negprune="unknown" Parent="" Child="$bedEntity" Data="" />
					</GraphSearch>
					<StanceElement smartObject="$bedEntity" stance="sitting" allowAny="false" enabled="true">
						<Sequence>
							<UnstanceAction unstance="gentle_right" locationObject="$bedEntity" slaveObject="" />
							<Wait duration="&apos;1m&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</StanceElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="bedEntity" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="50" editorPosY="90" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</StanceElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="sitAndForcePolylog_female" is_function="0">
		<Variables>
			<Variable name="amIInitiator" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="bench" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="katerina" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="pavlena" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExecuteLua code="data.katerina = System.GetEntityByName(&apos;ttro_katerina&apos;).this.id &#10;data.pavlena = System.GetEntityByName(&apos;tvez_pavlena&apos;).this.id" />
					<VarOperation varName="$participants" targetVarName="" operation="PushBack" argument="($katerina)" />
					<VarOperation varName="$participants" targetVarName="" operation="PushBack" argument="($pavlena)" />
					<IfCondition failOnCondition="false" condition="$this.id == $katerina">
						<Expression expressions="$amIInitiator = true" />
					</IfCondition>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;bench&apos;" prune="true" negprune="unknown" Parent="" Child="$bench" Data="" />
					</GraphSearch>
					<StanceElement smartObject="$bench" stance="sitting" allowAny="false" enabled="true">
						<Sequence>
							<WaitAction />
							<Function_speech_schedulerPolylog alias="&apos;transitionsfromai_womenTalk&apos;" amIInitiator="$amIInitiator" animationApproach="$enum:animationApproach.ingameDialogPoseAndAnimations" areaForPlayer="" npcs="$participants" nodeLabel="86663355" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</StanceElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="amIInitiator" comment="" />
				<Variable name="bench" comment="" />
				<Variable name="katerina" comment="" />
				<Variable name="participants" comment="" />
				<Variable name="pavlena" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExecuteLua>
						<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</VarOperation>
						<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</VarOperation>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</IfCondition>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Function_speech_schedulerPolylog hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_schedulerPolylog>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</StanceElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="testForceLook" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Function_speech_schedulerMonolog alias="&apos;substance_monologTest&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="$__player" metarole="" subtitlesDown="true" nodeLabel="49849360" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_speech_schedulerMonolog>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="test_voiceCategory" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;ZAZNAMENAL_ZTRACENOU_VEC&apos;" subtitlesDown="false" nodeLabel="10375118" />
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="&apos;2s&apos;" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_speech_schedulerMonolog>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="noScopeBark" is_function="0">
		<Variables>
			<Variable name="lightSource" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Left" item="$lightSource" allowAny="false" decisionLabel="lightSource" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<GetLightSourceItem Item="$lightSource" />
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<DrawAction WeaponSet="Primary" fullBody="false" tags="" useSelectedWeaponSet="false" />
							<AnyDecorator preset="bothHands_changeEquipment" enabled="true">
								<DoMonologue DecisionId="" DecisionAlias="&apos;itemNoScopePrototyp&apos;" Metaroles="" SoulId="" ForceSubtitles="false" AllowMutedSouls="false" AnimationOverride="DialogControlledItemsAllowed" ContextVariables="" />
							</AnyDecorator>
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="lightSource" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetLightSourceItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetLightSourceItem>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</DrawAction>
								<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<DoMonologue hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</DoMonologue>
								</AnyDecorator>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="followPlayerAndBark" is_function="0">
		<Variables>
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
					<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<Success />
						</Search>
						<Exec canSkip="1">
							<SuppressFailure>
								<Parallel successMode="Any" failureMode="Any">
									<Loop count="-1">
										<SuppressFailure>
											<Sequence>
												<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.tryDialogAnimations" context="" lookAtId="" metarole="&apos;SVEPOMOC_PRVNI_VYZVA&apos;" skipInLod="false" subtitlesDown="false" nodeLabel="55754771" />
												<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</SuppressFailure>
									</Loop>
									<CrimeFollower Target="$__player" Mode="DontBackOff" Role="Main" RelativeSpeedLimit="Dash" DisableGhosting="false" />
								</Parallel>
							</SuppressFailure>
						</Exec>
					</HandContentElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetWeaponsFromWeaponSet>
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Search>
							<Exec>
								<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_speech_schedulerMonolog>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</SuppressFailure>
										</Loop>
										<CrimeFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</CrimeFollower>
									</Parallel>
								</SuppressFailure>
							</Exec>
						</HandContentElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="interruptBarkWithBark" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Sequence>
						<SuppressFailure>
							<DoMonologue DecisionId="" DecisionAlias="&apos;interruptbarkwithbark_interruptbarkwithbark1&apos;" Metaroles="" SoulId="$this.id" ForceSubtitles="false" AllowMutedSouls="false" SkipInLOD="false" AnimationOverride="NoOverride" ContextVariables="" />
						</SuppressFailure>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
					<Sequence>
						<Wait duration="&apos;100ms&apos;" timeType="GameTime" doFail="false" variation="" />
						<SuppressFailure>
							<DoMonologue DecisionId="" DecisionAlias="&apos;interruptbarkwithbark_interruptbarkwithbark2&apos;" Metaroles="" SoulId="$this.id" ForceSubtitles="false" AllowMutedSouls="false" SkipInLOD="false" AnimationOverride="NoOverride" ContextVariables="" />
						</SuppressFailure>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<DoMonologue hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</DoMonologue>
							</SuppressFailure>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<DoMonologue hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</DoMonologue>
							</SuppressFailure>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="chatMaxdistance" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<SuppressFailure>
						<Function_speech_dialogInitiator alias="&apos;chatmaxdistance_chatMaxdistance&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="29415119" />
					</SuppressFailure>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="-60" editorPosY="-20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_dialogInitiator>
						</SuppressFailure>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="kozina" is_function="0">
		<Variables>
			<Variable name="ambushRoot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ambushingPlayer_expectedSide_area" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ambushingPlayer_unexpectedSide_area" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ambushingUdo_area" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ambushingUdo_blockedByPlayer_area" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ambushing_expectedSide_alignSO" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ambushing_unexpectedSide_alignSO" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="expectedSide" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="leaning_alignSO" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="p_ignorePlayerPassingBy" type="_bool" values="" isPersistent="1" form="single" />
			<Variable name="playersMount" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="udo" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="behaviorState" type="enum:hledaniLichtenstejna_kozina_ambushingSomeDrunk" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;asset&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;udo&apos;" prune="true" negprune="unknown" Parent="" Child="$udo" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;kozina_lyingInAmbush_point&apos;" prune="true" negprune="unknown" Parent="" Child="$ambushRoot" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$ambushRoot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;leaning_alignSO&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$leaning_alignSO" />
					</GraphSearch>
					<GraphSearch Origin="$ambushRoot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;ambushing_expectedSide_alignSO&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$ambushing_expectedSide_alignSO" />
					</GraphSearch>
					<GraphSearch Origin="$ambushRoot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;ambushing_unexpectedSide_alignSO&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$ambushing_unexpectedSide_alignSO" />
					</GraphSearch>
					<GraphSearch Origin="$ambushRoot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;ambushingPlayer_expectedSide_area&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$ambushingPlayer_expectedSide_area" />
					</GraphSearch>
					<GraphSearch Origin="$ambushRoot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;ambushingPlayer_unexpectedSide_area&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$ambushingPlayer_unexpectedSide_area" />
					</GraphSearch>
					<GraphSearch Origin="$ambushRoot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;ambushingUdo_area&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$ambushingUdo_area" />
					</GraphSearch>
					<GraphSearch Origin="$ambushRoot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;ambushingUdo_blockedByPlayer_area&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$ambushingUdo_blockedByPlayer_area" />
					</GraphSearch>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<EntityContextElement context="combat_arrangedFight" enabled="true">
					<EntityContextPreset preset="crime_preoccupied" target="">
						<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
							<Child canSkip="1">
								<ContinuousSwitch>
									<IfCondition failOnCondition="false" condition="$behaviorState == $enum:hledaniLichtenstejna_kozina_ambushingSomeDrunk.LyingInAmbush">
										<Sequence>
											<UrgencyDecorator Urgency="Instant">
												<UnstanceAction unstance="LeaningBack" locationObject="$leaning_alignSO" slaveObject="" />
											</UrgencyDecorator>
											<Parallel successMode="Any" failureMode="Any">
												<Sequence>
													<EnsureWuidValid Wuid="$udo" RunLogic="Halt">
														<AreaPresenceGate aiObjects="$udo" area="$ambushingUdo_area" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
															<IsInsideArea Origin="$__player" Area="$ambushingUdo_blockedByPlayer_area" FailSubtMissing="false" saveVersion="2">
																<Else canSkip="1">
																	<Selector>
																		<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;500ms&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;hledaniLichtenstejna_ambushingUdo&apos;" RunLogic="KeepRunning">
																			<Sequence>
																				<InstantCallback_empty EventName="&apos;OnAmbushingUdo&apos;" />
																				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																			</Sequence>
																		</Synchronize>
																		<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																	</Selector>
																</Else>
															</IsInsideArea>
														</AreaPresenceGate>
													</EnsureWuidValid>
													<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
												</Sequence>
												<ContinuousSwitch>
													<IfCondition failOnCondition="false" condition="!$p_ignorePlayerPassingBy">
														<Sequence>
															<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
																<Child canSkip="1">
																	<Parallel successMode="Any" failureMode="Any">
																		<AreaPresenceGate aiObjects="$__player" area="$ambushingPlayer_expectedSide_area" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
																			<Expression expressions="$expectedSide = true" />
																		</AreaPresenceGate>
																		<AreaPresenceGate aiObjects="$__player" area="$ambushingPlayer_unexpectedSide_area" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
																			<Expression expressions="$expectedSide = false" />
																		</AreaPresenceGate>
																	</Parallel>
																</Child>
																<OnSuccess canSkip="1">
																	<Selector>
																		<Sequence>
																			<BuffTagCheck SoulId="$__player" buffAITagId="1" FailWithSubtreeMissing="false" saveVersion="2">
																				<Else canSkip="1">
																					<Fail />
																				</Else>
																			</BuffTagCheck>
																			<IfCondition failOnCondition="false" condition="$expectedSide">
																				<CheckWuidValid wuid="$udo" FailSubtMissing="false" saveVersion="2">
																					<Then canSkip="1">
																						<IsInsideArea Origin="$udo" Area="$ambushingPlayer_expectedSide_area" FailSubtMissing="false" saveVersion="2">
																							<Then canSkip="1">
																								<Fail />
																							</Then>
																						</IsInsideArea>
																					</Then>
																				</CheckWuidValid>
																			</IfCondition>
																			<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;mount&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																				<AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$playersMount" />
																			</GraphSearch>
																			<IfCondition failOnCondition="false" condition="$playersMount ~= $__null">
																				<Fail />
																			</IfCondition>
																			<ActorStateCheck Who="$__player" State="fastTravel" FailWithSubtreeMissing="false" saveVersion="2">
																				<Then canSkip="1">
																					<Fail />
																				</Then>
																			</ActorStateCheck>
																			<IfElseCondition failOnCondition="false" condition="$expectedSide" saveVersion="2">
																				<Then canSkip="1">
																					<InstantCallback_empty EventName="&apos;OnAmbushingPlayer_ExpectedSide&apos;" />
																				</Then>
																				<Else canSkip="1">
																					<InstantCallback_empty EventName="&apos;OnAmbushingPlayer_UnexpectedSide&apos;" />
																				</Else>
																			</IfElseCondition>
																		</Sequence>
																		<Expression expressions="$p_ignorePlayerPassingBy = true" />
																	</Selector>
																</OnSuccess>
															</FuseBox>
															<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
														</Sequence>
													</IfCondition>
													<IfCondition failOnCondition="false" condition="true">
														<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="13.000000" High="13.000000" Negation="true" OpenInMiddle="false" RunLogic="KeepRunning">
															<Expression expressions="$p_ignorePlayerPassingBy = false" />
														</DistanceGate>
													</IfCondition>
												</ContinuousSwitch>
											</Parallel>
										</Sequence>
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$behaviorState == $enum:hledaniLichtenstejna_kozina_ambushingSomeDrunk.AmbushingUdo">
										<ForceLook LookTarget="$udo" DisableVariations="false">
											<Sequence>
												<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_commenceAmbush ambushing_alignSO="$ambushing_expectedSide_alignSO" ambushing_animationTag="&apos;side_right&apos;" nodeLabel="84933862" />
												<InstantCallback_empty EventName="&apos;OnConfrontingUdo&apos;" />
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</ForceLook>
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$behaviorState == $enum:hledaniLichtenstejna_kozina_ambushingSomeDrunk.ConfrontingUdo">
										<ForceLook LookTarget="$udo" DisableVariations="false">
											<Parallel successMode="Any" failureMode="Any">
												<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_confronting target="$udo" nodeLabel="13499554" />
												<Sequence>
													<SuppressFailure>
														<LoopUntil until="Success" attemptCount="30">
															<Selector>
																<Function_speech_dialogInitiator alias="&apos;hledaniLichtenstejna_kozina_ambushingUdo&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" preset="$enum:dialogPreset.ingame" recipient="$udo" recipientMetaroles="" nodeLabel="40950118" />
																<Sequence>
																	<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
																	<Fail />
																</Sequence>
															</Selector>
														</LoopUntil>
													</SuppressFailure>
													<InstantCallback_empty EventName="&apos;OnAmbushedUdoSuccessfully&apos;" />
													<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
												</Sequence>
											</Parallel>
										</ForceLook>
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$behaviorState == $enum:hledaniLichtenstejna_kozina_ambushingSomeDrunk.AmbushingPlayer_ExpectedSide">
										<ForceLook LookTarget="$__player" DisableVariations="false">
											<Sequence>
												<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_commenceAmbush ambushing_alignSO="$ambushing_expectedSide_alignSO" ambushing_animationTag="&apos;side_right&apos;" nodeLabel="70470309" />
												<InstantCallback_empty EventName="&apos;OnConfrontingPlayer_ExpectedSide&apos;" />
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</ForceLook>
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$behaviorState == $enum:hledaniLichtenstejna_kozina_ambushingSomeDrunk.AmbushingPlayer_UnexpectedSide">
										<ForceLook LookTarget="$__player" DisableVariations="false">
											<Sequence>
												<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_commenceAmbush ambushing_alignSO="$ambushing_unexpectedSide_alignSO" ambushing_animationTag="&apos;side_left&apos;" nodeLabel="53341877" />
												<InstantCallback_empty EventName="&apos;OnConfrontingPlayer_UnexpectedSide&apos;" />
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</ForceLook>
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$behaviorState == $enum:hledaniLichtenstejna_kozina_ambushingSomeDrunk.ConfrontingPlayer_ExpectedSide | &#10;$behaviorState == $enum:hledaniLichtenstejna_kozina_ambushingSomeDrunk.ConfrontingPlayer_UnexpectedSide">
										<ForceLook LookTarget="$__player" DisableVariations="false">
											<Parallel successMode="Any" failureMode="Any">
												<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_confronting target="$__player" nodeLabel="41511059" />
												<While doFail="false" propagateChildFail="false" condition="true">
													<Sequence>
														<LoopUntil until="Success" attemptCount="5">
															<Function_speech_dialogInitiator alias="&apos;hledaniLichtenstejna_ambush_chat&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="$__null" customParameters="$__null" metarole="" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="42872092" />
														</LoopUntil>
														<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="&apos;3s&apos;" />
													</Sequence>
												</While>
												<DistanceGate Origin="$ambushRoot" ReferencePt="$__player" Low="9.000000" High="9.000000" Negation="true" OpenInMiddle="false" RunLogic="KeepRunning">
													<Sequence>
														<InstantCallback_empty EventName="&apos;OnPlayerRunningFromAmbush&apos;" />
														<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
													</Sequence>
												</DistanceGate>
											</Parallel>
										</ForceLook>
									</IfCondition>
									<IfCondition failOnCondition="false" condition="true">
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
									</IfCondition>
								</ContinuousSwitch>
							</Child>
							<OnFail canSkip="1">
								<InstantCallback_empty EventName="&apos;OnInterrupted&apos;" />
							</OnFail>
						</FuseBox>
					</EntityContextPreset>
				</EntityContextElement>
			</Behavior>
		</Root>
		<ForestContainer>
			<Function_speech_monolog alias="&apos;hledaniLichtenstejna_kozina_ambushingPlayer&apos;" canBeDelayed="false" context="" dramaticBark="false" lookAtId="" metarole="" target="" wait="true" nodeLabel="86010909" />
			<While doFail="false" propagateChildFail="false" condition="true">
				<Sequence>
					<ExecuteLua code="Dump(&apos;!!! &apos;.. player.soul:GetDerivedStat(&apos;arr&apos;) .. &apos;  oad:  &apos; .. player.soul:GetDerivedStat(&apos;oad&apos;) .. &apos;  alo:  &apos; .. player.soul:GetDerivedStat(&apos;alo&apos;))" />
					<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</While>
		</ForestContainer>
		<EditorData Signature="hledaniLichtenstejna_kozina_ambushingSomeDrunk" EventSet="hledaniLichtenstejna_kozina_ambushingSomeDrunk">
			<Variables>
				<Variable name="ambushRoot" comment="" />
				<Variable name="ambushingPlayer_expectedSide_area" comment="" />
				<Variable name="ambushingPlayer_unexpectedSide_area" comment="" />
				<Variable name="ambushingUdo_area" comment="" />
				<Variable name="ambushingUdo_blockedByPlayer_area" comment="" />
				<Variable name="ambushing_expectedSide_alignSO" comment="" />
				<Variable name="ambushing_unexpectedSide_alignSO" comment="" />
				<Variable name="expectedSide" comment="" />
				<Variable name="leaning_alignSO" comment="" />
				<Variable name="p_ignorePlayerPassingBy" comment="" />
				<Variable name="playersMount" comment="" />
				<Variable name="udo" comment="" />
				<Variable name="behaviorState" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkDataFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnyLinkFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnyLinkFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnyLinkFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnyLinkFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnyLinkFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnyLinkFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnyLinkFilter>
						</GraphSearch>
					</Sequence>
				</OnInit>
				<Behavior>
					<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child>
									<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfCondition hasInputBreakpoint="0" comment="lyingInAmbush" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</UnstanceAction>
												</UrgencyDecorator>
												<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="Udo triggering ambush" breakpointFlags="0">
														<OutputBreakpoints />
														<EnsureWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Else>
																		<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</InstantCallback_empty>
																					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Wait>
																				</Sequence>
																			</Synchronize>
																			<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Wait>
																		</Selector>
																	</Else>
																</IsInsideArea>
															</AreaPresenceGate>
														</EnsureWuidValid>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Sequence>
													<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfCondition hasInputBreakpoint="0" comment="Player possibly triggering ambush" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Child>
																		<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Expression>
																			</AreaPresenceGate>
																			<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Expression>
																			</AreaPresenceGate>
																		</Parallel>
																	</Child>
																	<OnSuccess>
																		<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<BuffTagCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																					<Else>
																						<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Fail>
																					</Else>
																				</BuffTagCheck>
																				<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																						<OutputBreakpoints />
																						<Then>
																							<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																								<OutputBreakpoints />
																								<Then>
																									<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</Fail>
																								</Then>
																							</IsInsideArea>
																						</Then>
																					</CheckWuidValid>
																				</IfCondition>
																				<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</AnyLinkFilter>
																				</GraphSearch>
																				<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Fail>
																				</IfCondition>
																				<ActorStateCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																					<Then>
																						<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Fail>
																					</Then>
																				</ActorStateCheck>
																				<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																					<Then>
																						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</InstantCallback_empty>
																					</Then>
																					<Else>
																						<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</InstantCallback_empty>
																					</Else>
																				</IfElseCondition>
																			</Sequence>
																			<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Expression>
																		</Selector>
																	</OnSuccess>
																</FuseBox>
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
															</Sequence>
														</IfCondition>
														<IfCondition hasInputBreakpoint="0" comment="Player being ignored" breakpointFlags="0">
															<OutputBreakpoints />
															<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</DistanceGate>
														</IfCondition>
													</ContinuousSwitch>
												</Parallel>
											</Sequence>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="ambushingUdo" breakpointFlags="0">
											<OutputBreakpoints />
											<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_commenceAmbush hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_commenceAmbush>
													<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantCallback_empty>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</ForceLook>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="confrontingUdo" breakpointFlags="0">
											<OutputBreakpoints />
											<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_confronting hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_confronting>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_speech_dialogInitiator>
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Wait>
																		<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Fail>
																	</Sequence>
																</Selector>
															</LoopUntil>
														</SuppressFailure>
														<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</InstantCallback_empty>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Sequence>
												</Parallel>
											</ForceLook>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="ambushingPlayer_expectedSide" breakpointFlags="0">
											<OutputBreakpoints />
											<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_commenceAmbush hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_commenceAmbush>
													<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantCallback_empty>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</ForceLook>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="ambushingPlayer_unexpectedSide" breakpointFlags="0">
											<OutputBreakpoints />
											<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_commenceAmbush hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_commenceAmbush>
													<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantCallback_empty>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</ForceLook>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="confrontingPlayer_expectedSide | confrontingPlayer_unexpectedSide" breakpointFlags="0">
											<OutputBreakpoints />
											<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_confronting hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_hledaniLichtenstejna_kozina_ambushingSomeDrunk_confronting>
													<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_dialogInitiator>
															</LoopUntil>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
													</While>
													<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</InstantCallback_empty>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
													</DistanceGate>
												</Parallel>
											</ForceLook>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</IfCondition>
									</ContinuousSwitch>
								</Child>
								<OnFail>
									<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantCallback_empty>
								</OnFail>
							</FuseBox>
						</EntityContextPreset>
					</EntityContextElement>
				</Behavior>
			</Root>
			<Forest>
				<Function_speech_monolog editorPosX="2020" editorPosY="2320" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Function_speech_monolog>
				<While editorPosX="1910" editorPosY="-1230" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExecuteLua>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</While>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_atRoastedPig" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Parallel successMode="Any" failureMode="Any">
						<AnimationAction fragment="&apos;Miller&apos;" tags="" eventReferenceObject="" alignObject="$data" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
						<Loop count="-1">
							<Sequence>
								<Function_speech_schedulerMonolog alias="&apos;bark_selatkoSeRozni&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="71403875" />
								<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</Loop>
					</Parallel>
					<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="4.000000" High="4000.000000" Negation="false" ValueOnMiddle="false" failOnCondition="false">
						<ForceLook LookTarget="$__player" DisableVariations="false">
							<Parallel successMode="Any" failureMode="Any">
								<Loop count="-1">
									<Sequence>
										<Turn target="$__player" align="false" />
										<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</Loop>
								<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="4.000000" High="4.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
									<Loop count="-1">
										<Sequence>
											<Function_speech_schedulerMonolog alias="&apos;bark_nechesVeprove&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="75039227" />
											<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
									</Loop>
								</DistanceGate>
							</Parallel>
						</ForceLook>
					</DistanceCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnimationAction>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_speech_schedulerMonolog>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Loop>
						</Parallel>
						<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Turn>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</Loop>
									<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerMonolog>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</Loop>
									</DistanceGate>
								</Parallel>
							</ForceLook>
						</DistanceCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>