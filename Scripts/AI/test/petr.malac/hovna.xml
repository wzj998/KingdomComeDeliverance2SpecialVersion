<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="hovna" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;tagppoint1&apos;" prune="true" negprune="unknown" Parent="" Child="$tagpoint" Data="" />
          </GraphSearch>
          <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
          <Callback_empty EventName="&apos;OnFinished&apos;" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="empty" EventSet="endNotification">
      <Variables />
      <ForwardDeclarations />
      <Root editorPosX="0" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence editorPosX="230" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch editorPosX="364" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter editorPosX="579" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <Move editorPosX="364" editorPosY="108" hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Move>
            <Callback_empty editorPosX="370" editorPosY="390" hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Callback_empty>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="hovna2" is_function="0">
    <Variables>
      <Variable name="tagpoint" type="wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
          <Callback_empty EventName="&apos;OnFinished&apos;" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="goto" EventSet="endNotification">
      <Variables>
        <Variable name="tagpoint" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="0" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence editorPosX="230" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Move editorPosX="364" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Move>
            <Callback_empty editorPosX="370" editorPosY="260" hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Callback_empty>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="hovna3" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
          <Callback_endData data="&apos;nnnnnn&apos;" EventName="&apos;OnFinished&apos;" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="goto" EventSet="endData">
      <Variables />
      <ForwardDeclarations />
      <Root editorPosX="0" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence editorPosX="230" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Move editorPosX="380" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Move>
            <Callback_endData editorPosX="390" editorPosY="290" hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Callback_endData>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="npc_goToTagpoint" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
          <Callback_endData data="&apos;nnnnnn&apos;" EventName="&apos;OnFinished&apos;" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="goto" EventSet="endData">
      <Variables />
      <ForwardDeclarations />
      <Root editorPosX="0" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence editorPosX="230" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Move editorPosX="380" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Move>
            <Callback_endData editorPosX="390" editorPosY="290" hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Callback_endData>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="npc_goToTagpoint_out" is_function="0">
    <Variables>
      <Variable name="tagpoint" type="wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;bench&apos;" prune="true" negprune="unknown" Parent="" Child="$tagpoint" Data="" />
          </GraphSearch>
          <StanceElement smartObject="$tagpoint" stance="sitting" allowAny="false">
            <Sequence>
              <WaitAction />
              <Wait duration="&apos;15m&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
              <Callback_empty EventName="&apos;OnFinished&apos;" />
            </Sequence>
          </StanceElement>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer>
      <HandContentElement hand="Right" item="$tagpoint" allowAny="false" />
    </ForestContainer>
    <EditorData Signature="empty" EventSet="endNotification">
      <Variables>
        <Variable name="tagpoint" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-230" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </WaitAction>
                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Wait>
                <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Callback_empty>
              </Sequence>
            </StanceElement>
          </Sequence>
        </Behavior>
      </Root>
      <Forest>
        <HandContentElement editorPosX="160" editorPosY="240" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
        </HandContentElement>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="npc_goToTagpoint_in_out_phase" is_function="0">
    <Variables>
      <Variable name="fireEvent" type="_bool" values="false" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="phase" type="_int" values="0" isPersistent="0" form="single" requirementType="In" />
      <Variable name="tp" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <Parallel successMode="Any" failureMode="Any">
            <While doFail="false" propagateChildFail="false" condition="$phase &lt; 3">
              <Switch>
                <IfCondition failOnCondition="false" condition="$phase == 0">
                  <Sequence>
                    <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$tp[$phase]" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
                    <Expression expressions="$phase += 1 &#10;$fireEvent = true" />
                  </Sequence>
                </IfCondition>
                <IfCondition failOnCondition="false" condition="$phase == 1">
                  <Sequence>
                    <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$tp[$phase]" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
                    <Expression expressions="$phase += 1 &#10;$fireEvent = true" />
                  </Sequence>
                </IfCondition>
                <IfCondition failOnCondition="false" condition="$phase == 2">
                  <Sequence>
                    <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$tp[$phase]" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
                    <Callback_empty EventName="&apos;behaviorFinished&apos;" />
                  </Sequence>
                </IfCondition>
              </Switch>
            </While>
            <Loop count="-1">
              <IfGate atomic="false" condition="$fireEvent" RunLogic="KeepRunning">
                <Sequence>
                  <Callback_empty EventName="&apos;phaseChanged&apos;" />
                  <Expression expressions="$fireEvent = false" />
                </Sequence>
              </IfGate>
            </Loop>
          </Parallel>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="phase" EventSet="phaseChanged">
      <Variables>
        <Variable name="fireEvent" comment="" />
        <Variable name="phase" comment="" />
        <Variable name="tp" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Move>
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                    </Sequence>
                  </IfCondition>
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Move>
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                    </Sequence>
                  </IfCondition>
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Move>
                      <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Callback_empty>
                    </Sequence>
                  </IfCondition>
                </Switch>
              </While>
              <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Callback_empty>
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                  </Sequence>
                </IfGate>
              </Loop>
            </Parallel>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="npc_goToTagpoint_in_out_phase_string" is_function="0">
    <Variables />
    <Parameters>
      <Variable name="phase" type="_string" values="none" isPersistent="0" form="single" requirementType="In" />
      <Variable name="tp" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <While doFail="false" propagateChildFail="false" condition="$phase ~= &apos;behaviorFinished&apos;">
            <Switch>
              <IfCondition failOnCondition="false" condition="$phase == &apos;firstTp&apos;">
                <Sequence>
                  <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$tp[0]" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
                  <Expression expressions="$phase = &apos;secondTp&apos;" />
                  <Callback_empty EventName="&apos;firstTpFinished&apos;" />
                </Sequence>
              </IfCondition>
              <IfCondition failOnCondition="false" condition="$phase == &apos;secondTp&apos;">
                <Sequence>
                  <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$tp[1]" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
                  <Expression expressions="$phase = &apos;thirdTp&apos;" />
                  <Callback_empty EventName="&apos;secondTpFinished&apos;" />
                </Sequence>
              </IfCondition>
              <IfCondition failOnCondition="false" condition="$phase == &apos;thirdTp&apos;">
                <Sequence>
                  <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$tp[2]" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
                  <Expression expressions="$phase = &apos;behaviorFinished&apos;" />
                  <Callback_empty EventName="&apos;thirdTpFinished&apos;" />
                </Sequence>
              </IfCondition>
            </Switch>
          </While>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="phase2" EventSet="phaseNotification">
      <Variables>
        <Variable name="phase" comment="" />
        <Variable name="tp" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Move>
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                    <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Callback_empty>
                  </Sequence>
                </IfCondition>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Move>
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                    <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Callback_empty>
                  </Sequence>
                </IfCondition>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Move>
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                    <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Callback_empty>
                  </Sequence>
                </IfCondition>
              </Switch>
            </While>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="npc_sneaking" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <AnimationAction fragment="&apos;Quest_CaponSneaking&apos;" tags="&apos;stealth&apos;" eventReferenceObject="" alignObject="" />
          <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <OutputBreakpoints />
            </AnimationAction>
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>
