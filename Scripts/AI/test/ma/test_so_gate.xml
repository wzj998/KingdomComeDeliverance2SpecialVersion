<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="onUpdate" is_function="0">
    <Variables>
      <Variable name="button" type="wuid" values="" isPersistent="0" form="single" />
      <Variable name="interaction" type="interactionModule:onInteraction" values="" isPersistent="0" form="single" />
      <Variable name="isOpen" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="requestIsOpen" type="_bool" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Sequence>
          <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;button&apos;" prune="true" negprune="unknown" Parent="" Child="$button" Data="" />
          </GraphSearch>
          <Expression expressions="$isOpen = false, &#10;$requestIsOpen = false," />
        </Sequence>
      </OnInit>
      <Behavior canSkip="1">
        <Parallel successMode="Any" failureMode="Any">
          <While doFail="false" propagateChildFail="false" condition="true">
            <ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$interaction" senderInfo="" inbox="&apos;kcd1_interactionModuleOnInteraction&apos;" condition="" answerVar="">
              <InstantSemaphore SemaphoreCount="1" LockManagerType="Local" SemaphoreName="&apos;block&apos;">
                <Sequence>
                  <IfElseCondition failOnCondition="false" condition="$requestIsOpen" saveVersion="2">
                    <Then canSkip="1">
                      <Expression expressions="$requestIsOpen = false" />
                    </Then>
                    <Else canSkip="1">
                      <Expression expressions="$requestIsOpen = true" />
                    </Else>
                  </IfElseCondition>
                  <SetVisibility ItemWUID="$button" Visibility="false" />
                </Sequence>
              </InstantSemaphore>
            </ProcessMessage>
          </While>
          <While doFail="false" propagateChildFail="false" condition="true">
            <IfGate atomic="false" condition="$isOpen ~= $requestIsOpen" RunLogic="KeepRunning">
              <Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;block&apos;">
                <Sequence>
                  <IfElseCondition failOnCondition="false" condition="$requestIsOpen" saveVersion="2">
                    <Then canSkip="1">
                      <ExecuteLua code="entity.Properties.Animation.Animation = &apos;palisade_gate_open&apos; &#10;entity:Event_StartAnimation()  &#10;entity:ForceCharacterUpdate(0, true)" />
                    </Then>
                    <Else canSkip="1">
                      <ExecuteLua code="entity.Properties.Animation.Animation = &apos;palisade_gate_close&apos; &#10;entity:Event_ResetAnimation()  &#10;entity:Event_StartAnimation()  &#10;entity:ForceCharacterUpdate(0, true)" />
                    </Else>
                  </IfElseCondition>
                  <Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                  <Expression expressions="$isOpen = $requestIsOpen" />
                  <SetVisibility ItemWUID="$button" Visibility="true" />
                </Sequence>
              </Semaphore>
            </IfGate>
          </While>
        </Parallel>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="button" comment="" />
        <Variable name="interaction" comment="" />
        <Variable name="isOpen" comment="" />
        <Variable name="requestIsOpen" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="70" editorPosY="-130" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
          </Sequence>
        </OnInit>
        <Behavior>
          <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <InstantSemaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                      <OutputBreakpoints />
                      <Then>
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                      </Then>
                      <Else>
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                      </Else>
                    </IfElseCondition>
                    <SetVisibility hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </SetVisibility>
                  </Sequence>
                </InstantSemaphore>
              </ProcessMessage>
            </While>
            <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                      <OutputBreakpoints />
                      <Then>
                        <ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </ExecuteLua>
                      </Then>
                      <Else>
                        <ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </ExecuteLua>
                      </Else>
                    </IfElseCondition>
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                    <SetVisibility hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </SetVisibility>
                  </Sequence>
                </Semaphore>
              </IfGate>
            </While>
          </Parallel>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>
