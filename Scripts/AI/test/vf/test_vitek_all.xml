<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="patrol" is_function="0">
		<Variables>
			<Variable name="destinationVec" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="nextDestination" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="crime_isAuthorityOnDuty" target="">
					<EntityContext context="crime_canFriskPlayer" target="">
						<EntityContext context="crime_spawnMissingNpcVolume" target="">
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;startPoint&apos;" prune="true" negprune="unknown" Parent="" Child="$nextDestination" Data="" />
								</GraphSearch>
								<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
									<Child canSkip="1">
										<While doFail="false" propagateChildFail="false" condition="true">
											<IfElseCondition failOnCondition="false" condition="$nextDestination ~= $__null" saveVersion="2">
												<Then canSkip="1">
													<Sequence>
														<GetSpatialInfo In="$nextDestination" Out="$destinationVec" What="Position" />
														<AddLink From="$this.id" To="$nextDestination" Tag="&apos;scheduler_currentBehaviorDestination&apos;" Data="$destinationVec" LinkOpHandleMode="OverWrite" />
														<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$nextDestination" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
														<GraphSearch Origin="$nextDestination" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<LinkTagFilter tag="&apos;nextPoint&apos;" prune="true" negprune="unknown" Parent="" Child="$nextDestination" Data="" />
														</GraphSearch>
														<Function_speech_monolog alias="" canBeDelayed="false" context="" dramaticBark="false" lookAtId="$__null" metarole="&apos;NPC_VIDI_HRACE_V_CROUCHI&apos;" target="$this.id" wait="false" nodeLabel="21560597" />
													</Sequence>
												</Then>
												<Else canSkip="1">
													<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
												</Else>
											</IfElseCondition>
										</While>
									</Child>
									<OnFail canSkip="1">
										<RemoveLink From="$this.id" To="$nextDestination" Tag="&apos;scheduler_currentBehaviorDestination&apos;" LinkOpHandleMode="Success" />
									</OnFail>
								</FuseBox>
							</Sequence>
						</EntityContext>
					</EntityContext>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="destinationVec" comment="" />
				<Variable name="nextDestination" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-300" editorPosY="-120" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Child>
											<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</GetSpatialInfo>
															<AddLink hasInputBreakpoint="0" comment="TODO: replace with AddLinkElement, it was bugged when implementing this" breakpointFlags="0">
																<OutputBreakpoints />
															</AddLink>
															<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Move>
															<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
															</GraphSearch>
															<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_speech_monolog>
														</Sequence>
													</Then>
													<Else>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Else>
												</IfElseCondition>
											</While>
										</Child>
										<OnFail>
											<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</RemoveLink>
										</OnFail>
									</FuseBox>
								</Sequence>
							</EntityContext>
						</EntityContext>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="idle_civilian" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" destinationSpecification="$__object.id" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Wait duration="&apos;20s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="10" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence editorPosX="460" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move editorPosX="600" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Wait editorPosX="600" editorPosY="240" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="moveAwayFromPlayer" is_function="0">
		<Variables>
			<Variable name="multiplier" type="_float" values="0.3" isPersistent="0" form="single" />
			<Variable name="myPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="newPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="playerPos" type="vec3" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Function_callInterrupt_flee target="$__player" nodeLabel="16872783" />
			</Behavior>
		</Root>
		<ForestContainer>
			<Success />
			<While doFail="false" propagateChildFail="false" condition="true">
				<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="5.000000" High="5.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
					<Sequence>
						<GetSpatialInfo In="$__player" Out="$playerPos" What="Position" />
						<LogToConsole LogLevel="Error" Message="&apos;$playerPos&apos;" />
						<GetSpatialInfo In="$this.id" Out="$myPos" What="Position" />
						<LogToConsole LogLevel="Error" Message="&apos;$myPos&apos;" />
						<Expression expressions="$newPos.x = $myPos.x + (($myPos.x-$playerPos.x)*$multiplier) &#10;$newPos.y = $myPos.y + (($myPos.y-$playerPos.y)*$multiplier) &#10;$newPos.z = $myPos.z" />
						<LogToConsole LogLevel="Error" Message="&apos;$newPos&apos;" />
						<ExactMove directionType="FromVariable" directionSpecification="$newPos" animationTriggerDist="0.150000" precise="false" changeNPCState="true" destinationSpecification="$newPos" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
						<Turn target="$__player" destinationType="FromVariable" align="false" stopWithinAngle="0.000000" randomMinAngle="0.000000" randomMaxAngle="0.000000" randomTurnRightChance="0.000000" stopRunninganimation="false" allowInstantSuccess="true" />
					</Sequence>
				</DistanceGate>
			</While>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="multiplier" comment="" />
				<Variable name="myPos" comment="" />
				<Variable name="newPos" comment="" />
				<Variable name="playerPos" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-270" editorPosY="1030" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Function_callInterrupt_flee editorPosX="0" editorPosY="1030" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_callInterrupt_flee>
				</Behavior>
			</Root>
			<Forest>
				<Success editorPosX="290" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Success>
				<While editorPosX="120" editorPosY="170" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<DistanceGate editorPosX="310" editorPosY="170" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence editorPosX="580" editorPosY="170" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GetSpatialInfo editorPosX="700" editorPosY="170" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetSpatialInfo>
							<LogToConsole editorPosX="700" editorPosY="270" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LogToConsole>
							<GetSpatialInfo editorPosX="700" editorPosY="370" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetSpatialInfo>
							<LogToConsole editorPosX="700" editorPosY="460" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LogToConsole>
							<Expression editorPosX="700" editorPosY="560" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<LogToConsole editorPosX="700" editorPosY="660" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LogToConsole>
							<ExactMove editorPosX="700" editorPosY="740" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExactMove>
							<Turn editorPosX="700" editorPosY="980" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Turn>
						</Sequence>
					</DistanceGate>
				</While>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="enemyRelationContextAssign_RECURSION" is_function="1">
		<Variables />
		<Parameters>
			<Variable name="enemies" type="wuid" values="" isPersistent="0" form="array" requirementType="Reference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<RelationContext context="crime_forceEnemyRelationship" source="$this.id" target="$enemies[0]">
					<Sequence>
						<VarOperation varName="$enemies" targetVarName="" operation="PopFront" argument="" />
						<IfElseCondition failOnCondition="false" condition="#enemies &gt; 0" saveVersion="2">
							<Then canSkip="1">
								<Function_enemyRelationContextAssign_RECURSION enemies="$enemies" nodeLabel="65399648" />
							</Then>
							<Else canSkip="1">
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Else>
						</IfElseCondition>
					</Sequence>
				</RelationContext>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="enemies" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="70" editorPosY="180" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<RelationContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</VarOperation>
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Function_enemyRelationContextAssign_RECURSION hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_enemyRelationContextAssign_RECURSION>
								</Then>
								<Else>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Else>
							</IfElseCondition>
						</Sequence>
					</RelationContext>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="restingGuard" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="0" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel editorPosX="320" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait editorPosX="640" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="idle_0" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="0" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait editorPosX="270" editorPosY="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="idle0" is_function="0">
		<Variables>
			<Variable name="myAnimal" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="myChildren" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Loop count="-1">
					<Sequence>
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						<SetReputationNPC NPC="" reputationChange="debug_NegativeSmall" />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						<Sequence>
							<SetReputationNPC NPC="" reputationChange="debug_NegativeSmall" />
							<SetReputationNPC NPC="" reputationChange="debug_NegativeSmall" />
							<SetReputationNPC NPC="" reputationChange="debug_NegativeSmall" />
							<Sequence>
								<SetReputationNPC NPC="" reputationChange="debug_NegativeSmall" />
								<SetReputationNPC NPC="" reputationChange="debug_NegativeSmall" />
								<SetReputationNPC NPC="" reputationChange="debug_NegativeSmall" />
								<Sequence>
									<SetReputationNPC NPC="" reputationChange="debug_NegativeSmall" />
									<SetReputationNPC NPC="" reputationChange="debug_NegativeSmall" />
									<SetReputationNPC NPC="" reputationChange="debug_NegativeSmall" />
								</Sequence>
							</Sequence>
						</Sequence>
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						<Reconcile faction="&lt;INVALID&gt;" SoulWUID="$this.id" />
						<Wait duration="&apos;50s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</Loop>
			</Behavior>
		</Root>
		<ForestContainer>
			<CheckRelationshipInterval_SoulToSoul TargetSoul="$__player" Soul="$this.id" Flag="friend" saveVersion="2">
				<Then canSkip="1">
					<LogToConsole LogLevel="Error" Message="&apos;FRIEND from AI&apos;" />
				</Then>
				<Else canSkip="1">
					<LogToConsole LogLevel="Error" Message="&apos;ENEMY from AI&apos;" />
				</Else>
			</CheckRelationshipInterval_SoulToSoul>
			<Sequence>
				<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;myAnimal&apos;" prune="true" negprune="unknown" Parent="" Child="$myAnimal" Data="" />
				</GraphSearch>
				<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;myChild&apos;" prune="true" negprune="unknown" Parent="" Child="$myChildren" Data="" />
				</GraphSearch>
				<Loop count="-1">
					<Sequence>
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						<SetReputationFaction faction="trosecko_justice_league" reputationChange="none" />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						<SetReputationFaction faction="trosecko_justice_league" reputationChange="new_homes_judgement_good" />
						<HasFactionLabel_Soul Soul="$this.id" Flag="testLabelReadyToBeDeleted" saveVersion="2">
							<Then canSkip="1">
								<LogToConsole LogLevel="Error" Message="&apos;justice league has label&apos;" />
							</Then>
							<Else canSkip="1">
								<LogToConsole LogLevel="Error" Message="&apos;justice league label is not present&apos;" />
							</Else>
						</HasFactionLabel_Soul>
						<HasFactionLabel_Soul Soul="$myChildren" Flag="testLabelReadyToBeDeleted" saveVersion="2">
							<Then canSkip="1">
								<LogToConsole LogLevel="Error" Message="&apos;kid has label&apos;" />
							</Then>
							<Else canSkip="1">
								<LogToConsole LogLevel="Error" Message="&apos;kids label is not present&apos;" />
							</Else>
						</HasFactionLabel_Soul>
						<HasFactionLabel_Soul Soul="$myAnimal" Flag="testLabelReadyToBeDeleted" saveVersion="2">
							<Then canSkip="1">
								<LogToConsole LogLevel="Error" Message="&apos;animal has label&apos;" />
							</Then>
							<Else canSkip="1">
								<LogToConsole LogLevel="Error" Message="&apos;animal label is not present&apos;" />
							</Else>
						</HasFactionLabel_Soul>
						<HasFactionLabel_Faction Faction="trosecko_justice_league_animals" Flag="testLabelReadyToBeDeleted" saveVersion="2">
							<Then canSkip="1">
								<LogToConsole LogLevel="Error" Message="&apos;faction animals has label&apos;" />
							</Then>
						</HasFactionLabel_Faction>
					</Sequence>
				</Loop>
			</Sequence>
			<CheckRenownInterval_Soul Soul="$this.id" Flag="well_known" saveVersion="2" />
			<CheckRenownInterval_Faction Faction="trosecko_justice_league" Flag="heard" saveVersion="2">
				<Then canSkip="1">
					<LogToConsole LogLevel="Error" Message="&apos;AI henry is heard by justice league&apos;" />
				</Then>
				<Else canSkip="1">
					<LogToConsole LogLevel="Error" Message="&apos;AI henry is NOT heard by justice league&apos;" />
				</Else>
			</CheckRenownInterval_Faction>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="myAnimal" comment="" />
				<Variable name="myChildren" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-610" editorPosY="-340" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<SetReputationNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</SetReputationNPC>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<SetReputationNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SetReputationNPC>
								<SetReputationNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SetReputationNPC>
								<SetReputationNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SetReputationNPC>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<SetReputationNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</SetReputationNPC>
									<SetReputationNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</SetReputationNPC>
									<SetReputationNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</SetReputationNPC>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SetReputationNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SetReputationNPC>
										<SetReputationNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SetReputationNPC>
										<SetReputationNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SetReputationNPC>
									</Sequence>
								</Sequence>
							</Sequence>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<Reconcile hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Reconcile>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Loop>
				</Behavior>
			</Root>
			<Forest>
				<CheckRelationshipInterval_SoulToSoul editorPosX="1340" editorPosY="460" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Then>
						<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LogToConsole>
					</Then>
					<Else>
						<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LogToConsole>
					</Else>
				</CheckRelationshipInterval_SoulToSoul>
				<Sequence editorPosX="830" editorPosY="-590" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<SetReputationFaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</SetReputationFaction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<SetReputationFaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</SetReputationFaction>
							<HasFactionLabel_Soul hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LogToConsole>
								</Then>
								<Else>
									<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LogToConsole>
								</Else>
							</HasFactionLabel_Soul>
							<HasFactionLabel_Soul hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LogToConsole>
								</Then>
								<Else>
									<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LogToConsole>
								</Else>
							</HasFactionLabel_Soul>
							<HasFactionLabel_Soul hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LogToConsole>
								</Then>
								<Else>
									<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LogToConsole>
								</Else>
							</HasFactionLabel_Soul>
							<HasFactionLabel_Faction hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LogToConsole>
								</Then>
							</HasFactionLabel_Faction>
						</Sequence>
					</Loop>
				</Sequence>
				<CheckRenownInterval_Soul editorPosX="120" editorPosY="150" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
				</CheckRenownInterval_Soul>
				<CheckRenownInterval_Faction editorPosX="210" editorPosY="-630" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Then>
						<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LogToConsole>
					</Then>
					<Else>
						<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LogToConsole>
					</Else>
				</CheckRenownInterval_Faction>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="merchant" is_function="0">
		<Variables>
			<Variable name="apple" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="asd" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="context" type="_float" values="" isPersistent="0" form="associative" />
			<Variable name="delete_item" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="fine" type="_float" values="1000" isPersistent="0" form="single" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" />
			<Variable name="informations" type="information" values="" isPersistent="0" form="array" />
			<Variable name="inventory" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="item" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="myPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="offence_value" type="enum:crime_offence" values="" isPersistent="0" form="single" />
			<Variable name="offences" type="enum:crime_offence" values="" isPersistent="0" form="array" />
			<Variable name="playerPosition" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="playersBoots" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="playersLastSeenDirection" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="punishment" type="crime:punishment" values="" isPersistent="0" form="single" />
			<Variable name="sixhundo" type="_int" values="600" isPersistent="0" form="single" />
			<Variable name="slot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stash" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stolenItems" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="targets" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="time" type="_int64" values="" isPersistent="0" form="single" />
			<Variable name="victim" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<WaitAction />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<GetSpatialInfo In="$this.id" Out="$myPos" What="Position" />
				<While doFail="false" propagateChildFail="false" condition="true">
					<Sequence>
						<DistanceCondition Origin="$this.id" ReferencePt="$myPos" Low="1.000000" High="1.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$myPos" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
						</DistanceCondition>
					</Sequence>
				</While>
			</Sequence>
			<Selector>
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;crouch&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
					</GraphSearch>
					<StealthCrouch>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</StealthCrouch>
				</Sequence>
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;lie&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
					</GraphSearch>
					<UnstanceAction unstance="QuestHunterInjuryIdleLie" locationObject="" slaveObject="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
			</Selector>
			<Sequence>
				<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
				<Function_speech_monolog alias="" canBeDelayed="false" context="" dramaticBark="false" lookAtId="$__null" metarole="&apos;NPC_PRIJIMA_VZDAVANI_Z_KOMBATU_(BARK)&apos;" target="$this.id" wait="false" nodeLabel="47331196" />
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
			</Sequence>
			<IfElseCondition failOnCondition="false" condition="$this.name == &apos;test_crime_merchant_11&apos;" saveVersion="2">
				<Then canSkip="1">
					<Sequence>
						<Expression expressions="$punishment.fine = 3" />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</Then>
			</IfElseCondition>
			<Sequence>
				<CreateInformation PerceivedWuid="$this.id" label="&apos;assault&apos;" position="" ToWhom="" OutVariable="$information" />
				<Expression expressions="$victim = $this.id" />
				<LockDynamicInformationValues Information="$information">
					<Sequence>
						<SetDynamicInformationValue Information="$information" Tag="&apos;asd&apos;" Variable="$asd" Type="" Value="" />
						<SetDynamicInformationValue Information="$information" Tag="&apos;victim&apos;" Variable="$victim" Type="" Value="" />
					</Sequence>
				</LockDynamicInformationValues>
				<LockDynamicInformationValues Information="$information">
					<GetDynamicInformationValue Information="$information" Tag="&apos;victim&apos;" Out="$victim" />
				</LockDynamicInformationValues>
			</Sequence>
			<Loop count="-1">
				<Sequence>
					<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;inventory&apos;" prune="true" negprune="false" Parent="" Child="$inventory" Data="" />
					</GraphSearch>
					<Selector>
						<Sequence>
							<GraphSearch Origin="$inventory" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<ItemParamFilter Param="Stolen" Source="Child" prune="true" negprune="false" Parent="" Child="" />
							</GraphSearch>
							<LogToConsole LogLevel="Error" Message="&apos;STOLEN ITEMS FOUND&apos;" />
							<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
						<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
					</Selector>
				</Sequence>
			</Loop>
			<Selector>
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;target&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$targets" saveVersion="2" />
					</GraphSearch>
					<AddLink From="$this.id" To="$targets[0]" Tag="&apos;target_v2&apos;" Data="" LinkOpHandleMode="Error" />
					<AddLink From="$this.id" To="$targets[1]" Tag="&apos;target_v2&apos;" Data="" LinkOpHandleMode="Error" />
					<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
					<Parallel successMode="Any" failureMode="Any">
						<Sequence>
							<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
							<LogToConsole LogLevel="Error" Message="&apos;RM FIRST&apos;" />
							<RemoveLink From="$this.id" To="$targets[0]" Tag="&apos;target_v2&apos;" LinkOpHandleMode="Error" />
							<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
							<LogToConsole LogLevel="Error" Message="&apos;RM SECOND&apos;" />
							<RemoveLink From="$this.id" To="$targets[1]" Tag="&apos;target_v2&apos;" LinkOpHandleMode="Error" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
						<LinkGate from="$this.id" to="" tag="&apos;target_v2&apos;" amount="All" presence="NotThere" RunLogic="KeepRunning">
							<Sequence>
								<LogToConsole LogLevel="Error" Message="&apos;GATE OPEN&apos;" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</LinkGate>
					</Parallel>
				</Sequence>
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
			</Selector>
			<Sequence>
				<Selector>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;chest&apos;" prune="true" negprune="unknown" Parent="" Child="$stash" Data="" />
					</GraphSearch>
					<IfCondition failOnCondition="true" condition="$this.name == &apos;test_crime_woman_1&apos;">
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;victim&apos;" prune="true" negprune="unknown" Parent="" Child="$victim" Data="" />
							</GraphSearch>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;home&apos;" prune="true" negprune="unknown" Parent="" Child="$apple" Data="" />
							</GraphSearch>
							<Function_callInterrupt_checkProperty home="$apple" ignorePriority="false" initiator="$enum:switch_interruptInitiator.scheduler" missingNpc="$victim" previousReaction="$enum:crime_reactionKind.banishCompanion" stimulusKind="$enum:crime_stimulusKind.missingNpc" suspiciousDoor="$__null" suspiciousDoorFreshlyOpened="false" nodeLabel="82144638" />
						</Sequence>
					</IfCondition>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Selector>
				<Function_callInterrupt_checkStash ignorePriority="false" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" stash="$stash" stimulusKind="$enum:crime_stimulusKind.alarm" nodeLabel="56984745" />
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
			</Sequence>
			<Sequence>
				<IfCondition failOnCondition="false" condition="$this.name == &apos;test_crime_merchant_8&apos;">
					<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="3.000000" High="3.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
						<Sequence>
							<Expression expressions="$context[&apos;podminka&apos;] = 1" />
							<Function_speech_dialogInitiator alias="&apos;crime_testing_includer&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="$context" customParameters="" metarole="" preset="$enum:dialogPreset.fader" recipient="$__player" recipientMetaroles="" nodeLabel="79398149" />
						</Sequence>
					</DistanceGate>
				</IfCondition>
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
			</Sequence>
			<Sequence>
				<EntityContextCheck context="crime_isAuthority" target="" saveVersion="2">
					<Then canSkip="1">
						<PlayAdditiveAnimation Fragment="&apos;CrimeCross&apos;" Tags="" />
					</Then>
				</EntityContextCheck>
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
			</Sequence>
			<ForceLook LookTarget="$__player" DisableVariations="true" />
			<IfCondition failOnCondition="false" condition="$this.name == &apos;test_crime_guard_8&apos;">
				<Sequence>
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
					<Function_crime_createCombatInformation addConfiscation="false" attackKind="$enum:crime_attackKind.armed" directHit="true" victim="$this.id" information="$information" nodeLabel="94204196" />
					<LockDynamicInformationValues Information="$information">
						<SetDynamicInformationValue Information="$information" Tag="&apos;fine&apos;" Variable="$sixhundo" Type="" Value="" />
					</LockDynamicInformationValues>
					<GetKnownInformations OutArray="$informations" Holder="$this.id" />
					<ResolveCrimeDecorator Information="$informations">
						<Sequence>
							<GetCrimeData Fine="$fine" FoundAnyUnknownStolenItem="" FoundAnyKnownStolenItem="" />
							<LogToConsole LogLevel="Error" Message="&apos;FINE IS THIS AMOUNT: $fine&apos;" />
							<IfCondition failOnCondition="false" condition="$fine == 0">
								<Expression expressions="$fine = $sixhundo" />
							</IfCondition>
							<Function_crime_getStolenItemsStorageChest storage="$apple" nodeLabel="40599845" />
							<Confiscate ConfiscateItems="All" ConfiscateFine="true" TargetStash="$apple" />
						</Sequence>
					</ResolveCrimeDecorator>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</IfCondition>
			<Sequence>
				<CircularSpatialQuery Radius="50.000000" Center="$this.id" ToFill="$targets" Precision="Exact" Filter="LivingHumanNPCs" />
				<PushToArray array="$targets" value="$this.id" direction="Back" />
				<CreateInformation PerceivedWuid="$this.id" label="&apos;motivation&apos;" position="" ToWhom="" OutVariable="$information" />
				<SpreadInformation WuidArray="$targets" />
			</Sequence>
			<WaitAction />
			<StanceCheck soul="$__player" stance="crouch" smartObject="" negate="false" failOnCondition="false" saveVersion="2">
				<Then canSkip="1">
					<LogToLabel Name="" Wuid="" Message="&apos;USING TURN&apos;">
						<Sequence>
							<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
							<Turn target="$__player" align="false" />
							<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</LogToLabel>
				</Then>
				<Else canSkip="1">
					<LogToLabel Name="" Wuid="" Message="&apos;USING BOTH&apos;">
						<ForceLook LookTarget="$__player" DisableVariations="true">
							<Sequence>
								<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
								<WaitAction />
								<Parallel successMode="Any" failureMode="Any">
									<Loop count="-1">
										<Sequence>
											<Turn target="$__player" align="false" />
											<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
									</Loop>
									<Loop count="-1">
										<Sequence>
											<PlayAdditiveAnimation Fragment="&apos;CrimeGoAwayEasy&apos;" Tags="" />
											<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
									</Loop>
								</Parallel>
							</Sequence>
						</ForceLook>
					</LogToLabel>
				</Else>
			</StanceCheck>
			<AnyDecorator preset="crime_keepStateAndItems" enabled="true">
				<EntityContextElement context="crime_interrupt" enabled="true">
					<ForceLook LookTarget="$__player" DisableVariations="true">
						<Sequence>
							<WaitAction />
							<Parallel successMode="Any" failureMode="Any">
								<Sequence>
									<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_ROZPOZNALO_VYTRZNIKA_(KAMINEK)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="16401324" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
								<Function_crime_sharePlayersLastSeenPosition allowedAssistance="$enum:crime_allowedSharePlayerPosAssistance.none" requestVisualAssistanceFromOthers="false" direction="$playersLastSeenDirection" position="$playerPosition" nodeLabel="73620001" />
								<Loop count="-1">
									<Sequence>
										<Turn target="$playerPosition" align="false" />
										<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</Loop>
								<Loop count="2">
									<Sequence>
										<PlayAdditiveAnimation Fragment="&apos;CrimeGoAwayEasy&apos;" Tags="" />
										<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="&apos;2s&apos;" />
									</Sequence>
								</Loop>
							</Parallel>
						</Sequence>
					</ForceLook>
				</EntityContextElement>
			</AnyDecorator>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="apple" comment="" />
				<Variable name="asd" comment="" />
				<Variable name="context" comment="" />
				<Variable name="delete_item" comment="" />
				<Variable name="fine" comment="" />
				<Variable name="information" comment="" />
				<Variable name="informations" comment="" />
				<Variable name="inventory" comment="" />
				<Variable name="item" comment="" />
				<Variable name="myPos" comment="" />
				<Variable name="offence_value" comment="" />
				<Variable name="offences" comment="" />
				<Variable name="playerPosition" comment="" />
				<Variable name="playersBoots" comment="" />
				<Variable name="playersLastSeenDirection" comment="" />
				<Variable name="punishment" comment="" />
				<Variable name="sixhundo" comment="" />
				<Variable name="slot" comment="" />
				<Variable name="stash" comment="" />
				<Variable name="stolenItems" comment="" />
				<Variable name="targets" comment="" />
				<Variable name="time" comment="" />
				<Variable name="victim" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-120" editorPosY="190" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="3460" editorPosY="-230" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</GetSpatialInfo>
					<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
							</DistanceCondition>
						</Sequence>
					</While>
				</Sequence>
				<Selector editorPosX="3470" editorPosY="-620" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<StealthCrouch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</StealthCrouch>
					</Sequence>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Selector>
				<Sequence editorPosX="2140" editorPosY="2450" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
					<Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_speech_monolog>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Sequence>
				<IfElseCondition editorPosX="-410" editorPosY="-550" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Then>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Then>
				</IfElseCondition>
				<Sequence editorPosX="4370" editorPosY="630" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<CreateInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</CreateInformation>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
					<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</SetDynamicInformationValue>
							<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</SetDynamicInformationValue>
						</Sequence>
					</LockDynamicInformationValues>
					<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetDynamicInformationValue>
					</LockDynamicInformationValues>
				</Sequence>
				<Loop editorPosX="-920" editorPosY="-970" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ItemParamFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ItemParamFilter>
								</GraphSearch>
								<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LogToConsole>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Selector>
					</Sequence>
				</Loop>
				<Selector editorPosX="3210" editorPosY="2760" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
						<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AddLink>
						<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AddLink>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
								<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LogToConsole>
								<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</RemoveLink>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
								<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LogToConsole>
								<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</RemoveLink>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
							<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LogToConsole>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</LinkGate>
						</Parallel>
					</Sequence>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Selector>
				<Sequence editorPosX="4540" editorPosY="-340" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Function_callInterrupt_checkProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_callInterrupt_checkProperty>
							</Sequence>
						</IfCondition>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Selector>
					<Function_callInterrupt_checkStash hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_callInterrupt_checkStash>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Sequence>
				<Sequence editorPosX="-1210" editorPosY="-170" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_speech_dialogInitiator>
							</Sequence>
						</DistanceGate>
					</IfCondition>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Sequence>
				<Sequence editorPosX="2450" editorPosY="2210" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</PlayAdditiveAnimation>
						</Then>
					</EntityContextCheck>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Sequence>
				<ForceLook editorPosX="-670" editorPosY="390" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</ForceLook>
				<IfCondition editorPosX="260" editorPosY="2470" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<Function_crime_createCombatInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_crime_createCombatInformation>
						<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</SetDynamicInformationValue>
						</LockDynamicInformationValues>
						<GetKnownInformations hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetKnownInformations>
						<ResolveCrimeDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GetCrimeData hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetCrimeData>
								<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LogToConsole>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</IfCondition>
								<Function_crime_getStolenItemsStorageChest hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_getStolenItemsStorageChest>
								<Confiscate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Confiscate>
							</Sequence>
						</ResolveCrimeDecorator>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</IfCondition>
				<Sequence editorPosX="4120" editorPosY="590" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<CircularSpatialQuery hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</CircularSpatialQuery>
					<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</PushToArray>
					<CreateInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</CreateInformation>
					<SpreadInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</SpreadInformation>
				</Sequence>
				<WaitAction editorPosX="3930" editorPosY="380" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</WaitAction>
				<StanceCheck editorPosX="2930" editorPosY="720" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Then>
						<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
								<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Turn>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</LogToLabel>
					</Then>
					<Else>
						<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Turn>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</Loop>
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</PlayAdditiveAnimation>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</Loop>
									</Parallel>
								</Sequence>
							</ForceLook>
						</LogToLabel>
					</Else>
				</StanceCheck>
				<AnyDecorator editorPosX="330" editorPosY="-120" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_crimeBark>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
									<Function_crime_sharePlayersLastSeenPosition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_sharePlayersLastSeenPosition>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Turn>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</Loop>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</PlayAdditiveAnimation>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</Loop>
								</Parallel>
							</Sequence>
						</ForceLook>
					</EntityContextElement>
				</AnyDecorator>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="visitation" is_function="0">
		<Variables>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="index" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="maxIndex" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="myHome" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="originPoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="possibleVisitPoints" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="trespassArea" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<IfElseCondition failOnCondition="false" condition="$this.name == &apos;test_crime_civilian_17&apos;" saveVersion="2">
						<Then canSkip="1">
							<GameContext context="global_deterrentAreasActive">
								<EntityContext context="deterrenceImmunity" target="">
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</EntityContext>
							</GameContext>
						</Then>
						<Else canSkip="1">
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Else>
					</IfElseCondition>
					<Sequence>
						<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;visitOrigin&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							<Datalyzer Tag="&apos;visitOrigin&apos;" Quantifiers="ForAll" Parent="" Child="$originPoint" Data="" saveVersion="2" />
						</GraphSearch>
						<GraphSearch Origin="$originPoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;visit&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							<Datalyzer Tag="&apos;visit&apos;" Quantifiers="ForAll" Parent="" Child="$possibleVisitPoints" Data="" saveVersion="2" />
						</GraphSearch>
						<Expression expressions="$maxIndex = #possibleVisitPoints-1" />
						<While doFail="false" propagateChildFail="false" condition="true">
							<Sequence>
								<GenerateRandomInteger lowerBoundary="0" upperBoundary="$maxIndex" result="$index" />
								<Expression expressions="$destination = $possibleVisitPoints[$index]" />
								<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
								<IsInsideAreaWithLabel Position="$destination" Label="&apos;private&apos;" Area="$trespassArea" FailSubtMissing="false" saveVersion="2">
									<Then canSkip="1">
										<SuppressFailure>
											<Sequence>
												<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;home&apos;" prune="true" negprune="unknown" Parent="" Child="$myHome" Data="" />
												</GraphSearch>
												<GraphSearch Origin="$trespassArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;home_area_reverse&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
													<WUIDFilter WUID="$myHome" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
												</GraphSearch>
												<Function_crime_makeDailyChecks initiator="$enum:switch_interruptInitiator.scheduler" previousReaction="$enum:crime_reactionKind.unknown" nodeLabel="39745701" />
											</Sequence>
										</SuppressFailure>
									</Then>
								</IsInsideAreaWithLabel>
							</Sequence>
						</While>
					</Sequence>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="destination" comment="" />
				<Variable name="index" comment="" />
				<Variable name="maxIndex" comment="" />
				<Variable name="myHome" comment="" />
				<Variable name="originPoint" comment="" />
				<Variable name="possibleVisitPoints" comment="" />
				<Variable name="trespassArea" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="60" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<GameContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</EntityContext>
								</GameContext>
							</Then>
							<Else>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Else>
						</IfElseCondition>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
								<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
								</Datalyzer>
							</GraphSearch>
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
								<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
								</Datalyzer>
							</GraphSearch>
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GenerateRandomInteger hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GenerateRandomInteger>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Move>
									<IsInsideAreaWithLabel hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
													</GraphSearch>
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
														<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</WUIDFilter>
													</GraphSearch>
													<Function_crime_makeDailyChecks hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_crime_makeDailyChecks>
												</Sequence>
											</SuppressFailure>
										</Then>
									</IsInsideAreaWithLabel>
								</Sequence>
							</While>
						</Sequence>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="idle_playerIsMyEnemy" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<RelationContext context="crime_forceEnemyRelationship" source="$this.id" target="$__player">
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</RelationContext>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<AddLink From="$this.id" To="$__player" Tag="&apos;enemy&apos;" Data="" LinkOpHandleMode="Error" />
			</Sequence>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="-150" editorPosY="70" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<RelationContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</RelationContext>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="120" editorPosY="-80" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</AddLink>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="shootSomeone" is_function="0">
		<Variables>
			<Variable name="arrows" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="bow" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="target" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<UrgencyDecorator Urgency="Fast">
					<Sequence>
						<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;target&apos;" prune="true" negprune="unknown" Parent="" Child="$target" Data="" />
						</GraphSearch>
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$target" destinationSpecification2="" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</UrgencyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="arrows" comment="" />
				<Variable name="bow" comment="" />
				<Variable name="target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</UrgencyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="beInvisible" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="attackSomeone" is_function="0">
		<Variables>
			<Variable name="assaultData" type="crime:assaultData" values="" isPersistent="0" form="single" />
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" />
			<Variable name="pathFindingParams" type="pathFindingParams" values="useGeneratedNSO(true)" isPersistent="0" form="single" />
			<Variable name="target" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Function_callInterrupt_mindPlayer ignorePriority="true" initiator="$enum:switch_interruptInitiator.scheduler" previousReaction="$enum:crime_reactionKind.selfhelp" stimulusKind="$enum:crime_stimulusKind.pickpocket" nodeLabel="63570197" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="assaultData" comment="" />
				<Variable name="hitReaction" comment="" />
				<Variable name="information" comment="" />
				<Variable name="pathFindingParams" comment="" />
				<Variable name="target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-510" editorPosY="1170" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Function_callInterrupt_mindPlayer hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_callInterrupt_mindPlayer>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="turnAround" is_function="0">
		<Variables>
			<Variable name="align" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Loop count="-1">
					<Sequence>
						<Turn target="$__player" align="false" />
						<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="&apos;3s&apos;" skipInLOD="false" />
						<Expression expressions="$align = ~$align" />
					</Sequence>
				</Loop>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="align" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Turn>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</Sequence>
					</Loop>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="typeDefTest" is_function="1">
		<Variables>
			<Variable name="bool" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="bool2" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" />
			<Variable name="innerType" type="innerType" values="" isPersistent="0" form="single" />
			<Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="p1" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="p2" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="value" type="_int" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="firstType" type="firstType" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="outTest" type="_float,_int" values="" isPersistent="0" form="custom_associative" requirementType="Out" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;npc&apos;" prune="true" negprune="unknown" Parent="" Child="$npc" Data="" />
					</GraphSearch>
					<CreateInformation PerceivedWuid="$npc" label="&apos;corpse&apos;" position="" ToWhom="" OutVariable="$information" />
					<Function_callInterrupt_returnWithHelp crimePos="" helpingNpc="$npc" ignorePriority="true" information="$information" initiator="$enum:switch_interruptInitiator.scheduler" previousReaction="$enum:crime_reactionKind.unknown" stimulusKind="$enum:crime_stimulusKind.corpse" nodeLabel="98145167" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<Expression expressions="$innerType = $firstType.inner" />
				<LogToConsole LogLevel="Error" Message="&apos;$innerType.text $firstType.text&apos;" />
			</Sequence>
			<IfGate atomic="false" condition="~$bool" RunLogic="Halt">
				<IfGate atomic="false" condition="~$bool2" RunLogic="Halt">
					<ActorStateBarrier Who="$__player" ToState="crouch" NegateTo="false" RunLogic="KeepRunning">
						<Parallel successMode="Any" failureMode="Any">
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							<Sequence>
								<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								<Parallel successMode="Any" failureMode="Any">
									<Sequence>
										<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										<Expression expressions="$p1 = true" />
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
									</Sequence>
									<ContinuousSwitch>
										<IfCondition failOnCondition="false" condition="$p1">
											<Parallel successMode="Any" failureMode="Any">
												<Sequence>
													<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
													<Expression expressions="$p2 = true" />
													<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
												</Sequence>
												<ContinuousSwitch>
													<IfCondition failOnCondition="false" condition="$p2">
														<ContinuousSwitch>
															<IfCondition failOnCondition="false" condition="$p1">
																<Function_typeDefTestWrapper bool="$bool" nodeLabel="73938752" />
															</IfCondition>
															<IfCondition failOnCondition="false" condition="true">
																<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
															</IfCondition>
														</ContinuousSwitch>
													</IfCondition>
													<IfCondition failOnCondition="false" condition="true">
														<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
													</IfCondition>
												</ContinuousSwitch>
											</Parallel>
										</IfCondition>
										<IfCondition failOnCondition="false" condition="true">
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										</IfCondition>
									</ContinuousSwitch>
								</Parallel>
							</Sequence>
						</Parallel>
					</ActorStateBarrier>
				</IfGate>
			</IfGate>
			<EntityContextBarrier context="crime_interrupt" target="$npc" Negation="false" RunLogic="KeepRunning">
				<EntityContextBarrier context="crime_interrupt" target="$npc" Negation="true" RunLogic="KeepRunning">
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</EntityContextBarrier>
			</EntityContextBarrier>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="bool" comment="" />
				<Variable name="bool2" comment="" />
				<Variable name="information" comment="" />
				<Variable name="innerType" comment="" />
				<Variable name="npc" comment="" />
				<Variable name="p1" comment="" />
				<Variable name="p2" comment="" />
				<Variable name="value" comment="" />
				<Variable name="firstType" comment="" />
				<Variable name="outTest" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-260" editorPosY="-30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<CreateInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</CreateInformation>
						<Function_callInterrupt_returnWithHelp hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_callInterrupt_returnWithHelp>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="-180" editorPosY="640" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
					<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</LogToConsole>
				</Sequence>
				<IfGate editorPosX="530" editorPosY="-160" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
										<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Sequence>
													<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Function_typeDefTestWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_typeDefTestWrapper>
																</IfCondition>
																<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Wait>
																</IfCondition>
															</ContinuousSwitch>
														</IfCondition>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</IfCondition>
													</ContinuousSwitch>
												</Parallel>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</IfCondition>
										</ContinuousSwitch>
									</Parallel>
								</Sequence>
							</Parallel>
						</ActorStateBarrier>
					</IfGate>
				</IfGate>
				<EntityContextBarrier editorPosX="670" editorPosY="220" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</EntityContextBarrier>
				</EntityContextBarrier>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="typeDefTestWrapper" is_function="1">
		<Variables>
			<Variable name="custom" type="_float,_int" values="" isPersistent="0" form="custom_associative" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" />
			<Variable name="innerType" type="innerType" values="" isPersistent="0" form="single" />
			<Variable name="secondType" type="secondType" values="" isPersistent="0" form="single" />
			<Variable name="value" type="_int" values="69" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="bool" type="_bool" values="" isPersistent="0" form="single" requirementType="Out" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextElement context="crime_interrupt">
					<Sequence>
						<EntityContext context="actorCondition_forcedCrimeWatching_nonViolent" target="">
							<WaitAction />
						</EntityContext>
						<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</EntityContextElement>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<Expression expressions="$innerType.text = &apos;Hello&apos; &#10; &#10;$secondType.inner = $innerType &#10;$secondType.text = &apos; world&apos; &#10;$secondType.text2 = &apos;!&apos;" />
				<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Sequence>
			<Function_typeDefTest firstType="$secondType" outTest="" nodeLabel="37824968" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="custom" comment="" />
				<Variable name="information" comment="" />
				<Variable name="innerType" comment="" />
				<Variable name="secondType" comment="" />
				<Variable name="value" comment="" />
				<Variable name="bool" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
							</EntityContext>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</EntityContextElement>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="1100" editorPosY="200" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Sequence>
				<Function_typeDefTest editorPosX="370" editorPosY="-240" hasInputBreakpoint="0" comment="" breakpointFlags="1">
					<OutputBreakpoints>
						<Breakpoint PortIndex="0" />
					</OutputBreakpoints>
				</Function_typeDefTest>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="waitForCombat" is_function="0">
		<Variables>
			<Variable name="assaultData" type="crime:assaultData" values="" isPersistent="0" form="single" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" />
			<Variable name="message" type="attackTarget" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					<ShockNPC Target="$this.id" Source="$__player" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$message" senderInfo="" inbox="&apos;test_attackTarget&apos;" condition="" answerVar="">
				<Function_callInterrupt_attack assaultData="$assaultData" defenceMode="false" freshlyAttributedCrime="false" ignorePriority="true" information="$information" initiator="$enum:switch_interruptInitiator.unknown" previousReaction="$enum:crime_reactionKind.unknown" priority="160" questBehavior="false" relationOverride="true" stimulusKind="$enum:crime_stimulusKind.unknown" target="$message.target" nodeLabel="14292776" />
			</ProcessMessage>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="assaultData" comment="" />
				<Variable name="information" comment="" />
				<Variable name="message" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<ShockNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ShockNPC>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<ProcessMessage editorPosX="360" editorPosY="-200" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Function_callInterrupt_attack hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_callInterrupt_attack>
				</ProcessMessage>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="nervous" is_function="0">
		<Variables>
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="target" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="weaponToPick" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<HandContentElement hand="Right" item="$weaponToPick" allowAny="false" decisionLabel="Label1" useDecision="true" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<Function_findItemOnSlot linkName="&apos;weaponToPick&apos;" npc="$this.id" searchOrigin="$this.id" item="$weaponToPick" nodeLabel="15660611" />
						</Search>
						<Exec canSkip="1">
							<WaitAction />
						</Exec>
					</HandContentElement>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="target" comment="" />
				<Variable name="weaponToPick" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_findItemOnSlot>
							</Search>
							<Exec>
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
							</Exec>
						</HandContentElement>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="guardGate" is_function="0">
		<Variables>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="destinationVec" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="moveParams" type="additionalMoveParams" values="destChangedThreshold(&apos;200ms&apos;)" isPersistent="0" form="single" />
			<Variable name="perception" type="perceptionInfo" values="" isPersistent="0" form="single" />
			<Variable name="points" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="target" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="crime_isAuthorityOnDuty" target="">
					<EntityContext context="crime_isAuthorityOnStationaryDuty" target="">
						<EntityContext context="crime_canFriskPlayer" target="">
							<EntityContext context="crime_spawnMissingNpcVolume" target="">
								<Loop count="-1">
									<Sequence>
										<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;gatePoint&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
											<Nodalyzer Quantifiers="ForAll" Parent="" Child="$points" saveVersion="2" />
										</GraphSearch>
										<Loop count="-1">
											<ForEach startIndex="0" step="1" array="$points" iterator="" value="$destination" break="">
												<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
													<Child canSkip="1">
														<Sequence>
															<GetSpatialInfo In="$destination" Out="$destinationVec" What="Position" />
															<AddLink From="$this.id" To="$destination" Tag="&apos;scheduler_currentBehaviorDestination&apos;" Data="$destinationVec" LinkOpHandleMode="OverWrite" />
															<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
															<Wait duration="&apos;0s&apos;" timeType="GameTime" doFail="false" variation="&apos;10s&apos;" skipInLOD="false" />
															<UnstanceAction unstance="healingLeft" locationObject="$__null" />
															<Wait duration="&apos;0s&apos;" timeType="GameTime" doFail="false" variation="&apos;10s&apos;" skipInLOD="false" />
														</Sequence>
													</Child>
													<OnFail canSkip="1">
														<RemoveLink From="$this.id" To="$destination" Tag="&apos;scheduler_currentBehaviorDestination&apos;" LinkOpHandleMode="Success" />
													</OnFail>
												</FuseBox>
											</ForEach>
										</Loop>
									</Sequence>
								</Loop>
							</EntityContext>
						</EntityContext>
					</EntityContext>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer>
			<Parallel successMode="Any" failureMode="Any">
				<Loop count="-1">
					<Sequence>
						<IfCondition failOnCondition="false" condition="$this.name == &apos;test_crime_guard_12&apos;">
							<Sequence>
								<GetCurrentPerceptionFocus PerceptionNfo="$perception" />
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;target&apos;" prune="true" negprune="unknown" Parent="" Child="$target" Data="" />
								</GraphSearch>
								<IfCondition failOnCondition="false" condition="$perception.perceptible == $target">
									<Selector>
										<Invertor>
											<AddLink From="$this.id" To="$this.id" Tag="&apos;doOnce&apos;" Data="" LinkOpHandleMode="Fail" />
										</Invertor>
										<Function_callInterrupt_missingNpcFound ignorePriority="true" initiator="$enum:switch_interruptInitiator.scheduler" missingNPC="$target" previousReaction="$enum:crime_reactionKind.lookAround" searchingNPC="$this.id" stimulusKind="$enum:crime_stimulusKind.missingNpc" nodeLabel="18919041" />
									</Selector>
								</IfCondition>
							</Sequence>
						</IfCondition>
						<Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</Loop>
			</Parallel>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="destination" comment="" />
				<Variable name="destinationVec" comment="" />
				<Variable name="moveParams" comment="" />
				<Variable name="perception" comment="" />
				<Variable name="points" comment="" />
				<Variable name="target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
												<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
												</Nodalyzer>
											</GraphSearch>
											<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Child>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</GetSpatialInfo>
																<AddLink hasInputBreakpoint="0" comment="TODO: replace with AddLinkElement, it was bugged when implementing this" breakpointFlags="0">
																	<OutputBreakpoints />
																</AddLink>
																<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Move>
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
																<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<OutputBreakpoints />
																</UnstanceAction>
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
															</Sequence>
														</Child>
														<OnFail>
															<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</RemoveLink>
														</OnFail>
													</FuseBox>
												</ForEach>
											</Loop>
										</Sequence>
									</Loop>
								</EntityContext>
							</EntityContext>
						</EntityContext>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest>
				<Parallel editorPosX="1690" editorPosY="-910" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetCurrentPerceptionFocus hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetCurrentPerceptionFocus>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Invertor hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</AddLink>
											</Invertor>
											<Function_callInterrupt_missingNpcFound hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_callInterrupt_missingNpcFound>
										</Selector>
									</IfCondition>
								</Sequence>
							</IfCondition>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Loop>
				</Parallel>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="periodicallyCheckMates" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Loop count="-1">
					<Sequence>
						<Function_crime_checkMates nodeLabel="25232584" />
						<Wait duration="&apos;1m&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</Loop>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_checkMates hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_checkMates>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Loop>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="goShopping" is_function="0">
		<Variables>
			<Variable name="reactorData" type="crime:reactor" values="" isPersistent="0" form="single" />
			<Variable name="shop" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stealdata" type="stealData" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;shop&apos;" prune="true" negprune="unknown" Parent="" Child="$shop" Data="" />
					</GraphSearch>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$shop" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<LogToConsole LogLevel="Error" Message="&apos;$this.id is shopping&apos;" />
					<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					<Function_crime_checkPockets initiator="$enum:switch_interruptInitiator.unknown" previousReaction="$enum:crime_reactionKind.unknown" nodeLabel="88190789" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="reactorData" comment="" />
				<Variable name="shop" comment="" />
				<Variable name="stealdata" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LogToConsole>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<Function_crime_checkPockets hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_crime_checkPockets>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="zeldaDog" is_function="0">
		<Variables>
			<Variable name="destination" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="fullCircle" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="myPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="myRot" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="params" type="additionalMoveParams" values="destChangedThreshold(&apos;100ms&apos;)" isPersistent="0" form="single" />
			<Variable name="playerIsRotating" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="playerIsRotatingLocal" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="playerRot" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="playerRotNew" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="rotDiff" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="stop" type="_bool" values="true" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="5.000000" High="5.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
					<Parallel successMode="Any" failureMode="Any">
						<Loop count="-1">
							<Sequence>
								<Loop count="-1">
									<Sequence>
										<GetSpatialInfo In="$__player" Out="$playerRotNew" What="Orientation" />
										<ExecuteLua code="data.rotDiff =  &#10;math.abs(data.playerRotNew.x - data.playerRot.x) +  &#10;math.abs(data.playerRotNew.y - data.playerRot.y)" />
										<Expression expressions="$playerIsRotatingLocal = $rotDiff &gt; 0.4" />
										<Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										<Expression expressions="$playerRot = $playerRotNew" />
									</Sequence>
								</Loop>
								<Expression expressions="$playerIsRotatingLocal = false" />
							</Sequence>
						</Loop>
						<Loop count="-1">
							<Sequence>
								<IfGate atomic="false" condition="$playerIsRotatingLocal" RunLogic="Halt">
									<Sequence>
										<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										<Expression expressions="$playerIsRotating = true" />
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
									</Sequence>
								</IfGate>
								<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								<Expression expressions="$playerIsRotating = false" />
							</Sequence>
						</Loop>
						<Loop count="-1">
							<Parallel successMode="Any" failureMode="Any">
								<IfGate atomic="false" condition="$playerIsRotating" RunLogic="KeepRunning">
									<Sequence>
										<Expression expressions="$stop = false" />
										<Parallel successMode="Any" failureMode="Any">
											<While doFail="false" propagateChildFail="false" condition="~$stop">
												<Sequence>
													<GetSpatialInfo In="$this.id" Out="$myPos" What="Position" />
													<ExecuteLua code="data.myRot.z = data.myRot.z + 0.125 &#10;data.destination.x = data.myPos.x + math.sin(data.myRot.z) * 5 &#10;data.destination.y = data.myPos.y + math.cos(data.myRot.z) * 5 &#10;data.destination.z = data.myPos.z &#10; &#10;data.fullCircle = data.myRot.z % 1 == 0" />
													<Wait duration="&apos;50ms&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
													<IfCondition failOnCondition="false" condition="$fullCircle &amp; ~$playerIsRotating">
														<Expression expressions="$stop = true" />
													</IfCondition>
												</Sequence>
											</While>
											<Move stopWithinDistance="0.000000" stopDistanceVariation="0.000000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="$params" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
										</Parallel>
									</Sequence>
								</IfGate>
								<Loop count="-1">
									<IfGate atomic="false" condition="~$playerIsRotating &amp; $stop" RunLogic="Halt">
										<Turn target="$__player" align="false" />
									</IfGate>
								</Loop>
							</Parallel>
						</Loop>
					</Parallel>
				</DistanceGate>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="destination" comment="" />
				<Variable name="fullCircle" comment="" />
				<Variable name="myPos" comment="" />
				<Variable name="myRot" comment="" />
				<Variable name="params" comment="" />
				<Variable name="playerIsRotating" comment="" />
				<Variable name="playerIsRotatingLocal" comment="" />
				<Variable name="playerRot" comment="" />
				<Variable name="playerRotNew" comment="" />
				<Variable name="rotDiff" comment="" />
				<Variable name="stop" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-300" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetSpatialInfo>
											<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</ExecuteLua>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Sequence>
									</Loop>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
							</Loop>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</IfGate>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
							</Loop>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</GetSpatialInfo>
														<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ExecuteLua>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</IfCondition>
													</Sequence>
												</While>
												<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Move>
											</Parallel>
										</Sequence>
									</IfGate>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Turn>
										</IfGate>
									</Loop>
								</Parallel>
							</Loop>
						</Parallel>
					</DistanceGate>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="activeThreatsTest" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HasActiveThreatsGate Who="$this.id" Negation="false" RunLogic="KeepRunning">
					<Sequence>
						<LogToConsole LogLevel="Error" Message="&apos;I HAS THREATS!&apos;" />
						<HasActiveThreatsGate Who="$this.id" Negation="true" RunLogic="KeepRunning">
							<LogToConsole LogLevel="Error" Message="&apos;I HAS NO THREATS!&apos;" />
						</HasActiveThreatsGate>
					</Sequence>
				</HasActiveThreatsGate>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HasActiveThreatsGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LogToConsole>
							<HasActiveThreatsGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LogToConsole>
							</HasActiveThreatsGate>
						</Sequence>
					</HasActiveThreatsGate>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="idle_deaf" is_function="0">
		<Variables>
			<Variable name="fleeData" type="switch:interruptData:flee" values="" isPersistent="0" form="single" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" />
			<Variable name="placeToWatchFrom" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="typci" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<SuppressFailure>
						<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;guardPoint&apos;" prune="true" negprune="unknown" Parent="" Child="$placeToWatchFrom" Data="" />
						</GraphSearch>
					</SuppressFailure>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<AnyDecorator preset="AnyStance">
					<IfElseCondition failOnCondition="false" condition="$placeToWatchFrom == $__null" saveVersion="2">
						<Then canSkip="1">
							<Sequence>
								<WaitAction />
								<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</Then>
						<Else canSkip="1">
							<Sequence>
								<DistanceCondition Origin="$this.id" ReferencePt="$placeToWatchFrom" Low="0.200000" High="0.200000" Negation="false" ValueOnMiddle="false" failOnCondition="false">
									<ExactMove directionType="AlignWithEntity" directionSpecification="$placeToWatchFrom" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$placeToWatchFrom" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
								</DistanceCondition>
								<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</Else>
					</IfElseCondition>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer>
			<EntityContext context="switch_disabledInformationReaction" target="">
				<EntityContext context="switch_disabledHearingReaction" target="">
					<EntityContext context="switch_disabledPerceptionReaction" target="">
						<EntityContext context="switch_disabledPickpocketReaction" target="">
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</EntityContext>
					</EntityContext>
				</EntityContext>
			</EntityContext>
			<Sequence>
				<Wait duration="&apos;8s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				<Function_crime_createCombatInformation attackKind="$enum:crime_attackKind.armed" directHit="true" victim="$this.id" information="$information" nodeLabel="56779520" />
				<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;typek&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
					<Nodalyzer Quantifiers="ForAll" Parent="" Child="$typci" saveVersion="2" />
				</GraphSearch>
				<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				<PushToArray array="$typci" value="$this.id" direction="Back" />
				<SpreadInformation WuidArray="$typci" />
				<IsPublicEnemy Soul="$this.id" FailOnSubtreeMissing="false" saveVersion="2">
					<Then canSkip="1">
						<Loop count="-1">
							<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Loop>
					</Then>
				</IsPublicEnemy>
			</Sequence>
			<IfCondition failOnCondition="false" condition="$attackData.initiatedBy == $enum:switch_interruptInitiator.concept">
				<Sequence>
					<Expression expressions="$priorityForFlee = 160" />
					<SuppressFailure>
						<InstantSendMessageToNPC target="$this.id" type="&apos;combat:duel:combatEvent&apos;" values="opponentFlee(true)" />
					</SuppressFailure>
				</Sequence>
			</IfCondition>
			<EntityContext context="combat_flee" target="" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="fleeData" comment="" />
				<Variable name="information" comment="" />
				<Variable name="placeToWatchFrom" comment="" />
				<Variable name="typci" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-480" editorPosY="490" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
						</SuppressFailure>
					</Sequence>
				</OnInit>
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Then>
							<Else>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ExactMove>
									</DistanceCondition>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Else>
						</IfElseCondition>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest>
				<EntityContext editorPosX="230" editorPosY="180" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</EntityContext>
						</EntityContext>
					</EntityContext>
				</EntityContext>
				<Sequence editorPosX="1220" editorPosY="670" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
					<Function_crime_createCombatInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_crime_createCombatInformation>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
						<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
						</Nodalyzer>
					</GraphSearch>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
					<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</PushToArray>
					<SpreadInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</SpreadInformation>
					<IsPublicEnemy hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Loop>
						</Then>
					</IsPublicEnemy>
				</Sequence>
				<IfCondition editorPosX="40" editorPosY="1190" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantSendMessageToNPC>
						</SuppressFailure>
					</Sequence>
				</IfCondition>
				<EntityContext editorPosX="40" editorPosY="1330" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</EntityContext>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="guardGate" is_function="0">
		<Variables>
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="destinationVec" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="points" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="crime_isAuthorityOnDuty" target="">
					<EntityContext context="crime_isAuthorityOnStationaryDuty" target="">
						<EntityContext context="crime_canFriskPlayer" target="">
							<EntityContext context="crime_spawnMissingNpcVolume" target="">
								<Sequence>
									<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;gatePoint&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
										<Nodalyzer Quantifiers="ForAll" Parent="" Child="$points" saveVersion="2" />
									</GraphSearch>
									<Loop count="-1">
										<ForEach startIndex="0" step="1" array="$points" iterator="" value="$destination" break="">
											<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
												<Child canSkip="1">
													<Sequence>
														<GetSpatialInfo In="$destination" Out="$destinationVec" What="Position" />
														<AddLink From="$this.id" To="$destination" Tag="&apos;scheduler_currentBehaviorDestination&apos;" Data="$destinationVec" LinkOpHandleMode="OverWrite" />
														<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
														<Wait duration="&apos;0s&apos;" timeType="GameTime" doFail="false" variation="&apos;10s&apos;" skipInLOD="false" />
														<UnstanceAction unstance="healingLeft" locationObject="$__null" />
														<Wait duration="&apos;0s&apos;" timeType="GameTime" doFail="false" variation="&apos;10s&apos;" skipInLOD="false" />
													</Sequence>
												</Child>
												<OnFail canSkip="1">
													<RemoveLink From="$this.id" To="$destination" Tag="&apos;scheduler_currentBehaviorDestination&apos;" LinkOpHandleMode="Success" />
												</OnFail>
											</FuseBox>
										</ForEach>
									</Loop>
								</Sequence>
							</EntityContext>
						</EntityContext>
					</EntityContext>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="destination" comment="" />
				<Variable name="destinationVec" comment="" />
				<Variable name="points" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
											<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
											</Nodalyzer>
										</GraphSearch>
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Child>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</GetSpatialInfo>
															<AddLink hasInputBreakpoint="0" comment="TODO: replace with AddLinkElement, it was bugged when implementing this" breakpointFlags="0">
																<OutputBreakpoints />
															</AddLink>
															<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Move>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
															<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<OutputBreakpoints />
															</UnstanceAction>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
													</Child>
													<OnFail>
														<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</RemoveLink>
													</OnFail>
												</FuseBox>
											</ForEach>
										</Loop>
									</Sequence>
								</EntityContext>
							</EntityContext>
						</EntityContext>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="periodicallyCheckMates" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Loop count="-1">
					<Sequence>
						<Function_crime_checkMates nodeLabel="25232584" />
						<Wait duration="&apos;1m&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</Loop>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_checkMates hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_checkMates>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Loop>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="goShopping" is_function="0">
		<Variables>
			<Variable name="reactorData" type="crime:reactor" values="" isPersistent="0" form="single" />
			<Variable name="shop" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stealdata" type="stealData" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;shop&apos;" prune="true" negprune="unknown" Parent="" Child="$shop" Data="" />
					</GraphSearch>
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$shop" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<LogToConsole LogLevel="Error" Message="&apos;$this.id is shopping&apos;" />
					<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					<Function_crime_checkPockets initiator="$enum:switch_interruptInitiator.unknown" previousReaction="$enum:crime_reactionKind.unknown" nodeLabel="88190789" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="reactorData" comment="" />
				<Variable name="shop" comment="" />
				<Variable name="stealdata" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LogToConsole>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<Function_crime_checkPockets hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_crime_checkPockets>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="zeldaDog" is_function="0">
		<Variables>
			<Variable name="destination" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="fullCircle" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="myPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="myRot" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="params" type="additionalMoveParams" values="destChangedThreshold(&apos;100ms&apos;)" isPersistent="0" form="single" />
			<Variable name="playerIsRotating" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="playerIsRotatingLocal" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="playerRot" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="playerRotNew" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="rotDiff" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="stop" type="_bool" values="true" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="5.000000" High="5.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
					<Parallel successMode="Any" failureMode="Any">
						<Loop count="-1">
							<Sequence>
								<Loop count="-1">
									<Sequence>
										<GetSpatialInfo In="$__player" Out="$playerRotNew" What="Orientation" />
										<ExecuteLua code="data.rotDiff =  &#10;math.abs(data.playerRotNew.x - data.playerRot.x) +  &#10;math.abs(data.playerRotNew.y - data.playerRot.y)" />
										<Expression expressions="$playerIsRotatingLocal = $rotDiff &gt; 0.4" />
										<Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										<Expression expressions="$playerRot = $playerRotNew" />
									</Sequence>
								</Loop>
								<Expression expressions="$playerIsRotatingLocal = false" />
							</Sequence>
						</Loop>
						<Loop count="-1">
							<Sequence>
								<IfGate atomic="false" condition="$playerIsRotatingLocal" RunLogic="Halt">
									<Sequence>
										<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										<Expression expressions="$playerIsRotating = true" />
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
									</Sequence>
								</IfGate>
								<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								<Expression expressions="$playerIsRotating = false" />
							</Sequence>
						</Loop>
						<Loop count="-1">
							<Parallel successMode="Any" failureMode="Any">
								<IfGate atomic="false" condition="$playerIsRotating" RunLogic="KeepRunning">
									<Sequence>
										<Expression expressions="$stop = false" />
										<Parallel successMode="Any" failureMode="Any">
											<While doFail="false" propagateChildFail="false" condition="~$stop">
												<Sequence>
													<GetSpatialInfo In="$this.id" Out="$myPos" What="Position" />
													<ExecuteLua code="data.myRot.z = data.myRot.z + 0.125 &#10;data.destination.x = data.myPos.x + math.sin(data.myRot.z) * 5 &#10;data.destination.y = data.myPos.y + math.cos(data.myRot.z) * 5 &#10;data.destination.z = data.myPos.z &#10; &#10;data.fullCircle = data.myRot.z % 1 == 0" />
													<Wait duration="&apos;50ms&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
													<IfCondition failOnCondition="false" condition="$fullCircle &amp; ~$playerIsRotating">
														<Expression expressions="$stop = true" />
													</IfCondition>
												</Sequence>
											</While>
											<Move stopWithinDistance="0.000000" stopDistanceVariation="0.000000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="$params" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
										</Parallel>
									</Sequence>
								</IfGate>
								<Loop count="-1">
									<IfGate atomic="false" condition="~$playerIsRotating &amp; $stop" RunLogic="Halt">
										<Turn target="$__player" align="false" />
									</IfGate>
								</Loop>
							</Parallel>
						</Loop>
					</Parallel>
				</DistanceGate>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="destination" comment="" />
				<Variable name="fullCircle" comment="" />
				<Variable name="myPos" comment="" />
				<Variable name="myRot" comment="" />
				<Variable name="params" comment="" />
				<Variable name="playerIsRotating" comment="" />
				<Variable name="playerIsRotatingLocal" comment="" />
				<Variable name="playerRot" comment="" />
				<Variable name="playerRotNew" comment="" />
				<Variable name="rotDiff" comment="" />
				<Variable name="stop" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-300" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetSpatialInfo>
											<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</ExecuteLua>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Sequence>
									</Loop>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
							</Loop>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</IfGate>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
							</Loop>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</GetSpatialInfo>
														<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ExecuteLua>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</IfCondition>
													</Sequence>
												</While>
												<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Move>
											</Parallel>
										</Sequence>
									</IfGate>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Turn>
										</IfGate>
									</Loop>
								</Parallel>
							</Loop>
						</Parallel>
					</DistanceGate>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="activeThreatsTest" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HasActiveThreatsGate Who="$this.id" Negation="false" RunLogic="KeepRunning">
					<Sequence>
						<LogToConsole LogLevel="Error" Message="&apos;I HAS THREATS!&apos;" />
						<HasActiveThreatsGate Who="$this.id" Negation="true" RunLogic="KeepRunning">
							<LogToConsole LogLevel="Error" Message="&apos;I HAS NO THREATS!&apos;" />
						</HasActiveThreatsGate>
					</Sequence>
				</HasActiveThreatsGate>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HasActiveThreatsGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LogToConsole>
							<HasActiveThreatsGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LogToConsole>
							</HasActiveThreatsGate>
						</Sequence>
					</HasActiveThreatsGate>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="expectedLinkIdle" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<AddLink From="$this.id" To="$this.id" Tag="&apos;crime_conceptExpected&apos;" Data="" LinkOpHandleMode="OverWrite" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AddLink>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="test_attack" is_function="0">
		<Variables>
			<Variable name="opponent" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;attackThat&apos;" prune="true" negprune="unknown" Parent="" Child="$opponent" Data="" />
					</GraphSearch>
					<AddLinkElement from="$this.id" to="$opponent" tag="&apos;crime_conceptFight&apos;" data="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="opponent" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AddLinkElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="attack_test_skirmish" is_function="0">
		<Variables>
			<Variable name="assaultData" type="crime:assaultData" values="" isPersistent="0" form="single" />
			<Variable name="opponent" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<AddLink From="$this.id" To="$__player" Tag="&apos;attackThat&apos;" Data="" LinkOpHandleMode="Error" />
					<Sequence>
						<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;attackThat&apos;" prune="true" negprune="unknown" Parent="" Child="$opponent" Data="" />
						</GraphSearch>
						<Expression expressions="$assaultData.victim = $opponent" />
						<Function_callInterrupt_attack assaultData="$assaultData" defenceMode="false" ignorePriority="true" information="" initiator="$enum:switch_interruptInitiator.concept" previousReaction="$enum:crime_reactionKind.unknown" priority="160" relationOverride="true" stimulusKind="$enum:crime_stimulusKind.enemy" target="$opponent" nodeLabel="62561328" />
					</Sequence>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;crime_conceptFight&apos;" prune="true" negprune="unknown" Parent="" Child="$opponent" Data="" />
				</GraphSearch>
				<HasGenderCheck Gender="Male" SoulWUID="$this.id" FailSubtMissing="false" saveVersion="2" />
			</Sequence>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="assaultData" comment="" />
				<Variable name="opponent" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-410" editorPosY="-270" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AddLink>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<Function_callInterrupt_attack hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_callInterrupt_attack>
						</Sequence>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="920" editorPosY="160" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
					<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
					</HasGenderCheck>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="crimeSearch" is_function="0">
		<Variables>
			<Variable name="crimeLocation" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="points" type="vec3" values="" isPersistent="0" form="array" />
			<Variable name="points_value" type="vec3" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;crimeSearch_crimeLocation&apos;" prune="true" negprune="unknown" Parent="" Child="$crimeLocation" Data="" />
					</GraphSearch>
					<GetCrimeSearchingPoints Position="$crimeLocation" Direction="" DirectionInfluence="0.000000" MaxDistance="20.000000" DesiredPointCount="6" FilteringSectorCount="12" PathFindParams="" FoundPoints="$points" />
					<ForEach startIndex="0" step="1" array="$points" iterator="" value="$points_value" break="">
						<Sequence>
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" destinationSpecification="$points_value" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							<UnstanceAction unstance="LookingAround" locationObject="$__null" />
							<WaitAction />
						</Sequence>
					</ForEach>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="&apos;2s&apos;" skipInLOD="false" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="crimeLocation" comment="" />
				<Variable name="points" comment="" />
				<Variable name="points_value" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GetCrimeSearchingPoints hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetCrimeSearchingPoints>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<OutputBreakpoints />
								</UnstanceAction>
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
							</Sequence>
						</ForEach>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Wait editorPosX="760" editorPosY="1070" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Wait>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="makeCrimeScene" is_function="0">
		<Variables>
			<Variable name="bool" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="reactors" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="stimulus_theft" type="switch:stimulus:theft" values="" isPersistent="0" form="single" />
			<Variable name="stolenItems" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="watchers" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<AddAngriness Value="auto_witness_death" FactionId="trosecko_justice_league_super" LocationGUID="" />
					<AddAngriness Value="auto_witness_death" FactionId="trosecko_justice_league_super" LocationGUID="" />
					<AddAngriness Value="auto_witness_death" FactionId="trosecko_justice_league_super" LocationGUID="" />
					<AddAngriness Value="auto_witness_death" FactionId="trosecko_justice_league_super" LocationGUID="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;makeCrimeScene_reactor&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
					<Nodalyzer Quantifiers="ForAll" Parent="" Child="$reactors" saveVersion="2" />
				</GraphSearch>
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;makeCrimeScene_watcher&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
					<Nodalyzer Quantifiers="ForAll" Parent="" Child="$watchers" saveVersion="2" />
				</GraphSearch>
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;makeCrimeScene_stolenItem&apos;" prune="true" negprune="unknown" Parent="" Child="$stolenItems" Data="" />
				</GraphSearch>
				<Expression expressions="$stimulus_theft.immediate = true &#10;$stimulus_theft.method = $enum:crime_theftMethod.pick &#10;$stimulus_theft.owner = $reactors[0] &#10;$stimulus_theft.pivot = $stolenItems" />
				<InstantMultiSendMessageToNPC targets="$reactors" successMode="Any" failureMode="Any" variable="$stimulus_theft" />
				<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				<InstantMultiSendMessageToNPC targets="$watchers" successMode="Any" failureMode="Any" variable="$stimulus_theft" />
				<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Sequence>
			<AddNervousness Change="auto_witness_death" SoulWUID="$this.id" IsCourageous="$bool" />
			<AddNervousness Change="auto_witness_death" SoulWUID="$this.id" IsCourageous="$bool" />
			<AddNervousness Change="auto_witness_death" SoulWUID="$this.id" IsCourageous="$bool" />
			<AddNervousness Change="auto_witness_death" SoulWUID="$this.id" IsCourageous="$bool" />
			<Sequence>
				<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				<Turn target="$__player" align="false" />
			</Sequence>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="bool" comment="" />
				<Variable name="reactors" comment="" />
				<Variable name="stimulus_theft" comment="" />
				<Variable name="stolenItems" comment="" />
				<Variable name="watchers" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AddAngriness hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AddAngriness>
						<AddAngriness hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AddAngriness>
						<AddAngriness hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AddAngriness>
						<AddAngriness hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AddAngriness>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="970" editorPosY="-120" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
						<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
						</Nodalyzer>
					</GraphSearch>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
						<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
						</Nodalyzer>
					</GraphSearch>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
					<InstantMultiSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</InstantMultiSendMessageToNPC>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
					<InstantMultiSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</InstantMultiSendMessageToNPC>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Sequence>
				<AddNervousness editorPosX="720" editorPosY="-410" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</AddNervousness>
				<AddNervousness editorPosX="720" editorPosY="-310" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</AddNervousness>
				<AddNervousness editorPosX="720" editorPosY="-210" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</AddNervousness>
				<AddNervousness editorPosX="720" editorPosY="-110" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</AddNervousness>
				<Sequence editorPosX="-90" editorPosY="370" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
					<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Turn>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="spawnPilloryVolume" is_function="0">
		<Variables>
			<Variable name="chest" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" />
			<Variable name="knownInformations" type="information" values="" isPersistent="0" form="array" />
			<Variable name="owner" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="pos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="trespassLevel" type="enum:trespassLevel" values="" isPersistent="0" form="single" />
			<Variable name="volumeParams" type="perceptibleParams" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<GetSpatialInfo In="$this.id" Out="$pos" What="Position" />
				<Expression expressions="$pos.x += 5 &#10; &#10;$volumeParams.visibility = 0.005, &#10;$volumeParams.conspicuousness = 1" />
				<SpawnExpiringPerceptibleVolume Expiration="&apos;5s&apos;" TimerType="GameTime" Position="$pos" Radius="1.000000" Height="1.000000" Label="&apos;crime_pilloryBreak&apos;" OnlyVisiblePointsFromCenter="false" PerceptibleParams="$volumeParams" OutWuid="" />
				<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Sequence>
			<Sequence>
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;chest&apos;" prune="true" negprune="unknown" Parent="" Child="$chest" Data="" />
				</GraphSearch>
				<GetOwner Object="$chest" Owner="$owner" />
				<IfCondition failOnCondition="false" condition="$owner ~= $__null">
					<LogToConsole LogLevel="Error" Message="&apos;OWNER FOUND&apos;" />
				</IfCondition>
			</Sequence>
			<ResolveCrimeDecorator Information="$knownInformations" />
			<Confiscate ConfiscateItems="None" ConfiscateFine="true" />
			<Selector>
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;destination&apos;" prune="true" negprune="unknown" Parent="" Child="$destination" Data="" />
					</GraphSearch>
					<GetSpatialInfo In="$this.id" Out="$pos" What="Position" />
					<Parallel successMode="Any" failureMode="Any">
						<Loop count="-1">
							<Sequence>
								<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
								<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" destinationSpecification="$pos" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							</Sequence>
						</Loop>
						<Loop count="-1">
							<Sequence>
								<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								<AnimationAction fragment="&apos;CrimeGoAwayMedium&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" />
							</Sequence>
						</Loop>
					</Parallel>
				</Sequence>
				<EntityContext context="crime_isAuthorityOnDuty" target="">
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</EntityContext>
			</Selector>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="chest" comment="" />
				<Variable name="destination" comment="" />
				<Variable name="information" comment="" />
				<Variable name="knownInformations" comment="" />
				<Variable name="owner" comment="" />
				<Variable name="pos" comment="" />
				<Variable name="trespassLevel" comment="" />
				<Variable name="volumeParams" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-240" editorPosY="1380" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="510" editorPosY="460" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</GetSpatialInfo>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
					<SpawnExpiringPerceptibleVolume hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</SpawnExpiringPerceptibleVolume>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Sequence>
				<Sequence editorPosX="510" editorPosY="860" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
					<GetOwner hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</GetOwner>
					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LogToConsole>
					</IfCondition>
				</Sequence>
				<ResolveCrimeDecorator editorPosX="-1810" editorPosY="200" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</ResolveCrimeDecorator>
				<Confiscate editorPosX="-750" editorPosY="1180" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Confiscate>
				<Selector editorPosX="1260" editorPosY="1420" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetSpatialInfo>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Move>
									<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Move>
								</Sequence>
							</Loop>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<OutputBreakpoints />
									</AnimationAction>
								</Sequence>
							</Loop>
						</Parallel>
					</Sequence>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</EntityContext>
				</Selector>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="walkAndWave" is_function="0">
		<Variables>
			<Variable name="count" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="move" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="points" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="points_value" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;point&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$points" saveVersion="2" />
					</GraphSearch>
					<SuppressFailure>
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;move&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Expression expressions="$move = true" />
						</Sequence>
					</SuppressFailure>
					<Parallel successMode="Any" failureMode="Any">
						<Loop count="-1">
							<Sequence>
								<Wait duration="&apos;6s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								<Selector>
									<IfCondition failOnCondition="true" condition="$count == 0">
										<PlayAdditiveAnimation Fragment="&apos;CrimeGoAwayHard&apos;" Tags="" />
									</IfCondition>
									<IfCondition failOnCondition="true" condition="$count == 1">
										<PlayAdditiveAnimation Fragment="&apos;CrimeGoAwayEasy&apos;" Tags="" />
									</IfCondition>
									<IfCondition failOnCondition="true" condition="$count == 2">
										<PlayAdditiveAnimation Fragment="&apos;CrimeCross&apos;" Tags="" />
									</IfCondition>
									<IfCondition failOnCondition="true" condition="$count == 3">
										<PlayAdditiveAnimation Fragment="&apos;CrimeGoAwayMedium&apos;" Tags="" />
									</IfCondition>
									<IfCondition failOnCondition="true" condition="$count == 4">
										<PlayAdditiveAnimation Fragment="&apos;GreetingsUpperBody&apos;" Tags="&apos;waveSmall&apos;" />
									</IfCondition>
									<IfCondition failOnCondition="true" condition="$count == 5">
										<PlayAdditiveAnimation Fragment="&apos;GuardRecognition&apos;" Tags="" />
									</IfCondition>
									<Expression expressions="$count = 0" />
								</Selector>
								<Expression expressions="$count += 1" />
							</Sequence>
						</Loop>
						<Sequence>
							<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							<ForEach startIndex="0" step="1" array="$points" iterator="" value="$points_value" break="">
								<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" destinationSpecification="$points_value" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							</ForEach>
						</Sequence>
					</Parallel>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Parallel successMode="Any" failureMode="Any">
				<IfGate atomic="false" condition="$move" RunLogic="KeepRunning">
					<Loop count="-1" />
				</IfGate>
				<Loop count="-1">
					<Sequence>
						<PlayAdditiveAnimation Fragment="&apos;CrimeGoAwayEasy&apos;" Tags="" />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						<PlayAdditiveAnimation Fragment="&apos;CrimeGoAwayMedium&apos;" Tags="" />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						<PlayAdditiveAnimation Fragment="&apos;CrimeGoAwayHard&apos;" Tags="" />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						<PlayAdditiveAnimation Fragment="&apos;CrimeDontComeBack&apos;" Tags="" />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</Loop>
			</Parallel>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="count" comment="" />
				<Variable name="move" comment="" />
				<Variable name="points" comment="" />
				<Variable name="points_value" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
						</SuppressFailure>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</PlayAdditiveAnimation>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</PlayAdditiveAnimation>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</PlayAdditiveAnimation>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</PlayAdditiveAnimation>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</PlayAdditiveAnimation>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</PlayAdditiveAnimation>
										</IfCondition>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Selector>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
							</Loop>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
								<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Move>
								</ForEach>
							</Sequence>
						</Parallel>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Parallel editorPosX="1370" editorPosY="1310" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Loop>
					</IfGate>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</PlayAdditiveAnimation>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</PlayAdditiveAnimation>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</PlayAdditiveAnimation>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</PlayAdditiveAnimation>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Loop>
				</Parallel>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="moveAndWave" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="perceptionSearch" is_function="0">
		<Variables>
			<Variable name="balance" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="perceptionInfo" type="perceptionInfo" values="" isPersistent="0" form="single" />
			<Variable name="point" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<SuppressFailure>
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;point&apos;" prune="true" negprune="unknown" Parent="" Child="$point" Data="" />
							</GraphSearch>
							<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" destinationSpecification="$point" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							<Turn target="$point" align="true" />
						</Sequence>
					</SuppressFailure>
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<SuppressFailure>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;chest&apos;" prune="true" negprune="unknown" Parent="" Child="$point" Data="" />
					</GraphSearch>
				</SuppressFailure>
				<IfElseCondition failOnCondition="false" condition="$point ~= $__null" saveVersion="2">
					<Then canSkip="1">
						<Function_checkChest chest="$point" nodeLabel="49841097" />
					</Then>
					<Else canSkip="1">
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;point&apos;" prune="true" negprune="unknown" Parent="" Child="$point" Data="" />
							</GraphSearch>
							<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							<Parallel successMode="Any" failureMode="Any">
								<Move stopWithinDistance="1.500000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" destinationSpecification="$point" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
								<DistanceGate Origin="$this.id" ReferencePt="$point" Low="5.000000" High="5.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
									<Success />
								</DistanceGate>
							</Parallel>
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Else>
				</IfElseCondition>
			</Sequence>
			<IfElseCondition failOnCondition="false" condition="$perceptionInfo.perceptible == $__player" saveVersion="2">
				<Then canSkip="1">
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Then>
			</IfElseCondition>
			<PerceptionSearch ComponentToBoost="BoostNothing" saveVersion="2">
				<Search canSkip="1">
					<Loop count="-1">
						<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$perceptionInfo" senderInfo="" inbox="&apos;perceptionInfo_perceptionSearch&apos;" condition="" answerVar="">
							<Sequence>
								<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								<DismissSearchCandidate PerceptibleObject="$perceptionInfo.perceptible" />
							</Sequence>
						</ProcessMessage>
					</Loop>
				</Search>
				<NoCandidate canSkip="1">
					<Success />
				</NoCandidate>
			</PerceptionSearch>
			<Sequence>
				<AtomicDecorator>
					<Function_crime_getPlayersMoney balance="$balance" nodeLabel="95539220" />
				</AtomicDecorator>
				<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Sequence>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="balance" comment="" />
				<Variable name="perceptionInfo" comment="" />
				<Variable name="point" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Move>
								<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Turn>
							</Sequence>
						</SuppressFailure>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="160" editorPosY="520" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
					</SuppressFailure>
					<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<Function_checkChest hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_checkChest>
						</Then>
						<Else>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Move>
									<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</DistanceGate>
								</Parallel>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Else>
					</IfElseCondition>
				</Sequence>
				<IfElseCondition editorPosX="1090" editorPosY="-220" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Then>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Then>
				</IfElseCondition>
				<PerceptionSearch editorPosX="280" editorPosY="-420" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Search>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<DismissSearchCandidate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</DismissSearchCandidate>
								</Sequence>
							</ProcessMessage>
						</Loop>
					</Search>
					<NoCandidate>
						<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Success>
					</NoCandidate>
				</PerceptionSearch>
				<Sequence editorPosX="-150" editorPosY="-650" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_crime_getPlayersMoney hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_crime_getPlayersMoney>
					</AtomicDecorator>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="die" is_function="0">
		<Variables>
			<Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<KillNPC KillTarget="$this.id" Scream="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="horse" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</KillNPC>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pp_moveBug" is_function="0">
		<Variables>
			<Variable name="point" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;point&apos;" prune="true" negprune="unknown" Parent="" Child="$point" Data="" />
					</GraphSearch>
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					<Move stopWithinDistance="2.000000" stopDistanceVariation="0.000000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$point" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="point" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="universalIdle" is_function="0">
		<Variables>
			<Variable name="mercyDialogueResult" type="crime:mercyDialogueResult" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Loop count="-1">
					<Sequence>
						<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="35.000000" High="35.000000" Negation="false" ValueOnMiddle="false" failOnCondition="false">
							<Sequence>
								<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</DistanceCondition>
						<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</Loop>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="mercyDialogueResult" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-120" editorPosY="-10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</DistanceCondition>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Loop>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="tenseDebug" is_function="0">
		<Variables>
			<Variable name="stimulus" type="switch:stimulus:murder" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="crime_ignoreCorpses" target="">
					<ActorStateBarrier Who="$__player" ToState="jump" NegateTo="true" RunLogic="KeepRunning">
						<ActorStateBarrier Who="$__player" ToState="jump" NegateTo="false" RunLogic="KeepRunning">
							<Loop count="-1">
								<SuppressFailure>
									<Sequence>
										<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										<Parallel successMode="Any" failureMode="Any">
											<Loop count="-1">
												<SuppressFailure>
													<TenseCircumstanceBarrier RunLogic="Halt">
														<LogToLabel Name="" Wuid="$this.id" Message="&apos;I am so tense right now.&apos;">
															<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
														</LogToLabel>
													</TenseCircumstanceBarrier>
												</SuppressFailure>
											</Loop>
											<ActorStateBarrier Who="$__player" ToState="jump" NegateTo="true" RunLogic="KeepRunning">
												<ActorStateBarrier Who="$__player" ToState="jump" NegateTo="false" RunLogic="KeepRunning">
													<Success />
												</ActorStateBarrier>
											</ActorStateBarrier>
											<Loop count="-1">
												<ActorStateBarrier Who="$__player" ToState="crouch" NegateTo="false" RunLogic="KeepRunning">
													<Sequence>
														<Sequence>
															<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
															<Function_speech_dialogInitiator alias="&apos;tenseDialog1&apos;" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="" preset="$enum:dialogPreset.fader" recipient="$__player" recipientMetaroles="" nodeLabel="97482591" />
														</Sequence>
														<ActorStateBarrier Who="$__player" ToState="crouch" NegateTo="true" RunLogic="KeepRunning">
															<Success />
														</ActorStateBarrier>
													</Sequence>
												</ActorStateBarrier>
											</Loop>
										</Parallel>
									</Sequence>
								</SuppressFailure>
							</Loop>
						</ActorStateBarrier>
					</ActorStateBarrier>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<Expression expressions="$stimulus.corpse = $__player &#10;$stimulus.killedByDog = true" />
				<Function_switch_handleStimulusMurder stimulus="$stimulus" nodeLabel="59144959" />
			</Sequence>
			<Sequence>
				<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				<Function_crime_robUnconsciousPlayer nodeLabel="64529787" />
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Sequence>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="stimulus" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<TenseCircumstanceBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
															</LogToLabel>
														</TenseCircumstanceBarrier>
													</SuppressFailure>
												</Loop>
												<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</ActorStateBarrier>
												</ActorStateBarrier>
												<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
																<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_dialogInitiator>
															</Sequence>
															<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</ActorStateBarrier>
														</Sequence>
													</ActorStateBarrier>
												</Loop>
											</Parallel>
										</Sequence>
									</SuppressFailure>
								</Loop>
							</ActorStateBarrier>
						</ActorStateBarrier>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="340" editorPosY="460" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
					<Function_switch_handleStimulusMurder hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_switch_handleStimulusMurder>
				</Sequence>
				<Sequence editorPosX="510" editorPosY="-460" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
					<Function_crime_robUnconsciousPlayer hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_crime_robUnconsciousPlayer>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="follower_main" is_function="0">
		<Variables>
			<Variable name="pathFindingParams" type="pathFindingParams" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<LogToLabel Name="&apos;role&apos;" Wuid="$this.id" Message="&apos;main&apos;">
					<Sequence>
						<Expression expressions="$pathFindingParams.useGeneratedNSO = true" />
						<MoveParamsDecorator speed="RelaxedWalk" pathFindingParams="$pathFindingParams" doorClosingPolicy="LeaveOpened">
							<CrimeFollower Target="$__player" Role="Main" RelativeSpeedLimit="Walk" BlockWay="false" />
						</MoveParamsDecorator>
					</Sequence>
				</LogToLabel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="pathFindingParams" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<CrimeFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</CrimeFollower>
							</MoveParamsDecorator>
						</Sequence>
					</LogToLabel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="follower_assist" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<LogToLabel Name="&apos;role&apos;" Wuid="$this.id" Message="&apos;assist&apos;">
					<CrimeFollower Target="$__player" Role="Assist" RelativeSpeedLimit="Walk" BlockWay="false" />
				</LogToLabel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<CrimeFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</CrimeFollower>
					</LogToLabel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="follower_observer" is_function="0">
		<Variables>
			<Variable name="benches" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="gsBench" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" />
			<Variable name="point1" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="point2" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<LogToLabel Name="&apos;role&apos;" Wuid="$this.id" Message="&apos;observer&apos;">
					<CrimeFollower Target="$__player" Role="Observer" BlockWay="false" />
				</LogToLabel>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;point1&apos;" prune="true" negprune="unknown" Parent="" Child="$point1" Data="" />
				</GraphSearch>
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;point1&apos;" prune="true" negprune="unknown" Parent="" Child="$point1" Data="" />
				</GraphSearch>
				<Parallel successMode="Any" failureMode="Any">
					<Sequence>
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$point1" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$point2" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
					</Sequence>
					<PlayAdditiveAnimation Fragment="" Tags="" />
				</Parallel>
			</Sequence>
			<Sequence>
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;guard&apos;" prune="true" negprune="unknown" Parent="" Child="$point1" Data="" />
				</GraphSearch>
				<DeadUnconsciousGate Who="$point1" State="Dead" Negation="false" RunLogic="KeepRunning">
					<Sequence>
						<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						<Function_callInterrupt_mourn ignorePriority="true" initiator="$enum:switch_interruptInitiator.unknown" mournTarget="$point1" previousReaction="$enum:crime_reactionKind.unknown" stimulusKind="$enum:crime_stimulusKind.unknown" nodeLabel="93950011" />
					</Sequence>
				</DeadUnconsciousGate>
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Sequence>
			<Function_callInterrupt_watch alreadyCriminal="false" assaultData="" corpseState="$enum:corpseState.undiscovered" defenceMode="false" freshlyAttributedCrime="false" ignorePriority="true" information="$information" initiator="$enum:switch_interruptInitiator.unknown" previousReaction="$enum:crime_reactionKind.unknown" source="$enum:crime_source.direct" stimulusKind="$enum:crime_stimulusKind.aim" target="$__player" nodeLabel="62395406" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="benches" comment="" />
				<Variable name="gsBench" comment="" />
				<Variable name="information" comment="" />
				<Variable name="point1" comment="" />
				<Variable name="point2" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<CrimeFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</CrimeFollower>
					</LogToLabel>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="1160" editorPosY="750" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
						</Sequence>
						<PlayAdditiveAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</PlayAdditiveAnimation>
					</Parallel>
				</Sequence>
				<Sequence editorPosX="890" editorPosY="-190" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
					<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<Function_callInterrupt_mourn hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_callInterrupt_mourn>
						</Sequence>
					</DeadUnconsciousGate>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Sequence>
				<Function_callInterrupt_watch editorPosX="260" editorPosY="340" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Function_callInterrupt_watch>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="attack_horse_test" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="followPlayerNotOnNavmesh" is_function="0">
		<Variables>
			<Variable name="playerPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="stopCrime" type="crime:stopCrime" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<While doFail="false" propagateChildFail="false" condition="true">
					<ActorStateBarrier Who="$__player" ToState="jump" NegateTo="false" RunLogic="KeepRunning">
						<InstantSendMessageToNPC target="$__player" variable="$stopCrime" />
					</ActorStateBarrier>
				</While>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<GetSpatialInfo In="$__player" Out="$playerPos" What="Position" />
				<Function_crime_lookAround_validateOriginPosition originPos="$playerPos" nodeLabel="93388791" />
				<EntityContext context="actorCondition_forcedInjured" target="">
					<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$playerPos" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
				</EntityContext>
			</Sequence>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="playerPos" comment="" />
				<Variable name="stopCrime" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantSendMessageToNPC>
						</ActorStateBarrier>
					</While>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="1080" editorPosY="250" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</GetSpatialInfo>
					<Function_crime_lookAround_validateOriginPosition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_crime_lookAround_validateOriginPosition>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
					</EntityContext>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="watchPlayer" is_function="0">
		<Variables>
			<Variable name="bool" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="direction" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="distance" type="_float" values="5" isPersistent="0" form="single" />
			<Variable name="dot" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" />
			<Variable name="moveParams" type="additionalMoveParams" values="" isPersistent="0" form="single" />
			<Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="path" type="pathFindingParams" values="" isPersistent="0" form="single" />
			<Variable name="playerPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="pos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="speed" type="enum:movementSpeed" values="" isPersistent="0" form="single" />
			<Variable name="vecs" type="vec3" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ShockNPC Target="$this.id" Source="$__player" Type="Medium" />
					<Parallel successMode="Any" failureMode="Any">
						<Loop count="-1">
							<Sequence>
								<Turn target="$__player" align="false" />
								<AnimationAction fragment="&apos;Pointing&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
								<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</Loop>
						<Loop count="-1">
							<Sequence>
								<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_REPORTUJE_STRAZI_(STRAZ_ZATYKA)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="45715381" />
								<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</Loop>
					</Parallel>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<OnWeaponChange WeaponChangeFilter="any" Combatants="Who" Who="$__player" RunLogic="KeepRunning">
				<Sequence>
					<Function_crime_hasWeaponDrawn checkingMethod="$enum:crime_weaponCheckingMethod.perceivableState" npc="$__player" result="$bool" nodeLabel="59423109" />
					<IfCondition failOnCondition="false" condition="$bool">
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</IfCondition>
				</Sequence>
			</OnWeaponChange>
			<EntityContextElement context="crime_interrupt" enabled="true">
				<Sequence>
					<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					<EntityContext context="actorCondition_forcedCrimeWatching_nonViolent" target="">
						<Sequence>
							<WaitAction />
							<Wait duration="&apos;3000s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</EntityContext>
				</Sequence>
			</EntityContextElement>
			<Parallel successMode="Any" failureMode="Any">
				<CrimeFollower Target="$__player" Role="Main" RelativeSpeedLimit="Dash" BlockWay="false" NoMoveOnlyTurn="false" />
				<Loop count="-1">
					<Sequence>
						<ActorStateBarrier Who="$__player" ToState="crouch" NegateTo="false" RunLogic="KeepRunning">
							<SetEstimatedFollow EstimateTargetPosition="true" />
						</ActorStateBarrier>
						<ActorStateBarrier Who="$__player" ToState="crouch" NegateTo="true" RunLogic="KeepRunning">
							<SetEstimatedFollow EstimateTargetPosition="false" />
						</ActorStateBarrier>
					</Sequence>
				</Loop>
			</Parallel>
			<Sequence>
				<HasSeenPlayer NPC="" FullyAwareOnly="true" saveVersion="2">
					<Then canSkip="1">
						<LogToConsole LogLevel="Error" Message="&apos;SEE&apos;" />
					</Then>
					<Else canSkip="1">
						<HasSeenPlayer NPC="" FullyAwareOnly="false" saveVersion="2">
							<Then canSkip="1">
								<LogToConsole LogLevel="Error" Message="&apos;REMEMBER&apos;" />
							</Then>
							<Else canSkip="1">
								<LogToConsole LogLevel="Error" Message="&apos;NONE&apos;" />
							</Else>
						</HasSeenPlayer>
					</Else>
				</HasSeenPlayer>
				<Wait duration="&apos;100ms&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Sequence>
			<EntityContext context="actorCondition_forcedCrimeScanning" target="">
				<Loop count="-1">
					<Sequence>
						<Turn target="$__player" align="false" />
						<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</Loop>
			</EntityContext>
			<EntityContext context="crime_disabledRecurrentPerceptionIgnore" target="">
				<ForceLook LookTarget="$__player" DisableVariations="true">
					<Sequence>
						<WaitAction />
						<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</ForceLook>
			</EntityContext>
			<Sequence>
				<NumericalOperation In1VariableName="__player" In2VariableName="this.id" In3VariableName="" OutVariableName="$dot" Operation="dot(w1_look_dir, w1_to_w2_dir)" />
				<LogToConsole LogLevel="Error" Message="&apos;DOT IS: $dot&apos;" />
			</Sequence>
			<Sequence>
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;npc&apos;" prune="true" negprune="unknown" Parent="" Child="$npc" Data="" />
				</GraphSearch>
				<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				<Function_callInterrupt_missingNpcFound ignorePriority="false" initiator="$enum:switch_interruptInitiator.scheduler" missingNPC="$npc" previousReaction="$enum:crime_reactionKind.unknown" searchingNPC="$this.id" stimulusKind="$enum:crime_stimulusKind.missingNpc" nodeLabel="47383586" />
			</Sequence>
			<IfElseCondition failOnCondition="false" condition="$this.name == &apos;test_crime_watcher_1&apos;" saveVersion="2">
				<Then canSkip="1">
					<Sequence>
						<CreateInformation PerceivedWuid="$__player" label="&apos;corpse&apos;" position="" ToWhom="" OutVariable="$information" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</Then>
				<Else canSkip="1">
					<Sequence>
						<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						<GetSpatialInfo In="$this.id" Out="$pos" What="Position" />
						<CreateInformation PerceivedWuid="$__player" label="&apos;corpse&apos;" position="$pos" ToWhom="" OutVariable="$information" />
						<LockDynamicInformationValues Information="$information">
							<SetDynamicInformationValue Information="$information" Tag="&apos;test&apos;" Variable="" Type="&apos;_bool&apos;" Value="true" />
						</LockDynamicInformationValues>
						<InformationEmittingStart Information="$information" Periodicity="&apos;5s&apos;" TimerType="GameTime" Radius="50.000000" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</Else>
			</IfElseCondition>
			<Parallel successMode="Any" failureMode="Any">
				<Sequence>
					<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_VIDI_HRACE_JAK_HANOBI_MRTVOLU_(PRITEL)&apos;" priority="$enum:crime_barkPriority.addressingPlayer" nodeLabel="86873624" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
				<Sequence>
					<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					<Function_crime_crimeBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;NPC_AKCEPTUJE_HRACOVO_VZDAVANI&apos;" priority="$enum:crime_barkPriority.low" nodeLabel="70260514" />
					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Parallel>
			<Sequence>
				<GetSpatialInfo In="$this.id" Out="$pos" What="Position" />
				<GetSpatialInfo In="$__player" Out="$playerPos" What="Position" />
				<Expression expressions="$direction.x = $playerPos.x - pos.x &#10;$direction.y = $playerPos.y - pos.y &#10;$direction.z = 0" />
				<GetCrimeSearchingPoints Position="$pos" Direction="$direction" DirectionInfluence="0.800000" MaxDistance="50.000000" DesiredPointCount="1" FilteringSectorCount="12" PathFindParams="" FoundPoints="$vecs" />
				<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$vecs[0]" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
			</Sequence>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="bool" comment="" />
				<Variable name="direction" comment="" />
				<Variable name="distance" comment="" />
				<Variable name="dot" comment="" />
				<Variable name="information" comment="" />
				<Variable name="moveParams" comment="" />
				<Variable name="npc" comment="" />
				<Variable name="path" comment="" />
				<Variable name="playerPos" comment="" />
				<Variable name="pos" comment="" />
				<Variable name="speed" comment="" />
				<Variable name="vecs" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-20" editorPosY="20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ShockNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ShockNPC>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Turn>
									<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AnimationAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Loop>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_crimeBark>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Loop>
						</Parallel>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<OnWeaponChange editorPosX="330" editorPosY="-670" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_crime_hasWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_crime_hasWeaponDrawn>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</IfCondition>
					</Sequence>
				</OnWeaponChange>
				<EntityContextElement editorPosX="900" editorPosY="-320" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</EntityContext>
					</Sequence>
				</EntityContextElement>
				<Parallel editorPosX="1130" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<CrimeFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</CrimeFollower>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<SetEstimatedFollow hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SetEstimatedFollow>
							</ActorStateBarrier>
							<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<SetEstimatedFollow hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SetEstimatedFollow>
							</ActorStateBarrier>
						</Sequence>
					</Loop>
				</Parallel>
				<Sequence editorPosX="-280" editorPosY="-1010" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<HasSeenPlayer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LogToConsole>
						</Then>
						<Else>
							<HasSeenPlayer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LogToConsole>
								</Then>
								<Else>
									<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LogToConsole>
								</Else>
							</HasSeenPlayer>
						</Else>
					</HasSeenPlayer>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Sequence>
				<EntityContext editorPosX="100" editorPosY="640" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Turn>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Loop>
				</EntityContext>
				<EntityContext editorPosX="1110" editorPosY="490" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</ForceLook>
				</EntityContext>
				<Sequence editorPosX="450" editorPosY="-880" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<NumericalOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</NumericalOperation>
					<LogToConsole hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</LogToConsole>
				</Sequence>
				<Sequence editorPosX="80" editorPosY="810" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
					<Function_callInterrupt_missingNpcFound hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_callInterrupt_missingNpcFound>
				</Sequence>
				<IfElseCondition editorPosX="-1090" editorPosY="690" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Then>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<CreateInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</CreateInformation>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Then>
					<Else>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetSpatialInfo>
							<CreateInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</CreateInformation>
							<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SetDynamicInformationValue>
							</LockDynamicInformationValues>
							<InformationEmittingStart hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InformationEmittingStart>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Else>
				</IfElseCondition>
				<Parallel editorPosX="1300" editorPosY="-1670" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_crime_crimeBark>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_crime_crimeBark>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Parallel>
				<Sequence editorPosX="-340" editorPosY="-590" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</GetSpatialInfo>
					<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</GetSpatialInfo>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
					<GetCrimeSearchingPoints hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</GetCrimeSearchingPoints>
					<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Move>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>