<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="use_eat" is_function="0">
		<Variables>
			<Variable name="check" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="initDecision" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="resourceType" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="shouldCheckSurface" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Decision decisionLabel="animal_eat" variable="$initDecision" saveVersion="2">
					<Search canSkip="1">
						<ForgetDecision decisionLabel="animal_move" />
					</Search>
					<Exec canSkip="1">
						<Success />
					</Exec>
				</Decision>
			</OnInit>
			<Behavior canSkip="1">
				<CallDecorator_animal_boidTemplate>
					<Subtree canSkip="1">
						<Function_boidTemplate boidDataOrigin="$__object.id" homeArea="$__resource.id" nodeLabel="74341129" />
					</Subtree>
					<OnRest canSkip="1">
						<CallbackEventCatch_animal_boidTemplate_onRest>
							<Sequence>
								<Function_animalRandomMove additionalMoveParams="$additionalMoveParams" area="$__resource.id" pathFindParams="$pathFindParams" nodeLabel="56206911" />
								<CheckSurface TestType="EatSpot" Result="$check" />
								<GetType WUID="$__resource.id" OutString="$resourceType" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
								<Expression expressions="$shouldCheckSurface = false" />
								<EntityContextCheck context="dog_ignoreTerrainCheck" target="$this.id" saveVersion="2">
									<Then canSkip="1">
										<Success />
									</Then>
									<Else canSkip="1">
										<IfCondition failOnCondition="false" condition="$resourceType == &apos;TA&apos; | $resourceType == &apos;SA&apos;">
											<Expression expressions="$shouldCheckSurface = true" />
										</IfCondition>
									</Else>
								</EntityContextCheck>
								<IfElseCondition failOnCondition="false" condition="$check | !$shouldCheckSurface" saveVersion="2">
									<Then canSkip="1">
										<UnstanceAction unstance="dog_eatingStanding" locationObject="" slaveObject="" />
									</Then>
									<Else canSkip="1">
										<ForgetDecision decisionLabel="animal_move" />
									</Else>
								</IfElseCondition>
								<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</CallbackEventCatch_animal_boidTemplate_onRest>
					</OnRest>
				</CallDecorator_animal_boidTemplate>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="check" comment="" />
				<Variable name="initDecision" comment="" />
				<Variable name="resourceType" comment="" />
				<Variable name="shouldCheckSurface" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Decision hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ForgetDecision>
						</Search>
						<Exec>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Exec>
					</Decision>
				</OnInit>
				<Behavior>
					<CallDecorator_animal_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Subtree>
							<Function_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_boidTemplate>
						</Subtree>
						<OnRest>
							<CallbackEventCatch_animal_boidTemplate_onRest hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_animalRandomMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_animalRandomMove>
									<CheckSurface hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</CheckSurface>
									<GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetType>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Then>
										<Else>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</IfCondition>
										</Else>
									</EntityContextCheck>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</UnstanceAction>
										</Then>
										<Else>
											<ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</ForgetDecision>
										</Else>
									</IfElseCondition>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</CallbackEventCatch_animal_boidTemplate_onRest>
						</OnRest>
					</CallDecorator_animal_boidTemplate>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_sleep" is_function="0">
		<Variables>
			<Variable name="check" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="initDecision" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="resourceType" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="shouldCheckSurface" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="sleepPositionDefinition" type="_int" values="-1" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Decision decisionLabel="animal_sleep" variable="$initDecision" saveVersion="2">
					<Search canSkip="1">
						<ForgetDecision decisionLabel="animal_move" />
					</Search>
					<Exec canSkip="1">
						<Success />
					</Exec>
				</Decision>
			</OnInit>
			<Behavior canSkip="1">
				<CallDecorator_animal_boidTemplate>
					<Subtree canSkip="1">
						<Function_boidTemplate boidDataOrigin="$__object.id" homeArea="$__resource.id" nodeLabel="18950640" />
					</Subtree>
					<OnRest canSkip="1">
						<CallbackEventCatch_animal_boidTemplate_onRest>
							<Decision decisionLabel="animal_pig_rochneni" variable="$sleepPositionDefinition" saveVersion="2">
								<Search canSkip="1">
									<Success />
								</Search>
								<Exec canSkip="1">
									<Sequence>
										<IfCondition failOnCondition="false" condition="$sleepPositionDefinition == -1">
											<Sequence>
												<Function_animalRandomMove additionalMoveParams="$additionalMoveParams" area="$__resource.id" pathFindParams="$pathFindParams" nodeLabel="82213263" />
												<CheckSurface TestType="SleepSpot" Result="$check" />
												<GetType WUID="$__resource.id" OutString="$resourceType" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
												<Expression expressions="$shouldCheckSurface = false" />
												<EntityContextCheck context="dog_ignoreTerrainCheck" target="$this.id" saveVersion="2">
													<Then canSkip="1">
														<Success />
													</Then>
													<Else canSkip="1">
														<IfCondition failOnCondition="false" condition="$resourceType == &apos;TA&apos; | $resourceType == &apos;SA&apos;">
															<Expression expressions="$shouldCheckSurface = true" />
														</IfCondition>
													</Else>
												</EntityContextCheck>
												<IfElseCondition failOnCondition="false" condition="$check | !$shouldCheckSurface" saveVersion="2">
													<Then canSkip="1">
														<GenerateRandomInteger lowerBoundary="0" upperBoundary="2" result="$sleepPositionDefinition" />
													</Then>
													<Else canSkip="1">
														<ForgetDecision decisionLabel="animal_move" />
													</Else>
												</IfElseCondition>
											</Sequence>
										</IfCondition>
										<StanceCheck soul="$this.id" stance="sitting" smartObject="" negate="false" failOnCondition="false" saveVersion="2">
											<Then canSkip="1">
												<StanceElement smartObject="" stance="lying" allowAny="false" enabled="true">
													<WaitAction />
												</StanceElement>
											</Then>
											<Else canSkip="1">
												<Success />
											</Else>
										</StanceCheck>
										<IfCondition failOnCondition="false" condition="$sleepPositionDefinition ~= -1">
											<Switch>
												<IfCondition failOnCondition="false" condition="$sleepPositionDefinition == 0">
													<StanceElement smartObject="" stance="lying" allowAny="false" enabled="true">
														<UnstanceAction unstance="animal_dog_sleep1" locationObject="" slaveObject="" />
													</StanceElement>
												</IfCondition>
												<IfCondition failOnCondition="false" condition="$sleepPositionDefinition == 1">
													<StanceElement smartObject="" stance="lying" allowAny="false" enabled="true">
														<UnstanceAction unstance="animal_dog_sleep2" locationObject="" slaveObject="" />
													</StanceElement>
												</IfCondition>
												<IfCondition failOnCondition="false" condition="$sleepPositionDefinition == 2">
													<StanceElement smartObject="" stance="lying" allowAny="false" enabled="true">
														<UnstanceAction unstance="animal_dog_sleep3" locationObject="" slaveObject="" />
													</StanceElement>
												</IfCondition>
												<DefaultBranch>
													<Success />
												</DefaultBranch>
											</Switch>
										</IfCondition>
										<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</Exec>
							</Decision>
						</CallbackEventCatch_animal_boidTemplate_onRest>
					</OnRest>
				</CallDecorator_animal_boidTemplate>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="check" comment="" />
				<Variable name="initDecision" comment="" />
				<Variable name="resourceType" comment="" />
				<Variable name="shouldCheckSurface" comment="" />
				<Variable name="sleepPositionDefinition" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Decision hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ForgetDecision>
						</Search>
						<Exec>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Exec>
					</Decision>
				</OnInit>
				<Behavior>
					<CallDecorator_animal_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Subtree>
							<Function_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_boidTemplate>
						</Subtree>
						<OnRest>
							<CallbackEventCatch_animal_boidTemplate_onRest hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Decision hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Search>
									<Exec>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_animalRandomMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_animalRandomMove>
													<CheckSurface hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</CheckSurface>
													<GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetType>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</Then>
														<Else>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
														</Else>
													</EntityContextCheck>
													<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<GenerateRandomInteger hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</GenerateRandomInteger>
														</Then>
														<Else>
															<ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</ForgetDecision>
														</Else>
													</IfElseCondition>
												</Sequence>
											</IfCondition>
											<StanceCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</WaitAction>
													</StanceElement>
												</Then>
												<Else>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Else>
											</StanceCheck>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</UnstanceAction>
														</StanceElement>
													</IfCondition>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</UnstanceAction>
														</StanceElement>
													</IfCondition>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</UnstanceAction>
														</StanceElement>
													</IfCondition>
													<DefaultBranch>
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</DefaultBranch>
												</Switch>
											</IfCondition>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</Exec>
								</Decision>
							</CallbackEventCatch_animal_boidTemplate_onRest>
						</OnRest>
					</CallDecorator_animal_boidTemplate>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_howl" is_function="0">
		<Variables>
			<Variable name="check" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="initDecision" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Decision decisionLabel="animal_howl" variable="$initDecision" saveVersion="2">
					<Search canSkip="1">
						<ForgetDecision decisionLabel="animal_move" />
					</Search>
					<Exec canSkip="1">
						<Success />
					</Exec>
				</Decision>
			</OnInit>
			<Behavior canSkip="1">
				<CallDecorator_animal_boidTemplate>
					<Subtree canSkip="1">
						<Function_boidTemplate boidDataOrigin="$__object.id" homeArea="$__resource.id" nodeLabel="62762204" />
					</Subtree>
					<OnRest canSkip="1">
						<CallbackEventCatch_animal_boidTemplate_onRest>
							<Sequence>
								<Function_animalRandomMove additionalMoveParams="$additionalMoveParams" area="$__resource.id" pathFindParams="$pathFindParams" nodeLabel="35099043" />
								<AnimationAction fragment="&apos;Howl&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" />
							</Sequence>
						</CallbackEventCatch_animal_boidTemplate_onRest>
					</OnRest>
				</CallDecorator_animal_boidTemplate>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="check" comment="" />
				<Variable name="initDecision" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Decision hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ForgetDecision>
						</Search>
						<Exec>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Exec>
					</Decision>
				</OnInit>
				<Behavior>
					<CallDecorator_animal_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Subtree>
							<Function_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_boidTemplate>
						</Subtree>
						<OnRest>
							<CallbackEventCatch_animal_boidTemplate_onRest hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_animalRandomMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_animalRandomMove>
									<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<OutputBreakpoints />
									</AnimationAction>
								</Sequence>
							</CallbackEventCatch_animal_boidTemplate_onRest>
						</OnRest>
					</CallDecorator_animal_boidTemplate>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_sitDown" is_function="0">
		<Variables>
			<Variable name="check" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="initDecision" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="resourceType" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="shouldCheckSurface" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Decision decisionLabel="animal_eat" variable="$initDecision" saveVersion="2">
					<Search canSkip="1">
						<ForgetDecision decisionLabel="animal_move" />
					</Search>
					<Exec canSkip="1">
						<Success />
					</Exec>
				</Decision>
			</OnInit>
			<Behavior canSkip="1">
				<CallDecorator_animal_boidTemplate>
					<Subtree canSkip="1">
						<Function_boidTemplate boidDataOrigin="$__object.id" homeArea="$__resource.id" nodeLabel="64784137" />
					</Subtree>
					<OnRest canSkip="1">
						<CallbackEventCatch_animal_boidTemplate_onRest>
							<Sequence>
								<Function_animalRandomMove additionalMoveParams="$additionalMoveParams" area="$__resource.id" pathFindParams="$pathFindParams" nodeLabel="44827758" />
								<CheckSurface TestType="SleepSpot" Result="$check" />
								<GetType WUID="$__resource.id" OutString="$resourceType" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
								<Expression expressions="$shouldCheckSurface = false" />
								<EntityContextCheck context="dog_ignoreTerrainCheck" target="$this.id" saveVersion="2">
									<Then canSkip="1">
										<Success />
									</Then>
									<Else canSkip="1">
										<IfCondition failOnCondition="false" condition="$resourceType == &apos;TA&apos; | $resourceType == &apos;SA&apos;">
											<Expression expressions="$shouldCheckSurface = true" />
										</IfCondition>
									</Else>
								</EntityContextCheck>
								<IfElseCondition failOnCondition="false" condition="$check | !$shouldCheckSurface" saveVersion="2">
									<Then canSkip="1">
										<StanceElement smartObject="" stance="sitting" allowAny="false" enabled="true">
											<WaitAction />
										</StanceElement>
									</Then>
									<Else canSkip="1">
										<ForgetDecision decisionLabel="animal_move" />
									</Else>
								</IfElseCondition>
								<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</CallbackEventCatch_animal_boidTemplate_onRest>
					</OnRest>
				</CallDecorator_animal_boidTemplate>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="check" comment="" />
				<Variable name="initDecision" comment="" />
				<Variable name="resourceType" comment="" />
				<Variable name="shouldCheckSurface" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Decision hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ForgetDecision>
						</Search>
						<Exec>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Exec>
					</Decision>
				</OnInit>
				<Behavior>
					<CallDecorator_animal_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Subtree>
							<Function_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_boidTemplate>
						</Subtree>
						<OnRest>
							<CallbackEventCatch_animal_boidTemplate_onRest hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_animalRandomMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_animalRandomMove>
									<CheckSurface hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</CheckSurface>
									<GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetType>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Then>
										<Else>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</IfCondition>
										</Else>
									</EntityContextCheck>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
											</StanceElement>
										</Then>
										<Else>
											<ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</ForgetDecision>
										</Else>
									</IfElseCondition>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</CallbackEventCatch_animal_boidTemplate_onRest>
						</OnRest>
					</CallDecorator_animal_boidTemplate>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_sniffing" is_function="0">
		<Variables>
			<Variable name="check" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="initDecision" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="resourceType" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="shouldCheckSurface" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Decision decisionLabel="animal_eat" variable="$initDecision" saveVersion="2">
					<Search canSkip="1">
						<ForgetDecision decisionLabel="animal_move" />
					</Search>
					<Exec canSkip="1">
						<Success />
					</Exec>
				</Decision>
			</OnInit>
			<Behavior canSkip="1">
				<CallDecorator_animal_boidTemplate>
					<Subtree canSkip="1">
						<Function_boidTemplate boidDataOrigin="$__object.id" homeArea="$__resource.id" nodeLabel="71936047" />
					</Subtree>
					<OnRest canSkip="1">
						<CallbackEventCatch_animal_boidTemplate_onRest>
							<Sequence>
								<Function_animalRandomMove additionalMoveParams="$additionalMoveParams" area="$__resource.id" pathFindParams="$pathFindParams" nodeLabel="81434707" />
								<CheckSurface TestType="EatSpot" Result="$check" />
								<GetType WUID="$__resource.id" OutString="$resourceType" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
								<Expression expressions="$shouldCheckSurface = false" />
								<EntityContextCheck context="dog_ignoreTerrainCheck" target="$this.id" saveVersion="2">
									<Then canSkip="1">
										<Success />
									</Then>
									<Else canSkip="1">
										<IfCondition failOnCondition="false" condition="$resourceType == &apos;TA&apos; | $resourceType == &apos;SA&apos;">
											<Expression expressions="$shouldCheckSurface = true" />
										</IfCondition>
									</Else>
								</EntityContextCheck>
								<IfElseCondition failOnCondition="false" condition="$check | !$shouldCheckSurface" saveVersion="2">
									<Then canSkip="1">
										<UnstanceAction unstance="animal_dog_sniff" locationObject="" slaveObject="" />
									</Then>
									<Else canSkip="1">
										<ForgetDecision decisionLabel="animal_move" />
									</Else>
								</IfElseCondition>
								<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</CallbackEventCatch_animal_boidTemplate_onRest>
					</OnRest>
				</CallDecorator_animal_boidTemplate>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="check" comment="" />
				<Variable name="initDecision" comment="" />
				<Variable name="resourceType" comment="" />
				<Variable name="shouldCheckSurface" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Decision hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ForgetDecision>
						</Search>
						<Exec>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Exec>
					</Decision>
				</OnInit>
				<Behavior>
					<CallDecorator_animal_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Subtree>
							<Function_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_boidTemplate>
						</Subtree>
						<OnRest>
							<CallbackEventCatch_animal_boidTemplate_onRest hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_animalRandomMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_animalRandomMove>
									<CheckSurface hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</CheckSurface>
									<GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetType>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Then>
										<Else>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</IfCondition>
										</Else>
									</EntityContextCheck>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</UnstanceAction>
										</Then>
										<Else>
											<ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</ForgetDecision>
										</Else>
									</IfElseCondition>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</CallbackEventCatch_animal_boidTemplate_onRest>
						</OnRest>
					</CallDecorator_animal_boidTemplate>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_barking" is_function="0">
		<Variables>
			<Variable name="initDecision" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Decision decisionLabel="animal_eat" variable="$initDecision" saveVersion="2">
					<Search canSkip="1">
						<ForgetDecision decisionLabel="animal_move" />
					</Search>
					<Exec canSkip="1">
						<Success />
					</Exec>
				</Decision>
			</OnInit>
			<Behavior canSkip="1">
				<CallDecorator_animal_boidTemplate>
					<Subtree canSkip="1">
						<Function_boidTemplate boidDataOrigin="$__object.id" homeArea="$__resource.id" nodeLabel="10019911" />
					</Subtree>
					<OnRest canSkip="1">
						<CallbackEventCatch_animal_boidTemplate_onRest>
							<AnyDecorator preset="AnyStance" enabled="true">
								<AnimationAction fragment="&apos;Bark&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
							</AnyDecorator>
						</CallbackEventCatch_animal_boidTemplate_onRest>
					</OnRest>
				</CallDecorator_animal_boidTemplate>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="initDecision" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Decision hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ForgetDecision>
						</Search>
						<Exec>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Exec>
					</Decision>
				</OnInit>
				<Behavior>
					<CallDecorator_animal_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Subtree>
							<Function_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_boidTemplate>
						</Subtree>
						<OnRest>
							<CallbackEventCatch_animal_boidTemplate_onRest hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AnimationAction>
								</AnyDecorator>
							</CallbackEventCatch_animal_boidTemplate_onRest>
						</OnRest>
					</CallDecorator_animal_boidTemplate>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_stretch" is_function="0">
		<Variables>
			<Variable name="initDecision" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Decision decisionLabel="animal_eat" variable="$initDecision" saveVersion="2">
					<Search canSkip="1">
						<ForgetDecision decisionLabel="animal_move" />
					</Search>
					<Exec canSkip="1">
						<Success />
					</Exec>
				</Decision>
			</OnInit>
			<Behavior canSkip="1">
				<CallDecorator_animal_boidTemplate>
					<Subtree canSkip="1">
						<Function_boidTemplate boidDataOrigin="$__object.id" homeArea="$__resource.id" nodeLabel="29723661" />
					</Subtree>
					<OnRest canSkip="1">
						<CallbackEventCatch_animal_boidTemplate_onRest>
							<Sequence>
								<Function_animalRandomMove additionalMoveParams="$additionalMoveParams" area="$__resource.id" pathFindParams="$pathFindParams" nodeLabel="75739193" />
								<UnstanceAction unstance="dog_eatingStanding" locationObject="" slaveObject="" />
								<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</CallbackEventCatch_animal_boidTemplate_onRest>
					</OnRest>
				</CallDecorator_animal_boidTemplate>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="initDecision" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Decision hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ForgetDecision>
						</Search>
						<Exec>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Exec>
					</Decision>
				</OnInit>
				<Behavior>
					<CallDecorator_animal_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Subtree>
							<Function_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_boidTemplate>
						</Subtree>
						<OnRest>
							<CallbackEventCatch_animal_boidTemplate_onRest hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_animalRandomMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_animalRandomMove>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</CallbackEventCatch_animal_boidTemplate_onRest>
						</OnRest>
					</CallDecorator_animal_boidTemplate>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_dig" is_function="0">
		<Variables>
			<Variable name="check" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="initDecision" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="resourceType" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="shouldCheckSurface" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Decision decisionLabel="animal_eat" variable="$initDecision" saveVersion="2">
					<Search canSkip="1">
						<ForgetDecision decisionLabel="animal_move" />
					</Search>
					<Exec canSkip="1">
						<Success />
					</Exec>
				</Decision>
			</OnInit>
			<Behavior canSkip="1">
				<CallDecorator_animal_boidTemplate>
					<Subtree canSkip="1">
						<Function_boidTemplate boidDataOrigin="$__object.id" homeArea="$__resource.id" nodeLabel="28790876" />
					</Subtree>
					<OnRest canSkip="1">
						<CallbackEventCatch_animal_boidTemplate_onRest>
							<Sequence>
								<Function_animalRandomMove additionalMoveParams="$additionalMoveParams" area="$__resource.id" pathFindParams="$pathFindParams" nodeLabel="71467698" />
								<CheckSurface TestType="EatSpot" Result="$check" />
								<GetType WUID="$__resource.id" OutString="$resourceType" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
								<Expression expressions="$shouldCheckSurface = false" />
								<EntityContextCheck context="dog_ignoreTerrainCheck" target="$this.id" saveVersion="2">
									<Then canSkip="1">
										<Success />
									</Then>
									<Else canSkip="1">
										<IfCondition failOnCondition="false" condition="$resourceType == &apos;TA&apos; | $resourceType == &apos;SA&apos;">
											<Expression expressions="$shouldCheckSurface = true" />
										</IfCondition>
									</Else>
								</EntityContextCheck>
								<IfElseCondition failOnCondition="false" condition="$check | !$shouldCheckSurface" saveVersion="2">
									<Then canSkip="1">
										<UnstanceAction unstance="animal_dog_dig" locationObject="" slaveObject="" />
									</Then>
									<Else canSkip="1">
										<ForgetDecision decisionLabel="animal_move" />
									</Else>
								</IfElseCondition>
								<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</CallbackEventCatch_animal_boidTemplate_onRest>
					</OnRest>
				</CallDecorator_animal_boidTemplate>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="check" comment="" />
				<Variable name="initDecision" comment="" />
				<Variable name="resourceType" comment="" />
				<Variable name="shouldCheckSurface" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Decision hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ForgetDecision>
						</Search>
						<Exec>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Exec>
					</Decision>
				</OnInit>
				<Behavior>
					<CallDecorator_animal_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Subtree>
							<Function_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_boidTemplate>
						</Subtree>
						<OnRest>
							<CallbackEventCatch_animal_boidTemplate_onRest hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_animalRandomMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_animalRandomMove>
									<CheckSurface hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</CheckSurface>
									<GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetType>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Then>
										<Else>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</IfCondition>
										</Else>
									</EntityContextCheck>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</UnstanceAction>
										</Then>
										<Else>
											<ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</ForgetDecision>
										</Else>
									</IfElseCondition>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</CallbackEventCatch_animal_boidTemplate_onRest>
						</OnRest>
					</CallDecorator_animal_boidTemplate>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_objects" is_function="0">
		<Variables>
			<Variable name="initDecision" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="outBehaviorName" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="outDirection" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="outFragment" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="outPosition" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="outSmartObject" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Decision decisionLabel="animal_eat" variable="$initDecision" saveVersion="2">
					<Search canSkip="1">
						<ForgetDecision decisionLabel="animal_move" />
					</Search>
					<Exec canSkip="1">
						<Success />
					</Exec>
				</Decision>
			</OnInit>
			<Behavior canSkip="1">
				<CallDecorator_animal_boidTemplate>
					<Subtree canSkip="1">
						<Function_boidTemplate boidDataOrigin="$__object.id" homeArea="$__resource.id" nodeLabel="93867195" />
					</Subtree>
					<OnRest canSkip="1">
						<CallbackEventCatch_animal_boidTemplate_onRest>
							<Selector>
								<Sequence>
									<GetDogPointSo TargetDog="$this.id" SearchedArea="$__resource.id" SmartObjectOut="$outSmartObject" BehaviorName="$outBehaviorName" />
									<ReserveBehavior reserveFrom="$outSmartObject" behaviorName="$outBehaviorName" saveVersion="2">
										<Search canSkip="1">
											<ReserveBehaviorSearch>
												<Success />
											</ReserveBehaviorSearch>
										</Search>
										<Exec canSkip="1">
											<CallBehavior Target="$outSmartObject" BehaviorName="$outBehaviorName" ignoreDropUnloading="false" nodeLabel="99423530" />
										</Exec>
									</ReserveBehavior>
								</Sequence>
								<Sequence>
									<GetDogPointNormal TargetDog="$this.id" SearchedArea="$__resource.id" PointPositionOut="$outPosition" PointDirectionOut="$outDirection" FragmentNameOut="$outFragment" />
									<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$outPosition" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									<AnimationAction fragment="$outFragment" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
								</Sequence>
								<Sequence>
									<Function_animalRandomMove additionalMoveParams="$additionalMoveParams" area="$__resource.id" pathFindParams="$pathFindParams" nodeLabel="77916013" />
									<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</Selector>
						</CallbackEventCatch_animal_boidTemplate_onRest>
					</OnRest>
				</CallDecorator_animal_boidTemplate>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="initDecision" comment="" />
				<Variable name="outBehaviorName" comment="" />
				<Variable name="outDirection" comment="" />
				<Variable name="outFragment" comment="" />
				<Variable name="outPosition" comment="" />
				<Variable name="outSmartObject" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Decision hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ForgetDecision>
						</Search>
						<Exec>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Exec>
					</Decision>
				</OnInit>
				<Behavior>
					<CallDecorator_animal_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Subtree>
							<Function_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_boidTemplate>
						</Subtree>
						<OnRest>
							<CallbackEventCatch_animal_boidTemplate_onRest hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GetDogPointSo hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetDogPointSo>
										<ReserveBehavior hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Search>
												<ReserveBehaviorSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</ReserveBehaviorSearch>
											</Search>
											<Exec>
												<CallBehavior hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</CallBehavior>
											</Exec>
										</ReserveBehavior>
									</Sequence>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GetDogPointNormal hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetDogPointNormal>
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
										<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AnimationAction>
									</Sequence>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_animalRandomMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_animalRandomMove>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Selector>
							</CallbackEventCatch_animal_boidTemplate_onRest>
						</OnRest>
					</CallDecorator_animal_boidTemplate>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>