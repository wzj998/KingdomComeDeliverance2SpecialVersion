<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="hitReactions" is_function="0">
    <Variables>
      <Variable name="assaultPerceptibleParams" type="perceptibleParams" values="" isPersistent="0" form="single" />
      <Variable name="assaultPerceptibleVolume" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="assaultVolumeData" type="combat:assaultVolumeData" values="" isPersistent="0" form="single" />
      <Variable name="hit" type="hitReaction" values="" isPersistent="0" form="single" />
      <Variable name="lastHitByPlayer" type="combat:lastHitByPlayer" values="" isPersistent="0" form="single" />
      <Variable name="playerHorse" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <While doFail="false" propagateChildFail="false" condition="true">
          <ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hit" senderInfo="" inbox="&apos;hitReaction_animal_crime&apos;" condition="" answerVar="">
            <Sequence>
              <VariableExistsGate VarToTest="$b_context" VarIndexMode="All" FailSubtMissing="false" saveVersion="2">
                <Then canSkip="1">
                  <IfCondition failOnCondition="false" condition="$b_context[&apos;suppressAnimalViolenceReaction&apos;]">
                    <Fail />
                  </IfCondition>
                </Then>
              </VariableExistsGate>
              <GetPlayerHorse HorseWuid="$playerHorse" />
              <IfCondition failOnCondition="false" condition="$hit.attacker==$__player&amp;&#10;($hit.hitType==$enum:HitReactionType.Melee|$hit.hitType==$enum:HitReactionType.Bullet)&amp;&#10;$playerHorse~=$this.id&amp;&#10;$hit.hitStrength~=$enum:HitReactionStrength.Zero">
                <Sequence>
                  <Expression expressions="$assaultPerceptibleParams.conspicuousness=1,&#10;$assaultPerceptibleParams.visibility=1" />
                  <SpawnExpiringPerceptibleVolume Expiration="&apos;6s&apos;" TimerType="GameTime" Position="$this.id" Radius="1.000000" Height="1.000000" Label="&apos;assault&apos;" OnlyVisiblePointsFromCenter="false" PerceptibleParams="$assaultPerceptibleParams" OutWuid="$assaultPerceptibleVolume" />
                  <VarOperation varName="$assaultVolumeData" targetVarName="" operation="Reinit" argument="" />
                  <Expression expressions="$assaultVolumeData.attacker=$hit.attacker,&#10;$assaultVolumeData.victim=$this.id,&#10;$assaultVolumeData.victimKind=$enum:assaultVictimKind.animal,&#10;$assaultVolumeData.kind=($hit.hitType==$enum:HitReactionType.Melee)? $enum:combatAttackKind.melee : $enum:combatAttackKind.missile" />
                  <AddLink From="$assaultPerceptibleVolume" To="$assaultPerceptibleVolume" Tag="&apos;assaultVolumeData&apos;" Data="($assaultVolumeData)" LinkOpHandleMode="Error" />
                  <AddLink From="$this.id" To="$hit.attacker" Tag="&apos;assaultedByThisActor&apos;" Data="" LinkOpHandleMode="Success" />
                  <IfCondition failOnCondition="false" condition="$hit.hitType==$enum:HitReactionType.Melee">
                    <Sequence>
                      <VarOperation varName="$lastHitByPlayer" targetVarName="" operation="Reinit" argument="" />
                      <GetTime TimeType="GameTime" OutVar="$lastHitByPlayer.time" Delta="" />
                      <Expression expressions="$lastHitByPlayer.kind=$enum:combatAttackKind.melee" />
                      <AddLink From="$__player" To="$this.id" Tag="&apos;lastHitByPlayer&apos;" Data="($lastHitByPlayer)" LinkOpHandleMode="OverWrite" />
                    </Sequence>
                  </IfCondition>
                </Sequence>
              </IfCondition>
            </Sequence>
          </ProcessMessage>
        </While>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="assaultPerceptibleParams" comment="" />
        <Variable name="assaultPerceptibleVolume" comment="" />
        <Variable name="assaultVolumeData" comment="" />
        <Variable name="hit" comment="" />
        <Variable name="lastHitByPlayer" comment="" />
        <Variable name="playerHorse" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <VariableExistsGate hasInputBreakpoint="0" comment="Some animals still dont need contexts" breakpointFlags="0" saveVersion="2">
                  <OutputBreakpoints />
                  <Then>
                    <IfCondition hasInputBreakpoint="0" comment="Context suppressions" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Fail>
                    </IfCondition>
                  </Then>
                </VariableExistsGate>
                <GetPlayerHorse hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </GetPlayerHorse>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="Volume" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                    <SpawnExpiringPerceptibleVolume hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </SpawnExpiringPerceptibleVolume>
                    <VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </VarOperation>
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                    <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AddLink>
                    <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AddLink>
                    <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </VarOperation>
                        <GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </GetTime>
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                        <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </AddLink>
                      </Sequence>
                    </IfCondition>
                  </Sequence>
                </IfCondition>
              </Sequence>
            </ProcessMessage>
          </While>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="boidHitReaction">
    <Variables>
      <Variable name="assaultPerceptibleParams" type="perceptibleParams" values="" form="single" />
      <Variable name="assaultPerceptibleVolume" type="wuid" values="" form="single" />
      <Variable name="assaultVolumeData" type="combat:assaultVolumeData" values="" form="single" />
      <Variable name="chick" type="wuid" values="" form="single" />
      <Variable name="hit" type="entityModule:onBoidKilled" values="" form="single" />
      <Variable name="t_checkHasMissileWeaponDrawn_entity" type="wuid" values="" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <While doFail="false" propagateChildFail="false" condition="true">
          <ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hit" senderInfo="" inbox="&apos;entityModuleOnBoidKilled&apos;" condition="" answerVar="">
            <IfCondition failOnCondition="false" condition="$hit.flockType==$enum:FlockType.Chickens&amp;$hit.killerId==$__player">
              <Sequence>
                <Expression expressions="$assaultPerceptibleParams.conspicuousness=1,&#10;$assaultPerceptibleParams.visibility=1" />
                <SpawnExpiringPerceptibleVolume Expiration="&apos;6s&apos;" TimerType="GameTime" Position="$hit.pos" Radius="1.000000" Height="1.000000" Label="&apos;assault&apos;" OnlyVisiblePointsFromCenter="false" PerceptibleParams="$assaultPerceptibleParams" OutWuid="$assaultPerceptibleVolume" />
                <VarOperation varName="$assaultVolumeData" targetVarName="" operation="Reinit" argument="" />
                <Expression expressions="$assaultVolumeData.attacker=$hit.killerId,&#10;$assaultVolumeData.victim=$this.id,&#10;$assaultVolumeData.victimKind=$enum:assaultVictimKind.flock,&#10;$assaultVolumeData.kind=$enum:combatAttackKind.missile,&#10;$t_checkHasMissileWeaponDrawn_entity=$hit.killerId" />
                <Selector>
                  <IncludeTree File="&apos;final/sb_combat.xml&apos;" Name="&apos;checkHasMissileWeaponDrawn&apos;" nodeLabel="12791860" />
                  <Expression expressions="$assaultVolumeData.kind=$enum:combatAttackKind.melee" />
                </Selector>
                <AddLink From="$assaultPerceptibleVolume" To="$assaultPerceptibleVolume" Tag="&apos;assaultVolumeData&apos;" Data="($assaultVolumeData)" LinkOpHandleMode="Error" />
              </Sequence>
            </IfCondition>
          </ProcessMessage>
        </While>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData>
      <Variables>
        <Variable name="assaultPerceptibleParams" comment="" />
        <Variable name="assaultPerceptibleVolume" comment="" />
        <Variable name="assaultVolumeData" comment="" />
        <Variable name="chick" comment="" />
        <Variable name="hit" comment="" />
        <Variable name="t_checkHasMissileWeaponDrawn_entity" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="0" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <While editorPosX="220" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <ProcessMessage editorPosX="410" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <IfCondition editorPosX="630" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence editorPosX="830" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="Volume" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Expression editorPosX="950" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Expression>
                  <SpawnExpiringPerceptibleVolume editorPosX="950" editorPosY="90" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </SpawnExpiringPerceptibleVolume>
                  <VarOperation editorPosX="950" editorPosY="270" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </VarOperation>
                  <Expression editorPosX="950" editorPosY="380" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Expression>
                  <Selector editorPosX="950" editorPosY="470" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <IncludeTree editorPosX="1160" editorPosY="470" isCollapsed="0" hasInputBreakpoint="0" comment="Check if entity has draw Bow - it means boid was killed by missile weapon - little hack" breakpointFlags="0">
                      <OutputBreakpoints />
                    </IncludeTree>
                    <Expression editorPosX="1160" editorPosY="570" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                  </Selector>
                  <AddLink editorPosX="950" editorPosY="680" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </AddLink>
                </Sequence>
              </IfCondition>
            </ProcessMessage>
          </While>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>