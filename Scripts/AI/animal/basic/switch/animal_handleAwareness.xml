<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_animal_handleAwareness" is_function="1">
		<Variables>
			<Variable name="item_isInInventory" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="reactorData" type="crime:animal_reactor" values="" isPersistent="0" form="single" />
			<Variable name="type" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="awareness" type="switch:awareness" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<CheckWuidValid wuid="$awareness.perceptible" FailSubtMissing="false" saveVersion="2">
					<Then canSkip="1">
						<Sequence>
							<GetType WUID="$awareness.perceptible" OutString="$type" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
							<Switch>
								<IfCondition failOnCondition="false" condition="$type == &apos;NPC&apos;">
									<Sequence>
										<CheckRelationshipInterval_SoulToSoul TargetSoul="$awareness.perceptible" Soul="$this.id" Flag="enemy" saveVersion="2">
											<Then canSkip="1">
												<Function_switch_animal_handleAwareness_enemy perceptible="$awareness.perceptible" nodeLabel="32938906" />
											</Then>
										</CheckRelationshipInterval_SoulToSoul>
										<HasPerceivableState PerceivableState="&apos;combat&apos;" PerceivedWUID="$awareness.perceptible" PerceptorWUID="" FailSubtMissing="false" saveVersion="2">
											<Then canSkip="1">
												<Function_switch_animal_handleAwareness_combat perceptible="$awareness.perceptible" nodeLabel="65916740" />
											</Then>
										</HasPerceivableState>
										<IfElseCondition failOnCondition="false" condition="$awareness.perceptible == $__player" saveVersion="2">
											<Then canSkip="1">
												<EntityContextCheck context="crime_ignorePlayerPerception" target="" saveVersion="2">
													<Else canSkip="1">
														<HasPerceivableState PerceivableState="&apos;trespass&apos;" PerceivedWUID="$__player" PerceptorWUID="" FailSubtMissing="false" saveVersion="2">
															<Then canSkip="1">
																<Function_switch_animal_handleAwareness_trespass nodeLabel="35851293" />
															</Then>
														</HasPerceivableState>
													</Else>
												</EntityContextCheck>
											</Then>
										</IfElseCondition>
										<Function_switch_animal_handleAwareness_human who="$awareness.perceptible" nodeLabel="30420140" />
									</Sequence>
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$type == &apos;UNK&apos;">
									<Sequence>
										<HasPerceivableState PerceivableState="&apos;crime_hit&apos;" PerceivedWUID="$awareness.perceptible" PerceptorWUID="" FailSubtMissing="false" saveVersion="2">
											<Then canSkip="1">
												<Function_switch_animal_handleAwareness_hitVolume volume="$awareness.perceptible" nodeLabel="48379197" />
											</Then>
										</HasPerceivableState>
									</Sequence>
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$type == &apos;NHNPC&apos;">
									<Success />
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$type == &apos;ITM&apos;">
									<Sequence>
										<Function_switch_animal_handleAwareness_item perceptible="$awareness.perceptible" nodeLabel="62423187" />
										<CheckWuidValid wuid="$awareness.perceptible" FailSubtMissing="false" saveVersion="2">
											<Then canSkip="1">
												<Sequence>
													<GetItemProperty itemId="$awareness.perceptible" property="InInventory" result="$item_isInInventory" />
													<IfCondition failOnCondition="false" condition="~$item_isInInventory">
														<IgnorePerception PerceptorObject="$this.id" PerceptibleObject="$awareness.perceptible" IgnoreFor="&apos;30s&apos;" TimerType="GameTime" Uninterruptible="false" Persistent="true" />
													</IfCondition>
												</Sequence>
											</Then>
										</CheckWuidValid>
									</Sequence>
								</IfCondition>
								<DefaultBranch>
									<Success />
								</DefaultBranch>
							</Switch>
							<IfCondition failOnCondition="false" condition="$type ~= &apos;ITM&apos;">
								<Sequence>
									<Selector>
										<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;crime_animal_reactor&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;crime_animal_reactor&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$reactorData" />
											<WUIDFilter WUID="$this.id" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
										</GraphSearch>
										<Expression expressions="$reactorData.shouldIgnorePerception = true" />
									</Selector>
									<IfCondition failOnCondition="false" condition="$reactorData.shouldIgnorePerception">
										<IgnorePerception PerceptorObject="$this.id" PerceptibleObject="$awareness.perceptible" IgnoreFor="&apos;5s&apos;" TimerType="GameTime" Uninterruptible="false" Persistent="true" />
									</IfCondition>
								</Sequence>
							</IfCondition>
						</Sequence>
					</Then>
				</CheckWuidValid>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="item_isInInventory" comment="" />
				<Variable name="reactorData" comment="" />
				<Variable name="type" comment="" />
				<Variable name="awareness" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-100" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetType>
								<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<CheckRelationshipInterval_SoulToSoul hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Function_switch_animal_handleAwareness_enemy hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_switch_animal_handleAwareness_enemy>
												</Then>
											</CheckRelationshipInterval_SoulToSoul>
											<HasPerceivableState hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Function_switch_animal_handleAwareness_combat hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_switch_animal_handleAwareness_combat>
												</Then>
											</HasPerceivableState>
											<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Else>
															<HasPerceivableState hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Function_switch_animal_handleAwareness_trespass hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_switch_animal_handleAwareness_trespass>
																</Then>
															</HasPerceivableState>
														</Else>
													</EntityContextCheck>
												</Then>
											</IfElseCondition>
											<Function_switch_animal_handleAwareness_human hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_switch_animal_handleAwareness_human>
										</Sequence>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<HasPerceivableState hasInputBreakpoint="0" comment="&apos;hit&apos; volume" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Function_switch_animal_handleAwareness_hitVolume hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_switch_animal_handleAwareness_hitVolume>
												</Then>
											</HasPerceivableState>
										</Sequence>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_switch_animal_handleAwareness_item hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_switch_animal_handleAwareness_item>
											<CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GetItemProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</GetItemProperty>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<IgnorePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</IgnorePerception>
														</IfCondition>
													</Sequence>
												</Then>
											</CheckWuidValid>
										</Sequence>
									</IfCondition>
									<DefaultBranch>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</DefaultBranch>
								</Switch>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
												<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WUIDFilter>
											</GraphSearch>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Selector>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IgnorePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</IgnorePerception>
										</IfCondition>
									</Sequence>
								</IfCondition>
							</Sequence>
						</Then>
					</CheckWuidValid>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>