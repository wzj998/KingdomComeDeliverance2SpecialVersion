<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="switch_animal_handlePerception" is_function="1">
    <Variables>
      <Variable name="awareness" type="switch:awareness" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="perceptionInfo" type="perceptionInfo" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <EntityContextCheck context="crime_animal_suppressSwitchPerceptionReaction" target="" saveVersion="2">
          <Then canSkip="1">
            <Success />
          </Then>
          <Else canSkip="1">
            <Sequence>
              <Expression expressions="$awareness.perceptible = $perceptionInfo.perceptible" />
              <IfElseCondition failOnCondition="false" condition="$perceptionInfo.threshold == 1" saveVersion="2">
                <Then canSkip="1">
                  <IfElseCondition failOnCondition="false" condition="$perceptionInfo.isInsideRecognitionBorder" saveVersion="2">
                    <Then canSkip="1">
                      <Function_switch_animal_handleAwareness awareness="$awareness" nodeLabel="38852027" />
                    </Then>
                    <Else canSkip="1">
                      <EntityContext context="switch_recognitionLevel_II" target="">
                        <Function_switch_animal_handleAwareness awareness="$awareness" nodeLabel="73715502" />
                      </EntityContext>
                    </Else>
                  </IfElseCondition>
                </Then>
                <Else canSkip="1">
                  <Success />
                </Else>
              </IfElseCondition>
            </Sequence>
          </Else>
        </EntityContextCheck>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="awareness" comment="" />
        <Variable name="perceptionInfo" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Then>
              <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Success>
            </Then>
            <Else>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
                <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                  <OutputBreakpoints />
                  <Then>
                    <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                      <OutputBreakpoints />
                      <Then>
                        <Function_switch_animal_handleAwareness hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Function_switch_animal_handleAwareness>
                      </Then>
                      <Else>
                        <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Function_switch_animal_handleAwareness hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Function_switch_animal_handleAwareness>
                        </EntityContext>
                      </Else>
                    </IfElseCondition>
                  </Then>
                  <Else>
                    <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Success>
                  </Else>
                </IfElseCondition>
              </Sequence>
            </Else>
          </EntityContextCheck>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>