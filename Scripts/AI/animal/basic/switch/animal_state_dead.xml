<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_animal_state_dead" is_function="1">
		<Variables>
			<Variable name="animalAlarmInformation" type="information" values="" isPersistent="0" form="single" />
			<Variable name="corpseData" type="crime:corpseData" values="" isPersistent="0" form="single" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" />
			<Variable name="informations" type="information" values="" isPersistent="0" form="array" />
			<Variable name="pos_vec3" type="vec3" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<EntityContextCheck context="switch_isRedDeer" target="" saveVersion="2">
						<Then canSkip="1">
							<Function_switch_animal_oneShotAnimalAlarm positionWuid="$this.id" nodeLabel="73438861" />
						</Then>
						<Else canSkip="1">
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Else>
					</EntityContextCheck>
					<Sequence>
						<AtomicDecorator>
							<Sequence>
								<GetKnownInformations OutArray="$informations" Holder="$this.id" />
								<For startIndex="0" endIndex="-1" step="1" array="$informations" iterator="" value="$information" break="">
									<DestroyInformationFromHolder Information="$information" />
								</For>
								<DisablePerception Perceptor="true" Perceptible="false" ToWhom="" />
								<Expression expressions="$corpseData.state = $enum:corpseState.undiscovered" />
								<AddLink From="$this.id" To="$this.id" Tag="&apos;switch_corpse&apos;" Data="$corpseData" LinkOpHandleMode="OverWrite" />
							</Sequence>
						</AtomicDecorator>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="animalAlarmInformation" comment="" />
				<Variable name="corpseData" comment="" />
				<Variable name="information" comment="" />
				<Variable name="informations" comment="" />
				<Variable name="pos_vec3" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Function_switch_animal_oneShotAnimalAlarm hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_switch_animal_oneShotAnimalAlarm>
							</Then>
							<Else>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Else>
						</EntityContextCheck>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetKnownInformations hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetKnownInformations>
									<For hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<DestroyInformationFromHolder hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</DestroyInformationFromHolder>
									</For>
									<DisablePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</DisablePerception>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AddLink>
								</Sequence>
							</AtomicDecorator>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>