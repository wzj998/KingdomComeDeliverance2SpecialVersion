<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="callInterrupt_animal_returnFromStartle" is_function="1">
		<Variables>
			<Variable name="priority" type="_int" values="51" isPersistent="0" form="single" />
			<Variable name="redkev" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="returnFromStartleData" type="switch:animal_interruptData:returnFromStartle" values="" isPersistent="0" form="single" />
			<Variable name="shallPass" type="_bool" values="false" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="formationLock" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="ignorePriority" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="initiator" type="enum:switch_interruptInitiator" values="$enum:switch_interruptInitiator.unknown" isPersistent="0" form="single" requirementType="In" />
			<Variable name="positionToReturnTo" type="vec3" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="previousReaction" type="enum:crime_animal_reactionKind" values="$enum:crime_animal_reactionKind.unknown" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Function_crime_getRedkev redkev="$redkev" nodeLabel="63585921" />
					<Function_crime_checkReactionPriority priority="$priority" shallPass="$shallPass" nodeLabel="80547441" />
					<IfCondition failOnCondition="false" condition="$shallPass | $ignorePriority">
						<Sequence>
							<Expression expressions="$returnFromStartleData.previousReaction = $previousReaction &#10;$returnFromStartleData.positionToReturnTo = $positionToReturnTo &#10;$returnFromStartleData.formationLock = $formationLock" />
							<AddInterrupt_animal_returnFromStartle returnFromStartleData="$returnFromStartleData" Target="$this.id" Host="$redkev" Behavior="&apos;interrupt_animal_returnFromStartle&apos;" Priority="$priority" IgnorePriorityOnPreviousInterrupt="$ignorePriority" urgency="Default" Aliveness="Alive" Privileged="false" FastForward="false" />
						</Sequence>
					</IfCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="priority" comment="" />
				<Variable name="redkev" comment="" />
				<Variable name="returnFromStartleData" comment="" />
				<Variable name="shallPass" comment="" />
				<Variable name="formationLock" comment="" />
				<Variable name="ignorePriority" comment="" />
				<Variable name="initiator" comment="" />
				<Variable name="positionToReturnTo" comment="" />
				<Variable name="previousReaction" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_crime_getRedkev hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_crime_getRedkev>
						<Function_crime_checkReactionPriority hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_crime_checkReactionPriority>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<AddInterrupt_animal_returnFromStartle hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</AddInterrupt_animal_returnFromStartle>
							</Sequence>
						</IfCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>