<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_animal_handleAwareness_hitVolume" is_function="1">
		<Variables>
			<Variable name="stimulus" type="switch:animal_stimulus:combat" values="" isPersistent="0" form="single" />
			<Variable name="volumeData" type="crime:hitVolume" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="volume" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$volume" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;crime_hit&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;crime_hit&apos;" Quantifiers="ForAll" Parent="" Child="" Data="$volumeData" saveVersion="2" />
					</GraphSearch>
					<EntityContextCheck context="combat_invisible" target="$volumeData.target" saveVersion="2">
						<Else canSkip="1">
							<EntityContextCheck context="combat_defenceMode" target="$volumeData.target" saveVersion="2">
								<Else canSkip="1">
									<EntityContextCheck context="crime_animal_interruptAttack" target="" saveVersion="2">
										<Else canSkip="1">
											<Sequence>
												<Expression expressions="$stimulus.attacker = $volumeData.attacker &#10;$stimulus.target= $volumeData.target &#10;$stimulus.isFromHitVolume = true" />
												<Function_switch_animal_handleStimulusCombat stimulus="$stimulus" nodeLabel="65665516" />
											</Sequence>
										</Else>
									</EntityContextCheck>
								</Else>
							</EntityContextCheck>
						</Else>
					</EntityContextCheck>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="stimulus" comment="" />
				<Variable name="volumeData" comment="" />
				<Variable name="volume" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Else>
								<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Else>
										<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Else>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<Function_switch_animal_handleStimulusCombat hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_switch_animal_handleStimulusCombat>
												</Sequence>
											</Else>
										</EntityContextCheck>
									</Else>
								</EntityContextCheck>
							</Else>
						</EntityContextCheck>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>