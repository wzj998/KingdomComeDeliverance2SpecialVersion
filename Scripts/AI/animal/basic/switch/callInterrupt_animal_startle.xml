<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="callInterrupt_animal_startle" is_function="1">
    <Variables>
      <Variable name="animalStartleData" type="switch:animal_interruptData:startle" values="" isPersistent="0" form="single" />
      <Variable name="currentTime" type="_int64" values="" isPersistent="0" form="single" />
      <Variable name="myRider" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="priority" type="_int" values="50" isPersistent="0" form="single" />
      <Variable name="redkev" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="shallPass" type="_bool" values="false" isPersistent="0" form="single" />
      <Variable name="volume" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="volumeData" type="crime:animalMissingVolume" values="" isPersistent="0" form="single" />
      <Variable name="volumeParams" type="perceptibleParams" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="ignorePriority" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="initiator" type="enum:switch_interruptInitiator" values="$enum:switch_interruptInitiator.unknown" isPersistent="0" form="single" requirementType="In" />
      <Variable name="previousReaction" type="enum:crime_animal_reactionKind" values="$enum:crime_animal_reactionKind.unknown" isPersistent="0" form="single" requirementType="In" />
      <Variable name="stimulusKind" type="enum:crime_animal_stimulusKind" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="suppressBuckingAnimation" type="_bool" values="false" isPersistent="0" form="single" requirementType="In" />
      <Variable name="target" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <Function_crime_getRedkev redkev="$redkev" nodeLabel="23462741" />
          <Function_crime_checkReactionPriority priority="$priority" shallPass="$shallPass" nodeLabel="42119755" />
          <SuppressFailure>
            <Sequence>
              <GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                <LinkTagFilter tag="&apos;rider&apos;" prune="true" negprune="unknown" Parent="" Child="$myRider" Data="" />
              </GraphSearch>
            </Sequence>
          </SuppressFailure>
          <IfElseCondition failOnCondition="false" condition="$myRider == $__player" saveVersion="2">
            <Then canSkip="1">
              <Sequence>
                <GetTime TimeType="GameTime" OutVar="$currentTime" Delta="" />
                <AddLink From="$this.id" To="$this.id" Tag="&apos;crime_animal_deferStartleAferDismount&apos;" Data="$currentTime" LinkOpHandleMode="OverWrite" />
              </Sequence>
            </Then>
            <Else canSkip="1">
              <IfCondition failOnCondition="false" condition="$shallPass | $ignorePriority">
                <Sequence>
                  <Expression expressions="$animalStartleData.previousReaction = $previousReaction &#10;$animalStartleData.stimulusKind = $stimulusKind &#10;$animalStartleData.target = $target &#10;$animalStartleData.volume = $volume &#10;$animalStartleData.suppressBuckingAnimation = $suppressBuckingAnimation" />
                  <GetSpatialInfo In="$this.id" Out="$animalStartleData.initialPosition" What="Position" />
                  <AddInterrupt_animal_startle animalStartleData="$animalStartleData" Target="$this.id" Host="$redkev" Behavior="&apos;interrupt_animal_startle&apos;" Priority="$priority" IgnorePriorityOnPreviousInterrupt="$ignorePriority" urgency="Instant" Aliveness="Alive" Privileged="false" FastForward="false" />
                </Sequence>
              </IfCondition>
            </Else>
          </IfElseCondition>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer>
      <Sequence>
        <Expression expressions="$volumeParams.visibility = 0.005, &#10;$volumeParams.conspicuousness = 1 &#10; &#10;$volumeData.culprit = $__player &#10;$volumeData.target = $this.id &#10;$volumeData.startleSource = $startleSource &#10;$volumeData.isTheft = false" />
        <ExecuteLua code="local soul = XGenAIModule.GetEntityByWUID(data.this.id).soul &#10; &#10;data.volumeData.animalArchetype = soul:GetArchetype().Name" />
        <GetTime TimeType="GameTime" OutVar="$volumeData.timestamp" Delta="" />
        <SpawnExpiringPerceptibleVolume Expiration="&apos;20m&apos;" TimerType="GameTime" Position="$this.id" Radius="1.000000" Height="1.000000" Label="&apos;crime_animal_missing&apos;" OnlyVisiblePointsFromCenter="false" PerceptibleParams="$volumeParams" OutWuid="$volume" />
        <AddLink From="$volume" To="$volume" Tag="&apos;crime_animal_missing&apos;" Data="$volumeData" LinkOpHandleMode="Error" />
        <IgnorePerception PerceptorObject="$this.id" PerceptibleObject="$volume" IgnoreFor="&apos;-1&apos;" TimerType="GameTime" Uninterruptible="false" Persistent="true" />
        <IgnorePerception PerceptorObject="$volumeData.culprit" PerceptibleObject="$volume" IgnoreFor="&apos;-1&apos;" TimerType="GameTime" Uninterruptible="false" Persistent="true" />
        <IgnorePerception PerceptorObject="$__player" PerceptibleObject="$volume" IgnoreFor="&apos;-1&apos;" TimerType="GameTime" Uninterruptible="false" Persistent="true" />
      </Sequence>
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="animalStartleData" comment="" />
        <Variable name="currentTime" comment="" />
        <Variable name="myRider" comment="" />
        <Variable name="priority" comment="" />
        <Variable name="redkev" comment="" />
        <Variable name="shallPass" comment="" />
        <Variable name="volume" comment="" />
        <Variable name="volumeData" comment="" />
        <Variable name="volumeParams" comment="" />
        <Variable name="ignorePriority" comment="" />
        <Variable name="initiator" comment="" />
        <Variable name="previousReaction" comment="" />
        <Variable name="stimulusKind" comment="" />
        <Variable name="suppressBuckingAnimation" comment="" />
        <Variable name="target" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-150" editorPosY="-20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Function_crime_getRedkev hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Function_crime_getRedkev>
            <Function_crime_checkReactionPriority hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Function_crime_checkReactionPriority>
            <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </LinkTagFilter>
                </GraphSearch>
              </Sequence>
            </SuppressFailure>
            <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <Sequence hasInputBreakpoint="0" comment="Switch calls startle when player dismount" breakpointFlags="0">
                  <OutputBreakpoints />
                  <GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </GetTime>
                  <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </AddLink>
                </Sequence>
              </Then>
              <Else>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                    <GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </GetSpatialInfo>
                    <AddInterrupt_animal_startle hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AddInterrupt_animal_startle>
                  </Sequence>
                </IfCondition>
              </Else>
            </IfElseCondition>
          </Sequence>
        </Behavior>
      </Root>
      <Forest>
        <Sequence editorPosX="1270" editorPosY="-330" hasInputBreakpoint="0" comment="Spawn missing volume" breakpointFlags="0">
          <OutputBreakpoints />
          <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Expression>
          <ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </ExecuteLua>
          <GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </GetTime>
          <SpawnExpiringPerceptibleVolume hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </SpawnExpiringPerceptibleVolume>
          <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </AddLink>
          <IgnorePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </IgnorePerception>
          <IgnorePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </IgnorePerception>
          <IgnorePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </IgnorePerception>
        </Sequence>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>