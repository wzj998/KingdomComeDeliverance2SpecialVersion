<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="switch_animal_shouldReactToItem" is_function="1">
    <Variables>
      <Variable name="category" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="species" type="enum:crime_animalSpecies" values="" isPersistent="0" form="single" />
      <Variable name="subtype" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="type" type="_string" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="item" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="shouldReact" type="_bool" values="" isPersistent="0" form="single" requirementType="Out" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <EntityContextCheck context="switch_recognitionLevel_I" target="" saveVersion="2">
          <Then canSkip="1">
            <Expression expressions="$shouldReact = false" />
          </Then>
          <Else canSkip="1">
            <EntityContextCheck context="crime_ignorePlayersDroppedItems" target="" saveVersion="2">
              <Then canSkip="1">
                <Expression expressions="$shouldReact = false" />
              </Then>
              <Else canSkip="1">
                <CheckWuidValid wuid="$item" FailSubtMissing="false" saveVersion="2">
                  <Then canSkip="1">
                    <Sequence>
                      <GetItemType WUID="$item" OutCategory="$category" OutType="$type" OutSubType="$subtype" />
                      <IfElseCondition failOnCondition="false" condition="$category == &apos;food&apos; &amp; $type ~= &apos;potion&apos;" saveVersion="2">
                        <Then canSkip="1">
                          <Switch>
                            <EntityContextCheck context="switch_isDogBreed" target="" saveVersion="2">
                              <Then canSkip="1">
                                <Expression expressions="$shouldReact = true" />
                              </Then>
                            </EntityContextCheck>
                            <EntityContextCheck context="switch_isHorse" target="" saveVersion="2">
                              <Then canSkip="1">
                                <IfElseCondition failOnCondition="false" condition="$subtype == &apos;vegetable&apos;" saveVersion="2">
                                  <Then canSkip="1">
                                    <Expression expressions="$shouldReact = true" />
                                  </Then>
                                  <Else canSkip="1">
                                    <Expression expressions="$shouldReact = false" />
                                  </Else>
                                </IfElseCondition>
                              </Then>
                            </EntityContextCheck>
                            <DefaultBranch>
                              <Expression expressions="$shouldReact = false" />
                            </DefaultBranch>
                          </Switch>
                        </Then>
                        <Else canSkip="1">
                          <Expression expressions="$shouldReact = false" />
                        </Else>
                      </IfElseCondition>
                    </Sequence>
                  </Then>
                  <Else canSkip="1">
                    <Expression expressions="$shouldReact = false" />
                  </Else>
                </CheckWuidValid>
              </Else>
            </EntityContextCheck>
          </Else>
        </EntityContextCheck>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="category" comment="" />
        <Variable name="species" comment="" />
        <Variable name="subtype" comment="" />
        <Variable name="type" comment="" />
        <Variable name="item" comment="" />
        <Variable name="shouldReact" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <EntityContextCheck hasInputBreakpoint="0" comment="Only level_I ignore" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Then>
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </Then>
            <Else>
              <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Expression>
                </Then>
                <Else>
                  <CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <GetItemType hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </GetItemType>
                        <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                          <OutputBreakpoints />
                          <Then>
                            <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                                <OutputBreakpoints />
                                <Then>
                                  <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                    <OutputBreakpoints />
                                  </Expression>
                                </Then>
                              </EntityContextCheck>
                              <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                                <OutputBreakpoints />
                                <Then>
                                  <IfElseCondition hasInputBreakpoint="0" comment="Add more later?" breakpointFlags="0" saveVersion="2">
                                    <OutputBreakpoints />
                                    <Then>
                                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                        <OutputBreakpoints />
                                      </Expression>
                                    </Then>
                                    <Else>
                                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                        <OutputBreakpoints />
                                      </Expression>
                                    </Else>
                                  </IfElseCondition>
                                </Then>
                              </EntityContextCheck>
                              <DefaultBranch>
                                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </Expression>
                              </DefaultBranch>
                            </Switch>
                          </Then>
                          <Else>
                            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Expression>
                          </Else>
                        </IfElseCondition>
                      </Sequence>
                    </Then>
                    <Else>
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                    </Else>
                  </CheckWuidValid>
                </Else>
              </EntityContextCheck>
            </Else>
          </EntityContextCheck>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>