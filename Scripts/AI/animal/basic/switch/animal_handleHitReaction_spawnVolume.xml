<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_animal_handleHitReaction_spawnVolume" is_function="1">
		<Variables>
			<Variable name="animalKind" type="enum:crime_animalKind" values="" isPersistent="0" form="single" />
			<Variable name="volume" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="volumeParams" type="perceptibleParams" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="volumeData" type="crime:hitVolume" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AtomicDecorator>
					<IsDeadCheck SoulWUID="$this.id" FailSubtMissing="false" saveVersion="2">
						<Else canSkip="1">
							<Sequence>
								<Expression expressions="$volumeParams.visibility = 0.02, &#10;$volumeParams.conspicuousness = 1" />
								<SpawnExpiringPerceptibleVolume Expiration="&apos;3s&apos;" TimerType="GameTime" Position="$this.id" Radius="1.000000" Height="1.000000" Label="&apos;crime_animal_hit&apos;" OnlyVisiblePointsFromCenter="true" PerceptibleParams="$volumeParams" OutWuid="$volume" />
								<AddLink From="$volume" To="$volume" Tag="&apos;crime_hit&apos;" Data="$volumeData" LinkOpHandleMode="Error" />
								<IgnorePerception PerceptorObject="$volumeData.attacker" PerceptibleObject="$volume" IgnoreFor="&apos;-1&apos;" TimerType="GameTime" Uninterruptible="false" Persistent="true" />
							</Sequence>
						</Else>
					</IsDeadCheck>
				</AtomicDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="animalKind" comment="" />
				<Variable name="volume" comment="" />
				<Variable name="volumeParams" comment="" />
				<Variable name="volumeData" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-70" editorPosY="80" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Else>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<SpawnExpiringPerceptibleVolume hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</SpawnExpiringPerceptibleVolume>
									<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AddLink>
									<IgnorePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</IgnorePerception>
								</Sequence>
							</Else>
						</IsDeadCheck>
					</AtomicDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>