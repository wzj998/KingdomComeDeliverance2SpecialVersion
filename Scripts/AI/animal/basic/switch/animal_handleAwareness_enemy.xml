<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="switch_animal_handleAwareness_enemy" is_function="1">
    <Variables>
      <Variable name="shouldReact" type="_bool" values="false" isPersistent="0" form="single" />
      <Variable name="stimulus" type="switch:animal_stimulus:enemy" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="perceptible" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <IsDeadCheck SoulWUID="$perceptible" FailSubtMissing="false" saveVersion="2">
          <Then canSkip="1">
            <IgnorePerception PerceptorObject="$this.id" PerceptibleObject="$perceptible" IgnoreFor="&apos;60s&apos;" TimerType="GameTime" Uninterruptible="false" Persistent="true" />
          </Then>
          <Else canSkip="1">
            <Sequence>
              <Switch>
                <EntityContextCheck context="crime_doNotReactToEnemiesOnSight" target="" saveVersion="2">
                  <Then canSkip="1">
                    <Expression expressions="$shouldReact = false" />
                  </Then>
                </EntityContextCheck>
                <EntityContextCheck context="crime_animal_interruptAttack" target="" saveVersion="2">
                  <Then canSkip="1">
                    <Expression expressions="$shouldReact = false" />
                  </Then>
                </EntityContextCheck>
                <RelationContextCheck context="crime_animal_ignoreAwarenessEnemy_rel" from="$this.id" to="$perceptible" saveVersion="2">
                  <Then canSkip="1">
                    <Expression expressions="$shouldReact = false" />
                  </Then>
                </RelationContextCheck>
                <EntityContextCheck context="crime_animal_ignoreAwarenessEnemy" target="" saveVersion="2">
                  <Then canSkip="1">
                    <Expression expressions="$shouldReact = false" />
                  </Then>
                </EntityContextCheck>
                <DefaultBranch>
                  <Expression expressions="$shouldReact = true" />
                </DefaultBranch>
              </Switch>
              <IfCondition failOnCondition="false" condition="$shouldReact">
                <Sequence>
                  <Expression expressions="$stimulus.enemy = $perceptible" />
                  <Function_switch_animal_handleStimulusEnemy stimulus="$stimulus" nodeLabel="96915753" />
                </Sequence>
              </IfCondition>
            </Sequence>
          </Else>
        </IsDeadCheck>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="shouldReact" comment="" />
        <Variable name="stimulus" comment="" />
        <Variable name="perceptible" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Then>
              <IgnorePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </IgnorePerception>
            </Then>
            <Else>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                    </Then>
                  </EntityContextCheck>
                  <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                    </Then>
                  </EntityContextCheck>
                  <RelationContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                    </Then>
                  </RelationContextCheck>
                  <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                    </Then>
                  </EntityContextCheck>
                  <DefaultBranch>
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                  </DefaultBranch>
                </Switch>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                    <Function_switch_animal_handleStimulusEnemy hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Function_switch_animal_handleStimulusEnemy>
                  </Sequence>
                </IfCondition>
              </Sequence>
            </Else>
          </IsDeadCheck>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>