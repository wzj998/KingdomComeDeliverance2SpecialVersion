<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="callInterrupt_animal_attack" is_function="1">
		<Variables>
			<Variable name="animalAttackData" type="switch:animal_interruptData:attack" values="" isPersistent="0" form="single" />
			<Variable name="dogpackMessage" type="dogpack" values="" isPersistent="0" form="single" />
			<Variable name="packSO" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="priority" type="_int" values="160" isPersistent="0" form="single" />
			<Variable name="redkev" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="shallPass" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="ignorePriority" type="_bool" values="false" isPersistent="0" form="single" requirementType="In" />
			<Variable name="initiator" type="enum:switch_interruptInitiator" values="$enum:switch_interruptInitiator.unknown" isPersistent="0" form="single" requirementType="In" />
			<Variable name="previousReaction" type="enum:crime_animal_reactionKind" values="$enum:crime_animal_reactionKind.unknown" isPersistent="0" form="single" requirementType="In" />
			<Variable name="skirmishRelationOverride" type="enum:skirmishRelationOverride" values="$enum:skirmishRelationOverride.none" isPersistent="0" form="single" requirementType="In" />
			<Variable name="stimulusKind" type="enum:crime_animal_stimulusKind" values="$enum:crime_animal_stimulusKind.unknown" isPersistent="0" form="single" requirementType="In" />
			<Variable name="target" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Function_crime_getRedkev redkev="$redkev" nodeLabel="81058448" />
					<Function_crime_checkReactionPriority priority="$priority" shallPass="$shallPass" nodeLabel="13805747" />
					<IfCondition failOnCondition="false" condition="$shallPass | $ignorePriority">
						<Sequence>
							<Expression expressions="$animalAttackData.initiatedBy = $initiator &#10;$animalAttackData.previousReaction = $previousReaction &#10;$animalAttackData.stimulusKind = $stimulusKind &#10;$animalAttackData.target = $target &#10;$animalAttackData.skirmishRelationOverride = $skirmishRelationOverride" />
							<Function_crime_animal_reserveReactionLink reactionKind="$enum:crime_animal_reactionKind.attack" nodeLabel="18401043" />
							<IsFastForwarded failOnCondition="false" saveVersion="2">
								<Then canSkip="1">
									<AddInterrupt_animal_attack animalAttackData="$animalAttackData" Target="$this.id" Host="$redkev" Behavior="&apos;interrupt_animal_attack&apos;" Priority="$priority" IgnorePriorityOnPreviousInterrupt="$ignorePriority" urgency="Fast" Aliveness="Alive" Privileged="false" FastForward="true" />
								</Then>
								<Else canSkip="1">
									<AddInterrupt_animal_attack animalAttackData="$animalAttackData" Target="$this.id" Host="$redkev" Behavior="&apos;interrupt_animal_attack&apos;" Priority="$priority" IgnorePriorityOnPreviousInterrupt="$ignorePriority" urgency="Fast" Aliveness="Alive" Privileged="false" FastForward="false" />
								</Else>
							</IsFastForwarded>
						</Sequence>
					</IfCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="animalAttackData" comment="" />
				<Variable name="dogpackMessage" comment="" />
				<Variable name="packSO" comment="" />
				<Variable name="priority" comment="" />
				<Variable name="redkev" comment="" />
				<Variable name="shallPass" comment="" />
				<Variable name="ignorePriority" comment="" />
				<Variable name="initiator" comment="" />
				<Variable name="previousReaction" comment="" />
				<Variable name="skirmishRelationOverride" comment="" />
				<Variable name="stimulusKind" comment="" />
				<Variable name="target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_crime_getRedkev hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_crime_getRedkev>
						<Function_crime_checkReactionPriority hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_crime_checkReactionPriority>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<Function_crime_animal_reserveReactionLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_animal_reserveReactionLink>
								<IsFastForwarded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<AddInterrupt_animal_attack hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AddInterrupt_animal_attack>
									</Then>
									<Else>
										<AddInterrupt_animal_attack hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AddInterrupt_animal_attack>
									</Else>
								</IsFastForwarded>
							</Sequence>
						</IfCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>