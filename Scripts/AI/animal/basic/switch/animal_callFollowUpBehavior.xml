<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="switch_animal_callFollowUpBehavior" is_function="1">
    <Variables>
      <Variable name="breakLoop" type="_bool" values="false" isPersistent="0" form="single" />
      <Variable name="currentTime" type="_int64" values="" isPersistent="0" form="single" />
      <Variable name="item_isInInventory" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="reactionTargets_eatDroppedFood" type="_wuid,crime:animal_followUpBehavior:eatDroppedFood" values="" isPersistent="0" form="custom_associative" />
      <Variable name="reactionTargets_eatDroppedFood_val" type="crime:animal_followUpBehavior:eatDroppedFood" values="" isPersistent="0" form="single" />
      <Variable name="reactionTargets_key" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="shouldEat" type="_bool" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="previousReaction" type="enum:crime_animal_reactionKind" values="$enum:crime_animal_reactionKind.unknown" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <AtomicDecorator>
            <SuppressFailure>
              <Sequence>
                <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                  <LinkTagFilter tag="&apos;crime_animal_followUpBehavior_eatDroppedFood&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
                  <EvaLLyzer Expresion="$reactionTargets_eatDroppedFood[$__to] = $__link_crime_animal_followUpBehavior_eatDroppedFood" Quantifiers="ForAll" saveVersion="2" />
                </GraphSearch>
                <ForEach startIndex="0" step="1" array="$reactionTargets_eatDroppedFood" iterator="$reactionTargets_key" value="$reactionTargets_eatDroppedFood_val" break="$breakLoop">
                  <IfElseCondition failOnCondition="false" condition="$reactionTargets_eatDroppedFood_val.active" saveVersion="2">
                    <Then canSkip="1">
                      <Selector>
                        <GraphSearch Origin="$reactionTargets_key" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                          <LinkTagFilter tag="&apos;crime_pickUpItemReserved_reverse&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
                        </GraphSearch>
                        <CheckWuidValid wuid="$reactionTargets_key" FailSubtMissing="false" saveVersion="2">
                          <Then canSkip="1">
                            <Sequence>
                              <GetTime TimeType="GameTime" OutVar="$currentTime" Delta="" />
                              <GetItemProperty itemId="$reactionTargets_key" property="InInventory" result="$item_isInInventory" />
                              <IfElseCondition failOnCondition="false" condition="$currentTime &lt; $reactionTargets_eatDroppedFood_val.timestamp + $data:script_param[&apos;crime_pickUpItem_memoryExpiration&apos;].value * 1000 &amp; &#10;~$item_isInInventory" saveVersion="2">
                                <Then canSkip="1">
                                  <Sequence>
                                    <Function_switch_animal_shouldEatDroppedFood item="$reactionTargets_key" shouldEat="$shouldEat" nodeLabel="29633210" />
                                    <IfElseCondition failOnCondition="false" condition="$shouldEat" saveVersion="2">
                                      <Then canSkip="1">
                                        <Sequence>
                                          <Function_callInterrupt_animal_eatDroppedFood ignorePriority="true" initiator="$enum:switch_interruptInitiator.scheduler" item="$reactionTargets_key" previousReaction="$previousReaction" stimulusKind="$enum:crime_animal_stimulusKind.item" nodeLabel="82856417" />
                                          <Expression expressions="$breakLoop = true" />
                                        </Sequence>
                                      </Then>
                                      <Else canSkip="1">
                                        <RemoveLink From="$this.id" To="$reactionTargets_key" Tag="&apos;crime_animal_followUpBehavior_eatDroppedFood&apos;" LinkOpHandleMode="Success" />
                                      </Else>
                                    </IfElseCondition>
                                  </Sequence>
                                </Then>
                                <Else canSkip="1">
                                  <RemoveLink From="$this.id" To="$reactionTargets_key" Tag="&apos;crime_animal_followUpBehavior_eatDroppedFood&apos;" LinkOpHandleMode="Success" />
                                </Else>
                              </IfElseCondition>
                            </Sequence>
                          </Then>
                        </CheckWuidValid>
                      </Selector>
                    </Then>
                    <Else canSkip="1">
                      <RemoveLink From="$this.id" To="$reactionTargets_key" Tag="&apos;crime_animal_followUpBehavior_eatDroppedFood&apos;" LinkOpHandleMode="Success" />
                    </Else>
                  </IfElseCondition>
                </ForEach>
              </Sequence>
            </SuppressFailure>
          </AtomicDecorator>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="breakLoop" comment="" />
        <Variable name="currentTime" comment="" />
        <Variable name="item_isInInventory" comment="" />
        <Variable name="reactionTargets_eatDroppedFood" comment="" />
        <Variable name="reactionTargets_eatDroppedFood_val" comment="" />
        <Variable name="reactionTargets_key" comment="" />
        <Variable name="shouldEat" comment="" />
        <Variable name="previousReaction" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </LinkTagFilter>
                    <EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                      <OutputBreakpoints />
                    </EvaLLyzer>
                  </GraphSearch>
                  <ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                      <OutputBreakpoints />
                      <Then>
                        <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <GraphSearch hasInputBreakpoint="0" comment="Item is already reserved" breakpointFlags="0">
                            <OutputBreakpoints />
                            <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </LinkTagFilter>
                          </GraphSearch>
                          <CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                            <OutputBreakpoints />
                            <Then>
                              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                                <GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </GetTime>
                                <GetItemProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </GetItemProperty>
                                <IfElseCondition hasInputBreakpoint="0" comment="Check for expiration" breakpointFlags="0" saveVersion="2">
                                  <OutputBreakpoints />
                                  <Then>
                                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                      <OutputBreakpoints />
                                      <Function_switch_animal_shouldEatDroppedFood hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                        <OutputBreakpoints />
                                      </Function_switch_animal_shouldEatDroppedFood>
                                      <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                                        <OutputBreakpoints />
                                        <Then>
                                          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                            <OutputBreakpoints />
                                            <Function_callInterrupt_animal_eatDroppedFood hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                              <OutputBreakpoints />
                                            </Function_callInterrupt_animal_eatDroppedFood>
                                            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                              <OutputBreakpoints />
                                            </Expression>
                                          </Sequence>
                                        </Then>
                                        <Else>
                                          <RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                            <OutputBreakpoints />
                                          </RemoveLink>
                                        </Else>
                                      </IfElseCondition>
                                    </Sequence>
                                  </Then>
                                  <Else>
                                    <RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                      <OutputBreakpoints />
                                    </RemoveLink>
                                  </Else>
                                </IfElseCondition>
                              </Sequence>
                            </Then>
                          </CheckWuidValid>
                        </Selector>
                      </Then>
                      <Else>
                        <RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </RemoveLink>
                      </Else>
                    </IfElseCondition>
                  </ForEach>
                </Sequence>
              </SuppressFailure>
            </AtomicDecorator>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>