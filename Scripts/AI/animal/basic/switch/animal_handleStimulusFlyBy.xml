<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_animal_handleStimulusFlyBy" is_function="1">
		<Variables>
			<Variable name="playerPosition" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="shouldUseChooseReaction" type="_bool" values="false" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="stimulus" type="switch:animal_stimulus:flyBy" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextCheck context="switch_isSheep" target="" saveVersion="2">
					<Else canSkip="1">
						<EntityContextCheck context="crime_animal_suppressImpulsesDuringActivity" target="" saveVersion="2">
							<Else canSkip="1">
								<IsInsideAreaWithLabel Position="$this.id" Label="&apos;animals_publicSpace&apos;" Area="" FailSubtMissing="false" saveVersion="2">
									<Else canSkip="1">
										<Sequence>
											<Switch>
												<EntityContextCheck context="switch_isDogBreed" target="" saveVersion="2">
													<Then canSkip="1">
														<Expression expressions="$shouldUseChooseReaction = true" />
													</Then>
												</EntityContextCheck>
												<EntityContextCheck context="crime_isWildAnimal" target="" saveVersion="2">
													<Then canSkip="1">
														<Expression expressions="$shouldUseChooseReaction = true" />
													</Then>
												</EntityContextCheck>
												<EntityContextCheck context="crime_isDomesticAnimal" target="" saveVersion="2">
													<Then canSkip="1">
														<Expression expressions="$shouldUseChooseReaction = true" />
													</Then>
												</EntityContextCheck>
												<DefaultBranch>
													<Expression expressions="$shouldUseChooseReaction = false" />
												</DefaultBranch>
											</Switch>
											<IfCondition failOnCondition="false" condition="$shouldUseChooseReaction">
												<Sequence>
													<Function_switch_animal_affectFeelings affectNervousness="true" affectReputation="false" token="&apos;heard_bow_fired&apos;" nodeLabel="77304085" />
													<CallDecorator_crime_animal_chooseReaction>
														<Subtree canSkip="1">
															<Function_switch_animal_chooseReaction impulseLevel="$enum:crime_animal_impulseLevel.annoying" stimulusKind="$enum:crime_animal_stimulusKind.flyBy" nodeLabel="48752156" />
														</Subtree>
														<IgnoreImpulse canSkip="1">
															<CallbackEventCatch_empty>
																<Success />
															</CallbackEventCatch_empty>
														</IgnoreImpulse>
														<Annoyance canSkip="1">
															<CallbackEventCatch_empty>
																<Function_callInterrupt_animal_annoyance attackKind="$enum:crime_attackKind.unknown" ignorePriority="false" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_animal_reactionKind.unknown" stimulusKind="$enum:crime_animal_stimulusKind.flyBy" target="$__player" nodeLabel="16397864" />
															</CallbackEventCatch_empty>
														</Annoyance>
														<Attack canSkip="1">
															<CallbackEventCatch_empty>
																<Success />
															</CallbackEventCatch_empty>
														</Attack>
														<Escape canSkip="1">
															<CallbackEventCatch_empty>
																<Function_callInterrupt_animal_escape escapeFromVec3="" escapeFromWuid="$__player" ignorePriority="false" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_animal_reactionKind.unknown" stimulusKind="$enum:crime_animal_stimulusKind.flyBy" useVec3ForEscape="false" nodeLabel="25427603" />
															</CallbackEventCatch_empty>
														</Escape>
														<LookAround canSkip="1">
															<CallbackEventCatch_empty>
																<Sequence>
																	<GetSpatialInfo In="$__player" Out="$playerPosition" What="Position" />
																	<Function_callInterrupt_animal_lookAround ignorePriority="false" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_animal_reactionKind.unknown" shouldUseVec3="true" stimulusKind="$enum:crime_animal_stimulusKind.flyBy" targetPositionVec3="$playerPosition" targetPositionWuid="" nodeLabel="29328421" />
																</Sequence>
															</CallbackEventCatch_empty>
														</LookAround>
														<Reposition canSkip="1">
															<CallbackEventCatch_empty>
																<Function_callInterrupt_animal_reposition ignorePriority="false" initiator="$enum:switch_interruptInitiator.switch" isBanishment="false" previousReaction="$enum:crime_animal_reactionKind.unknown" shouldUseVec3="false" shouldUseWuid="true" stimulusKind="$enum:crime_animal_stimulusKind.flyBy" targetPositionVec3="" targetPositionWuid="$__player" nodeLabel="30639350" />
															</CallbackEventCatch_empty>
														</Reposition>
													</CallDecorator_crime_animal_chooseReaction>
												</Sequence>
											</IfCondition>
										</Sequence>
									</Else>
								</IsInsideAreaWithLabel>
							</Else>
						</EntityContextCheck>
					</Else>
				</EntityContextCheck>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="playerPosition" comment="" />
				<Variable name="shouldUseChooseReaction" comment="" />
				<Variable name="stimulus" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-20" editorPosY="-30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Else>
							<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Else>
									<IsInsideAreaWithLabel hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Else>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</Then>
													</EntityContextCheck>
													<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</Then>
													</EntityContextCheck>
													<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</Then>
													</EntityContextCheck>
													<DefaultBranch>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</DefaultBranch>
												</Switch>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_switch_animal_affectFeelings hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_switch_animal_affectFeelings>
														<CallDecorator_crime_animal_chooseReaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Subtree>
																<Function_switch_animal_chooseReaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_switch_animal_chooseReaction>
															</Subtree>
															<IgnoreImpulse>
																<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Success>
																</CallbackEventCatch_empty>
															</IgnoreImpulse>
															<Annoyance>
																<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Function_callInterrupt_animal_annoyance hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_callInterrupt_animal_annoyance>
																</CallbackEventCatch_empty>
															</Annoyance>
															<Attack>
																<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Success>
																</CallbackEventCatch_empty>
															</Attack>
															<Escape>
																<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Function_callInterrupt_animal_escape hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_callInterrupt_animal_escape>
																</CallbackEventCatch_empty>
															</Escape>
															<LookAround>
																<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</GetSpatialInfo>
																		<Function_callInterrupt_animal_lookAround hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_callInterrupt_animal_lookAround>
																	</Sequence>
																</CallbackEventCatch_empty>
															</LookAround>
															<Reposition>
																<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Function_callInterrupt_animal_reposition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_callInterrupt_animal_reposition>
																</CallbackEventCatch_empty>
															</Reposition>
														</CallDecorator_crime_animal_chooseReaction>
													</Sequence>
												</IfCondition>
											</Sequence>
										</Else>
									</IsInsideAreaWithLabel>
								</Else>
							</EntityContextCheck>
						</Else>
					</EntityContextCheck>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>