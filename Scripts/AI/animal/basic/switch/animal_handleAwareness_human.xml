<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="switch_animal_handleAwareness_human" is_function="1">
    <Variables>
      <Variable name="animalCooldown" type="crime:animalCooldowns" values="" isPersistent="0" form="single" />
      <Variable name="areMates" type="_bool" values="false" isPersistent="0" form="single" />
      <Variable name="currentTime" type="_int64" values="" isPersistent="0" form="single" />
      <Variable name="shouldReact" type="_bool" values="false" isPersistent="0" form="single" />
      <Variable name="stimulusHuman" type="switch:animal_stimulus:human" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="who" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <EntityContextCheck context="crime_isCombatableAnimal" target="" saveVersion="2">
            <Then canSkip="1">
              <Expression expressions="$shouldReact = false" />
            </Then>
            <Else canSkip="1">
              <Switch>
                <EntityContextCheck context="crime_isDomesticAnimal" target="" saveVersion="2">
                  <Then canSkip="1">
                    <EntityContextCheck context="switch_recognitionLevel_II" target="" saveVersion="2">
                      <Then canSkip="1">
                        <Expression expressions="$shouldReact = false" />
                      </Then>
                      <Else canSkip="1">
                        <IfElseCondition failOnCondition="false" condition="$who == $__player" saveVersion="2">
                          <Then canSkip="1">
                            <Expression expressions="$shouldReact = true" />
                          </Then>
                          <Else canSkip="1">
                            <Expression expressions="$shouldReact = false" />
                          </Else>
                        </IfElseCondition>
                      </Else>
                    </EntityContextCheck>
                  </Then>
                </EntityContextCheck>
                <EntityContextCheck context="crime_isWildAnimal" target="" saveVersion="2">
                  <Then canSkip="1">
                    <Expression expressions="$shouldReact = true" />
                  </Then>
                </EntityContextCheck>
                <DefaultBranch>
                  <Success />
                </DefaultBranch>
              </Switch>
            </Else>
          </EntityContextCheck>
          <EntityContextCheck context="crime_animal_ignoreAwarenessHuman" target="" saveVersion="2">
            <Then canSkip="1">
              <Expression expressions="$shouldReact = false" />
            </Then>
          </EntityContextCheck>
          <RelationContextCheck context="crime_animal_ignoreAwarenessHuman_rel" from="$this.id" to="$who" saveVersion="2">
            <Then canSkip="1">
              <Expression expressions="$shouldReact = false" />
            </Then>
          </RelationContextCheck>
          <EntityContextCheck context="switch_isHorse" target="" saveVersion="2">
            <Then canSkip="1">
              <Expression expressions="$shouldReact = false" />
            </Then>
          </EntityContextCheck>
          <IfCondition failOnCondition="false" condition="$shouldReact">
            <IsTimeSkipping saveVersion="2">
              <Then canSkip="1">
                <Success />
              </Then>
              <Else canSkip="1">
                <Sequence>
                  <GetAreMates Npc1="$this.id" Npc2="$who" AreMates="$areMates" />
                  <IfCondition failOnCondition="false" condition="~$areMates">
                    <CheckRelationshipInterval_SoulToSoul TargetSoul="$who" Soul="$this.id" Flag="friend" saveVersion="2">
                      <Else canSkip="1">
                        <Sequence>
                          <Expression expressions="$stimulusHuman.who = $who" />
                          <Function_switch_animal_handleStimulusHuman stimulus="$stimulusHuman" nodeLabel="61567890" />
                        </Sequence>
                      </Else>
                    </CheckRelationshipInterval_SoulToSoul>
                  </IfCondition>
                </Sequence>
              </Else>
            </IsTimeSkipping>
          </IfCondition>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer>
      <Selector>
        <Sequence>
          <GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;crime_animalCooldowns&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;crime_animalCooldowns&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$animalCooldown" />
          </GraphSearch>
          <GetTime TimeType="GameTime" OutVar="$currentTime" Delta="" />
          <Expression expressions="$shouldReact = ($currentTime &gt; $animalCooldown.dogStoppedBarkingCooldown)" />
        </Sequence>
        <Expression expressions="$shouldReact = true" />
      </Selector>
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="animalCooldown" comment="" />
        <Variable name="areMates" comment="" />
        <Variable name="currentTime" comment="" />
        <Variable name="shouldReact" comment="" />
        <Variable name="stimulusHuman" comment="" />
        <Variable name="who" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-40" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <Expression hasInputBreakpoint="0" comment="ask V tek" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Then>
              <Else>
                <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <EntityContextCheck hasInputBreakpoint="0" comment="We only care about short cone" breakpointFlags="0" saveVersion="2">
                        <OutputBreakpoints />
                        <Then>
                          <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Expression>
                        </Then>
                        <Else>
                          <IfElseCondition hasInputBreakpoint="0" comment="Domestic animals only react to player" breakpointFlags="0" saveVersion="2">
                            <OutputBreakpoints />
                            <Then>
                              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Expression>
                            </Then>
                            <Else>
                              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Expression>
                            </Else>
                          </IfElseCondition>
                        </Else>
                      </EntityContextCheck>
                    </Then>
                  </EntityContextCheck>
                  <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <Expression hasInputBreakpoint="0" comment="Wild animal react to all humans" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                    </Then>
                  </EntityContextCheck>
                  <DefaultBranch>
                    <Success hasInputBreakpoint="0" comment="Don&apos;t care" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Success>
                  </DefaultBranch>
                </Switch>
              </Else>
            </EntityContextCheck>
            <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Then>
            </EntityContextCheck>
            <RelationContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Then>
            </RelationContextCheck>
            <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Then>
            </EntityContextCheck>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <IsTimeSkipping hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Success>
                </Then>
                <Else>
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <GetAreMates hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </GetAreMates>
                    <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <CheckRelationshipInterval_SoulToSoul hasInputBreakpoint="0" comment="Only react if not a friend" breakpointFlags="0" saveVersion="2">
                        <OutputBreakpoints />
                        <Else>
                          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Expression>
                            <Function_switch_animal_handleStimulusHuman hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Function_switch_animal_handleStimulusHuman>
                          </Sequence>
                        </Else>
                      </CheckRelationshipInterval_SoulToSoul>
                    </IfCondition>
                  </Sequence>
                </Else>
              </IsTimeSkipping>
            </IfCondition>
          </Sequence>
        </Behavior>
      </Root>
      <Forest>
        <Selector editorPosX="640" editorPosY="-660" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </GetTime>
            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
          </Sequence>
          <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Expression>
        </Selector>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>