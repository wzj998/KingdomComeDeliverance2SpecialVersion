<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="use_eat" is_function="0">
    <Variables>
      <Variable name="check" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="initDecision" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="resourceType" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="shouldCheckSurface" type="_bool" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Decision decisionLabel="animal_eat" variable="$initDecision" saveVersion="2">
          <Search canSkip="1">
            <ForgetDecision decisionLabel="animal_move" />
          </Search>
          <Exec canSkip="1">
            <Success />
          </Exec>
        </Decision>
      </OnInit>
      <Behavior canSkip="1">
        <CallDecorator_animal_boidTemplate>
          <Subtree canSkip="1">
            <Function_boidTemplate boidDataOrigin="$__object.id" homeArea="$__resource.id" nodeLabel="17208927" />
          </Subtree>
          <OnRest canSkip="1">
            <CallbackEventCatch_animal_boidTemplate_onRest>
              <Sequence>
                <Function_animalRandomMove additionalMoveParams="$additionalMoveParams" area="$__resource.id" pathFindParams="$pathFindParams" nodeLabel="57653115" />
                <CheckSurface TestType="EatSpot" Result="$check" />
                <GetType WUID="$__resource.id" OutString="$resourceType" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
                <Expression expressions="$shouldCheckSurface = false" />
                <EntityContextCheck context="dog_ignoreTerrainCheck" target="$this.id" saveVersion="2">
                  <Then canSkip="1">
                    <Success />
                  </Then>
                  <Else canSkip="1">
                    <IfCondition failOnCondition="false" condition="$resourceType == &apos;TA&apos; | $resourceType == &apos;SA&apos;">
                      <Expression expressions="$shouldCheckSurface = true" />
                    </IfCondition>
                  </Else>
                </EntityContextCheck>
                <IfElseCondition failOnCondition="false" condition="$check | !$shouldCheckSurface" saveVersion="2">
                  <Then canSkip="1">
                    <UnstanceAction unstance="animal_eat" locationObject="" slaveObject="" />
                  </Then>
                  <Else canSkip="1">
                    <ForgetDecision decisionLabel="animal_move" />
                  </Else>
                </IfElseCondition>
                <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
              </Sequence>
            </CallbackEventCatch_animal_boidTemplate_onRest>
          </OnRest>
        </CallDecorator_animal_boidTemplate>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="check" comment="" />
        <Variable name="initDecision" comment="" />
        <Variable name="resourceType" comment="" />
        <Variable name="shouldCheckSurface" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Decision hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Search>
              <ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </ForgetDecision>
            </Search>
            <Exec>
              <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Success>
            </Exec>
          </Decision>
        </OnInit>
        <Behavior>
          <CallDecorator_animal_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Subtree>
              <Function_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Function_boidTemplate>
            </Subtree>
            <OnRest>
              <CallbackEventCatch_animal_boidTemplate_onRest hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Function_animalRandomMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Function_animalRandomMove>
                  <CheckSurface hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </CheckSurface>
                  <GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </GetType>
                  <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Expression>
                  <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Success>
                    </Then>
                    <Else>
                      <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                      </IfCondition>
                    </Else>
                  </EntityContextCheck>
                  <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </UnstanceAction>
                    </Then>
                    <Else>
                      <ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </ForgetDecision>
                    </Else>
                  </IfElseCondition>
                  <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Wait>
                </Sequence>
              </CallbackEventCatch_animal_boidTemplate_onRest>
            </OnRest>
          </CallDecorator_animal_boidTemplate>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="use_sleep" is_function="0">
    <Variables>
      <Variable name="check" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="initDecision" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="resourceType" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="shouldCheckSurface" type="_bool" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Decision decisionLabel="animal_sleep" variable="$initDecision" saveVersion="2">
          <Search canSkip="1">
            <ForgetDecision decisionLabel="animal_move" />
          </Search>
          <Exec canSkip="1">
            <Success />
          </Exec>
        </Decision>
      </OnInit>
      <Behavior canSkip="1">
        <CallDecorator_animal_boidTemplate>
          <Subtree canSkip="1">
            <Function_boidTemplate boidDataOrigin="$__object.id" homeArea="$__resource.id" nodeLabel="37529596" />
          </Subtree>
          <OnRest canSkip="1">
            <CallbackEventCatch_animal_boidTemplate_onRest>
              <Sequence>
                <Function_animalRandomMove additionalMoveParams="$additionalMoveParams" area="$__resource.id" pathFindParams="$pathFindParams" nodeLabel="80804854" />
                <CheckSurface TestType="SleepSpot" Result="$check" />
                <GetType WUID="$__resource.id" OutString="$resourceType" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
                <Expression expressions="$shouldCheckSurface = false" />
                <EntityContextCheck context="dog_ignoreTerrainCheck" target="$this.id" saveVersion="2">
                  <Then canSkip="1">
                    <Success />
                  </Then>
                  <Else canSkip="1">
                    <IfCondition failOnCondition="false" condition="$resourceType == &apos;TA&apos; | $resourceType == &apos;SA&apos;">
                      <Expression expressions="$shouldCheckSurface = true" />
                    </IfCondition>
                  </Else>
                </EntityContextCheck>
                <IfElseCondition failOnCondition="false" condition="$check | !$shouldCheckSurface" saveVersion="2">
                  <Then canSkip="1">
                    <StanceElement smartObject="" stance="lying" allowAny="false" enabled="true">
                      <UnstanceAction unstance="animal_sheep_sleep" locationObject="" slaveObject="" />
                    </StanceElement>
                  </Then>
                  <Else canSkip="1">
                    <ForgetDecision decisionLabel="animal_move" />
                  </Else>
                </IfElseCondition>
                <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
              </Sequence>
            </CallbackEventCatch_animal_boidTemplate_onRest>
          </OnRest>
        </CallDecorator_animal_boidTemplate>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="check" comment="" />
        <Variable name="initDecision" comment="" />
        <Variable name="resourceType" comment="" />
        <Variable name="shouldCheckSurface" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Decision hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Search>
              <ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </ForgetDecision>
            </Search>
            <Exec>
              <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Success>
            </Exec>
          </Decision>
        </OnInit>
        <Behavior>
          <CallDecorator_animal_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Subtree>
              <Function_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Function_boidTemplate>
            </Subtree>
            <OnRest>
              <CallbackEventCatch_animal_boidTemplate_onRest hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Function_animalRandomMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Function_animalRandomMove>
                  <CheckSurface hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </CheckSurface>
                  <GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </GetType>
                  <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Expression>
                  <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Success>
                    </Then>
                    <Else>
                      <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                      </IfCondition>
                    </Else>
                  </EntityContextCheck>
                  <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </UnstanceAction>
                      </StanceElement>
                    </Then>
                    <Else>
                      <ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </ForgetDecision>
                    </Else>
                  </IfElseCondition>
                  <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Wait>
                </Sequence>
              </CallbackEventCatch_animal_boidTemplate_onRest>
            </OnRest>
          </CallDecorator_animal_boidTemplate>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="use_relax" is_function="0">
    <Variables>
      <Variable name="check" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="initDecision" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="resourceType" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="shouldCheckSurface" type="_bool" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Decision decisionLabel="animal_relax" variable="$initDecision" saveVersion="2">
          <Search canSkip="1">
            <ForgetDecision decisionLabel="animal_move" />
          </Search>
          <Exec canSkip="1">
            <Success />
          </Exec>
        </Decision>
      </OnInit>
      <Behavior canSkip="1">
        <CallDecorator_animal_boidTemplate>
          <Subtree canSkip="1">
            <Function_boidTemplate boidDataOrigin="$__object.id" homeArea="$__resource.id" nodeLabel="15166510" />
          </Subtree>
          <OnRest canSkip="1">
            <CallbackEventCatch_animal_boidTemplate_onRest>
              <Sequence>
                <Function_animalRandomMove additionalMoveParams="$additionalMoveParams" area="$__resource.id" pathFindParams="$pathFindParams" nodeLabel="98376202" />
                <CheckSurface TestType="SleepSpot" Result="$check" />
                <GetType WUID="$__resource.id" OutString="$resourceType" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
                <Expression expressions="$shouldCheckSurface = false" />
                <EntityContextCheck context="dog_ignoreTerrainCheck" target="$this.id" saveVersion="2">
                  <Then canSkip="1">
                    <Success />
                  </Then>
                  <Else canSkip="1">
                    <IfCondition failOnCondition="false" condition="$resourceType == &apos;TA&apos; | $resourceType == &apos;SA&apos;">
                      <Expression expressions="$shouldCheckSurface = true" />
                    </IfCondition>
                  </Else>
                </EntityContextCheck>
                <IfElseCondition failOnCondition="false" condition="$check | !$shouldCheckSurface" saveVersion="2">
                  <Then canSkip="1">
                    <StanceElement smartObject="" stance="lying" allowAny="false" enabled="true">
                      <WaitAction />
                    </StanceElement>
                  </Then>
                  <Else canSkip="1">
                    <ForgetDecision decisionLabel="animal_move" />
                  </Else>
                </IfElseCondition>
                <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
              </Sequence>
            </CallbackEventCatch_animal_boidTemplate_onRest>
          </OnRest>
        </CallDecorator_animal_boidTemplate>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="check" comment="" />
        <Variable name="initDecision" comment="" />
        <Variable name="resourceType" comment="" />
        <Variable name="shouldCheckSurface" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Decision hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Search>
              <ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </ForgetDecision>
            </Search>
            <Exec>
              <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Success>
            </Exec>
          </Decision>
        </OnInit>
        <Behavior>
          <CallDecorator_animal_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Subtree>
              <Function_boidTemplate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Function_boidTemplate>
            </Subtree>
            <OnRest>
              <CallbackEventCatch_animal_boidTemplate_onRest hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Function_animalRandomMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Function_animalRandomMove>
                  <CheckSurface hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </CheckSurface>
                  <GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </GetType>
                  <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Expression>
                  <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Success>
                    </Then>
                    <Else>
                      <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                      </IfCondition>
                    </Else>
                  </EntityContextCheck>
                  <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </WaitAction>
                      </StanceElement>
                    </Then>
                    <Else>
                      <ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </ForgetDecision>
                    </Else>
                  </IfElseCondition>
                  <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Wait>
                </Sequence>
              </CallbackEventCatch_animal_boidTemplate_onRest>
            </OnRest>
          </CallDecorator_animal_boidTemplate>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>