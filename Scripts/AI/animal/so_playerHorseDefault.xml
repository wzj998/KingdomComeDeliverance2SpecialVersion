<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="use" is_function="0">
    <Variables>
      <Variable name="isPlayerCheckFinished" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="mrkev" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="parkingObject" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="parkingObjectArray" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="timeCheck_int" type="_int" values="" isPersistent="0" form="single" />
      <Variable name="timeCheck_string" type="_string" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Function_crime_getMrkev mrkev="$mrkev" nodeLabel="70823102" />
      </OnInit>
      <Behavior canSkip="1">
        <Decision decisionLabel="horseParking_playerCheck" variable="$isPlayerCheckFinished" saveVersion="2">
          <Search canSkip="1">
            <Success />
          </Search>
          <Exec canSkip="1">
            <IfElseCondition failOnCondition="false" condition="!$isPlayerCheckFinished" saveVersion="2">
              <Then canSkip="1">
                <Sequence>
                  <WaitAction />
                  <While doFail="false" propagateChildFail="false" condition="!$isPlayerCheckFinished">
                    <Parallel successMode="Any" failureMode="Any">
                      <LoopUntil until="Success" attemptCount="0">
                        <DistanceGate Origin="$this.id" ReferencePt="$__player" Low="$data:script_param[&apos;horseParking_playerCheck_distance&apos;].value" High="$data:script_param[&apos;horseParking_playerCheck_distance&apos;].value" Negation="false" OpenInMiddle="false" RunLogic="Halt">
                          <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                        </DistanceGate>
                      </LoopUntil>
                      <LoopUntil until="Success" attemptCount="0">
                        <DistanceGate Origin="$this.id" ReferencePt="$__player" Low="$data:script_param[&apos;horseParking_playerCheck_distance&apos;].value" High="$data:script_param[&apos;horseParking_playerCheck_distance&apos;].value" Negation="true" OpenInMiddle="false" RunLogic="Halt">
                          <Sequence>
                            <Expression expressions="$timeCheck_int = $data:script_param[&apos;horseParking_playerCheck_time&apos;].value" />
                            <Concatenation OutString="$timeCheck_string" Pattern="&apos;$timeCheck_int;s&apos;" />
                            <Wait duration="$timeCheck_string" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                            <Expression expressions="$isPlayerCheckFinished = true" />
                          </Sequence>
                        </DistanceGate>
                      </LoopUntil>
                    </Parallel>
                  </While>
                </Sequence>
              </Then>
              <Else canSkip="1">
                <Selector>
                  <ReserveBehavior reserveFrom="$parkingObject" behaviorName="&apos;use&apos;" saveVersion="2">
                    <Search canSkip="1">
                      <ReserveBehaviorSearch>
                        <Sequence>
                          <GraphSearch Origin="$mrkev" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                            <CategoryFilter categories="&apos;horseParkingSpot&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
                            <HasBehaviorFilter FilterChoice="Requestable" BehaviorList="&apos;use&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
                            <RangeFilter min="0.000000" max="$data:script_param[&apos;horseParking_spotCheck_distance&apos;].value" point="$this.id" excludeRef="true" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
                            <Nodalyzer Quantifiers="ForAll" Parent="" Child="$parkingObjectArray" saveVersion="2">
                              <Child0 canSkip="1">
                                <RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
                              </Child0>
                            </Nodalyzer>
                          </GraphSearch>
                          <Expression expressions="$parkingObject = $parkingObjectArray[0]" />
                        </Sequence>
                      </ReserveBehaviorSearch>
                    </Search>
                    <Exec canSkip="1">
                      <CallBehavior Target="$parkingObject" BehaviorName="&apos;use&apos;" ignoreDropUnloading="false" nodeLabel="88864652" />
                    </Exec>
                  </ReserveBehavior>
                  <Sequence>
                    <WaitAction />
                    <Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                  </Sequence>
                </Selector>
              </Else>
            </IfElseCondition>
          </Exec>
        </Decision>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="isPlayerCheckFinished" comment="" />
        <Variable name="mrkev" comment="" />
        <Variable name="parkingObject" comment="" />
        <Variable name="parkingObjectArray" comment="" />
        <Variable name="timeCheck_int" comment="" />
        <Variable name="timeCheck_string" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Function_crime_getMrkev hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Function_crime_getMrkev>
        </OnInit>
        <Behavior>
          <Decision hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Search>
              <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Success>
            </Search>
            <Exec>
              <IfElseCondition hasInputBreakpoint="0" comment="checkingForPlayer" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </WaitAction>
                    <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Wait>
                          </DistanceGate>
                        </LoopUntil>
                        <LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Expression>
                              <Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Concatenation>
                              <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Wait>
                              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Expression>
                            </Sequence>
                          </DistanceGate>
                        </LoopUntil>
                      </Parallel>
                    </While>
                  </Sequence>
                </Then>
                <Else>
                  <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <ReserveBehavior hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                      <OutputBreakpoints />
                      <Search>
                        <ReserveBehaviorSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <CategoryFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </CategoryFilter>
                              <HasBehaviorFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </HasBehaviorFilter>
                              <RangeFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </RangeFilter>
                              <Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                                <OutputBreakpoints />
                                <Child0>
                                  <RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                    <OutputBreakpoints />
                                  </RangeSorter>
                                </Child0>
                              </Nodalyzer>
                            </GraphSearch>
                            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Expression>
                          </Sequence>
                        </ReserveBehaviorSearch>
                      </Search>
                      <Exec>
                        <CallBehavior hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </CallBehavior>
                      </Exec>
                    </ReserveBehavior>
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </WaitAction>
                      <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Wait>
                    </Sequence>
                  </Selector>
                </Else>
              </IfElseCondition>
            </Exec>
          </Decision>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>