<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="situation_friendlyFight_audience" is_function="0">
    <Variables>
      <Variable name="animationApproach" type="enum:animationApproach" values="" isPersistent="0" form="single" />
      <Variable name="fighters" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="isLeaning" type="_bool" values="false" isPersistent="0" form="single" />
      <Variable name="isSitting" type="_bool" values="false" isPersistent="0" form="single" />
      <Variable name="isStanding" type="_bool" values="false" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Parallel successMode="Any" failureMode="Any">
          <EntityContext context="activity_disableSchedulerLooping" target="">
            <Selector>
              <Function_situation_audienceHelper_leaning graphSearchOrigin="$__area.id" foundPlace="$isLeaning" nodeLabel="98330095" />
              <Function_situation_audienceHelper_standing graphSearchOrigin="$__area.id" foundPlace="$isStanding" nodeLabel="42665769" />
              <Function_situation_audienceHelper_sitting graphSearchOrigin="$__area.id" foundPlace="$isSitting" nodeLabel="37822473" />
            </Selector>
          </EntityContext>
          <IfGate atomic="false" condition="$isLeaning | $isStanding | $isSitting" RunLogic="Halt">
            <Sequence>
              <Selector>
                <GraphSearch Origin="$__area.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                  <LinkTagFilter tag="&apos;situation_friendlyFight_fighter&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
                  <Nodalyzer Quantifiers="ForAll" Parent="" Child="$fighters" saveVersion="2">
                    <Child0 canSkip="1">
                      <RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
                    </Child0>
                  </Nodalyzer>
                </GraphSearch>
                <ErrorNode Message="&apos;[$this.name;] couldn\&apos;t find a fighter during the situation &quot;situation_friendlyFight&quot;&apos;" />
              </Selector>
              <ForceLook LookTarget="$fighters[0]" DisableVariations="false">
                <Parallel successMode="Any" failureMode="Any">
                  <Loop count="-1">
                    <Sequence>
                      <IfElseCondition failOnCondition="false" condition="$isStanding | $isSitting" saveVersion="2">
                        <Then canSkip="1">
                          <Expression expressions="$animationApproach = $enum:animationApproach.tryDialogAnimations" />
                        </Then>
                        <Else canSkip="1">
                          <Expression expressions="$animationApproach = $enum:animationApproach.dontPlayDialogAnimations" />
                        </Else>
                      </IfElseCondition>
                      <Function_speech_schedulerMonolog alias="" animationApproach="$animationApproach" context="" lookAtId="" metarole="&apos;TRENINKOVY_SOUBOJ_DIVAK&apos;" skipInLod="false" subtitlesDown="false" nodeLabel="73341183" />
                      <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="&apos;10s&apos;" />
                    </Sequence>
                  </Loop>
                  <Wait duration="&apos;3m&apos;" timeType="GameTime" doFail="false" variation="&apos;5s&apos;" />
                </Parallel>
              </ForceLook>
            </Sequence>
          </IfGate>
          <LinkGate from="$__area.id" to="" tag="&apos;situation_friendlyFight_fighter&apos;" amount="AtLeastOne" presence="NotThere" RunLogic="KeepRunning">
            <Success />
          </LinkGate>
        </Parallel>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="animationApproach" comment="" />
        <Variable name="fighters" comment="" />
        <Variable name="isLeaning" comment="" />
        <Variable name="isSitting" comment="" />
        <Variable name="isStanding" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Function_situation_audienceHelper_leaning hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Function_situation_audienceHelper_leaning>
                <Function_situation_audienceHelper_standing hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Function_situation_audienceHelper_standing>
                <Function_situation_audienceHelper_sitting hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Function_situation_audienceHelper_sitting>
              </Selector>
            </EntityContext>
            <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </LinkTagFilter>
                    <Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                      <OutputBreakpoints />
                      <Child0>
                        <RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </RangeSorter>
                      </Child0>
                    </Nodalyzer>
                  </GraphSearch>
                  <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </ErrorNode>
                </Selector>
                <ForceLook hasInputBreakpoint="0" comment="Look at the closest fighter - they might move, but whatever" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                          <OutputBreakpoints />
                          <Then>
                            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Expression>
                          </Then>
                          <Else>
                            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Expression>
                          </Else>
                        </IfElseCondition>
                        <Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Function_speech_schedulerMonolog>
                        <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Wait>
                      </Sequence>
                    </Loop>
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                  </Parallel>
                </ForceLook>
              </Sequence>
            </IfGate>
            <LinkGate hasInputBreakpoint="0" comment="If all fighters finish - end this behaviour" breakpointFlags="0">
              <OutputBreakpoints />
              <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Success>
            </LinkGate>
          </Parallel>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>