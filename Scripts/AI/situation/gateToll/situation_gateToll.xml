<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="situation_gateToll_gateGuard" is_function="0">
    <Variables>
      <Variable name="lockName" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="passerBy" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Sequence>
          <Expression expressions="$passerBy = $__sit_roleHolders[&apos;gateToll_passerBy&apos;].id" />
          <Concatenation OutString="$lockName" Pattern="&apos;situation_gateToll_$__sit_contextVar&apos;" />
          <SetExternalLock LockManagerType="Global" Locked="true" LockName="&apos;$lockName&apos;" />
        </Sequence>
      </OnInit>
      <Behavior canSkip="1">
        <UrgencyDecorator Urgency="Fast">
          <AnyDecorator preset="crime_keepStateAndItems">
            <ForceLook LookTarget="$passerBy" DisableVariations="false">
              <Sequence>
                <Parallel successMode="All" failureMode="Any">
                  <WaitAction />
                  <Sequence>
                    <SetExternalLock LockManagerType="Global" Locked="false" LockName="&apos;$lockName&apos;" />
                    <Function_speech_monolog alias="" canBeDelayed="false" context="" dramaticBark="false" lookAtId="$passerBy" metarole="&apos;SITUACE_GATETOLL&apos;" target="$this.id" wait="true" nodeLabel="95637102" />
                  </Sequence>
                </Parallel>
                <Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;30s&apos;" LockManagerType="Global" SemaphoreName="&apos;$lockName&apos;" RunLogic="Halt">
                  <Parallel successMode="All" failureMode="Any">
                    <Turn target="$passerBy" align="false" />
                    <Function_speech_dialogInitiator alias="" animationApproach="$enum:animationApproach.tryDialogAnimations" context="" customParameters="" metarole="&apos;SITUACE_GATETOLL&apos;" preset="$enum:dialogPreset.ingame" recipient="$passerBy" recipientMetaroles="&apos;SITUACE_GATETOLL&apos;" nodeLabel="21774933" />
                  </Parallel>
                </Synchronize>
              </Sequence>
            </ForceLook>
          </AnyDecorator>
        </UrgencyDecorator>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="lockName" comment="" />
        <Variable name="passerBy" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
            <Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Concatenation>
            <SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </SetExternalLock>
          </Sequence>
        </OnInit>
        <Behavior>
          <UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </WaitAction>
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </SetExternalLock>
                      <Function_speech_monolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Function_speech_monolog>
                    </Sequence>
                  </Parallel>
                  <Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Turn>
                      <Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Function_speech_dialogInitiator>
                    </Parallel>
                  </Synchronize>
                </Sequence>
              </ForceLook>
            </AnyDecorator>
          </UrgencyDecorator>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="situation_gateToll_passerBy" is_function="0">
    <Variables>
      <Variable name="distanceToGuard" type="_float" values="" isPersistent="0" form="single" />
      <Variable name="gateGuard" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="lockName" type="_string" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Sequence>
          <Expression expressions="$gateGuard = $__sit_roleHolders[&apos;gateToll_gateGuard&apos;].id" />
          <Concatenation OutString="$lockName" Pattern="&apos;situation_gateToll_$__sit_contextVar&apos;" />
        </Sequence>
      </OnInit>
      <Behavior canSkip="1">
        <AnyDecorator preset="crime_keepStateAndItems">
          <ForceLook LookTarget="$gateGuard" DisableVariations="false">
            <Sequence>
              <MeasureDistance position1="$this.id" position2="$gateGuard" mode="TwoDimensions" result="$distanceToGuard" />
              <ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Global" SemaphoreName="&apos;$lockName&apos;" RunLogic="KeepRunning">
                <IfElseCondition failOnCondition="false" condition="$distanceToGuard &gt; 2" saveVersion="2">
                  <Then canSkip="1">
                    <Move stopWithinDistance="2.000000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$gateGuard" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
                  </Then>
                  <Else canSkip="1">
                    <Turn target="$gateGuard" align="false" />
                  </Else>
                </IfElseCondition>
              </ExternalLock>
              <Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;30s&apos;" LockManagerType="Global" SemaphoreName="&apos;$lockName&apos;" RunLogic="Halt">
                <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
              </Synchronize>
            </Sequence>
          </ForceLook>
        </AnyDecorator>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="distanceToGuard" comment="" />
        <Variable name="gateGuard" comment="" />
        <Variable name="lockName" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-40" editorPosY="-60" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
            <Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Concatenation>
          </Sequence>
        </OnInit>
        <Behavior>
          <AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <MeasureDistance hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </MeasureDistance>
                <ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Move>
                    </Then>
                    <Else>
                      <Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Turn>
                    </Else>
                  </IfElseCondition>
                </ExternalLock>
                <Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Wait>
                </Synchronize>
              </Sequence>
            </ForceLook>
          </AnyDecorator>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>