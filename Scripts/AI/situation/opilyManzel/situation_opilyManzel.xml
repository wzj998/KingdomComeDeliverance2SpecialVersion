<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="situation_opilyManzel_zena" is_function="0">
    <Variables>
      <Variable name="dialogReceiver" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="lockName" type="_string" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Sequence>
          <Expression expressions="$dialogReceiver = $__sit_roleHolders[&apos;opilyManzel_muz&apos;].id" />
          <Concatenation OutString="$lockName" Pattern="&apos;situation_opilyManzel_$__sit_contextVar&apos;" />
        </Sequence>
      </OnInit>
      <Behavior canSkip="1">
        <AnyDecorator preset="crime_keepState" enabled="true">
          <EntityContext context="crime_dontGreetPlayer" target="">
            <StanceCheck soul="$dialogReceiver" stance="standing" smartObject="" negate="false" failOnCondition="false" saveVersion="2">
              <Then canSkip="1">
                <Sequence>
                  <Function_switch_updateGenericAwareness genericAwareness="$enum:switch_genericAwareness.npcGreeted" otherEntity="$dialogReceiver" updateBothWays="true" who="$this.id" nodeLabel="18347562" />
                  <Move stopWithinDistance="2.000000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$dialogReceiver" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
                  <Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Global" SemaphoreName="&apos;$lockName&apos;" RunLogic="Halt">
                    <Function_speech_dialogInitiator alias="" animationApproach="$enum:animationApproach.tryDialogAnimations" context="" customParameters="" metarole="&apos;SITUACE_OPILY_MANZEL&apos;" preset="$enum:dialogPreset.ingame" recipient="$dialogReceiver" recipientMetaroles="&apos;SITUACE_OPILY_MANZEL&apos;" nodeLabel="81964276" />
                  </Synchronize>
                </Sequence>
              </Then>
              <Else canSkip="1">
                <Success />
              </Else>
            </StanceCheck>
          </EntityContext>
        </AnyDecorator>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="dialogReceiver" comment="" />
        <Variable name="lockName" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="50" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
            <Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Concatenation>
          </Sequence>
        </OnInit>
        <Behavior>
          <AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <StanceCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Function_switch_updateGenericAwareness hasInputBreakpoint="0" comment="Don&apos;t greet during this situation - just update cooldowns" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Function_switch_updateGenericAwareness>
                    <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Move>
                    <Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Function_speech_dialogInitiator>
                    </Synchronize>
                  </Sequence>
                </Then>
                <Else>
                  <Success hasInputBreakpoint="0" comment="If man isn&apos;t standing, just exit" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Success>
                </Else>
              </StanceCheck>
            </EntityContext>
          </AnyDecorator>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="situation_opilyManzel_muz" is_function="0">
    <Variables>
      <Variable name="dialogInitiator" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="lockName" type="_string" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Sequence>
          <Expression expressions="$dialogInitiator = $__sit_roleHolders[&apos;opilyManzel_zena&apos;].id" />
          <Concatenation OutString="$lockName" Pattern="&apos;situation_opilyManzel_$__sit_contextVar&apos;" />
        </Sequence>
      </OnInit>
      <Behavior canSkip="1">
        <AnyDecorator preset="crime_keepStateAndItems" enabled="true">
          <EntityContext context="crime_dontGreetPlayer" target="">
            <StanceCheck soul="$this.id" stance="standing" smartObject="" negate="false" failOnCondition="false" saveVersion="2">
              <Then canSkip="1">
                <Sequence>
                  <UrgencyDecorator Urgency="Fast">
                    <WaitAction />
                  </UrgencyDecorator>
                  <StopMovement waitUntilStopped="false" />
                  <Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Global" SemaphoreName="&apos;$lockName&apos;" RunLogic="Halt">
                    <ForceLook LookTarget="$dialogInitiator" DisableVariations="false">
                      <Sequence>
                        <Turn target="$dialogInitiator" align="false" />
                        <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
                      </Sequence>
                    </ForceLook>
                  </Synchronize>
                </Sequence>
              </Then>
              <Else canSkip="1">
                <Success />
              </Else>
            </StanceCheck>
          </EntityContext>
        </AnyDecorator>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="dialogInitiator" comment="" />
        <Variable name="lockName" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
            <Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Concatenation>
          </Sequence>
        </OnInit>
        <Behavior>
          <AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <StanceCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </WaitAction>
                    </UrgencyDecorator>
                    <StopMovement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </StopMovement>
                    <Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Turn>
                          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Wait>
                        </Sequence>
                      </ForceLook>
                    </Synchronize>
                  </Sequence>
                </Then>
                <Else>
                  <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Success>
                </Else>
              </StanceCheck>
            </EntityContext>
          </AnyDecorator>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="onUpdate" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <ContinuousSwitch>
          <TimerBox startTime="&apos;18&apos;" endTime="&apos;2&apos;" variation="&apos;0&apos;" duration="">
            <Sequence>
              <SetSituationState situations="&apos;situation_opilyManzel&apos;" state="Enabled" />
              <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
            </Sequence>
          </TimerBox>
          <IfCondition failOnCondition="false" condition="true">
            <Sequence>
              <SetSituationState situations="&apos;situation_opilyManzel&apos;" state="Disabled" />
              <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
            </Sequence>
          </IfCondition>
        </ContinuousSwitch>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <ContinuousSwitch hasInputBreakpoint="0" comment="#KCD2-324584" breakpointFlags="0">
            <OutputBreakpoints />
            <TimerBox hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <SetSituationState hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </SetSituationState>
                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Wait>
              </Sequence>
            </TimerBox>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <SetSituationState hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </SetSituationState>
                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Wait>
              </Sequence>
            </IfCondition>
          </ContinuousSwitch>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>