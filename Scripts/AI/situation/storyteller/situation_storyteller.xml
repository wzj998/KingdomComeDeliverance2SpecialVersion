<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="situation_storyteller_listener" is_function="0">
		<Variables>
			<Variable name="finishInterrupt" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="foundPlace" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="reactionRequest" type="situation:storyteller:reactionRequest" values="" isPersistent="0" form="single" />
			<Variable name="spots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="storyteller_talker" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Expression expressions="$storyteller_talker = $__sit_roleHolders[&apos;storyteller_talker&apos;].id" />
			</OnInit>
			<Behavior canSkip="1">
				<IfCondition failOnCondition="false" condition="$storyteller_talker ~= $this.id">
					<AnyDecorator preset="crime_keepState" enabled="true">
						<EntityContextCheck context="situation_storyteller_talker" target="$storyteller_talker" saveVersion="2">
							<Then canSkip="1">
								<EntityContextBarrier context="situation_storyteller_talker" target="$storyteller_talker" Negation="false" RunLogic="Halt">
									<IfGate atomic="false" condition="~$finishInterrupt" RunLogic="Halt">
										<AddLinkElement from="$storyteller_talker" to="$this.id" tag="&apos;situation_storyteller_listener&apos;" data="" enabled="true">
											<EntityContextElement context="soliloquy_disable" enabled="true">
												<EntityContextElement context="crime_dontGreetPlayer" enabled="true">
													<Parallel successMode="Any" failureMode="Any">
														<Function_situation_audienceHelper graphSearchOrigin="$__area.id" foundPlace="$foundPlace" nodeLabel="54386952" />
														<IfGate atomic="false" condition="$foundPlace" RunLogic="Halt">
															<ForceLook LookTarget="$storyteller_talker" DisableVariations="false">
																<Sequence>
																	<Parallel successMode="Any" failureMode="Any">
																		<Sequence>
																			<ClearInbox inbox="&apos;storyteller_reactionRequest&apos;" type="" condition="" />
																			<Loop count="-1">
																				<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$reactionRequest" senderInfo="" inbox="&apos;storyteller_reactionRequest&apos;" condition="" answerVar="">
																					<RandomGate opensWithChance="0.500000" saveVersion="2">
																						<Then canSkip="1">
																							<SuppressFailure>
																								<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;SITUACE_VYPRAVEC_REAKCE&apos;" skipInLod="false" subtitlesDown="false" nodeLabel="59880695" />
																							</SuppressFailure>
																						</Then>
																						<Else canSkip="1">
																							<Success />
																						</Else>
																					</RandomGate>
																				</ProcessMessage>
																			</Loop>
																		</Sequence>
																		<Wait duration="&apos;3m&apos;" timeType="GameTime" doFail="false" variation="&apos;10s&apos;" />
																	</Parallel>
																	<Expression expressions="$finishInterrupt = true" />
																</Sequence>
															</ForceLook>
														</IfGate>
														<EntityContextBarrier context="situation_storyteller_talker" target="$storyteller_talker" Negation="true" RunLogic="Halt">
															<StopMovement waitUntilStopped="false" />
														</EntityContextBarrier>
													</Parallel>
												</EntityContextElement>
											</EntityContextElement>
										</AddLinkElement>
									</IfGate>
								</EntityContextBarrier>
							</Then>
						</EntityContextCheck>
					</AnyDecorator>
				</IfCondition>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="finishInterrupt" comment="" />
				<Variable name="foundPlace" comment="" />
				<Variable name="reactionRequest" comment="" />
				<Variable name="spots" comment="" />
				<Variable name="storyteller_talker" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</OnInit>
				<Behavior>
					<IfCondition hasInputBreakpoint="0" comment="There&apos;s a chance that one npc will be Player AND Listener, just exit this behavior if that happens" breakpointFlags="0">
						<OutputBreakpoints />
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Function_situation_audienceHelper hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_situation_audienceHelper>
															<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<ClearInbox hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</ClearInbox>
																				<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																							<OutputBreakpoints />
																							<Then>
																								<SuppressFailure hasInputBreakpoint="0" comment="Can fail cuz of cooldown" breakpointFlags="0">
																									<OutputBreakpoints />
																									<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</Function_speech_schedulerMonolog>
																								</SuppressFailure>
																							</Then>
																							<Else>
																								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</Success>
																							</Else>
																						</RandomGate>
																					</ProcessMessage>
																				</Loop>
																			</Sequence>
																			<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Wait>
																		</Parallel>
																		<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Expression>
																	</Sequence>
																</ForceLook>
															</IfGate>
															<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<StopMovement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</StopMovement>
															</EntityContextBarrier>
														</Parallel>
													</EntityContextElement>
												</EntityContextElement>
											</AddLinkElement>
										</IfGate>
									</EntityContextBarrier>
								</Then>
							</EntityContextCheck>
						</AnyDecorator>
					</IfCondition>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>