<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="situation_flutistController_checkCooldown" is_function="1">
    <Variables>
      <Variable name="cooldown" type="situation:flutist:cooldown" values="" isPersistent="0" form="single" />
      <Variable name="currentTime" type="_int64" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="controller" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="isCool" type="_bool" values="" isPersistent="0" form="single" requirementType="Out" />
      <Variable name="remainingCooldown" type="_int64" values="" isPersistent="0" form="single" requirementType="Out" optional="1" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <Expression expressions="$isCool = false" />
          <Selector>
            <Sequence>
              <GraphSearch Origin="$controller" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                <LinkTagFilter tag="&apos;situation_flutistController_cooldown&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$cooldown" />
              </GraphSearch>
              <GetTime TimeType="GameTime" OutVar="$currentTime" Delta="" />
              <IfElseCondition failOnCondition="false" condition="$currentTime &gt; $cooldown.timestamp" saveVersion="2">
                <Then canSkip="1">
                  <Expression expressions="$isCool = true" />
                </Then>
                <Else canSkip="1">
                  <Expression expressions="$remainingCooldown = $cooldown.timestamp - $currentTime" />
                </Else>
              </IfElseCondition>
            </Sequence>
            <Expression expressions="$isCool = true" />
          </Selector>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="cooldown" comment="" />
        <Variable name="currentTime" comment="" />
        <Variable name="controller" comment="" />
        <Variable name="isCool" comment="" />
        <Variable name="remainingCooldown" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
            <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </LinkTagFilter>
                </GraphSearch>
                <GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </GetTime>
                <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                  <OutputBreakpoints />
                  <Then>
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                  </Then>
                  <Else>
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                  </Else>
                </IfElseCondition>
              </Sequence>
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </Selector>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>