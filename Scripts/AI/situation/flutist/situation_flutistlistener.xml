<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="situation_flutistListener" is_function="0">
    <Variables>
      <Variable name="finishInterrupt" type="_bool" values="false" isPersistent="0" form="single" />
      <Variable name="flutist" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="foundPlace" type="_bool" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Expression expressions="$flutist = $__sit_roleHolders[&apos;flutistPlayer&apos;].id" />
      </OnInit>
      <Behavior canSkip="1">
        <IfCondition failOnCondition="false" condition="$flutist ~= $this.id">
          <AnyDecorator preset="crime_keepState">
            <IfGate atomic="false" condition="~$finishInterrupt" RunLogic="Halt">
              <Parallel successMode="Any" failureMode="Any">
                <Function_situation_audienceHelper graphSearchOrigin="$__area.id" foundPlace="$foundPlace" nodeLabel="34604341" />
                <IfGate atomic="false" condition="$foundPlace" RunLogic="Halt">
                  <ForceLook LookTarget="$flutist" DisableVariations="false">
                    <Sequence>
                      <Wait duration="&apos;5m&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                      <Expression expressions="$finishInterrupt = true" />
                    </Sequence>
                  </ForceLook>
                </IfGate>
                <EntityContextBarrier context="situation_flutist_player" target="$flutist" Negation="true" RunLogic="Halt">
                  <Success />
                </EntityContextBarrier>
              </Parallel>
            </IfGate>
          </AnyDecorator>
        </IfCondition>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="finishInterrupt" comment="" />
        <Variable name="flutist" comment="" />
        <Variable name="foundPlace" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Expression>
        </OnInit>
        <Behavior>
          <IfCondition hasInputBreakpoint="0" comment="There&apos;s a chance that one npc will be Player AND Listener, just exit this behavior if that happens" breakpointFlags="0">
            <OutputBreakpoints />
            <AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Function_situation_audienceHelper hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Function_situation_audienceHelper>
                  <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Wait>
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                      </Sequence>
                    </ForceLook>
                  </IfGate>
                  <EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Success>
                  </EntityContextBarrier>
                </Parallel>
              </IfGate>
            </AnyDecorator>
          </IfCondition>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>