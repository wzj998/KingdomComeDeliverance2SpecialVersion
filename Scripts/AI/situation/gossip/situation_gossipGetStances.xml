<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="situation_gossipGetStances" is_function="1">
    <Variables />
    <Parameters>
      <Variable name="npc1" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="npc1_stance" type="enum:stanceCategory" values="" isPersistent="0" form="single" requirementType="Out" />
      <Variable name="npc2" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="npc2_stance" type="enum:stanceCategory" values="" isPersistent="0" form="single" requirementType="Out" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <StanceCheck soul="$npc1" stance="standing" smartObject="" negate="false" failOnCondition="false" saveVersion="2">
            <Then canSkip="1">
              <Expression expressions="$npc1_stance = $enum:stanceCategory.standing" />
            </Then>
            <Else canSkip="1">
              <StanceCheck soul="$npc1" stance="sitting" smartObject="" negate="false" failOnCondition="false" saveVersion="2">
                <Then canSkip="1">
                  <Expression expressions="$npc1_stance = $enum:stanceCategory.sitting" />
                </Then>
                <Else canSkip="1">
                  <Expression expressions="$npc1_stance = $enum:stanceCategory.undefined" />
                </Else>
              </StanceCheck>
            </Else>
          </StanceCheck>
          <StanceCheck soul="$npc2" stance="standing" smartObject="" negate="false" failOnCondition="false" saveVersion="2">
            <Then canSkip="1">
              <Expression expressions="$npc2_stance = $enum:stanceCategory.standing" />
            </Then>
            <Else canSkip="1">
              <StanceCheck soul="$npc2" stance="sitting" smartObject="" negate="false" failOnCondition="false" saveVersion="2">
                <Then canSkip="1">
                  <Expression expressions="$npc2_stance = $enum:stanceCategory.sitting" />
                </Then>
                <Else canSkip="1">
                  <Expression expressions="$npc2_stance = $enum:stanceCategory.undefined" />
                </Else>
              </StanceCheck>
            </Else>
          </StanceCheck>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="npc1" comment="" />
        <Variable name="npc1_stance" comment="" />
        <Variable name="npc2" comment="" />
        <Variable name="npc2_stance" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="Only sitting and standing supported" breakpointFlags="0">
            <OutputBreakpoints />
            <StanceCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Then>
              <Else>
                <StanceCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                  <OutputBreakpoints />
                  <Then>
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                  </Then>
                  <Else>
                    <Expression hasInputBreakpoint="0" comment="Not supported" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                  </Else>
                </StanceCheck>
              </Else>
            </StanceCheck>
            <StanceCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Then>
              <Else>
                <StanceCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                  <OutputBreakpoints />
                  <Then>
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                  </Then>
                  <Else>
                    <Expression hasInputBreakpoint="0" comment="Not supported" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                  </Else>
                </StanceCheck>
              </Else>
            </StanceCheck>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>