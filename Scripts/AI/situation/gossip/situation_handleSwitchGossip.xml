<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="situation_handleSwitchGossip" is_function="1">
		<Variables>
			<Variable name="areMates" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="customSwitchTreeEntry" type="switch:customSwitchTreeEntry" values="" isPersistent="0" form="single" />
			<Variable name="dialogueContext" type="_float" values="" isPersistent="0" form="associative" />
			<Variable name="dialogueContextString" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="shouldExit" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="switchDialog" type="speech:switchDialog" values="" isPersistent="0" form="single" />
			<Variable name="switchGossip" type="situation:switchGossip" values="" isPersistent="0" form="single" />
			<Variable name="synchroEntity" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<While doFail="false" propagateChildFail="false" condition="true">
					<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$switchGossip" senderInfo="" inbox="&apos;situation_switchGossip&apos;" condition="" answerVar="">
						<EntityContext context="situation_runningGossip" target="$this.id">
							<LogToLabel Name="&apos;switch_gossip&apos;" Wuid="" Message="&apos;Switch gossip running&apos;">
								<Sequence>
									<Expression expressions="$synchroEntity = $switchGossip.initiator" />
									<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
										<Child canSkip="1">
											<Parallel successMode="Any" failureMode="Any">
												<IfElseCondition failOnCondition="false" condition="$switchGossip.initiator == $this.id" saveVersion="2">
													<Then canSkip="1">
														<EntityContextBarrier context="speech_switchDialogRunning" target="$switchGossip.initiator" Negation="true" RunLogic="KeepRunning">
															<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
																<Child canSkip="1">
																	<Sequence>
																		<AtomicDecorator>
																			<Sequence>
																				<Sequence>
																					<GetAreMates Npc1="$switchGossip.initiator" Npc2="$switchGossip.receiver" AreMates="$areMates" />
																					<Expression expressions="$dialogueContext[&apos;areMates&apos;] = ($areMates) ? 1 : 0" />
																					<Function_switch_serializeDialogueContext dialogContext="$dialogueContext" serializedString="$dialogueContextString" nodeLabel="36110143" />
																					<AddLink From="$synchroEntity" To="$synchroEntity" Tag="&apos;speech_switchDialog_dialogueContext&apos;" Data="$dialogueContextString" LinkOpHandleMode="OverWrite" />
																				</Sequence>
																				<Sequence>
																					<AddLink From="$synchroEntity" To="$switchGossip.initiator" Tag="&apos;speech_switchDialog_participant&apos;" Data="" LinkOpHandleMode="OverWrite" />
																					<AddLink From="$synchroEntity" To="$switchGossip.receiver" Tag="&apos;speech_switchDialog_participant&apos;" Data="" LinkOpHandleMode="OverWrite" />
																					<AddLink From="$switchGossip.initiator" To="$switchGossip.initiator" Tag="&apos;speech_switchDialog_participantMetarole&apos;" Data="&apos;GOSSIP&apos;" LinkOpHandleMode="OverWrite" />
																					<AddLink From="$switchGossip.receiver" To="$switchGossip.receiver" Tag="&apos;speech_switchDialog_participantMetarole&apos;" Data="&apos;GOSSIP&apos;" LinkOpHandleMode="OverWrite" />
																				</Sequence>
																				<Sequence>
																					<Expression expressions="$switchDialog.metarole = &apos;GOSSIP&apos; &#10;$switchDialog.ingameDialogType = $enum:speech_ingameDialogType.Ingame &#10;$switchDialog.repeatAfterSeconds = -1 &#10;$switchDialog.playDialogAnimations = false &#10;$switchDialog.maxScheduledPriority = 10 &#10;$switchDialog.context = &apos;&apos; &#10;$switchDialog.percievingPlayer = false &#10;$switchDialog.playerDistance = -1 &#10;$switchDialog.playerInArea = $__land &#10;$switchDialog.playerInDialog = false &#10;$switchDialog.initiator = $switchGossip.initiator" />
																					<AddLink From="$synchroEntity" To="$synchroEntity" Tag="&apos;speech_switchDialog&apos;" Data="$switchDialog" LinkOpHandleMode="OverWrite" />
																				</Sequence>
																				<Sequence>
																					<Expression expressions="$customSwitchTreeEntry.treeFilename = &apos;speech/switchDialog.xml&apos; &#10;$customSwitchTreeEntry.treeName = &apos;switchDialog&apos;" />
																					<AddLink From="$switchGossip.initiator" To="$synchroEntity" Tag="&apos;switch_customSwitchTree&apos;" Data="$customSwitchTreeEntry" LinkOpHandleMode="OverWrite" />
																					<AddLink From="$switchGossip.receiver" To="$synchroEntity" Tag="&apos;switch_customSwitchTree&apos;" Data="$customSwitchTreeEntry" LinkOpHandleMode="OverWrite" />
																				</Sequence>
																			</Sequence>
																		</AtomicDecorator>
																		<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																	</Sequence>
																</Child>
																<OnFail canSkip="1">
																	<AtomicDecorator>
																		<Sequence>
																			<RemoveLink From="$synchroEntity" To="$synchroEntity" Tag="&apos;speech_switchDialog_dialogueContext&apos;" LinkOpHandleMode="OverWrite" />
																			<RemoveLink From="$synchroEntity" To="$switchGossip.initiator" Tag="&apos;speech_switchDialog_participant&apos;" LinkOpHandleMode="OverWrite" />
																			<RemoveLink From="$synchroEntity" To="$switchGossip.receiver" Tag="&apos;speech_switchDialog_participant&apos;" LinkOpHandleMode="OverWrite" />
																			<RemoveLink From="$switchGossip.initiator" To="$synchroEntity" Tag="&apos;switch_customSwitchTree&apos;" LinkOpHandleMode="OverWrite" />
																			<RemoveLink From="$switchGossip.receiver" To="$synchroEntity" Tag="&apos;switch_customSwitchTree&apos;" LinkOpHandleMode="OverWrite" />
																			<RemoveLink From="$synchroEntity" To="$synchroEntity" Tag="&apos;speech_switchDialog&apos;" LinkOpHandleMode="OverWrite" />
																			<RemoveLink From="$switchGossip.initiator" To="$switchGossip.initiator" Tag="&apos;speech_switchDialog_participantMetarole&apos;" LinkOpHandleMode="OverWrite" />
																			<RemoveLink From="$switchGossip.receiver" To="$switchGossip.receiver" Tag="&apos;speech_switchDialog_participantMetarole&apos;" LinkOpHandleMode="OverWrite" />
																		</Sequence>
																	</AtomicDecorator>
																</OnFail>
															</FuseBox>
														</EntityContextBarrier>
													</Then>
													<Else canSkip="1">
														<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
													</Else>
												</IfElseCondition>
												<DistanceGate Origin="$switchGossip.initiator" ReferencePt="$switchGossip.receiver" Low="$data:script_param[&apos;situation_switchGossip_maxDistance&apos;].value" High="$data:script_param[&apos;situation_switchGossip_maxDistance&apos;].value" Negation="true" OpenInMiddle="false" RunLogic="KeepRunning">
													<Success />
												</DistanceGate>
												<Parallel successMode="Any" failureMode="Any">
													<EntityContextBarrier context="situation_suppressGossipParticipation" target="$switchGossip.initiator" Negation="false" RunLogic="KeepRunning">
														<Success />
													</EntityContextBarrier>
													<EntityContextBarrier context="situation_suppressGossipParticipation" target="$switchGossip.receiver" Negation="false" RunLogic="KeepRunning">
														<Success />
													</EntityContextBarrier>
												</Parallel>
												<Parallel successMode="Any" failureMode="Any">
													<EntityContextBarrier context="crime_sleeping" target="$switchGossip.initiator" Negation="false" RunLogic="KeepRunning">
														<Success />
													</EntityContextBarrier>
													<EntityContextBarrier context="crime_sleeping" target="$switchGossip.receiver" Negation="false" RunLogic="KeepRunning">
														<Success />
													</EntityContextBarrier>
												</Parallel>
												<Parallel successMode="Any" failureMode="Any">
													<EntityContextBarrier context="crime_interrupt" target="$switchGossip.initiator" Negation="false" RunLogic="KeepRunning">
														<Success />
													</EntityContextBarrier>
													<EntityContextBarrier context="crime_interrupt" target="$switchGossip.receiver" Negation="false" RunLogic="KeepRunning">
														<Success />
													</EntityContextBarrier>
												</Parallel>
												<Parallel successMode="Any" failureMode="Any">
													<EntityContextBarrier context="speech_switchDialogRunning" target="$switchGossip.initiator" Negation="true" RunLogic="KeepRunning">
														<EntityContextBarrier context="speech_switchDialogRunning" target="$switchGossip.initiator" Negation="false" RunLogic="KeepRunning">
															<EntityContextBarrier context="speech_switchDialogRunning" target="$switchGossip.initiator" Negation="true" RunLogic="KeepRunning">
																<Success />
															</EntityContextBarrier>
														</EntityContextBarrier>
													</EntityContextBarrier>
													<EntityContextBarrier context="speech_switchDialogRunning" target="$switchGossip.receiver" Negation="true" RunLogic="KeepRunning">
														<EntityContextBarrier context="speech_switchDialogRunning" target="$switchGossip.receiver" Negation="false" RunLogic="KeepRunning">
															<EntityContextBarrier context="speech_switchDialogRunning" target="$switchGossip.receiver" Negation="true" RunLogic="KeepRunning">
																<Success />
															</EntityContextBarrier>
														</EntityContextBarrier>
													</EntityContextBarrier>
												</Parallel>
												<Wait duration="&apos;5m&apos;" timeType="GameTime" doFail="false" variation="" />
											</Parallel>
										</Child>
										<OnFail canSkip="1">
											<ClearInbox inbox="&apos;situation_switchGossip&apos;" type="" condition="" />
										</OnFail>
									</FuseBox>
								</Sequence>
							</LogToLabel>
						</EntityContext>
					</ProcessMessage>
				</While>
			</Behavior>
		</Root>
		<ForestContainer>
			<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
				<Child canSkip="1">
					<Sequence>
						<Expression expressions="$shouldExit = false" />
						<IfGate atomic="false" condition="~$shouldExit" RunLogic="Halt">
							<Sequence>
								<AtomicDecorator>
									<Sequence>
										<SetExternalLock LockManagerType="Global" Locked="true" LockName="&apos;$switchGossip.area&apos;" />
										<Expression expressions="$customSwitchTreeEntry.treeFilename = &apos;speech/switchDialog.xml&apos; &#10;$customSwitchTreeEntry.treeName = &apos;switchDialog&apos;" />
										<AddLink From="$__land" To="$this.id" Tag="&apos;speech_switchDialog_participant&apos;" Data="" LinkOpHandleMode="OverWrite" />
										<AddLink From="$this.id" To="$__land" Tag="&apos;switch_customSwitchTree&apos;" Data="$customSwitchTreeEntry" LinkOpHandleMode="OverWrite" />
									</Sequence>
								</AtomicDecorator>
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</IfGate>
					</Sequence>
				</Child>
				<OnFail canSkip="1">
					<AtomicDecorator>
						<Sequence>
							<SetExternalLock LockManagerType="Global" Locked="false" LockName="&apos;$switchGossip.area&apos;" />
							<RemoveLink From="$this.id" To="$__land" Tag="&apos;speech_switchDialog_participant&apos;" LinkOpHandleMode="OverWrite" />
							<RemoveLink From="$this.id" To="$__land" Tag="&apos;switch_customSwitchTree&apos;" LinkOpHandleMode="OverWrite" />
						</Sequence>
					</AtomicDecorator>
				</OnFail>
			</FuseBox>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="areMates" comment="" />
				<Variable name="customSwitchTreeEntry" comment="" />
				<Variable name="dialogueContext" comment="" />
				<Variable name="dialogueContextString" comment="" />
				<Variable name="shouldExit" comment="" />
				<Variable name="switchDialog" comment="" />
				<Variable name="switchGossip" comment="" />
				<Variable name="synchroEntity" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child>
												<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<FuseBox hasInputBreakpoint="0" comment="Gets killed from above, then cleanup" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Child>
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<GetAreMates hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</GetAreMates>
																						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Expression>
																						<Function_switch_serializeDialogueContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Function_switch_serializeDialogueContext>
																						<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</AddLink>
																					</Sequence>
																					<Sequence hasInputBreakpoint="0" comment="Participants" breakpointFlags="0">
																						<OutputBreakpoints />
																						<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</AddLink>
																						<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</AddLink>
																						<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</AddLink>
																						<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</AddLink>
																					</Sequence>
																					<Sequence hasInputBreakpoint="0" comment="Dialog data" breakpointFlags="0">
																						<OutputBreakpoints />
																						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Expression>
																						<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</AddLink>
																					</Sequence>
																					<Sequence hasInputBreakpoint="0" comment="Custom switch tree" breakpointFlags="0">
																						<OutputBreakpoints />
																						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Expression>
																						<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</AddLink>
																						<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</AddLink>
																					</Sequence>
																				</Sequence>
																			</AtomicDecorator>
																			<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Wait>
																		</Sequence>
																	</Child>
																	<OnFail>
																		<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Sequence hasInputBreakpoint="0" comment="Cleanup" breakpointFlags="0">
																				<OutputBreakpoints />
																				<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</RemoveLink>
																				<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</RemoveLink>
																				<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</RemoveLink>
																				<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</RemoveLink>
																				<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</RemoveLink>
																				<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</RemoveLink>
																				<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</RemoveLink>
																				<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</RemoveLink>
																			</Sequence>
																		</AtomicDecorator>
																	</OnFail>
																</FuseBox>
															</EntityContextBarrier>
														</Then>
														<Else>
															<Wait hasInputBreakpoint="0" comment="As a receiver just wait" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Else>
													</IfElseCondition>
													<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</DistanceGate>
													<Parallel hasInputBreakpoint="0" comment="One of the participants needs to suppress" breakpointFlags="0">
														<OutputBreakpoints />
														<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</EntityContextBarrier>
														<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</EntityContextBarrier>
													</Parallel>
													<Parallel hasInputBreakpoint="0" comment="One of the participants wants to sleep" breakpointFlags="0">
														<OutputBreakpoints />
														<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</EntityContextBarrier>
														<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</EntityContextBarrier>
													</Parallel>
													<Parallel hasInputBreakpoint="0" comment="One of the participants got into an interrupt" breakpointFlags="0">
														<OutputBreakpoints />
														<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</EntityContextBarrier>
														<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</EntityContextBarrier>
													</Parallel>
													<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Success>
																</EntityContextBarrier>
															</EntityContextBarrier>
														</EntityContextBarrier>
														<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Success>
																</EntityContextBarrier>
															</EntityContextBarrier>
														</EntityContextBarrier>
													</Parallel>
													<Wait hasInputBreakpoint="0" comment="Failsafe" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Parallel>
											</Child>
											<OnFail>
												<ClearInbox hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ClearInbox>
											</OnFail>
										</FuseBox>
									</Sequence>
								</LogToLabel>
							</EntityContext>
						</ProcessMessage>
					</While>
				</Behavior>
			</Root>
			<Forest>
				<FuseBox editorPosX="3580" editorPosY="-1150" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Child>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</SetExternalLock>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AddLink>
											<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AddLink>
										</Sequence>
									</AtomicDecorator>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</IfGate>
						</Sequence>
					</Child>
					<OnFail>
						<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SetExternalLock>
								<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</RemoveLink>
								<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</RemoveLink>
							</Sequence>
						</AtomicDecorator>
					</OnFail>
				</FuseBox>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>