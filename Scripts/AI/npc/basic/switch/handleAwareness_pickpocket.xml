<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_handleAwareness_pickpocket" is_function="1">
		<Variables>
			<Variable name="metaroleOverride" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="pickpocketIgnored" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="stimulus" type="switch:stimulus:pickpocket" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="reactionIntermediateData" type="switch:reactionIntermediateData" values="" isPersistent="0" form="single" requirementType="Reference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Switch>
					<EntityContextCheck context="crime_ignorePickpocketing" target="" saveVersion="2">
						<Then canSkip="1">
							<Success />
						</Then>
					</EntityContextCheck>
					<EntityContextCheck context="crime_bff" target="" saveVersion="2">
						<Then canSkip="1">
							<Function_crime_addBffIntermediateBarkData corpse="" isCorpse="false" isViolent="false" reactionIntermediateData="$reactionIntermediateData" nodeLabel="49210782" />
						</Then>
					</EntityContextCheck>
					<DefaultBranch>
						<Sequence>
							<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;pickpocketing&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;pickpocketing&apos;" prune="true" negprune="unknown" Parent="" Child="$stimulus.pivot" Data="" />
							</GraphSearch>
							<EntityContextCheck context="crime_ignoredPickpocket" target="$stimulus.pivot" saveVersion="2">
								<Then canSkip="1">
									<Expression expressions="$pickpocketIgnored = true" />
								</Then>
								<Else canSkip="1">
									<RelationContextCheck context="crime_ignorePickpocket" from="$this.id" to="$stimulus.pivot" saveVersion="2">
										<Then canSkip="1">
											<Expression expressions="$pickpocketIgnored = true" />
										</Then>
										<Else canSkip="1">
											<CheckRelationshipInterval_SoulToSoul TargetSoul="$stimulus.pivot" Soul="$this.id" Flag="friend" saveVersion="2">
												<Then canSkip="1">
													<Function_switch_handleStimulusPickpocket stimulus="$stimulus" nodeLabel="32272008" />
												</Then>
											</CheckRelationshipInterval_SoulToSoul>
										</Else>
									</RelationContextCheck>
								</Else>
							</EntityContextCheck>
							<IfCondition failOnCondition="false" condition="$pickpocketIgnored">
								<SuppressFailure>
									<Sequence>
										<GraphSearch Origin="$stimulus.pivot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;crime_pickpocketBarkOverride&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$metaroleOverride" />
										</GraphSearch>
										<IfCondition failOnCondition="false" condition="$reactionIntermediateData.barkData.priority &lt; $data:script_param[&apos;crime_barkReactionPriority_ignoredPickpocket&apos;].value">
											<Sequence>
												<ReinitVariable variable="$reactionIntermediateData" />
												<Expression expressions="$reactionIntermediateData.barkData.metarole = $metaroleOverride &#10;$reactionIntermediateData.barkData.barkKind = $enum:crime_barkReactionKind.ignoredPickpocket &#10;$reactionIntermediateData.barkData.priority = $data:script_param[&apos;crime_barkReactionPriority_ignoredPickpocket&apos;].value &#10;$reactionIntermediateData.barkData.genderData.isGenderSpecific = false" />
											</Sequence>
										</IfCondition>
									</Sequence>
								</SuppressFailure>
							</IfCondition>
						</Sequence>
					</DefaultBranch>
				</Switch>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="metaroleOverride" comment="" />
				<Variable name="pickpocketIgnored" comment="" />
				<Variable name="stimulus" comment="" />
				<Variable name="reactionIntermediateData" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-590" editorPosY="-20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Then>
						</EntityContextCheck>
						<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Function_crime_addBffIntermediateBarkData hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_addBffIntermediateBarkData>
							</Then>
						</EntityContextCheck>
						<DefaultBranch>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Then>
									<Else>
										<RelationContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Then>
											<Else>
												<CheckRelationshipInterval_SoulToSoul hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Function_switch_handleStimulusPickpocket hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_switch_handleStimulusPickpocket>
													</Then>
												</CheckRelationshipInterval_SoulToSoul>
											</Else>
										</RelationContextCheck>
									</Else>
								</EntityContextCheck>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
											</GraphSearch>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ReinitVariable>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Sequence>
											</IfCondition>
										</Sequence>
									</SuppressFailure>
								</IfCondition>
							</Sequence>
						</DefaultBranch>
					</Switch>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>