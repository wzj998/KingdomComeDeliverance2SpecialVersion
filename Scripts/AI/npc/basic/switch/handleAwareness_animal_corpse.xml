<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_handleAwareness_animal_corpse" is_function="1">
		<Variables>
			<Variable name="corpseData" type="crime:corpseData" values="" isPersistent="0" form="single" />
			<Variable name="ignoreLastHit" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="lastHitByPlayer" type="crime:lastHitByPlayer" values="" isPersistent="0" form="single" />
			<Variable name="stimulus" type="switch:stimulus:animalCorpse" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="corpse" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextCheck context="crime_ignoreCorpses" target="" saveVersion="2">
					<Then canSkip="1">
						<IgnorePerception PerceptorObject="$this.id" PerceptibleObject="$corpse" IgnoreFor="&apos;-1&apos;" TimerType="GameTime" Uninterruptible="false" Persistent="true" />
					</Then>
					<Else canSkip="1">
						<EntityContextCheck context="crime_ignoredCorpse" target="$corpse" saveVersion="2">
							<Then canSkip="1">
								<IgnorePerception PerceptorObject="$this.id" PerceptibleObject="$corpse" IgnoreFor="&apos;-1&apos;" TimerType="GameTime" Uninterruptible="false" Persistent="true" />
							</Then>
							<Else canSkip="1">
								<EntityContextCheck context="crime_animal_legalToKill" target="$corpse" saveVersion="2">
									<Then canSkip="1">
										<IgnorePerception PerceptorObject="$this.id" PerceptibleObject="$corpse" IgnoreFor="&apos;-1&apos;" TimerType="GameTime" Uninterruptible="false" Persistent="true" />
									</Then>
									<Else canSkip="1">
										<RelationContextCheck context="crime_ignoreCorpse" from="$this.id" to="$corpse" saveVersion="2">
											<Then canSkip="1">
												<IgnorePerception PerceptorObject="$this.id" PerceptibleObject="$corpse" IgnoreFor="&apos;-1&apos;" TimerType="GameTime" Uninterruptible="false" Persistent="true" />
											</Then>
											<Else canSkip="1">
												<Sequence>
													<SuppressFailure>
														<GraphSearch Origin="$corpse" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;switch_corpse&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<LinkTagFilter tag="&apos;switch_corpse&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$corpseData" />
														</GraphSearch>
													</SuppressFailure>
													<SuppressFailure>
														<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="&apos;crime_lastHitByPlayer&apos;" SubGraph="&apos;crime_lastHitByPlayer&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<WUIDFilter WUID="$corpse" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
															<LinkTagFilter tag="&apos;crime_lastHitByPlayer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
															<Datalyzer Tag="&apos;crime_lastHitByPlayer&apos;" Quantifiers="Exists" Parent="" Child="" Data="$lastHitByPlayer" saveVersion="2" />
														</GraphSearch>
													</SuppressFailure>
													<IfCondition failOnCondition="false" condition="$corpseData.state &lt; $enum:corpseState.investigated">
														<Sequence>
															<Sequence>
																<Expression expressions="$corpseData.state = $enum:corpseState.discovered" />
																<AddLink From="$corpse" To="$corpse" Tag="&apos;switch_corpse&apos;" Data="$corpseData" LinkOpHandleMode="OverWrite" />
															</Sequence>
															<EntityContextCheck context="crime_isWildAnimal" target="$corpse" saveVersion="2">
																<Then canSkip="1">
																	<Expression expressions="$ignoreLastHit = true" />
																</Then>
															</EntityContextCheck>
															<Expression expressions="$stimulus.playerCaused = $lastHitByPlayer.time &gt; 0 | $ignoreLastHit" />
															<Switch>
																<EntityContextCheck context="switch_recognitionLevel_I" target="" saveVersion="2">
																	<Then canSkip="1">
																		<Function_stealth_recognitionState_I_reaction target="$corpse" nodeLabel="58217780" />
																	</Then>
																</EntityContextCheck>
																<EntityContextCheck context="switch_recognitionLevel_II" target="" saveVersion="2">
																	<Then canSkip="1">
																		<Function_stealth_recognitionState_II_reaction stimulusKind="$enum:crime_stimulusKind.animalCorpse" target="$corpse" nodeLabel="52739805" />
																	</Then>
																</EntityContextCheck>
																<DefaultBranch>
																	<Sequence>
																		<IgnorePerception PerceptorObject="$this.id" PerceptibleObject="$corpse" IgnoreFor="&apos;-1&apos;" TimerType="GameTime" Uninterruptible="false" Persistent="true" />
																		<Expression expressions="$stimulus.corpse = $corpse" />
																		<Function_switch_handleStimulusAnimalCorpse stimulus="$stimulus" nodeLabel="69698292" />
																	</Sequence>
																</DefaultBranch>
															</Switch>
														</Sequence>
													</IfCondition>
													<Function_crime_handleCloseAnimalCorpses wuidToSearchFrom="$corpse" nodeLabel="53379285" />
												</Sequence>
											</Else>
										</RelationContextCheck>
									</Else>
								</EntityContextCheck>
							</Else>
						</EntityContextCheck>
					</Else>
				</EntityContextCheck>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<EntityContextCheck context="crime_isDomesticAnimal" target="$corpse" saveVersion="2">
					<Then canSkip="1">
						<Sequence>
							<Expression expressions="$stimulus.culprit = $__player &#10;$stimulus.victim = $corpse &#10;$stimulus.animalKind = $enum:crime_animalKind.domestic &#10;$stimulus.animalAbuseKind = $enum:crime_animalAbuseKind.murder &#10; &#10;$hotEntity.reason = $enum:switch_hotEntityReason.murderAnimal" />
						</Sequence>
					</Then>
				</EntityContextCheck>
				<EntityContextCheck context="crime_isWildAnimal" target="$corpse" saveVersion="2">
					<Then canSkip="1">
						<EntityContextCheck context="crime_isGameKeeper" target="" saveVersion="2">
							<Then canSkip="1">
								<Sequence>
									<Expression expressions="$stimulus.culprit = $__player &#10;$stimulus.victim = $corpse &#10;$stimulus.animalKind = $enum:crime_animalKind.wild &#10;$stimulus.animalAbuseKind = $enum:crime_animalAbuseKind.murder &#10; &#10;$hotEntity.reason = $enum:switch_hotEntityReason.poaching" />
									<Sequence>
										<Expression expressions="$followUpHaulGameMeatData.active = true &#10;$followUpHaulGameMeatData.corpse = $corpse &#10;$followUpHaulGameMeatData.alreadyTookMeat = false" />
										<AddLink From="$this.id" To="$corpse" Tag="&apos;crime_followUpBehavior_haulGameMeat&apos;" Data="$followUpHaulGameMeatData" LinkOpHandleMode="OverWrite" />
									</Sequence>
								</Sequence>
							</Then>
						</EntityContextCheck>
					</Then>
				</EntityContextCheck>
				<HasSeenPlayer NPC="" FullyAwareOnly="false" saveVersion="2">
					<Then canSkip="1">
						<Function_switch_handleStimulusAnimalAbuse stimulus="$stimulus" nodeLabel="56458958" />
					</Then>
					<Else canSkip="1">
						<Switch>
							<EntityContextCheck context="switch_recognitionLevel_I" target="" saveVersion="2">
								<Then canSkip="1">
									<Function_stealth_recognitionState_I_reaction target="$stimulus.culprit" nodeLabel="12474437" />
								</Then>
							</EntityContextCheck>
							<EntityContextCheck context="switch_recognitionLevel_II" target="" saveVersion="2">
								<Then canSkip="1">
									<Function_stealth_recognitionState_II_reaction stimulusKind="$enum:crime_stimulusKind.animalAbuse" target="$stimulus.culprit" nodeLabel="88445433" />
								</Then>
							</EntityContextCheck>
							<DefaultBranch>
								<Sequence>
									<Expression expressions="$hotEntity.stimulusAnimalAbuse = $stimulus" />
									<Function_switch_addHotEntity data="$hotEntity" entity="$stimulus.culprit" expiration="20" nodeLabel="24783477" />
									<GetLastNavmeshPosition Target="$corpse" OutPos="$scanDirection" TrackingMode="NPCPos" />
									<Function_callInterrupt_scan corpseState="$enum:corpseState.undiscovered" ignorePriority="false" information="" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" scanDirection="$scanDirection" source="$enum:crime_source.direct" stimulusAnimalAbuse="$stimulus" stimulusKind="$enum:crime_stimulusKind.animalAbuse" stimulusMissingAnimal="" stimulusShooter="" nodeLabel="62892206" />
								</Sequence>
							</DefaultBranch>
						</Switch>
					</Else>
				</HasSeenPlayer>
			</Sequence>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="corpseData" comment="" />
				<Variable name="ignoreLastHit" comment="" />
				<Variable name="lastHitByPlayer" comment="" />
				<Variable name="stimulus" comment="" />
				<Variable name="corpse" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<IgnorePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</IgnorePerception>
						</Then>
						<Else>
							<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<IgnorePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</IgnorePerception>
								</Then>
								<Else>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<IgnorePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</IgnorePerception>
										</Then>
										<Else>
											<RelationContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<IgnorePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</IgnorePerception>
												</Then>
												<Else>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
															</GraphSearch>
														</SuppressFailure>
														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GraphSearch hasInputBreakpoint="0" comment="Retrieve lastHit data" breakpointFlags="0">
																<OutputBreakpoints />
																<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</WUIDFilter>
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
																<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																</Datalyzer>
															</GraphSearch>
														</SuppressFailure>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																	<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</AddLink>
																</Sequence>
																<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Then>
																		<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Expression>
																	</Then>
																</EntityContextCheck>
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
																<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																		<Then>
																			<Function_stealth_recognitionState_I_reaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Function_stealth_recognitionState_I_reaction>
																		</Then>
																	</EntityContextCheck>
																	<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																		<Then>
																			<Function_stealth_recognitionState_II_reaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Function_stealth_recognitionState_II_reaction>
																		</Then>
																	</EntityContextCheck>
																	<DefaultBranch>
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<IgnorePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</IgnorePerception>
																			<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Expression>
																			<Function_switch_handleStimulusAnimalCorpse hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Function_switch_handleStimulusAnimalCorpse>
																		</Sequence>
																	</DefaultBranch>
																</Switch>
															</Sequence>
														</IfCondition>
														<Function_crime_handleCloseAnimalCorpses hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_crime_handleCloseAnimalCorpses>
													</Sequence>
												</Else>
											</RelationContextCheck>
										</Else>
									</EntityContextCheck>
								</Else>
							</EntityContextCheck>
						</Else>
					</EntityContextCheck>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="3520" editorPosY="-540" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
						</Then>
					</EntityContextCheck>
					<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AddLink>
										</Sequence>
									</Sequence>
								</Then>
							</EntityContextCheck>
						</Then>
					</EntityContextCheck>
					<HasSeenPlayer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<Function_switch_handleStimulusAnimalAbuse hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_switch_handleStimulusAnimalAbuse>
						</Then>
						<Else>
							<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Function_stealth_recognitionState_I_reaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_stealth_recognitionState_I_reaction>
									</Then>
								</EntityContextCheck>
								<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Function_stealth_recognitionState_II_reaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_stealth_recognitionState_II_reaction>
									</Then>
								</EntityContextCheck>
								<DefaultBranch>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<Function_switch_addHotEntity hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_switch_addHotEntity>
										<GetLastNavmeshPosition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetLastNavmeshPosition>
										<Function_callInterrupt_scan hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_callInterrupt_scan>
									</Sequence>
								</DefaultBranch>
							</Switch>
						</Else>
					</HasSeenPlayer>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>