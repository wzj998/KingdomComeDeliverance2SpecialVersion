<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="switch_handleOnSoulRevived" is_function="1">
    <Variables>
      <Variable name="informationCorpse" type="information" values="" isPersistent="0" form="single" />
      <Variable name="informationMurder" type="information" values="" isPersistent="0" form="single" />
      <Variable name="reactors" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="reactors_value" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="stopReactionData" type="switch:interruptData:stopReaction" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="onSoulRevived" type="rpgModule:onSoulRevived" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <Sequence>
            <Expression expressions="$informationCorpse.perceivedWuid = $this.id &#10;$informationCorpse.label = &apos;corpse&apos;" />
            <Expression expressions="$informationMurder.perceivedWuid = $this.id &#10;$informationMurder.label = &apos;murder&apos;" />
            <SuppressFailure>
              <Sequence>
                <GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                  <LinkTagFilter tag="&apos;crime_reactor&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
                  <LinkDataFilter tag="&apos;crime_reactor&apos;" condition="( &#10;$__link_crime_reactor.information.label == $informationCorpse.label &amp; &#10;$__link_crime_reactor.information.perceivedWuid == $informationCorpse.perceivedWuid &#10;) &#10; &#10;| &#10; &#10;( &#10;$__link_crime_reactor.information.label == $informationMurder.label &amp; &#10;$__link_crime_reactor.information.perceivedWuid == $informationMurder.perceivedWuid &#10;)" prune="true" negprune="unknown" Parent="" Child="" Data="" />
                  <Nodalyzer Quantifiers="ForAll" Parent="" Child="$reactors" saveVersion="2" />
                </GraphSearch>
                <IfElseCondition failOnCondition="false" condition="#reactors &gt; 0" saveVersion="2">
                  <Then canSkip="1">
                    <Sequence>
                      <Expression expressions="$stopReactionData.reactorCount = #reactors &#10;$stopReactionData.forgetCrimeInfo = false" />
                      <Selector>
                        <InstantMultiSendMessageToNPC targets="$reactors" successMode="Any" failureMode="Any" variable="$stopReactionData" />
                        <ForEach startIndex="0" step="1" array="$reactors" iterator="" value="$reactors_value" break="">
                          <InstantSendMessageToNPC target="$reactors_value" variable="$stopReactionData" />
                        </ForEach>
                        <ErrorNode Message="&apos;ERROR: Stop crime module has failed. NPC: $reactors_value not found.&apos;" />
                      </Selector>
                    </Sequence>
                  </Then>
                </IfElseCondition>
              </Sequence>
            </SuppressFailure>
            <SuppressFailure>
              <DestroyInformationCompletely Information="$informationCorpse" />
            </SuppressFailure>
            <SuppressFailure>
              <DestroyInformationCompletely Information="$informationMurder" />
            </SuppressFailure>
          </Sequence>
          <Function_switch_forwardOnSoulRevived nodeLabel="35535027" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="informationCorpse" comment="" />
        <Variable name="informationMurder" comment="" />
        <Variable name="reactors" comment="" />
        <Variable name="reactors_value" comment="" />
        <Variable name="stopReactionData" comment="" />
        <Variable name="onSoulRevived" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
              <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </LinkTagFilter>
                    <LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </LinkDataFilter>
                    <Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                      <OutputBreakpoints />
                    </Nodalyzer>
                  </GraphSearch>
                  <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                        <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <InstantMultiSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </InstantMultiSendMessageToNPC>
                          <ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </InstantSendMessageToNPC>
                          </ForEach>
                          <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </ErrorNode>
                        </Selector>
                      </Sequence>
                    </Then>
                  </IfElseCondition>
                </Sequence>
              </SuppressFailure>
              <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <DestroyInformationCompletely hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </DestroyInformationCompletely>
              </SuppressFailure>
              <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <DestroyInformationCompletely hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </DestroyInformationCompletely>
              </SuppressFailure>
            </Sequence>
            <Function_switch_forwardOnSoulRevived hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Function_switch_forwardOnSoulRevived>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>