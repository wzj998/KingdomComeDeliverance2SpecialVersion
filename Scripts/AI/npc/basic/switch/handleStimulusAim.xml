<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_handleStimulusAim" is_function="1">
		<Variables>
			<Variable name="assaultData" type="crime:assaultData" values="" isPersistent="0" form="single" />
			<Variable name="ignorePriority" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" />
			<Variable name="initiator" type="enum:switch_interruptInitiator" values="$enum:switch_interruptInitiator.switch" isPersistent="0" form="single" />
			<Variable name="source" type="enum:crime_source" values="$enum:crime_source.personal" isPersistent="0" form="single" />
			<Variable name="stimulusKind" type="enum:crime_stimulusKind" values="$enum:crime_stimulusKind.aim" isPersistent="0" form="single" />
			<Variable name="trespassInformation" type="information" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="stimulus" type="switch:stimulus:aim" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<EntityContextCheck context="crime_stimulusInitiatedByScheduler" target="" saveVersion="2">
						<Then canSkip="1">
							<Expression expressions="$ignorePriority = true &#10;$initiator = $enum:switch_interruptInitiator.scheduler" />
						</Then>
					</EntityContextCheck>
					<Switch>
						<EntityContextCheck context="switch_recognitionLevel_I" target="" saveVersion="2">
							<Then canSkip="1">
								<Success />
							</Then>
						</EntityContextCheck>
						<EntityContextCheck context="switch_recognitionLevel_II" target="" saveVersion="2">
							<Then canSkip="1">
								<Success />
							</Then>
						</EntityContextCheck>
						<DefaultBranch>
							<AtomicDecorator>
								<Sequence>
									<CreateCombatInformation Victim="$this.id" AttackKind="$enum:crime_attackKind.missile" DirectHit="false" AddConfiscation="false" Information="$information" />
									<Function_crime_addEyeWitness information="$information" npc="$this.id" nodeLabel="48898454" />
									<Function_crime_assessTrespass observer="" information="$trespassInformation" nodeLabel="91865174" />
								</Sequence>
							</AtomicDecorator>
						</DefaultBranch>
					</Switch>
					<CallDecorator_crime_chooseReaction>
						<Subtree canSkip="1">
							<ChooseReaction Information="$information" ReactionNpc="$__player" SkirmishDecisionReason="Perception" Source="$source" StimulusKind="$stimulusKind" />
						</Subtree>
						<Attack canSkip="1">
							<CallbackEventCatch_empty>
								<Function_callInterrupt_attack alreadyCriminal="false" assaultData="$assaultData" defenceMode="false" escalatedFromFailedSurrender="false" freshlyAttributedCrime="false" ignorePriority="$ignorePriority" information="$information" initiator="$initiator" previousReaction="$enum:crime_reactionKind.unknown" priority="160" questBehavior="false" relationOverride="true" stimulusKind="$stimulusKind" target="$__player" nodeLabel="22961696" />
							</CallbackEventCatch_empty>
						</Attack>
						<Arrest canSkip="1">
							<CallbackEventCatch_empty>
								<Function_callInterrupt_arrest alreadyCriminal="false" assaultData="$assaultData" crimeSeen="true" freshlyAttributedCrime="false" ignorePriority="$ignorePriority" information="$information" initiator="$initiator" previousReaction="$enum:crime_reactionKind.unknown" source="$source" stimulusKind="$stimulusKind" trespassingRepeatedly="false" nodeLabel="77169663" />
							</CallbackEventCatch_empty>
						</Arrest>
						<LookAround canSkip="1">
							<CallbackEventCatch_empty>
								<ErrorNode Message="&apos;Unhandled behavior \&apos;LookAround\&apos; for stimulus: $stimulusKind!&apos;" />
							</CallbackEventCatch_empty>
						</LookAround>
						<Flee canSkip="1">
							<CallbackEventCatch_fleeData>
								<Sequence>
									<Expression expressions="$ignorePriority = $ignoreScheduledPriority | $ignorePriority" />
									<Function_callInterrupt_flee alreadyCriminal="false" assaultData="$assaultData" corpseState="$enum:corpseState.undiscovered" freshlyAttributedCrime="false" ignorePriority="$ignorePriority" information="$information" initiator="$initiator" isIndifferent="false" leaveLevel="false" mercyDialogueResult="$enum:crime_mercyDialogueResult.unknown" previousReaction="$enum:crime_reactionKind.unknown" priority="135" source="$source" stimulusKind="$stimulusKind" target="$__player" nodeLabel="35779790" />
								</Sequence>
							</CallbackEventCatch_fleeData>
						</Flee>
						<ReactionToRecognitionState_I canSkip="1">
							<CallbackEventCatch_empty>
								<Function_stealth_recognitionState_I_reaction target="$__player" nodeLabel="65347479" />
							</CallbackEventCatch_empty>
						</ReactionToRecognitionState_I>
						<ReactionToRecognitionState_II canSkip="1">
							<CallbackEventCatch_empty>
								<Function_stealth_recognitionState_II_reaction stimulusKind="$enum:crime_stimulusKind.aim" target="$__player" nodeLabel="44990000" />
							</CallbackEventCatch_empty>
						</ReactionToRecognitionState_II>
						<Report canSkip="1">
							<CallbackEventCatch_reportData>
								<Sequence>
									<Expression expressions="$ignorePriority = $ignoreScheduledPriority | $ignorePriority" />
									<Function_callInterrupt_report alreadyCriminal="false" assaultData="$assaultData" corpseState="$enum:corpseState.undiscovered" disableDetectedIcon="false" disableEmitting="false" freshlyAttributedCrime="false" ignorePriority="$ignorePriority" information="$information" initiator="$initiator" movementSpeed="$enum:movementSpeed.sprint" previousReaction="$enum:crime_reactionKind.unknown" reportDestination="$destination" reportDestinationType="$destinationType" source="$source" stimulusKind="$stimulusKind" nodeLabel="64209765" />
								</Sequence>
							</CallbackEventCatch_reportData>
						</Report>
						<Scan canSkip="1">
							<CallbackEventCatch_empty>
								<ErrorNode Message="&apos;[$this.name;] Unhandled behavior \&apos;Scan\&apos; for stimulus: $stimulusKind!&apos;" />
							</CallbackEventCatch_empty>
						</Scan>
						<Selfhelp canSkip="1">
							<CallbackEventCatch_empty>
								<Function_callInterrupt_selfhelp alreadyCriminal="false" assaultData="" freshlyAttributedCrime="false" ignorePriority="$ignorePriority" information="$information" initiator="$initiator" previousReaction="$enum:crime_reactionKind.unknown" source="$source" stimulusKind="$stimulusKind" nodeLabel="19116868" />
							</CallbackEventCatch_empty>
						</Selfhelp>
						<Watch canSkip="1">
							<CallbackEventCatch_empty>
								<ErrorNode Message="&apos;Unhandled behavior \&apos;Watch\&apos; for stimulus: $stimulusKind!&apos;" />
							</CallbackEventCatch_empty>
						</Watch>
					</CallDecorator_crime_chooseReaction>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="assaultData" comment="" />
				<Variable name="ignorePriority" comment="" />
				<Variable name="information" comment="" />
				<Variable name="initiator" comment="" />
				<Variable name="source" comment="" />
				<Variable name="stimulusKind" comment="" />
				<Variable name="trespassInformation" comment="" />
				<Variable name="stimulus" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Then>
						</EntityContextCheck>
						<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</Then>
							</EntityContextCheck>
							<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</Then>
							</EntityContextCheck>
							<DefaultBranch>
								<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<CreateCombatInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</CreateCombatInformation>
										<Function_crime_addEyeWitness hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_addEyeWitness>
										<Function_crime_assessTrespass hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_assessTrespass>
									</Sequence>
								</AtomicDecorator>
							</DefaultBranch>
						</Switch>
						<CallDecorator_crime_chooseReaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Subtree>
								<ChooseReaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ChooseReaction>
							</Subtree>
							<Attack>
								<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_callInterrupt_attack hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_callInterrupt_attack>
								</CallbackEventCatch_empty>
							</Attack>
							<Arrest>
								<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_callInterrupt_arrest hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_callInterrupt_arrest>
								</CallbackEventCatch_empty>
							</Arrest>
							<LookAround>
								<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ErrorNode>
								</CallbackEventCatch_empty>
							</LookAround>
							<Flee>
								<CallbackEventCatch_fleeData hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<Function_callInterrupt_flee hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_callInterrupt_flee>
									</Sequence>
								</CallbackEventCatch_fleeData>
							</Flee>
							<ReactionToRecognitionState_I>
								<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_stealth_recognitionState_I_reaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_stealth_recognitionState_I_reaction>
								</CallbackEventCatch_empty>
							</ReactionToRecognitionState_I>
							<ReactionToRecognitionState_II>
								<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_stealth_recognitionState_II_reaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_stealth_recognitionState_II_reaction>
								</CallbackEventCatch_empty>
							</ReactionToRecognitionState_II>
							<Report>
								<CallbackEventCatch_reportData hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<Function_callInterrupt_report hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_callInterrupt_report>
									</Sequence>
								</CallbackEventCatch_reportData>
							</Report>
							<Scan>
								<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ErrorNode>
								</CallbackEventCatch_empty>
							</Scan>
							<Selfhelp>
								<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_callInterrupt_selfhelp hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_callInterrupt_selfhelp>
								</CallbackEventCatch_empty>
							</Selfhelp>
							<Watch>
								<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ErrorNode>
								</CallbackEventCatch_empty>
							</Watch>
						</CallDecorator_crime_chooseReaction>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>