<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="switch_handleStimulusUnconsciousBody" is_function="1">
    <Variables>
      <Variable name="bodyPos" type="vec3" values="" isPersistent="0" form="single" />
      <Variable name="ignorePriority" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="initiator" type="enum:switch_interruptInitiator" values="$enum:switch_interruptInitiator.switch" isPersistent="0" form="single" />
      <Variable name="shouldReact" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="shouldWatch" type="_bool" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="stimulus" type="switch:stimulus:unconsciousBody" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <EntityContextCheck context="crime_stimulusInitiatedByScheduler" target="" saveVersion="2">
            <Then canSkip="1">
              <Expression expressions="$ignorePriority = true &#10;$initiator = $enum:switch_interruptInitiator.scheduler" />
            </Then>
          </EntityContextCheck>
          <GetSpatialInfo In="$stimulus.body" Out="$bodyPos" What="Position" />
          <CheckReactionLimit DesiredReactionType="$enum:crime_reactionType.reactToUnconsciousBody" Information="" Position="$bodyPos" StimulusKind="$enum:crime_stimulusKind.unconsciousBody" ShouldReact="$shouldReact" ShouldWatch="$shouldWatch" />
          <Switch>
            <IfCondition failOnCondition="false" condition="$shouldReact">
              <Function_callInterrupt_wakeUp body="$stimulus.body" ignorePriority="$ignorePriority" initiator="$initiator" previousReaction="$enum:crime_reactionKind.unknown" nodeLabel="69357897" />
            </IfCondition>
            <RecentlySkirmished NPC1="$this.id" NPC2="$stimulus.body" MaxTime="600" saveVersion="2">
              <Then canSkip="1">
                <Success />
              </Then>
            </RecentlySkirmished>
            <IfCondition failOnCondition="false" condition="$shouldWatch">
              <Function_callInterrupt_watch alreadyCriminal="false" assaultData="" corpseState="$enum:corpseState.undiscovered" defenceMode="false" freshlyAttributedCrime="false" ignorePriority="false" information="" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" source="$enum:crime_source.direct" stimulusKind="$enum:crime_stimulusKind.unconsciousBody" target="$stimulus.body" nodeLabel="15116095" />
            </IfCondition>
            <DefaultBranch>
              <Success />
            </DefaultBranch>
          </Switch>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="bodyPos" comment="" />
        <Variable name="ignorePriority" comment="" />
        <Variable name="initiator" comment="" />
        <Variable name="shouldReact" comment="" />
        <Variable name="shouldWatch" comment="" />
        <Variable name="stimulus" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Then>
            </EntityContextCheck>
            <GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </GetSpatialInfo>
            <CheckReactionLimit hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </CheckReactionLimit>
            <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Function_callInterrupt_wakeUp hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Function_callInterrupt_wakeUp>
              </IfCondition>
              <RecentlySkirmished hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Success>
                </Then>
              </RecentlySkirmished>
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Function_callInterrupt_watch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Function_callInterrupt_watch>
              </IfCondition>
              <DefaultBranch>
                <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Success>
              </DefaultBranch>
            </Switch>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>