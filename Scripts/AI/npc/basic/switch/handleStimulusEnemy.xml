<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="switch_handleStimulusEnemy" is_function="1">
    <Variables>
      <Variable name="enemyIsPlayer" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="guardArresting" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="information" type="information" values="" isPersistent="0" form="single" />
      <Variable name="reportDestination" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="reportDestinationType" type="enum:crime_reportDestinationType" values="" isPersistent="0" form="single" />
      <Variable name="skirmishReaction" type="enum:combat_skirmishReaction" values="" isPersistent="0" form="single" />
      <Variable name="source" type="enum:crime_source" values="$enum:crime_source.direct" isPersistent="0" form="single" />
      <Variable name="stimulusKind" type="enum:crime_stimulusKind" values="$enum:crime_stimulusKind.enemy" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="stimulus" type="switch:stimulus:enemy" values="" isPersistent="0" form="single" requirementType="ConstReference" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <IsDeadCheck SoulWUID="$stimulus.enemy" FailSubtMissing="false" saveVersion="2">
          <Then canSkip="1">
            <IgnorePerception PerceptorObject="$this.id" PerceptibleObject="$stimulus.enemy" IgnoreFor="&apos;60s&apos;" TimerType="GameTime" Uninterruptible="false" Persistent="true" />
          </Then>
          <Else canSkip="1">
            <EntityContextCheck context="combat_neverSurrenderOrFlee" target="" saveVersion="2">
              <Then canSkip="1">
                <Function_callInterrupt_attack alreadyCriminal="false" assaultData="" defenceMode="false" escalatedFromFailedSurrender="false" freshlyAttributedCrime="false" ignorePriority="false" information="$information" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" priority="160" questBehavior="false" relationOverride="false" stimulusKind="$stimulusKind" target="$stimulus.enemy" nodeLabel="92350954" />
              </Then>
              <Else canSkip="1">
                <Sequence>
                  <DecideSkirmishReactionCrime AllowFemaleJoin="false" MoraleBoost="0.000000" Reason="Perception" ReferenceNpc="$this.id" RelationOverride="Hostile" TargetNpc="$stimulus.enemy" SkirmishReaction="$skirmishReaction" />
                  <Expression expressions="$enemyIsPlayer = $stimulus.enemy == $__player" />
                  <IfCondition failOnCondition="false" condition="$skirmishReaction == $enum:combat_skirmishReaction.join &amp; &#10;$enemyIsPlayer">
                    <IsPublicEnemy Soul="$this.id" FailOnSubtreeMissing="false" saveVersion="2">
                      <Else canSkip="1">
                        <EntityContextCheck context="crime_isAuthority" target="" saveVersion="2">
                          <Else canSkip="1">
                            <Sequence>
                              <IsPlayerUnderArrest IsUnderArrest="$guardArresting" />
                              <IfCondition failOnCondition="false" condition="$guardArresting">
                                <Expression expressions="$skirmishReaction = $enum:combat_skirmishReaction.withdraw" />
                              </IfCondition>
                            </Sequence>
                          </Else>
                        </EntityContextCheck>
                      </Else>
                    </IsPublicEnemy>
                  </IfCondition>
                  <Switch>
                    <IfCondition failOnCondition="false" condition="$skirmishReaction == $enum:combat_skirmishReaction.join">
                      <Function_callInterrupt_attack alreadyCriminal="false" assaultData="" defenceMode="false" escalatedFromFailedSurrender="false" freshlyAttributedCrime="false" ignorePriority="false" information="$information" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" priority="160" questBehavior="false" relationOverride="false" stimulusKind="$stimulusKind" target="$stimulus.enemy" nodeLabel="93239723" />
                    </IfCondition>
                    <IfCondition failOnCondition="false" condition="$skirmishReaction == $enum:combat_skirmishReaction.withdraw">
                      <Sequence>
                        <GetReportDestinationType DestinationType="$reportDestinationType" />
                        <IfElseCondition failOnCondition="false" condition="$reportDestinationType == $enum:crime_reportDestinationType.mate" saveVersion="2">
                          <Then canSkip="1">
                            <Sequence>
                              <ChooseReportDestinationCampmate IsPlayerRelated="$enemyIsPlayer" Destination="$reportDestination" />
                              <IfElseCondition failOnCondition="false" condition="$reportDestination ~= $__null" saveVersion="2">
                                <Then canSkip="1">
                                  <Function_callInterrupt_report alreadyCriminal="false" assaultData="" corpseState="$enum:corpseState.undiscovered" disableEmitting="true" freshlyAttributedCrime="false" ignorePriority="false" information="$information" initiator="$enum:switch_interruptInitiator.switch" movementSpeed="$enum:movementSpeed.sprint" previousReaction="$enum:crime_reactionKind.unknown" reportDestination="$reportDestination" reportDestinationType="$reportDestinationType" source="$source" stimulusKind="$stimulusKind" nodeLabel="75730207" />
                                </Then>
                                <Else canSkip="1">
                                  <Function_callInterrupt_flee alreadyCriminal="false" assaultData="" corpseState="$enum:corpseState.undiscovered" freshlyAttributedCrime="false" ignorePriority="false" information="$information" initiator="$enum:switch_interruptInitiator.switch" leaveLevel="false" previousReaction="$enum:crime_reactionKind.unknown" priority="135" source="$source" stimulusKind="$stimulusKind" target="$stimulus.enemy" nodeLabel="16577459" />
                                </Else>
                              </IfElseCondition>
                            </Sequence>
                          </Then>
                          <Else canSkip="1">
                            <Function_callInterrupt_flee alreadyCriminal="false" assaultData="" corpseState="$enum:corpseState.undiscovered" freshlyAttributedCrime="false" ignorePriority="false" information="$information" initiator="$enum:switch_interruptInitiator.switch" leaveLevel="false" previousReaction="$enum:crime_reactionKind.unknown" priority="135" source="$source" stimulusKind="$stimulusKind" target="$stimulus.enemy" nodeLabel="15360650" />
                          </Else>
                        </IfElseCondition>
                      </Sequence>
                    </IfCondition>
                    <IfCondition failOnCondition="false" condition="$skirmishReaction == $enum:combat_skirmishReaction.indifference">
                      <Function_callInterrupt_flee alreadyCriminal="false" assaultData="" corpseState="$enum:corpseState.undiscovered" freshlyAttributedCrime="false" ignorePriority="false" information="$information" initiator="$enum:switch_interruptInitiator.switch" leaveLevel="false" previousReaction="$enum:crime_reactionKind.unknown" priority="135" source="$source" stimulusKind="$stimulusKind" target="$stimulus.enemy" nodeLabel="40880956" />
                    </IfCondition>
                  </Switch>
                </Sequence>
              </Else>
            </EntityContextCheck>
          </Else>
        </IsDeadCheck>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="enemyIsPlayer" comment="" />
        <Variable name="guardArresting" comment="" />
        <Variable name="information" comment="" />
        <Variable name="reportDestination" comment="" />
        <Variable name="reportDestinationType" comment="" />
        <Variable name="skirmishReaction" comment="" />
        <Variable name="source" comment="" />
        <Variable name="stimulusKind" comment="" />
        <Variable name="stimulus" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-260" editorPosY="-110" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Then>
              <IgnorePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </IgnorePerception>
            </Then>
            <Else>
              <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <Function_callInterrupt_attack hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Function_callInterrupt_attack>
                </Then>
                <Else>
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <DecideSkirmishReactionCrime hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </DecideSkirmishReactionCrime>
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                    <IfCondition hasInputBreakpoint="0" comment="if a publicFriend NPC sees an enemy player under arrest by a guard it wont join the fight" breakpointFlags="0">
                      <OutputBreakpoints />
                      <IsPublicEnemy hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                        <OutputBreakpoints />
                        <Else>
                          <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                            <OutputBreakpoints />
                            <Else>
                              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                                <IsPlayerUnderArrest hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </IsPlayerUnderArrest>
                                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                  <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                    <OutputBreakpoints />
                                  </Expression>
                                </IfCondition>
                              </Sequence>
                            </Else>
                          </EntityContextCheck>
                        </Else>
                      </IsPublicEnemy>
                    </IfCondition>
                    <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Function_callInterrupt_attack hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Function_callInterrupt_attack>
                      </IfCondition>
                      <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <GetReportDestinationType hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </GetReportDestinationType>
                          <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                            <OutputBreakpoints />
                            <Then>
                              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                                <ChooseReportDestinationCampmate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </ChooseReportDestinationCampmate>
                                <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                                  <OutputBreakpoints />
                                  <Then>
                                    <Function_callInterrupt_report hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                      <OutputBreakpoints />
                                    </Function_callInterrupt_report>
                                  </Then>
                                  <Else>
                                    <Function_callInterrupt_flee hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                      <OutputBreakpoints />
                                    </Function_callInterrupt_flee>
                                  </Else>
                                </IfElseCondition>
                              </Sequence>
                            </Then>
                            <Else>
                              <Function_callInterrupt_flee hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Function_callInterrupt_flee>
                            </Else>
                          </IfElseCondition>
                        </Sequence>
                      </IfCondition>
                      <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Function_callInterrupt_flee hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Function_callInterrupt_flee>
                      </IfCondition>
                    </Switch>
                  </Sequence>
                </Else>
              </EntityContextCheck>
            </Else>
          </IsDeadCheck>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>