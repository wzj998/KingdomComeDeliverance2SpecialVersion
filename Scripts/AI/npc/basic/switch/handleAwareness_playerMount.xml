<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_handleAwareness_playerMount" is_function="1">
		<Variables>
			<Variable name="isMountRelevant" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="mount" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="playerHorse" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stimulusHorseTheft" type="switch:stimulus:horseTheft" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="reactionIntermediateData" type="switch:reactionIntermediateData" values="" isPersistent="0" form="single" requirementType="Reference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<SuppressFailure>
						<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;mount&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;mount&apos;" prune="true" negprune="unknown" Parent="" Child="$mount" Data="" />
						</GraphSearch>
					</SuppressFailure>
					<IfCondition failOnCondition="false" condition="$mount ~= $__null">
						<Sequence>
							<GetPlayerHorse HorseWuid="$playerHorse" />
							<IfElseCondition failOnCondition="false" condition="$mount == $playerHorse" saveVersion="2">
								<Then canSkip="1">
									<Function_switch_handleAwareness_playerCompanion companion="$mount" companionType="$enum:crime_banishCompanionType.Horse" reactionIntermediateData="$reactionIntermediateData" nodeLabel="52590551" />
								</Then>
								<Else canSkip="1">
									<Switch>
										<EntityContextCheck context="switch_recognitionLevel_I" target="" saveVersion="2">
											<Then canSkip="1">
												<Success />
											</Then>
										</EntityContextCheck>
										<DefaultBranch>
											<EntityContextCheck context="switch_isHorse" target="$mount" saveVersion="2">
												<Then canSkip="1">
													<Sequence>
														<IsHorseRelevant Horse="$mount" Npc="$this.id" IsRelevant="$isMountRelevant" />
														<EntityContextCheck context="crime_ignoredHorseTheft_Horse" target="$mount" saveVersion="2">
															<Then canSkip="1">
																<Expression expressions="$isMountRelevant = false" />
															</Then>
														</EntityContextCheck>
														<EntityContextCheck context="crime_ignoredHorseTheft_NPC" target="$this.id" saveVersion="2">
															<Then canSkip="1">
																<Expression expressions="$isMountRelevant = false" />
															</Then>
														</EntityContextCheck>
														<RelationContextCheck context="crime_ignoreHorseTheft" from="$this.id" to="$mount" saveVersion="2">
															<Then canSkip="1">
																<Expression expressions="$isMountRelevant = false" />
															</Then>
														</RelationContextCheck>
														<EntityContextCheck context="crime_forceReactionHorseTheft" target="" saveVersion="2">
															<Then canSkip="1">
																<Expression expressions="$isMountRelevant = true" />
															</Then>
														</EntityContextCheck>
														<RelationContextCheck context="crime_forceReactionToHorseTheft" from="$this.id" to="$mount" saveVersion="2">
															<Then canSkip="1">
																<Expression expressions="$isMountRelevant = true" />
															</Then>
														</RelationContextCheck>
														<IfCondition failOnCondition="false" condition="$isMountRelevant">
															<EntityContextCheck context="crime_bff" target="" saveVersion="2">
																<Then canSkip="1">
																	<Function_crime_addBffIntermediateBarkData corpse="" isCorpse="false" isViolent="false" reactionIntermediateData="$reactionIntermediateData" nodeLabel="75905641" />
																</Then>
																<Else canSkip="1">
																	<Sequence>
																		<Expression expressions="$stimulusHorseTheft.immediate = false &#10;$stimulusHorseTheft.horse = $mount" />
																		<Function_switch_handleStimulusHorseTheft stimulus="$stimulusHorseTheft" nodeLabel="73409490" />
																	</Sequence>
																</Else>
															</EntityContextCheck>
														</IfCondition>
													</Sequence>
												</Then>
											</EntityContextCheck>
										</DefaultBranch>
									</Switch>
								</Else>
							</IfElseCondition>
						</Sequence>
					</IfCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="isMountRelevant" comment="" />
				<Variable name="mount" comment="" />
				<Variable name="playerHorse" comment="" />
				<Variable name="stimulusHorseTheft" comment="" />
				<Variable name="reactionIntermediateData" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
						</SuppressFailure>
						<IfCondition hasInputBreakpoint="0" comment="If no mount, just exit" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GetPlayerHorse hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetPlayerHorse>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Function_switch_handleAwareness_playerCompanion hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_switch_handleAwareness_playerCompanion>
									</Then>
									<Else>
										<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Then>
											</EntityContextCheck>
											<DefaultBranch>
												<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<IsHorseRelevant hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</IsHorseRelevant>
															<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Then>
															</EntityContextCheck>
															<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Then>
															</EntityContextCheck>
															<RelationContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Then>
															</RelationContextCheck>
															<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Then>
															</EntityContextCheck>
															<RelationContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Then>
															</RelationContextCheck>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Then>
																		<Function_crime_addBffIntermediateBarkData hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_crime_addBffIntermediateBarkData>
																	</Then>
																	<Else>
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Expression>
																			<Function_switch_handleStimulusHorseTheft hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Function_switch_handleStimulusHorseTheft>
																		</Sequence>
																	</Else>
																</EntityContextCheck>
															</IfCondition>
														</Sequence>
													</Then>
												</EntityContextCheck>
											</DefaultBranch>
										</Switch>
									</Else>
								</IfElseCondition>
							</Sequence>
						</IfCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>