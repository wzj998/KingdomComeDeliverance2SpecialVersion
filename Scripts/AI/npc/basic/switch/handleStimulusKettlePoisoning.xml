<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_handleStimulusKettlePoisoning" is_function="1">
		<Variables>
			<Variable name="assaultData" type="crime:assaultData" values="" isPersistent="0" form="single" />
			<Variable name="followupKettleData" type="crime:followUpBehavior:markKettleAsPoisoned" values="" isPersistent="0" form="single" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" />
			<Variable name="source" type="enum:crime_source" values="$enum:crime_source.direct" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="stimulus" type="switch:stimulus:kettlePoisoning" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<CreateInformationWrapper Label="&apos;kettlePoisoning&apos;" PerceivedWuid="$stimulus.kettle" PositionType="perceivedWuid" PositionVec3="" PositionWuid="" Information="$information" />
					<LockDynamicInformationValues Information="$information">
						<Sequence>
							<SetDynamicInformationValue Information="$information" Tag="&apos;victim&apos;" Variable="$stimulus.victim" Type="" Value="" />
							<SetDynamicInformationValue Information="$information" Tag="&apos;fine&apos;" Variable="$data:crime[&apos;kettlePoisoning&apos;].fine" Type="" Value="" />
							<SetDynamicInformationValue Information="$information" Tag="&apos;kettleType&apos;" Variable="$stimulus.kettleType" Type="" Value="" />
						</Sequence>
					</LockDynamicInformationValues>
					<Function_crime_addEyeWitness information="$information" npc="$this.id" nodeLabel="84854759" />
					<IfCondition failOnCondition="false" condition="$stimulus.markKettleAsPoisoned">
						<Sequence>
							<Expression expressions="$followupKettleData.kettle = $stimulus.kettle &#10;$followupKettleData.kettleType = $stimulus.kettleType &#10;$followupKettleData.realizedPoisonAfterEating = false &#10;$followupKettleData.active = true" />
							<AddLink From="$this.id" To="$stimulus.kettle" Tag="&apos;crime_followUpBehavior_markKettleAsPoisoned&apos;" Data="$followupKettleData" LinkOpHandleMode="OverWrite" />
						</Sequence>
					</IfCondition>
					<CallDecorator_crime_chooseReaction>
						<Subtree canSkip="1">
							<ChooseReaction Information="$information" ReactionNpc="$__player" SkirmishDecisionReason="Perception" Source="$source" StimulusKind="$enum:crime_stimulusKind.kettlePoisoning" />
						</Subtree>
						<Attack canSkip="1">
							<CallbackEventCatch_empty>
								<Function_callInterrupt_attack alreadyCriminal="false" assaultData="$assaultData" defenceMode="false" escalatedFromFailedSurrender="false" freshlyAttributedCrime="false" ignorePriority="true" information="$information" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" priority="160" questBehavior="false" relationOverride="true" stimulusKind="$enum:crime_stimulusKind.kettlePoisoning" target="$__player" nodeLabel="17781122" />
							</CallbackEventCatch_empty>
						</Attack>
						<Arrest canSkip="1">
							<CallbackEventCatch_empty>
								<Function_callInterrupt_arrest alreadyCriminal="false" assaultData="$assaultData" crimeSeen="true" freshlyAttributedCrime="false" ignorePriority="false" information="$information" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" source="$enum:crime_source.direct" stimulusKind="$enum:crime_stimulusKind.kettlePoisoning" trespassingRepeatedly="false" nodeLabel="12133621" />
							</CallbackEventCatch_empty>
						</Arrest>
						<LookAround canSkip="1">
							<CallbackEventCatch_empty>
								<ErrorNode Message="&apos;[$this.name;] shouldn\&apos;t happen&apos;" />
							</CallbackEventCatch_empty>
						</LookAround>
						<Flee canSkip="1">
							<CallbackEventCatch_fleeData>
								<Function_callInterrupt_flee alreadyCriminal="false" assaultData="$assaultData" corpseState="$enum:corpseState.undiscovered" freshlyAttributedCrime="false" ignorePriority="$ignoreScheduledPriority" information="$information" initiator="$enum:switch_interruptInitiator.switch" isIndifferent="false" leaveLevel="false" mercyDialogueResult="$enum:crime_mercyDialogueResult.unknown" previousReaction="$enum:crime_reactionKind.unknown" priority="135" source="$source" stimulusKind="$enum:crime_stimulusKind.kettlePoisoning" target="$__player" nodeLabel="53818648" />
							</CallbackEventCatch_fleeData>
						</Flee>
						<ReactionToRecognitionState_I canSkip="1">
							<CallbackEventCatch_empty>
								<Function_stealth_recognitionState_I_reaction target="$__player" nodeLabel="97854762" />
							</CallbackEventCatch_empty>
						</ReactionToRecognitionState_I>
						<ReactionToRecognitionState_II canSkip="1">
							<CallbackEventCatch_empty>
								<Function_stealth_recognitionState_II_reaction stimulusKind="$enum:crime_stimulusKind.kettlePoisoning" target="$__player" nodeLabel="68132959" />
							</CallbackEventCatch_empty>
						</ReactionToRecognitionState_II>
						<Report canSkip="1">
							<CallbackEventCatch_reportData>
								<Function_callInterrupt_report alreadyCriminal="false" assaultData="$assaultData" corpseState="$enum:corpseState.undiscovered" disableDetectedIcon="false" disableEmitting="false" freshlyAttributedCrime="false" ignorePriority="$ignoreScheduledPriority" information="$information" initiator="$enum:switch_interruptInitiator.switch" movementSpeed="$enum:movementSpeed.run" previousReaction="$enum:crime_reactionKind.unknown" reportDestination="$destination" reportDestinationType="$destinationType" source="$source" stimulusKind="$enum:crime_stimulusKind.kettlePoisoning" nodeLabel="97757434" />
							</CallbackEventCatch_reportData>
						</Report>
						<Selfhelp canSkip="1">
							<CallbackEventCatch_empty>
								<Function_callInterrupt_selfhelp alreadyCriminal="false" assaultData="$assaultData" freshlyAttributedCrime="false" ignorePriority="false" information="$information" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" source="$source" stimulusKind="$enum:crime_stimulusKind.kettlePoisoning" nodeLabel="25102259" />
							</CallbackEventCatch_empty>
						</Selfhelp>
						<Watch canSkip="1">
							<CallbackEventCatch_empty>
								<Function_callInterrupt_watch alreadyCriminal="false" assaultData="$assaultData" corpseState="$enum:corpseState.undiscovered" defenceMode="false" freshlyAttributedCrime="false" ignorePriority="false" information="$information" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" source="$source" stimulusKind="$enum:crime_stimulusKind.kettlePoisoning" target="$__player" nodeLabel="19510949" />
							</CallbackEventCatch_empty>
						</Watch>
					</CallDecorator_crime_chooseReaction>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="assaultData" comment="" />
				<Variable name="followupKettleData" comment="" />
				<Variable name="information" comment="" />
				<Variable name="source" comment="" />
				<Variable name="stimulus" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<CreateInformationWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</CreateInformationWrapper>
						<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SetDynamicInformationValue>
								<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SetDynamicInformationValue>
								<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SetDynamicInformationValue>
							</Sequence>
						</LockDynamicInformationValues>
						<Function_crime_addEyeWitness hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_crime_addEyeWitness>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</AddLink>
							</Sequence>
						</IfCondition>
						<CallDecorator_crime_chooseReaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Subtree>
								<ChooseReaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ChooseReaction>
							</Subtree>
							<Attack>
								<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_callInterrupt_attack hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_callInterrupt_attack>
								</CallbackEventCatch_empty>
							</Attack>
							<Arrest>
								<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_callInterrupt_arrest hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_callInterrupt_arrest>
								</CallbackEventCatch_empty>
							</Arrest>
							<LookAround>
								<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ErrorNode>
								</CallbackEventCatch_empty>
							</LookAround>
							<Flee>
								<CallbackEventCatch_fleeData hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_callInterrupt_flee hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_callInterrupt_flee>
								</CallbackEventCatch_fleeData>
							</Flee>
							<ReactionToRecognitionState_I>
								<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_stealth_recognitionState_I_reaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_stealth_recognitionState_I_reaction>
								</CallbackEventCatch_empty>
							</ReactionToRecognitionState_I>
							<ReactionToRecognitionState_II>
								<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_stealth_recognitionState_II_reaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_stealth_recognitionState_II_reaction>
								</CallbackEventCatch_empty>
							</ReactionToRecognitionState_II>
							<Report>
								<CallbackEventCatch_reportData hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_callInterrupt_report hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_callInterrupt_report>
								</CallbackEventCatch_reportData>
							</Report>
							<Selfhelp>
								<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_callInterrupt_selfhelp hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_callInterrupt_selfhelp>
								</CallbackEventCatch_empty>
							</Selfhelp>
							<Watch>
								<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_callInterrupt_watch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_callInterrupt_watch>
								</CallbackEventCatch_empty>
							</Watch>
						</CallDecorator_crime_chooseReaction>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>