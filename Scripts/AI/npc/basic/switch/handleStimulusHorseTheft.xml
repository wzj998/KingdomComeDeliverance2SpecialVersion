<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_handleStimulusHorseTheft" is_function="1">
		<Variables>
			<Variable name="horseHome" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="horseOwner" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" />
			<Variable name="retrievedInformation" type="information" values="" isPersistent="0" form="single" />
			<Variable name="shouldReact" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="source" type="enum:crime_source" values="$enum:crime_source.direct" isPersistent="0" form="single" />
			<Variable name="trespassInformation" type="information" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="stimulus" type="switch:stimulus:horseTheft" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Sequence>
						<Expression expressions="$shouldReact = true" />
						<SuppressFailure>
							<EntityContextCheck context="crime_interruptArrest" target="" saveVersion="2">
								<Then canSkip="1">
									<Sequence>
										<RetrieveInformation PerceivedWuid="$stimulus.horse" label="&apos;horseTheft&apos;" OutVariable="$retrievedInformation" />
										<Expression expressions="$shouldReact = false" />
									</Sequence>
								</Then>
							</EntityContextCheck>
						</SuppressFailure>
						<Sequence>
							<CreateInformationWrapper Label="&apos;horseTheft&apos;" PerceivedWuid="$stimulus.horse" PositionType="perceivedWuid" PositionVec3="" PositionWuid="" Information="$information" />
							<Sequence>
								<GraphSearch Origin="$stimulus.horse" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;home&apos;" prune="true" negprune="unknown" Parent="" Child="$horseHome" Data="" />
								</GraphSearch>
								<GetOwner Object="$horseHome" Owner="$horseOwner" />
							</Sequence>
							<LockDynamicInformationValues Information="$information">
								<Sequence>
									<SetDynamicInformationValue Information="$information" Tag="&apos;victim&apos;" Variable="$horseOwner" Type="" Value="" />
									<SetDynamicInformationValue Information="$information" Tag="&apos;stimulusKind&apos;" Variable="" Type="&apos;enum:crime_stimulusKind&apos;" Value="$enum:crime_stimulusKind.horseTheft" />
									<SetDynamicInformationValue Information="$information" Tag="&apos;immediate&apos;" Variable="$stimulus.immediate" Type="" Value="" />
								</Sequence>
							</LockDynamicInformationValues>
							<Function_crime_addEyeWitness information="$information" npc="$this.id" nodeLabel="48725749" />
							<Function_crime_assessTrespass observer="$this.id" information="$trespassInformation" nodeLabel="88658410" />
						</Sequence>
					</Sequence>
					<IfCondition failOnCondition="false" condition="$shouldReact">
						<CallDecorator_crime_chooseReaction>
							<Subtree canSkip="1">
								<ChooseReaction Information="$information" ReactionNpc="$__player" SkirmishDecisionReason="Perception" Source="$source" StimulusKind="$enum:crime_stimulusKind.horseTheft" />
							</Subtree>
							<Attack canSkip="1">
								<CallbackEventCatch_empty>
									<Function_callInterrupt_attack alreadyCriminal="false" assaultData="" defenceMode="false" escalatedFromFailedSurrender="false" freshlyAttributedCrime="false" ignorePriority="false" information="$information" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" priority="160" questBehavior="false" relationOverride="true" stimulusKind="$enum:crime_stimulusKind.horseTheft" target="$__player" nodeLabel="77194371" />
								</CallbackEventCatch_empty>
							</Attack>
							<Arrest canSkip="1">
								<CallbackEventCatch_empty>
									<Function_callInterrupt_arrest alreadyCriminal="false" assaultData="" crimeSeen="true" freshlyAttributedCrime="false" ignorePriority="false" information="$information" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" source="$enum:crime_source.direct" stimulusKind="$enum:crime_stimulusKind.horseTheft" trespassingRepeatedly="false" nodeLabel="70738031" />
								</CallbackEventCatch_empty>
							</Arrest>
							<LookAround canSkip="1">
								<CallbackEventCatch_empty>
									<ErrorNode Message="&apos;[$this.name;] shouldn\&apos;t happen&apos;" />
								</CallbackEventCatch_empty>
							</LookAround>
							<Flee canSkip="1">
								<CallbackEventCatch_fleeData>
									<Function_callInterrupt_flee alreadyCriminal="false" assaultData="" corpseState="$enum:corpseState.undiscovered" freshlyAttributedCrime="false" ignorePriority="$ignoreScheduledPriority" information="$information" initiator="$enum:switch_interruptInitiator.switch" isIndifferent="false" leaveLevel="false" mercyDialogueResult="$enum:crime_mercyDialogueResult.unknown" previousReaction="$enum:crime_reactionKind.unknown" priority="135" source="$source" stimulusKind="$enum:crime_stimulusKind.horseTheft" target="$__player" nodeLabel="36886109" />
								</CallbackEventCatch_fleeData>
							</Flee>
							<ReactionToRecognitionState_I canSkip="1">
								<CallbackEventCatch_empty>
									<Function_stealth_recognitionState_I_reaction target="$__player" nodeLabel="59940559" />
								</CallbackEventCatch_empty>
							</ReactionToRecognitionState_I>
							<ReactionToRecognitionState_II canSkip="1">
								<CallbackEventCatch_empty>
									<Function_stealth_recognitionState_II_reaction stimulusKind="$enum:crime_stimulusKind.horseTheft" target="$__player" nodeLabel="72243826" />
								</CallbackEventCatch_empty>
							</ReactionToRecognitionState_II>
							<Report canSkip="1">
								<CallbackEventCatch_reportData>
									<Function_callInterrupt_report alreadyCriminal="false" assaultData="" corpseState="$enum:corpseState.undiscovered" disableDetectedIcon="false" disableEmitting="false" freshlyAttributedCrime="false" ignorePriority="$ignoreScheduledPriority" information="$information" initiator="$enum:switch_interruptInitiator.switch" movementSpeed="$enum:movementSpeed.sprint" previousReaction="$enum:crime_reactionKind.unknown" reportDestination="$destination" reportDestinationType="$destinationType" source="$source" stimulusKind="$enum:crime_stimulusKind.horseTheft" nodeLabel="24458181" />
								</CallbackEventCatch_reportData>
							</Report>
							<Selfhelp canSkip="1">
								<CallbackEventCatch_empty>
									<Function_callInterrupt_selfhelp alreadyCriminal="false" assaultData="" freshlyAttributedCrime="false" ignorePriority="false" information="$information" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" source="$source" stimulusKind="$enum:crime_stimulusKind.horseTheft" nodeLabel="85586482" />
								</CallbackEventCatch_empty>
							</Selfhelp>
							<Watch canSkip="1">
								<CallbackEventCatch_empty>
									<Function_callInterrupt_watch alreadyCriminal="false" assaultData="" corpseState="$enum:corpseState.undiscovered" defenceMode="false" freshlyAttributedCrime="false" ignorePriority="false" information="$information" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" source="$source" stimulusKind="$enum:crime_stimulusKind.horseTheft" target="$__player" nodeLabel="43930116" />
								</CallbackEventCatch_empty>
							</Watch>
						</CallDecorator_crime_chooseReaction>
					</IfCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="horseHome" comment="" />
				<Variable name="horseOwner" comment="" />
				<Variable name="information" comment="" />
				<Variable name="retrievedInformation" comment="" />
				<Variable name="shouldReact" comment="" />
				<Variable name="source" comment="" />
				<Variable name="trespassInformation" comment="" />
				<Variable name="stimulus" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="4" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<RetrieveInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</RetrieveInformation>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Sequence>
									</Then>
								</EntityContextCheck>
							</SuppressFailure>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<CreateInformationWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</CreateInformationWrapper>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<GetOwner hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetOwner>
								</Sequence>
								<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SetDynamicInformationValue>
										<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SetDynamicInformationValue>
										<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SetDynamicInformationValue>
									</Sequence>
								</LockDynamicInformationValues>
								<Function_crime_addEyeWitness hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_addEyeWitness>
								<Function_crime_assessTrespass hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_assessTrespass>
							</Sequence>
						</Sequence>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<CallDecorator_crime_chooseReaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Subtree>
									<ChooseReaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ChooseReaction>
								</Subtree>
								<Attack>
									<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_callInterrupt_attack hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_callInterrupt_attack>
									</CallbackEventCatch_empty>
								</Attack>
								<Arrest>
									<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_callInterrupt_arrest hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_callInterrupt_arrest>
									</CallbackEventCatch_empty>
								</Arrest>
								<LookAround>
									<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ErrorNode>
									</CallbackEventCatch_empty>
								</LookAround>
								<Flee>
									<CallbackEventCatch_fleeData hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_callInterrupt_flee hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_callInterrupt_flee>
									</CallbackEventCatch_fleeData>
								</Flee>
								<ReactionToRecognitionState_I>
									<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_stealth_recognitionState_I_reaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_stealth_recognitionState_I_reaction>
									</CallbackEventCatch_empty>
								</ReactionToRecognitionState_I>
								<ReactionToRecognitionState_II>
									<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_stealth_recognitionState_II_reaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_stealth_recognitionState_II_reaction>
									</CallbackEventCatch_empty>
								</ReactionToRecognitionState_II>
								<Report>
									<CallbackEventCatch_reportData hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_callInterrupt_report hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_callInterrupt_report>
									</CallbackEventCatch_reportData>
								</Report>
								<Selfhelp>
									<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_callInterrupt_selfhelp hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_callInterrupt_selfhelp>
									</CallbackEventCatch_empty>
								</Selfhelp>
								<Watch>
									<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_callInterrupt_watch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_callInterrupt_watch>
									</CallbackEventCatch_empty>
								</Watch>
							</CallDecorator_crime_chooseReaction>
						</IfCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>