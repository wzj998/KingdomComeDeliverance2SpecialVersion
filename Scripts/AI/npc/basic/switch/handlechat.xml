<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_handleChat" is_function="1">
		<Variables>
			<Variable name="context" type="_float" values="" isPersistent="0" form="associative" />
			<Variable name="isAvailable" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="chatRequest" type="dialog:chatRequest" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<SuppressFailure>
					<Sequence>
						<IfCondition failOnCondition="false" condition="$chatRequest.contextAsText ~= &apos;&apos;">
							<ExecuteLua code="for key, value in string.gmatch(data.chatRequest.contextAsText, &quot;([^;=]+)=([^;=]+)&quot;) do &#10;  data.context[key] = value &#10;end" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$chatRequest.metarole ~= &apos;NPC_ZDRAVI_HRACE&apos;">
							<ErrorNode Message="&apos;Attempting to run a different chat from switch than NPC greeting. This is unsupported for the time being. Cancelling chat.&apos;" />
						</IfCondition>
						<EntityContextCheck context="crime_interrupt" target="$this.id" saveVersion="2">
							<Else canSkip="1">
								<EntityContextBarrier context="crime_interrupt" target="" Negation="true" RunLogic="Halt">
									<EntityContextCheck context="crime_inCrimeDialog" target="$__player" saveVersion="2">
										<Else canSkip="1">
											<EntityContextBarrier context="crime_inCrimeDialog" target="$__player" Negation="true" RunLogic="Halt">
												<Sequence>
													<ExecuteLua code="data.isAvailable = not player.soul:IsInTenseCircumstance()" />
													<IfCondition failOnCondition="false" condition="$isAvailable">
														<Parallel successMode="Any" failureMode="Any">
															<Loop count="-1">
																<Sequence>
																	<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
																	<ExecuteLua code="data.isAvailable = not player.soul:IsInTenseCircumstance()" />
																</Sequence>
															</Loop>
															<IfGate atomic="false" condition="$isAvailable" RunLogic="Halt">
																<EntityContext context="speech_openworldChatThatShouldntSetTheGreetingCooldownInProgress" target="">
																	<Function_speech_dialogInitiator alias="$chatRequest.alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="$context" customParameters="" metarole="$chatRequest.metarole" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="44067684" />
																</EntityContext>
															</IfGate>
														</Parallel>
													</IfCondition>
												</Sequence>
											</EntityContextBarrier>
										</Else>
									</EntityContextCheck>
								</EntityContextBarrier>
							</Else>
						</EntityContextCheck>
					</Sequence>
				</SuppressFailure>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="context" comment="" />
				<Variable name="isAvailable" comment="" />
				<Variable name="chatRequest" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExecuteLua hasInputBreakpoint="0" comment="HACK - ideally we should be able to send associative arrays as parts of AI custom types" breakpointFlags="0">
									<OutputBreakpoints />
								</ExecuteLua>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="ONLY GREETING SUPPORTED FOR THE TIME BEING" breakpointFlags="0">
								<OutputBreakpoints />
								<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ErrorNode>
							</IfCondition>
							<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Else>
									<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Else>
												<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ExecuteLua>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Wait>
																		<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</ExecuteLua>
																	</Sequence>
																</Loop>
																<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_speech_dialogInitiator>
																	</EntityContext>
																</IfGate>
															</Parallel>
														</IfCondition>
													</Sequence>
												</EntityContextBarrier>
											</Else>
										</EntityContextCheck>
									</EntityContextBarrier>
								</Else>
							</EntityContextCheck>
						</Sequence>
					</SuppressFailure>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>