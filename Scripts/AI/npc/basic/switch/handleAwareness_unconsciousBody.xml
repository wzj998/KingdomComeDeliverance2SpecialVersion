<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_handleAwareness_unconsciousBody" is_function="1">
		<Variables>
			<Variable name="assaultData" type="crime:assaultData" values="" isPersistent="0" form="single" />
			<Variable name="bodyData" type="switch:unconsciousBody" values="" isPersistent="0" form="single" />
			<Variable name="bodyInTrespass" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="bodyPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="canLookAround" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="checkBody" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="checkRelation" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="crimeAttributable" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="foundInHome" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" />
			<Variable name="knowAboutPlayer" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="lastHitByPlayer" type="crime:lastHitByPlayer" values="" isPersistent="0" form="single" />
			<Variable name="lookAroundFollowUpData" type="crime:followUpBehavior:lookAround" values="" isPersistent="0" form="single" />
			<Variable name="now" type="_int64" values="" isPersistent="0" form="single" />
			<Variable name="playerCrimeInfoKnown" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="reactionSuppressed" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="reportDestination" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="reportDestinationType" type="enum:crime_reportDestinationType" values="" isPersistent="0" form="single" />
			<Variable name="reportFollowUpData" type="crime:followUpBehavior:report" values="" isPersistent="0" form="single" />
			<Variable name="shouldReact" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="shouldWakeUp" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="shouldWatch" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="stimulus" type="switch:stimulus:unconsciousBody" values="" isPersistent="0" form="single" />
			<Variable name="stimulusCombat" type="switch:stimulus:combat" values="" isPersistent="0" form="single" />
			<Variable name="stimulusKind" type="enum:crime_stimulusKind" values="$enum:crime_stimulusKind.unknown" isPersistent="0" form="single" />
			<Variable name="stimulusLyingBody" type="switch:stimulus:lyingBody" values="" isPersistent="0" form="single" />
			<Variable name="stimulusNonAttributedCrime" type="switch:stimulus:nonAttributedCrime" values="" isPersistent="0" form="single" />
			<Variable name="trespassArea" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="trespassInformation" type="information" values="" isPersistent="0" form="single" />
			<Variable name="trespassSevereness" type="enum:trespassLevel" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="body" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="reactionIntermediateData" type="switch:reactionIntermediateData" values="" isPersistent="0" form="single" requirementType="Reference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<IfElseCondition failOnCondition="false" condition="$body == $__player" saveVersion="2">
					<Then canSkip="1">
						<EntityContextCheck context="crime_ignorePlayerPerception" target="" saveVersion="2">
							<Else canSkip="1">
								<EntityContextCheck context="crime_bff" target="" saveVersion="2">
									<Else canSkip="1">
										<Sequence>
											<EntityContextCheck context="crime_isAuthority" target="" saveVersion="2">
												<Then canSkip="1">
													<Success />
												</Then>
												<Else canSkip="1">
													<Expression expressions="$checkRelation = true" />
												</Else>
											</EntityContextCheck>
											<PlayersCrimeInformationKnown Npc="$this.id" OnlyRelated="$checkRelation" PlayersCrimeInformationKnown="$playerCrimeInfoKnown" />
											<IfCondition failOnCondition="false" condition="~$playerCrimeInfoKnown">
												<Sequence>
													<GameContextCheck context="crime_disableRobbingUnconsciousPlayer" saveVersion="2">
														<Else canSkip="1">
															<EntityContextCheck context="crime_suppressRobbingUnconsciousPlayer" target="$this.id" saveVersion="2">
																<Else canSkip="1">
																	<Function_crime_robUnconsciousPlayer nodeLabel="45455754" />
																</Else>
															</EntityContextCheck>
														</Else>
													</GameContextCheck>
													<GameContextCheck context="crime_disabledThrowingOutUnconsciousPlayer" saveVersion="2">
														<Else canSkip="1">
															<Sequence>
																<DetermineTrespassReaction Observer="$this.id" Target="$__player" Position="" ForceSemipublicReaction="true" ShouldUseVec3Position="false" TrespassAreaSevereness="$trespassSevereness" TrespassArea="$trespassArea" Reaction="$bodyInTrespass" ReactionSuppressed="$reactionSuppressed" />
																<IfCondition failOnCondition="false" condition="$bodyInTrespass">
																	<Function_callInterrupt_throwOutUnconsciousPlayer ignorePriority="false" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" source="$enum:crime_source.direct" stimulusKind="$enum:crime_stimulusKind.unconsciousBody" nodeLabel="63494076" />
																</IfCondition>
															</Sequence>
														</Else>
													</GameContextCheck>
												</Sequence>
											</IfCondition>
										</Sequence>
									</Else>
								</EntityContextCheck>
							</Else>
						</EntityContextCheck>
					</Then>
					<Else canSkip="1">
						<EntityContextCheck context="crime_ignoreUnconsciousBodies" target="" saveVersion="2">
							<Then canSkip="1">
								<IgnorePerception PerceptorObject="$this.id" PerceptibleObject="$body" IgnoreFor="&apos;-1&apos;" TimerType="GameTime" Uninterruptible="false" Persistent="true" />
							</Then>
							<Else canSkip="1">
								<EntityContextCheck context="crime_ignoredUnconsciousBody" target="$body" saveVersion="2">
									<Then canSkip="1">
										<IgnorePerception PerceptorObject="$this.id" PerceptibleObject="$body" IgnoreFor="&apos;-1&apos;" TimerType="GameTime" Uninterruptible="false" Persistent="true" />
									</Then>
									<Else canSkip="1">
										<RelationContextCheck context="crime_ignoreUnconsciousBody" from="$this.id" to="$body" saveVersion="2">
											<Then canSkip="1">
												<IgnorePerception PerceptorObject="$this.id" PerceptibleObject="$body" IgnoreFor="&apos;-1&apos;" TimerType="GameTime" Uninterruptible="false" Persistent="true" />
											</Then>
											<Else canSkip="1">
												<CheckRelationshipInterval_SoulToSoul TargetSoul="$body" Soul="$this.id" Flag="friend" saveVersion="2">
													<Then canSkip="1">
														<Sequence>
															<EntityContextCheck context="crime_escalationLevel_script_confrontingGeneral" target="" saveVersion="2">
																<Else canSkip="1">
																	<EntityContextCheck context="crime_escalationLevel_confrontingTrespass" target="" saveVersion="2">
																		<Else canSkip="1">
																			<DistanceCondition Origin="$this.id" ReferencePt="$body" Low="$data:script_param[&apos;crime_bodyRecognitionDistance&apos;].value" High="$data:script_param[&apos;crime_bodyRecognitionDistance&apos;].value" Negation="true" ValueOnMiddle="false" failOnCondition="false">
																				<Expression expressions="$checkBody = true" />
																			</DistanceCondition>
																		</Else>
																	</EntityContextCheck>
																</Else>
															</EntityContextCheck>
															<Switch>
																<IfCondition failOnCondition="false" condition="$checkBody">
																	<EntityContextCheck context="crime_bff" target="" saveVersion="2">
																		<Else canSkip="1">
																			<Sequence>
																				<Expression expressions="$stimulusLyingBody.body = $body" />
																				<Function_switch_handleStimulusLyingBody stimulus="$stimulusLyingBody" nodeLabel="16927027" />
																			</Sequence>
																		</Else>
																	</EntityContextCheck>
																</IfCondition>
																<DefaultBranch>
																	<Sequence>
																		<GraphSearch Origin="$body" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																			<LinkTagFilter tag="&apos;switch_unconsciousBody&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																			<WUIDFilter WUID="$body" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
																			<Datalyzer Tag="&apos;switch_unconsciousBody&apos;" Quantifiers="Exists" Parent="" Child="" Data="$bodyData" saveVersion="2" />
																		</GraphSearch>
																		<IsIndifferent NPC="$body" saveVersion="2">
																			<Then canSkip="1">
																				<IgnorePerception PerceptorObject="$this.id" PerceptibleObject="$body" IgnoreFor="&apos;-1&apos;" TimerType="GameTime" Uninterruptible="false" Persistent="true" />
																			</Then>
																			<Else canSkip="1">
																				<Sequence>
																					<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="&apos;crime_lastHitByPlayer&apos;" SubGraph="&apos;crime_lastHitByPlayer&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																						<WUIDFilter WUID="$body" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
																						<LinkTagFilter tag="&apos;crime_lastHitByPlayer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																						<Datalyzer Tag="&apos;crime_lastHitByPlayer&apos;" Quantifiers="Exists" Parent="" Child="" Data="$lastHitByPlayer" saveVersion="2" />
																					</GraphSearch>
																					<DetermineTrespassReaction Observer="$this.id" Target="$body" Position="" ForceSemipublicReaction="true" ShouldUseVec3Position="false" TrespassAreaSevereness="$trespassSevereness" TrespassArea="$trespassArea" Reaction="$bodyInTrespass" ReactionSuppressed="$reactionSuppressed" />
																					<IfCondition failOnCondition="false" condition="$lastHitByPlayer.kind == $enum:crime_attackKind.unknown">
																						<Expression expressions="$lastHitByPlayer.kind = $enum:crime_attackKind.stealth" />
																					</IfCondition>
																					<IfElseCondition failOnCondition="false" condition="$lastHitByPlayer.kind == $enum:crime_attackKind.stealth" saveVersion="2">
																						<Then canSkip="1">
																							<Expression expressions="$stimulusKind = $enum:crime_stimulusKind.takedown" />
																						</Then>
																						<Else canSkip="1">
																							<Expression expressions="$stimulusKind = $enum:crime_stimulusKind.combat" />
																						</Else>
																					</IfElseCondition>
																					<IgnorePerception PerceptorObject="$this.id" PerceptibleObject="$body" IgnoreFor="&apos;1m&apos;" TimerType="GameTime" Uninterruptible="false" Persistent="true" />
																					<Function_crime_updateUnconsciousBodyData body="$body" discover="true" reset="false" nodeLabel="85536430" />
																					<GetTime TimeType="GameTime" OutVar="$now" Delta="" />
																					<IfElseCondition failOnCondition="false" condition="( &#10; ( &#10;  $lastHitByPlayer.time &gt; 0 &amp; &#10;  $now &lt; $lastHitByPlayer.time + $data:script_param[&apos;crime_lastHit_expiration_time&apos;].value &#10; ) &#10;) &amp;  &#10;~$lastHitByPlayer.hitIsIndifferent &amp; &#10;$bodyData.state ~= $enum:switch_unconsciousBodyState.discovered" saveVersion="2">
																						<Then canSkip="1">
																							<HasSeenPlayer NPC="" FullyAwareOnly="false" saveVersion="2">
																								<Then canSkip="1">
																									<Sequence>
																										<GetSpatialInfo In="$body" Out="$bodyPos" What="Position" />
																										<Function_crime_isPlayerSuspicious crimePosition="$bodyPos" stimulusKind="$stimulusKind" playerSuspicious="$crimeAttributable" nodeLabel="54611776" />
																										<IfElseCondition failOnCondition="false" condition="$crimeAttributable" saveVersion="2">
																											<Then canSkip="1">
																												<EntityContextCheck context="crime_bff" target="" saveVersion="2">
																													<Then canSkip="1">
																														<Function_crime_addBffIntermediateBarkData corpse="" isCorpse="false" isViolent="true" reactionIntermediateData="$reactionIntermediateData" nodeLabel="11113675" />
																													</Then>
																													<Else canSkip="1">
																														<AtomicDecorator>
																															<Sequence>
																																<IfElseCondition failOnCondition="false" condition="$bodyInTrespass" saveVersion="2">
																																	<Then canSkip="1">
																																		<IsPublicEnemy Soul="$this.id" FailOnSubtreeMissing="false" saveVersion="2">
																																			<Else canSkip="1">
																																				<ShowTutorial Name="crime_BodyFoundTrespass" />
																																			</Else>
																																		</IsPublicEnemy>
																																	</Then>
																																	<Else canSkip="1">
																																		<Function_crime_playerIsSuspiciousTutorial nodeLabel="80718929" />
																																	</Else>
																																</IfElseCondition>
																																<CreateCombatInformation Victim="$body" AttackKind="$lastHitByPlayer.kind" DirectHit="true" AddConfiscation="true" Information="$information" />
																																<Function_crime_addEyeWitness information="$information" npc="$this.id" nodeLabel="96922197" />
																																<Function_crime_assessTrespass observer="" information="$trespassInformation" nodeLabel="59556705" />
																																<AddLink From="$this.id" To="$body" Tag="&apos;crime_followUpBehavior_wakeUp&apos;" Data="active(true)" LinkOpHandleMode="OverWrite" />
																																<Expression expressions="$stimulusCombat.participant1 = $__player &#10;$stimulusCombat.participant2 = $body &#10;$stimulusCombat.attackKind = $lastHitByPlayer.kind &#10;$stimulusCombat.hitStrength = $enum:HitReactionStrength.Fatal &#10;$stimulusCombat.freshlyAttributedCrime = true" />
																																<Function_switch_handleStimulusCombat stimulus="$stimulusCombat" nodeLabel="68745316" />
																															</Sequence>
																														</AtomicDecorator>
																													</Else>
																												</EntityContextCheck>
																											</Then>
																											<Else canSkip="1">
																												<EntityContextCheck context="crime_bff" target="" saveVersion="2">
																													<Else canSkip="1">
																														<Sequence>
																															<Expression expressions="$stimulus.body = $body" />
																															<Function_switch_handleStimulusUnconsciousBody stimulus="$stimulus" nodeLabel="87808858" />
																														</Sequence>
																													</Else>
																												</EntityContextCheck>
																											</Else>
																										</IfElseCondition>
																									</Sequence>
																								</Then>
																								<Else canSkip="1">
																									<EntityContextCheck context="crime_bff" target="" saveVersion="2">
																										<Else canSkip="1">
																											<Sequence>
																												<IfCondition failOnCondition="false" condition="$trespassArea ~= $__null">
																													<Sequence>
																														<GetHomeFromArea Area="$trespassArea" Home="$foundInHome" />
																														<IfCondition failOnCondition="false" condition="$foundInHome ~= $__null">
																															<Function_crime_checkLongTermMemoryTrespass home="$foundInHome" knowAboutPlayer="$knowAboutPlayer" nodeLabel="72320028" />
																														</IfCondition>
																													</Sequence>
																												</IfCondition>
																												<IfElseCondition failOnCondition="false" condition="$bodyInTrespass &amp; $knowAboutPlayer" saveVersion="2">
																													<Then canSkip="1">
																														<AtomicDecorator>
																															<Sequence>
																																<IsPublicEnemy Soul="$this.id" FailOnSubtreeMissing="false" saveVersion="2">
																																	<Else canSkip="1">
																																		<ShowTutorial Name="crime_BodyFoundTrespass" />
																																	</Else>
																																</IsPublicEnemy>
																																<CreateCombatInformation Victim="$body" AttackKind="$lastHitByPlayer.kind" DirectHit="true" AddConfiscation="true" Information="$information" />
																																<Function_crime_addEyeWitness information="$information" npc="$this.id" nodeLabel="35387040" />
																																<Function_crime_assessTrespass observer="" information="$trespassInformation" nodeLabel="72063937" />
																																<AddLink From="$this.id" To="$body" Tag="&apos;crime_followUpBehavior_wakeUp&apos;" Data="active(true)" LinkOpHandleMode="OverWrite" />
																																<GetSpatialInfo In="$body" Out="$bodyPos" What="Position" />
																																<CheckReactionLimit DesiredReactionType="$enum:crime_reactionType.reactToUnconsciousBody" Information="" Position="$bodyPos" StimulusKind="$enum:crime_stimulusKind.unconsciousBody" ShouldReact="$shouldWakeUp" ShouldWatch="$shouldWatch" />
																																<IfCondition failOnCondition="false" condition="$shouldWakeUp">
																																	<Function_callInterrupt_wakeUp body="$body" ignorePriority="false" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" nodeLabel="22217054" />
																																</IfCondition>
																																<Switch>
																																	<EntityContextCheck context="crime_isAuthority" target="$this.id" saveVersion="2">
																																		<Then canSkip="1">
																																			<Expression expressions="$canLookAround = true" />
																																		</Then>
																																	</EntityContextCheck>
																																	<EntityContextCheck context="crime_isCamper" target="$this.id" saveVersion="2">
																																		<Then canSkip="1">
																																			<Expression expressions="$canLookAround = true" />
																																		</Then>
																																	</EntityContextCheck>
																																	<EntityContextCheck context="crime_isLoner" target="$this.id" saveVersion="2">
																																		<Then canSkip="1">
																																			<Expression expressions="$canLookAround = true" />
																																		</Then>
																																	</EntityContextCheck>
																																	<EntityContextCheck context="crime_isGroupMember" target="$this.id" saveVersion="2">
																																		<Then canSkip="1">
																																			<Expression expressions="$canLookAround = true" />
																																		</Then>
																																	</EntityContextCheck>
																																	<DefaultBranch>
																																		<Success />
																																	</DefaultBranch>
																																</Switch>
																																<IfElseCondition failOnCondition="false" condition="$canLookAround" saveVersion="2">
																																	<Then canSkip="1">
																																		<Sequence>
																																			<CheckReactionLimit DesiredReactionType="$enum:crime_reactionType.investigate" Information="$information" Position="" StimulusKind="$stimulusKind" ShouldReact="$shouldReact" ShouldWatch="$shouldWatch" />
																																			<IfCondition failOnCondition="false" condition="$shouldReact">
																																				<Sequence>
																																					<Expression expressions="$lookAroundFollowUpData.information = $information &#10;$lookAroundFollowUpData.source = $enum:crime_source.direct &#10;$lookAroundFollowUpData.stimulusKind = $stimulusKind" />
																																					<AddLink From="$this.id" To="$this.id" Tag="&apos;crime_followUpBehavior_lookAround&apos;" Data="$lookAroundFollowUpData" LinkOpHandleMode="OverWrite" />
																																					<IfCondition failOnCondition="false" condition="~$shouldWakeUp">
																																						<Function_callInterrupt_lookAround alarmReactionType="$enum:crime_alarmReactionType.none" amIBuddy="false" corpseState="$enum:corpseState.undiscovered" directHit="false" forcePebbleReaction="false" ignorePriority="false" information_look="$information" initiator="$enum:switch_interruptInitiator.switch" missingNpc="$__null" position="" previousReaction="$enum:crime_reactionKind.unknown" reactingToSoundBecauseAlone="false" reportedBy="$__null" searchDirection="" searchPointsFromDirection="false" shooter="$__player" soundType="$enum:sound.invalid" source="$enum:crime_source.direct" stimulusAnimalAbuse="" stimulusKind="$stimulusKind" nodeLabel="50440014" />
																																					</IfCondition>
																																				</Sequence>
																																			</IfCondition>
																																		</Sequence>
																																	</Then>
																																	<Else canSkip="1">
																																		<Sequence>
																																			<CheckReactionLimit DesiredReactionType="$enum:crime_reactionType.report" Information="$information" Position="" StimulusKind="$stimulusKind" ShouldReact="$shouldReact" ShouldWatch="$shouldWatch" />
																																			<IfCondition failOnCondition="false" condition="$shouldReact">
																																				<Sequence>
																																					<Expression expressions="$assaultData.attacker = $__player &#10;$assaultData.victim = $body &#10;$assaultData.kind = $lastHitByPlayer.kind &#10;$assaultData.hitStrength = $enum:HitReactionStrength.Fatal &#10;$assaultData.directHit = true &#10; &#10;$reportFollowUpData.information = $information &#10;$reportFollowUpData.source = $enum:crime_source.direct &#10;$reportFollowUpData.stimulusKind = $stimulusKind &#10;$reportFollowUpData.assaultData = $assaultData" />
																																					<AddLink From="$this.id" To="$this.id" Tag="&apos;crime_followUpBehavior_report&apos;" Data="$reportFollowUpData" LinkOpHandleMode="OverWrite" />
																																					<IfCondition failOnCondition="false" condition="~$shouldWakeUp">
																																						<Sequence>
																																							<ChooseReportDestination Information="$information" IsImportant="false" Destination="$reportDestination" DestinationType="$reportDestinationType" />
																																							<IfCondition failOnCondition="false" condition="$reportDestinationType &gt; $enum:crime_reportDestinationType.none">
																																								<Function_callInterrupt_report assaultData="$assaultData" corpseState="$enum:corpseState.undiscovered" criminalFreshness="$enum:crime_criminalFreshness.unknown" disableDetectedIcon="true" disableEmitting="false" freshlyAttributedCrime="false" ignorePriority="false" information="$information" initiator="$enum:switch_interruptInitiator.switch" movementSpeed="$enum:movementSpeed.sprint" previousReaction="$enum:crime_reactionKind.unknown" reportDestination="$reportDestination" reportDestinationType="$reportDestinationType" source="$enum:crime_source.direct" stimulusKind="$stimulusKind" nodeLabel="30092295" />
																																							</IfCondition>
																																						</Sequence>
																																					</IfCondition>
																																				</Sequence>
																																			</IfCondition>
																																		</Sequence>
																																	</Else>
																																</IfElseCondition>
																															</Sequence>
																														</AtomicDecorator>
																													</Then>
																													<Else canSkip="1">
																														<Sequence>
																															<AddLink From="$this.id" To="$body" Tag="&apos;crime_followUpBehavior_wakeUp&apos;" Data="active(true)" LinkOpHandleMode="OverWrite" />
																															<Selector>
																																<RetrieveInformation PerceivedWuid="$body" label="&apos;nonAttributedCrime&apos;" OutVariable="$information" />
																																<Sequence>
																																	<AtomicDecorator>
																																		<Sequence>
																																			<CreateInformationWrapper Label="&apos;nonAttributedCrime&apos;" PerceivedWuid="$body" PositionType="perceivedWuid" PositionVec3="" PositionWuid="" Information="$information" />
																																			<LockDynamicInformationValues Information="$information">
																																				<Sequence>
																																					<SetDynamicInformationValue Information="$information" Tag="&apos;stimulusKind&apos;" Variable="" Type="&apos;enum:crime_stimulusKind&apos;" Value="$stimulusKind" />
																																					<SetDynamicInformationValue Information="$information" Tag="&apos;kind&apos;" Variable="$lastHitByPlayer.kind" Type="" Value="" />
																																					<SetDynamicInformationValue Information="$information" Tag="&apos;victim&apos;" Variable="$body" Type="" Value="" />
																																				</Sequence>
																																			</LockDynamicInformationValues>
																																		</Sequence>
																																	</AtomicDecorator>
																																	<Expression expressions="$stimulusNonAttributedCrime.information = $information" />
																																	<Function_switch_handleStimulusNonAttributedCrime stimulus="$stimulusNonAttributedCrime" nodeLabel="41479089" />
																																</Sequence>
																															</Selector>
																														</Sequence>
																													</Else>
																												</IfElseCondition>
																											</Sequence>
																										</Else>
																									</EntityContextCheck>
																								</Else>
																							</HasSeenPlayer>
																						</Then>
																						<Else canSkip="1">
																							<EntityContextCheck context="crime_bff" target="" saveVersion="2">
																								<Else canSkip="1">
																									<Sequence>
																										<Expression expressions="$stimulus.body = $body" />
																										<Function_switch_handleStimulusUnconsciousBody stimulus="$stimulus" nodeLabel="75186036" />
																									</Sequence>
																								</Else>
																							</EntityContextCheck>
																						</Else>
																					</IfElseCondition>
																				</Sequence>
																			</Else>
																		</IsIndifferent>
																	</Sequence>
																</DefaultBranch>
															</Switch>
														</Sequence>
													</Then>
													<Else canSkip="1">
														<Success />
													</Else>
												</CheckRelationshipInterval_SoulToSoul>
											</Else>
										</RelationContextCheck>
									</Else>
								</EntityContextCheck>
							</Else>
						</EntityContextCheck>
					</Else>
				</IfElseCondition>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="assaultData" comment="" />
				<Variable name="bodyData" comment="" />
				<Variable name="bodyInTrespass" comment="" />
				<Variable name="bodyPos" comment="" />
				<Variable name="canLookAround" comment="" />
				<Variable name="checkBody" comment="" />
				<Variable name="checkRelation" comment="" />
				<Variable name="crimeAttributable" comment="" />
				<Variable name="foundInHome" comment="" />
				<Variable name="information" comment="" />
				<Variable name="knowAboutPlayer" comment="" />
				<Variable name="lastHitByPlayer" comment="" />
				<Variable name="lookAroundFollowUpData" comment="" />
				<Variable name="now" comment="" />
				<Variable name="playerCrimeInfoKnown" comment="" />
				<Variable name="reactionSuppressed" comment="" />
				<Variable name="reportDestination" comment="" />
				<Variable name="reportDestinationType" comment="" />
				<Variable name="reportFollowUpData" comment="" />
				<Variable name="shouldReact" comment="" />
				<Variable name="shouldWakeUp" comment="" />
				<Variable name="shouldWatch" comment="" />
				<Variable name="stimulus" comment="" />
				<Variable name="stimulusCombat" comment="" />
				<Variable name="stimulusKind" comment="" />
				<Variable name="stimulusLyingBody" comment="" />
				<Variable name="stimulusNonAttributedCrime" comment="" />
				<Variable name="trespassArea" comment="" />
				<Variable name="trespassInformation" comment="" />
				<Variable name="trespassSevereness" comment="" />
				<Variable name="body" comment="" />
				<Variable name="reactionIntermediateData" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Else>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Else>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</Then>
													<Else>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Else>
												</EntityContextCheck>
												<PlayersCrimeInformationKnown hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</PlayersCrimeInformationKnown>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GameContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Else>
																<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Else>
																		<Function_crime_robUnconsciousPlayer hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_crime_robUnconsciousPlayer>
																	</Else>
																</EntityContextCheck>
															</Else>
														</GameContextCheck>
														<GameContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Else>
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<DetermineTrespassReaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</DetermineTrespassReaction>
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Function_callInterrupt_throwOutUnconsciousPlayer hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_callInterrupt_throwOutUnconsciousPlayer>
																	</IfCondition>
																</Sequence>
															</Else>
														</GameContextCheck>
													</Sequence>
												</IfCondition>
											</Sequence>
										</Else>
									</EntityContextCheck>
								</Else>
							</EntityContextCheck>
						</Then>
						<Else>
							<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<IgnorePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</IgnorePerception>
								</Then>
								<Else>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<IgnorePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</IgnorePerception>
										</Then>
										<Else>
											<RelationContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<IgnorePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</IgnorePerception>
												</Then>
												<Else>
													<CheckRelationshipInterval_SoulToSoul hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Else>
																		<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																			<OutputBreakpoints />
																			<Else>
																				<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Expression>
																				</DistanceCondition>
																			</Else>
																		</EntityContextCheck>
																	</Else>
																</EntityContextCheck>
																<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																			<OutputBreakpoints />
																			<Else>
																				<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Expression>
																					<Function_switch_handleStimulusLyingBody hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Function_switch_handleStimulusLyingBody>
																				</Sequence>
																			</Else>
																		</EntityContextCheck>
																	</IfCondition>
																	<DefaultBranch>
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</LinkTagFilter>
																				<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</WUIDFilter>
																				<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																				</Datalyzer>
																			</GraphSearch>
																			<IsIndifferent hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																				<OutputBreakpoints />
																				<Then>
																					<IgnorePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</IgnorePerception>
																				</Then>
																				<Else>
																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<GraphSearch hasInputBreakpoint="0" comment="Retrieve lastHit data" breakpointFlags="0">
																							<OutputBreakpoints />
																							<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</WUIDFilter>
																							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</LinkTagFilter>
																							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																								<OutputBreakpoints />
																							</Datalyzer>
																						</GraphSearch>
																						<DetermineTrespassReaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</DetermineTrespassReaction>
																						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</Expression>
																						</IfCondition>
																						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																							<OutputBreakpoints />
																							<Then>
																								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</Expression>
																							</Then>
																							<Else>
																								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</Expression>
																							</Else>
																						</IfElseCondition>
																						<IgnorePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</IgnorePerception>
																						<Function_crime_updateUnconsciousBodyData hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Function_crime_updateUnconsciousBodyData>
																						<GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</GetTime>
																						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																							<OutputBreakpoints />
																							<Then>
																								<HasSeenPlayer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																									<OutputBreakpoints />
																									<Then>
																										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																											<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																											</GetSpatialInfo>
																											<Function_crime_isPlayerSuspicious hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																											</Function_crime_isPlayerSuspicious>
																											<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																												<OutputBreakpoints />
																												<Then>
																													<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																														<OutputBreakpoints />
																														<Then>
																															<Function_crime_addBffIntermediateBarkData hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																															</Function_crime_addBffIntermediateBarkData>
																														</Then>
																														<Else>
																															<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																	<OutputBreakpoints />
																																	<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																		<OutputBreakpoints />
																																		<Then>
																																			<IsPublicEnemy hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																				<OutputBreakpoints />
																																				<Else>
																																					<ShowTutorial hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																						<OutputBreakpoints />
																																					</ShowTutorial>
																																				</Else>
																																			</IsPublicEnemy>
																																		</Then>
																																		<Else>
																																			<Function_crime_playerIsSuspiciousTutorial hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																				<OutputBreakpoints />
																																			</Function_crime_playerIsSuspiciousTutorial>
																																		</Else>
																																	</IfElseCondition>
																																	<CreateCombatInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</CreateCombatInformation>
																																	<Function_crime_addEyeWitness hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</Function_crime_addEyeWitness>
																																	<Function_crime_assessTrespass hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</Function_crime_assessTrespass>
																																	<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</AddLink>
																																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</Expression>
																																	<Function_switch_handleStimulusCombat hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</Function_switch_handleStimulusCombat>
																																</Sequence>
																															</AtomicDecorator>
																														</Else>
																													</EntityContextCheck>
																												</Then>
																												<Else>
																													<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																														<OutputBreakpoints />
																														<Else>
																															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																	<OutputBreakpoints />
																																</Expression>
																																<Function_switch_handleStimulusUnconsciousBody hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																	<OutputBreakpoints />
																																</Function_switch_handleStimulusUnconsciousBody>
																															</Sequence>
																														</Else>
																													</EntityContextCheck>
																												</Else>
																											</IfElseCondition>
																										</Sequence>
																									</Then>
																									<Else>
																										<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																											<OutputBreakpoints />
																											<Else>
																												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																														<OutputBreakpoints />
																														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																															<GetHomeFromArea hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																															</GetHomeFromArea>
																															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																																<Function_crime_checkLongTermMemoryTrespass hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																	<OutputBreakpoints />
																																</Function_crime_checkLongTermMemoryTrespass>
																															</IfCondition>
																														</Sequence>
																													</IfCondition>
																													<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																														<OutputBreakpoints />
																														<Then>
																															<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																	<OutputBreakpoints />
																																	<IsPublicEnemy hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																		<OutputBreakpoints />
																																		<Else>
																																			<ShowTutorial hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																				<OutputBreakpoints />
																																			</ShowTutorial>
																																		</Else>
																																	</IsPublicEnemy>
																																	<CreateCombatInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</CreateCombatInformation>
																																	<Function_crime_addEyeWitness hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</Function_crime_addEyeWitness>
																																	<Function_crime_assessTrespass hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</Function_crime_assessTrespass>
																																	<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</AddLink>
																																	<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</GetSpatialInfo>
																																	<CheckReactionLimit hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</CheckReactionLimit>
																																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																		<Function_callInterrupt_wakeUp hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																			<OutputBreakpoints />
																																		</Function_callInterrupt_wakeUp>
																																	</IfCondition>
																																	<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																		<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																			<OutputBreakpoints />
																																			<Then>
																																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																					<OutputBreakpoints />
																																				</Expression>
																																			</Then>
																																		</EntityContextCheck>
																																		<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																			<OutputBreakpoints />
																																			<Then>
																																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																					<OutputBreakpoints />
																																				</Expression>
																																			</Then>
																																		</EntityContextCheck>
																																		<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																			<OutputBreakpoints />
																																			<Then>
																																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																					<OutputBreakpoints />
																																				</Expression>
																																			</Then>
																																		</EntityContextCheck>
																																		<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																			<OutputBreakpoints />
																																			<Then>
																																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																					<OutputBreakpoints />
																																				</Expression>
																																			</Then>
																																		</EntityContextCheck>
																																		<DefaultBranch>
																																			<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																				<OutputBreakpoints />
																																			</Success>
																																		</DefaultBranch>
																																	</Switch>
																																	<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																		<OutputBreakpoints />
																																		<Then>
																																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																				<OutputBreakpoints />
																																				<CheckReactionLimit hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																					<OutputBreakpoints />
																																				</CheckReactionLimit>
																																				<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																					<OutputBreakpoints />
																																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																						<OutputBreakpoints />
																																						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																						</Expression>
																																						<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																						</AddLink>
																																						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																							<Function_callInterrupt_lookAround hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																								<OutputBreakpoints />
																																							</Function_callInterrupt_lookAround>
																																						</IfCondition>
																																					</Sequence>
																																				</IfCondition>
																																			</Sequence>
																																		</Then>
																																		<Else>
																																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																				<OutputBreakpoints />
																																				<CheckReactionLimit hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																					<OutputBreakpoints />
																																				</CheckReactionLimit>
																																				<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																					<OutputBreakpoints />
																																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																						<OutputBreakpoints />
																																						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																						</Expression>
																																						<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																						</AddLink>
																																						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																								<OutputBreakpoints />
																																								<ChooseReportDestination hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																								</ChooseReportDestination>
																																								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																									<Function_callInterrupt_report hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																										<OutputBreakpoints />
																																									</Function_callInterrupt_report>
																																								</IfCondition>
																																							</Sequence>
																																						</IfCondition>
																																					</Sequence>
																																				</IfCondition>
																																			</Sequence>
																																		</Else>
																																	</IfElseCondition>
																																</Sequence>
																															</AtomicDecorator>
																														</Then>
																														<Else>
																															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																																<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																	<OutputBreakpoints />
																																</AddLink>
																																<Selector hasInputBreakpoint="0" comment="do this once" breakpointFlags="0">
																																	<OutputBreakpoints />
																																	<RetrieveInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</RetrieveInformation>
																																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																		<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																			<OutputBreakpoints />
																																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																				<OutputBreakpoints />
																																				<CreateInformationWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																					<OutputBreakpoints />
																																				</CreateInformationWrapper>
																																				<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																					<OutputBreakpoints />
																																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																						<OutputBreakpoints />
																																						<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																						</SetDynamicInformationValue>
																																						<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																						</SetDynamicInformationValue>
																																						<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																						</SetDynamicInformationValue>
																																					</Sequence>
																																				</LockDynamicInformationValues>
																																			</Sequence>
																																		</AtomicDecorator>
																																		<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																			<OutputBreakpoints />
																																		</Expression>
																																		<Function_switch_handleStimulusNonAttributedCrime hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																			<OutputBreakpoints />
																																		</Function_switch_handleStimulusNonAttributedCrime>
																																	</Sequence>
																																</Selector>
																															</Sequence>
																														</Else>
																													</IfElseCondition>
																												</Sequence>
																											</Else>
																										</EntityContextCheck>
																									</Else>
																								</HasSeenPlayer>
																							</Then>
																							<Else>
																								<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																									<OutputBreakpoints />
																									<Else>
																										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																											</Expression>
																											<Function_switch_handleStimulusUnconsciousBody hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																											</Function_switch_handleStimulusUnconsciousBody>
																										</Sequence>
																									</Else>
																								</EntityContextCheck>
																							</Else>
																						</IfElseCondition>
																					</Sequence>
																				</Else>
																			</IsIndifferent>
																		</Sequence>
																	</DefaultBranch>
																</Switch>
															</Sequence>
														</Then>
														<Else>
															<Success hasInputBreakpoint="0" comment="handled in awareness_enemy" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</Else>
													</CheckRelationshipInterval_SoulToSoul>
												</Else>
											</RelationContextCheck>
										</Else>
									</EntityContextCheck>
								</Else>
							</EntityContextCheck>
						</Else>
					</IfElseCondition>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>