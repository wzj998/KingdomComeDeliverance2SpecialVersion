<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="callInterrupt_choke" is_function="1">
		<Variables>
			<Variable name="chokeData" type="switch:interruptData:choke" values="" isPersistent="0" form="single" />
			<Variable name="mrkev" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="previousReaction" type="enum:crime_reactionKind" values="$enum:crime_reactionKind.unknown" isPersistent="0" form="single" />
			<Variable name="priority" type="_int" values="165" isPersistent="0" form="single" />
			<Variable name="shallPass" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="ignorePriority" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AtomicDecorator>
					<Sequence>
						<Function_crime_checkReactionPriority priority="$priority" shallPass="$shallPass" nodeLabel="79900010" />
						<IfCondition failOnCondition="false" condition="$ignorePriority | $shallPass">
							<Sequence>
								<Function_crime_getMrkev mrkev="$mrkev" nodeLabel="93738043" />
								<GetReactionKindByContext Target="$this.id" ReactionKind="$previousReaction" />
								<Expression expressions="$chokeData.initiatedBy = $enum:switch_interruptInitiator.switch &#10;$chokeData.stimulusKind = $enum:crime_stimulusKind.hit &#10;$chokeData.source = $enum:crime_source.direct &#10;$chokeData.previousReaction = $previousReaction" />
								<AddInterrupt_choke chokeData="$chokeData" Target="$this.id" Host="$mrkev" Behavior="&apos;interrupt_choke&apos;" Priority="$priority" IgnorePriorityOnPreviousInterrupt="$ignorePriority" urgency="Instant" Aliveness="Alive" Privileged="false" FastForward="false" />
							</Sequence>
						</IfCondition>
					</Sequence>
				</AtomicDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="chokeData" comment="" />
				<Variable name="mrkev" comment="" />
				<Variable name="previousReaction" comment="" />
				<Variable name="priority" comment="" />
				<Variable name="shallPass" comment="" />
				<Variable name="ignorePriority" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AtomicDecorator hasInputBreakpoint="0" comment="Risky to have suppress here" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_crime_checkReactionPriority hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_crime_checkReactionPriority>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Function_crime_getMrkev hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_getMrkev>
									<GetReactionKindByContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetReactionKindByContext>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<AddInterrupt_choke hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AddInterrupt_choke>
								</Sequence>
							</IfCondition>
						</Sequence>
					</AtomicDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>