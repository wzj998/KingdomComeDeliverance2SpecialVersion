<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="switch_shouldHandlePerceptible" is_function="1">
    <Variables>
      <Variable name="companionMaster" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="perceptible" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="shouldHandle" type="_bool" values="" isPersistent="0" form="single" requirementType="Out" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Switch>
          <EntityContextCheck context="switch_playerDog" target="$perceptible" saveVersion="2">
            <Then canSkip="1">
              <Sequence>
                <GetCompanionMaster Companion="$perceptible" MasterOut="$companionMaster" />
                <Expression expressions="$shouldHandle = $companionMaster == $__player" />
              </Sequence>
            </Then>
          </EntityContextCheck>
          <DefaultBranch>
            <Expression expressions="$shouldHandle = true" />
          </DefaultBranch>
        </Switch>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="companionMaster" comment="" />
        <Variable name="perceptible" comment="" />
        <Variable name="shouldHandle" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <EntityContextCheck hasInputBreakpoint="0" comment="#KCD2-129848" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <GetCompanionMaster hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </GetCompanionMaster>
                  <Expression hasInputBreakpoint="0" comment="Only handle player&apos;s Dog if the player is actually the master" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Expression>
                </Sequence>
              </Then>
            </EntityContextCheck>
            <DefaultBranch>
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
            </DefaultBranch>
          </Switch>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>