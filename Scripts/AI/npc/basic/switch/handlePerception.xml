<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_handlePerception" is_function="1">
		<Variables>
			<Variable name="awareness" type="switch:awareness" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="perception" type="perceptionInfo" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<CheckWuidValid wuid="$perception.perceptible" FailSubtMissing="false" saveVersion="2">
					<Then canSkip="1">
						<Sequence>
							<Expression expressions="$awareness.perceptible = $perception.perceptible" />
							<IfElseCondition failOnCondition="false" condition="$perception.isMonsterLOD" saveVersion="2">
								<Then canSkip="1">
									<IfCondition failOnCondition="false" condition="$perception.threshold == 1">
										<Function_switch_handleMlodAwareness awareness="$awareness" nodeLabel="88336921" />
									</IfCondition>
								</Then>
								<Else canSkip="1">
									<Sequence>
										<IfElseCondition failOnCondition="false" condition="$perception.threshold &gt; 0 &amp; &#10;$perception.threshold &lt; 1" saveVersion="2">
											<Then canSkip="1">
												<EntityContext context="switch_recognitionLevel_I" target="">
													<Function_switch_handleAwareness awareness="$awareness" nodeLabel="52090669" />
												</EntityContext>
											</Then>
											<Else canSkip="1">
												<IfCondition failOnCondition="false" condition="$perception.threshold == 1">
													<IfElseCondition failOnCondition="false" condition="$perception.isInsideRecognitionBorder" saveVersion="2">
														<Then canSkip="1">
															<Function_switch_handleAwareness awareness="$awareness" nodeLabel="50927283" />
														</Then>
														<Else canSkip="1">
															<EntityContextCheck context="stealth_disableRecognitionLevel_II" target="" saveVersion="2">
																<Else canSkip="1">
																	<EntityContext context="switch_recognitionLevel_II" target="">
																		<Function_switch_handleAwareness awareness="$awareness" nodeLabel="87528070" />
																	</EntityContext>
																</Else>
															</EntityContextCheck>
														</Else>
													</IfElseCondition>
												</IfCondition>
											</Else>
										</IfElseCondition>
										<IfCondition failOnCondition="false" condition="$perception.perceptible == $__player &amp; &#10;$perception.threshold == 0">
											<Sequence>
												<SetExternalLock LockManagerType="Intellect" Locked="true" LockName="&apos;crime_escalationLevel_recognizing&apos;" />
												<SetExternalLock LockManagerType="Intellect" Locked="true" LockName="&apos;observerModeAim_lock&apos;" />
											</Sequence>
										</IfCondition>
									</Sequence>
								</Else>
							</IfElseCondition>
						</Sequence>
					</Then>
					<Else canSkip="1">
						<Success />
					</Else>
				</CheckWuidValid>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="awareness" comment="" />
				<Variable name="perception" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-730" editorPosY="-30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_switch_handleMlodAwareness hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_switch_handleMlodAwareness>
										</IfCondition>
									</Then>
									<Else>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_switch_handleAwareness hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_switch_handleAwareness>
													</EntityContext>
												</Then>
												<Else>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Function_switch_handleAwareness hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_switch_handleAwareness>
															</Then>
															<Else>
																<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Else>
																		<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Function_switch_handleAwareness hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Function_switch_handleAwareness>
																		</EntityContext>
																	</Else>
																</EntityContextCheck>
															</Else>
														</IfElseCondition>
													</IfCondition>
												</Else>
											</IfElseCondition>
											<IfCondition hasInputBreakpoint="0" comment="player is special" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</SetExternalLock>
													<SetExternalLock hasInputBreakpoint="0" comment="If player moved out of sight, cancel aim observerMode" breakpointFlags="0">
														<OutputBreakpoints />
													</SetExternalLock>
												</Sequence>
											</IfCondition>
										</Sequence>
									</Else>
								</IfElseCondition>
							</Sequence>
						</Then>
						<Else>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Else>
					</CheckWuidValid>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>