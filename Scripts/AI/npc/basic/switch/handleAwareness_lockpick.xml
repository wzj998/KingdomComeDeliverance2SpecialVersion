<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_handleAwareness_lockpick" is_function="1">
		<Variables>
			<Variable name="alreadyReactedToLockpickInstance" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="check" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="lock" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="owner" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stimulus" type="switch:stimulus:lockpick" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="reactionIntermediateData" type="switch:reactionIntermediateData" values="" isPersistent="0" form="single" requirementType="Reference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextCheck context="crime_ignoreLockpicking" target="" saveVersion="2">
					<Else canSkip="1">
						<Sequence>
							<Switch>
								<EntityContextCheck context="switch_recognitionLevel_I" target="" saveVersion="2">
									<Then canSkip="1">
										<Success />
									</Then>
								</EntityContextCheck>
								<EntityContextCheck context="switch_recognitionLevel_II" target="" saveVersion="2">
									<Then canSkip="1">
										<Success />
									</Then>
								</EntityContextCheck>
								<DefaultBranch>
									<SuppressFailure>
										<Sequence>
											<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;crime_reactedToLockpickInstance&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
												<WUIDFilter WUID="$this.id" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
											</GraphSearch>
											<Expression expressions="$alreadyReactedToLockpickInstance = true" />
										</Sequence>
									</SuppressFailure>
								</DefaultBranch>
							</Switch>
							<IfCondition failOnCondition="false" condition="~$alreadyReactedToLockpickInstance">
								<Sequence>
									<Switch>
										<EntityContextCheck context="switch_recognitionLevel_I" target="" saveVersion="2">
											<Then canSkip="1">
												<Success />
											</Then>
										</EntityContextCheck>
										<EntityContextCheck context="switch_recognitionLevel_II" target="" saveVersion="2">
											<Then canSkip="1">
												<Success />
											</Then>
										</EntityContextCheck>
										<DefaultBranch>
											<AddLink From="$__player" To="$this.id" Tag="&apos;crime_reactedToLockpickInstance&apos;" Data="" LinkOpHandleMode="Error" />
										</DefaultBranch>
									</Switch>
									<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;lockpick&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;lockpick&apos;" prune="true" negprune="false" Parent="" Child="$lock" Data="" />
									</GraphSearch>
									<GetOwner Object="$lock" Owner="$owner" />
									<Function_crime_checkReactionToTheftFrom owner="$owner" result="$check" nodeLabel="22380417" />
									<IfCondition failOnCondition="false" condition="~$check">
										<IsPublicEnemy Soul="$this.id" FailOnSubtreeMissing="false" saveVersion="2">
											<Else canSkip="1">
												<EntityContextCheck context="crime_ignorePilloryBreak" target="" saveVersion="2">
													<Else canSkip="1">
														<SuppressFailure>
															<Sequence>
																<GraphSearch Origin="$lock" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																	<LinkTagFilter tag="&apos;crime_pilloryLock_reverse&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																</GraphSearch>
																<Expression expressions="$check = true" />
															</Sequence>
														</SuppressFailure>
													</Else>
												</EntityContextCheck>
											</Else>
										</IsPublicEnemy>
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$check">
										<Selector>
											<GraphSearch Origin="$lock" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;crime_lockpickIsLegal&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
												<UnionOp Results="true" Advance="true" EndOp="true" ShortCircuit="false" LocalNodalyzers="false">
													<WUIDFilter WUID="$this.id" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<WUIDFilter WUID="$lock" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
												</UnionOp>
											</GraphSearch>
											<EntityContextCheck context="crime_bff" target="" saveVersion="2">
												<Then canSkip="1">
													<Function_crime_addBffIntermediateBarkData corpse="" isCorpse="false" isViolent="false" reactionIntermediateData="$reactionIntermediateData" nodeLabel="99517188" />
												</Then>
												<Else canSkip="1">
													<Sequence>
														<Expression expressions="$stimulus.lock = $lock" />
														<Function_switch_handleStimulusLockpick stimulus="$stimulus" nodeLabel="91998001" />
													</Sequence>
												</Else>
											</EntityContextCheck>
										</Selector>
									</IfCondition>
								</Sequence>
							</IfCondition>
						</Sequence>
					</Else>
				</EntityContextCheck>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="alreadyReactedToLockpickInstance" comment="" />
				<Variable name="check" comment="" />
				<Variable name="lock" comment="" />
				<Variable name="owner" comment="" />
				<Variable name="stimulus" comment="" />
				<Variable name="reactionIntermediateData" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-440" editorPosY="-550" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Else>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Then>
									</EntityContextCheck>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Then>
									</EntityContextCheck>
									<DefaultBranch>
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
													<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WUIDFilter>
												</GraphSearch>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Sequence>
										</SuppressFailure>
									</DefaultBranch>
								</Switch>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="1">
										<OutputBreakpoints />
										<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Then>
											</EntityContextCheck>
											<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Then>
											</EntityContextCheck>
											<DefaultBranch>
												<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</AddLink>
											</DefaultBranch>
										</Switch>
										<GraphSearch hasInputBreakpoint="0" comment="Retrieve lockpicked lock" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<GetOwner hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetOwner>
										<Function_crime_checkReactionToTheftFrom hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_checkReactionToTheftFrom>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IsPublicEnemy hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Else>
													<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Else>
															<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</LinkTagFilter>
																	</GraphSearch>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Sequence>
															</SuppressFailure>
														</Else>
													</EntityContextCheck>
												</Else>
											</IsPublicEnemy>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
													<UnionOp hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</WUIDFilter>
														<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</WUIDFilter>
													</UnionOp>
												</GraphSearch>
												<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Function_crime_addBffIntermediateBarkData hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_crime_addBffIntermediateBarkData>
													</Then>
													<Else>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
															<Function_switch_handleStimulusLockpick hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_switch_handleStimulusLockpick>
														</Sequence>
													</Else>
												</EntityContextCheck>
											</Selector>
										</IfCondition>
									</Sequence>
								</IfCondition>
							</Sequence>
						</Else>
					</EntityContextCheck>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>