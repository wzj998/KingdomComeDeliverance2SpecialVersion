<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="callInterrupt_scan" is_function="1">
		<Variables>
			<Variable name="lookAroundUpdateScanPosition" type="crime:lookAroundUpdateScanPosition" values="" isPersistent="0" form="single" />
			<Variable name="mrkev" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="priority" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="reactorData" type="crime:reactor" values="" isPersistent="0" form="single" />
			<Variable name="scanData" type="switch:interruptData:scan" values="" isPersistent="0" form="single" />
			<Variable name="shallPass" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="shouldReact" type="_bool" values="true" isPersistent="0" form="single" />
			<Variable name="urgency" type="enum:urgency" values="$enum:urgency.fast" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="corpseState" type="enum:corpseState" values="$enum:corpseState.undiscovered" isPersistent="0" form="single" requirementType="In" />
			<Variable name="ignorePriority" type="_bool" values="false" isPersistent="0" form="single" requirementType="In" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" requirementType="In" optional="1" />
			<Variable name="initiator" type="enum:switch_interruptInitiator" values="$enum:switch_interruptInitiator.unknown" isPersistent="0" form="single" requirementType="In" />
			<Variable name="previousReaction" type="enum:crime_reactionKind" values="$enum:crime_reactionKind.unknown" isPersistent="0" form="single" requirementType="In" />
			<Variable name="scanDirection" type="vec3" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="source" type="enum:crime_source" values="$enum:crime_source.direct" isPersistent="0" form="single" requirementType="In" />
			<Variable name="stimulusAnimalAbuse" type="switch:stimulus:animalAbuse" values="" isPersistent="0" form="single" requirementType="In" optional="1" />
			<Variable name="stimulusKind" type="enum:crime_stimulusKind" values="$enum:crime_stimulusKind.shooter" isPersistent="0" form="single" requirementType="In" />
			<Variable name="stimulusMissingAnimal" type="switch:stimulus:missingAnimal" values="" isPersistent="0" form="single" requirementType="In" optional="1" />
			<Variable name="stimulusShooter" type="switch:stimulus:shooter" values="" isPersistent="0" form="single" requirementType="In" optional="1" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AtomicDecorator>
					<GameContextCheck context="crime_global_suppressBehavioralReaction" saveVersion="2">
						<Else canSkip="1">
							<EntityContextCheck context="crime_suppressBehavioralReaction" target="" saveVersion="2">
								<Else canSkip="1">
									<Sequence>
										<Switch>
											<IfCondition failOnCondition="false" condition="$stimulusKind == $enum:crime_stimulusKind.dramaticBark">
												<Expression expressions="$priority = 13" />
											</IfCondition>
											<IfCondition failOnCondition="false" condition="$stimulusKind == $enum:crime_stimulusKind.shooter &amp; &#10;$stimulusShooter.projectileType == $enum:crime_projectileType.arrow">
												<Sequence>
													<Expression expressions="$priority = 99" />
													<EntityContextCheck context="crime_interruptLookAround" target="" saveVersion="2">
														<Then canSkip="1">
															<EntityContextCheck context="crime_interruptLookAround_sound" target="" saveVersion="2">
																<Else canSkip="1">
																	<SuppressFailure>
																		<Sequence>
																			<Expression expressions="$lookAroundUpdateScanPosition.scanDirection = $scanDirection &#10;$shouldReact = false" />
																			<InstantSendMessageToNPC target="$this.id" variable="$lookAroundUpdateScanPosition" />
																		</Sequence>
																	</SuppressFailure>
																</Else>
															</EntityContextCheck>
														</Then>
													</EntityContextCheck>
												</Sequence>
											</IfCondition>
											<IfCondition failOnCondition="false" condition="$stimulusKind == $enum:crime_stimulusKind.shooter &amp; &#10;$stimulusShooter.projectileType == $enum:crime_projectileType.pebble">
												<Expression expressions="$priority = 88" />
											</IfCondition>
											<DefaultBranch>
												<Expression expressions="$priority = 99" />
											</DefaultBranch>
										</Switch>
										<Function_crime_checkReactionPriority priority="$priority" shallPass="$shallPass" nodeLabel="82132262" />
										<IfCondition failOnCondition="false" condition="$shouldReact &amp; ($shallPass | $ignorePriority)">
											<Sequence>
												<Function_crime_getMrkev mrkev="$mrkev" nodeLabel="40853609" />
												<EntityContextCheck context="crime_spawnMissingNpcVolume_behavior" target="$this.id" saveVersion="2">
													<Then canSkip="1">
														<IfCondition failOnCondition="false" condition="$enum:crime_stimulusKind == $enum:crime_stimulusKind.shooter">
															<Function_crime_spawnMissingNpcVolume destinationWuid="$stimulusShooter.shooter" nodeLabel="78215088" />
														</IfCondition>
													</Then>
												</EntityContextCheck>
												<IfCondition failOnCondition="false" condition="$initiator == $enum:switch_interruptInitiator.switch | &#10;$previousReaction == $enum:crime_reactionKind.unknown">
													<GetReactionKindByContext Target="$this.id" ReactionKind="$previousReaction" />
												</IfCondition>
												<IfCondition failOnCondition="false" condition="$information.label == &apos;&apos;">
													<Sequence>
														<CreateInformationWrapper Label="&apos;motivation&apos;" PerceivedWuid="$this.id" PositionType="perceivedWuid" PositionVec3="" PositionWuid="" Information="$information" />
														<LockDynamicInformationValues Information="$information">
															<SetDynamicInformationValue Information="$information" Tag="&apos;stimulusKind&apos;" Variable="$stimulusKind" Type="" Value="" />
														</LockDynamicInformationValues>
													</Sequence>
												</IfCondition>
												<Function_crime_limits_reserveReactionLink ffCrimeIcon="false" information="$information" priority="$priority" reactionKind="$enum:crime_reactionKind.scan" nodeLabel="27652873" />
												<Expression expressions="$scanData.stimulusShooter = $stimulusShooter &#10;$scanData.stimulusAnimalAbuse = $stimulusAnimalAbuse &#10;$scanData.stimulusMissingAnimal = $stimulusMissingAnimal &#10; &#10;$scanData.source = $source &#10;$scanData.stimulusKind = $stimulusKind &#10;$scanData.previousReaction = $previousReaction &#10;$scanData.information = $information &#10;$scanData.initiatedBy = $initiator &#10;$scanData.scanDirection = $scanDirection &#10;$scanData.corpseState = $corpseState" />
												<IfCondition failOnCondition="false" condition="$stimulusKind == $enum:crime_stimulusKind.dramaticBark">
													<Expression expressions="$urgency = $enum:urgency.slow" />
												</IfCondition>
												<AddInterrupt_scan scanData="$scanData" Target="$this.id" Host="$mrkev" Behavior="&apos;interrupt_scan&apos;" Priority="$priority" IgnorePriorityOnPreviousInterrupt="$ignorePriority" urgency="$urgency" Aliveness="Alive" Privileged="false" FastForward="false" />
											</Sequence>
										</IfCondition>
									</Sequence>
								</Else>
							</EntityContextCheck>
						</Else>
					</GameContextCheck>
				</AtomicDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="lookAroundUpdateScanPosition" comment="" />
				<Variable name="mrkev" comment="" />
				<Variable name="priority" comment="" />
				<Variable name="reactorData" comment="" />
				<Variable name="scanData" comment="" />
				<Variable name="shallPass" comment="" />
				<Variable name="shouldReact" comment="" />
				<Variable name="urgency" comment="" />
				<Variable name="corpseState" comment="" />
				<Variable name="ignorePriority" comment="" />
				<Variable name="information" comment="" />
				<Variable name="initiator" comment="" />
				<Variable name="previousReaction" comment="" />
				<Variable name="scanDirection" comment="" />
				<Variable name="source" comment="" />
				<Variable name="stimulusAnimalAbuse" comment="" />
				<Variable name="stimulusKind" comment="" />
				<Variable name="stimulusMissingAnimal" comment="" />
				<Variable name="stimulusShooter" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GameContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Else>
								<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Else>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</IfCondition>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
														<EntityContextCheck hasInputBreakpoint="0" comment="KCD2-276092" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Else>
																		<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Sequence hasInputBreakpoint="0" comment="#KCD2-399681" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Expression>
																				<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</InstantSendMessageToNPC>
																			</Sequence>
																		</SuppressFailure>
																	</Else>
																</EntityContextCheck>
															</Then>
														</EntityContextCheck>
													</Sequence>
												</IfCondition>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</IfCondition>
												<DefaultBranch>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</DefaultBranch>
											</Switch>
											<Function_crime_checkReactionPriority hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_checkReactionPriority>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_crime_getMrkev hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_crime_getMrkev>
													<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_crime_spawnMissingNpcVolume hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_crime_spawnMissingNpcVolume>
															</IfCondition>
														</Then>
													</EntityContextCheck>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GetReactionKindByContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</GetReactionKindByContext>
													</IfCondition>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<CreateInformationWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</CreateInformationWrapper>
															<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</SetDynamicInformationValue>
															</LockDynamicInformationValues>
														</Sequence>
													</IfCondition>
													<Function_crime_limits_reserveReactionLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_crime_limits_reserveReactionLink>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</IfCondition>
													<AddInterrupt_scan hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</AddInterrupt_scan>
												</Sequence>
											</IfCondition>
										</Sequence>
									</Else>
								</EntityContextCheck>
							</Else>
						</GameContextCheck>
					</AtomicDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>