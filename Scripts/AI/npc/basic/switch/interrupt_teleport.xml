<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="interrupt_teleport" is_function="0">
		<Variables>
			<Variable name="lock_teleport" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="position" type="vec3" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="positionVec3" type="vec3" values="" isPersistent="0" form="single" requirementType="In" optional="1" />
			<Variable name="positionWuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" optional="1" />
			<Variable name="useWuidPosition" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Concatenation OutString="$lock_teleport" Pattern="&apos;$this.id;_teleported&apos;" />
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<IsDeadCheck SoulWUID="$this.id" FailSubtMissing="false" saveVersion="2">
						<Then canSkip="1">
							<EntityContext context="ForceForbidAutoTorch" target="">
								<Sequence>
									<IfElseCondition failOnCondition="false" condition="$useWuidPosition" saveVersion="2">
										<Then canSkip="1">
											<TeleportAction Position="$positionWuid" EndInterruptOnActionStart="false" />
										</Then>
										<Else canSkip="1">
											<TeleportAction Position="$positionVec3" EndInterruptOnActionStart="false" />
										</Else>
									</IfElseCondition>
									<SuppressFailure>
										<UrgencyDecorator Urgency="Instant">
											<EntityContext context="deadBody_allowActorAnimsForDeadNPC" target="">
												<AnimationAction fragment="&apos;RagdollAction&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
											</EntityContext>
										</UrgencyDecorator>
									</SuppressFailure>
								</Sequence>
							</EntityContext>
						</Then>
						<Else canSkip="1">
							<IfElseCondition failOnCondition="false" condition="$useWuidPosition" saveVersion="2">
								<Then canSkip="1">
									<TeleportAction Position="$positionWuid" EndInterruptOnActionStart="false" />
								</Then>
								<Else canSkip="1">
									<TeleportAction Position="$positionVec3" EndInterruptOnActionStart="false" />
								</Else>
							</IfElseCondition>
						</Else>
					</IsDeadCheck>
					<SetExternalLock LockManagerType="Global" Locked="false" LockName="&apos;$lock_teleport&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="interrupt_teleport" EventSet="">
			<Variables>
				<Variable name="lock_teleport" comment="" />
				<Variable name="position" comment="" />
				<Variable name="positionVec3" comment="" />
				<Variable name="positionWuid" comment="" />
				<Variable name="useWuidPosition" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Concatenation>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</TeleportAction>
											</Then>
											<Else>
												<TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</TeleportAction>
											</Else>
										</IfElseCondition>
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</AnimationAction>
												</EntityContext>
											</UrgencyDecorator>
										</SuppressFailure>
									</Sequence>
								</EntityContext>
							</Then>
							<Else>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</TeleportAction>
									</Then>
									<Else>
										<TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</TeleportAction>
									</Else>
								</IfElseCondition>
							</Else>
						</IsDeadCheck>
						<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SetExternalLock>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>