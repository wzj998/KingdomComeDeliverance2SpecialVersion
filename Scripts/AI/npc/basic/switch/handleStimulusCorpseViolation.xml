<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="switch_handleStimulusCorpseViolation" is_function="1">
    <Variables>
      <Variable name="_information" type="information" values="" isPersistent="0" form="single" />
      <Variable name="assaultData" type="crime:assaultData" values="" isPersistent="0" form="single" />
      <Variable name="corpseIsMate" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="fleeInsteadOfWatch" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="ignoreStimulusReaction" type="_bool" values="false" isPersistent="0" form="single" />
      <Variable name="information" type="information" values="" isPersistent="0" form="single" />
      <Variable name="murderInformation" type="information" values="" isPersistent="0" form="single" />
      <Variable name="source" type="enum:crime_source" values="$enum:crime_source.direct" isPersistent="0" form="single" />
      <Variable name="stimulusKind" type="enum:crime_stimulusKind" values="$enum:crime_stimulusKind.corpseViolation" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="stimulus" type="switch:stimulus:corpseViolation" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <Switch>
            <EntityContextCheck context="switch_recognitionLevel_I" target="" saveVersion="2">
              <Then canSkip="1">
                <Success />
              </Then>
            </EntityContextCheck>
            <EntityContextCheck context="switch_recognitionLevel_II" target="" saveVersion="2">
              <Then canSkip="1">
                <Success />
              </Then>
            </EntityContextCheck>
            <DefaultBranch>
              <AtomicDecorator>
                <Selector>
                  <Sequence>
                    <RetrieveInformation PerceivedWuid="$stimulus.corpse" label="&apos;murder&apos;" OutVariable="$_information" />
                    <CheckInformationKnowledge Information="$_information" Holder="$this.id" />
                    <Expression expressions="$ignoreStimulusReaction = true" />
                  </Sequence>
                  <Sequence>
                    <CreateInformationWrapper Label="&apos;corpseViolation&apos;" PerceivedWuid="$stimulus.corpse" PositionType="perceivedWuid" PositionVec3="" PositionWuid="" Information="$information" />
                    <LockDynamicInformationValues Information="$information">
                      <SetDynamicInformationValue Information="$information" Tag="&apos;victim&apos;" Variable="$stimulus.corpse" Type="" Value="" />
                    </LockDynamicInformationValues>
                  </Sequence>
                </Selector>
              </AtomicDecorator>
            </DefaultBranch>
          </Switch>
          <IfCondition failOnCondition="false" condition="~$ignoreStimulusReaction">
            <CallDecorator_crime_chooseReaction>
              <Subtree canSkip="1">
                <ChooseReaction Information="$information" ReactionNpc="$__player" SkirmishDecisionReason="Perception" Source="$source" StimulusKind="$stimulusKind" />
              </Subtree>
              <Attack canSkip="1">
                <CallbackEventCatch_empty>
                  <Sequence>
                    <Function_crime_addCorpseLink corpse="$stimulus.corpse" corpseState="$enum:corpseState.discovered" mateReacting="false" resolve="false" storeTime="false" nodeLabel="86812021" />
                    <Function_callInterrupt_attack alreadyCriminal="false" assaultData="$assaultData" defenceMode="false" escalatedFromFailedSurrender="false" freshlyAttributedCrime="false" ignorePriority="false" information="$information" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" priority="160" questBehavior="false" relationOverride="true" stimulusKind="$stimulusKind" target="$__player" nodeLabel="83437353" />
                  </Sequence>
                </CallbackEventCatch_empty>
              </Attack>
              <Arrest canSkip="1">
                <CallbackEventCatch_empty>
                  <Sequence>
                    <Function_crime_addCorpseLink corpse="$stimulus.corpse" corpseState="$enum:corpseState.investigated" mateReacting="false" resolve="false" storeTime="false" nodeLabel="74323835" />
                    <Function_callInterrupt_arrest alreadyCriminal="false" assaultData="$assaultData" crimeSeen="true" freshlyAttributedCrime="false" ignorePriority="false" information="$information" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" source="$source" stimulusKind="$stimulusKind" trespassingRepeatedly="false" nodeLabel="19424070" />
                  </Sequence>
                </CallbackEventCatch_empty>
              </Arrest>
              <LookAround canSkip="1">
                <CallbackEventCatch_empty>
                  <ErrorNode Message="&apos;Unhandled behavior \&apos;LookAround\&apos; for stimulus: $stimulusKind!&apos;" />
                </CallbackEventCatch_empty>
              </LookAround>
              <Flee canSkip="1">
                <CallbackEventCatch_fleeData>
                  <Function_callInterrupt_flee alreadyCriminal="false" assaultData="$assaultData" corpseState="$enum:corpseState.undiscovered" freshlyAttributedCrime="false" ignorePriority="$ignoreScheduledPriority" information="$information" initiator="$enum:switch_interruptInitiator.switch" isIndifferent="false" leaveLevel="false" mercyDialogueResult="$enum:crime_mercyDialogueResult.unknown" previousReaction="$enum:crime_reactionKind.unknown" priority="135" source="$source" stimulusKind="$stimulusKind" target="$__player" nodeLabel="45630240" />
                </CallbackEventCatch_fleeData>
              </Flee>
              <ReactionToRecognitionState_I canSkip="1">
                <CallbackEventCatch_empty>
                  <Function_stealth_recognitionState_I_reaction target="$__player" nodeLabel="56316226" />
                </CallbackEventCatch_empty>
              </ReactionToRecognitionState_I>
              <ReactionToRecognitionState_II canSkip="1">
                <CallbackEventCatch_empty>
                  <Function_stealth_recognitionState_II_reaction stimulusKind="$enum:crime_stimulusKind.corpseViolation" target="$__player" nodeLabel="85127171" />
                </CallbackEventCatch_empty>
              </ReactionToRecognitionState_II>
              <Report canSkip="1">
                <CallbackEventCatch_reportData>
                  <Sequence>
                    <Function_crime_addCorpseLink corpse="$stimulus.corpse" corpseState="$enum:corpseState.discovered" mateReacting="false" resolve="false" storeTime="false" nodeLabel="79445616" />
                    <Function_callInterrupt_report alreadyCriminal="false" assaultData="$assaultData" corpseState="$enum:corpseState.undiscovered" disableDetectedIcon="false" disableEmitting="false" freshlyAttributedCrime="false" ignorePriority="$ignoreScheduledPriority" information="$information" initiator="$enum:switch_interruptInitiator.switch" movementSpeed="$enum:movementSpeed.sprint" previousReaction="$enum:crime_reactionKind.unknown" reportDestination="$destination" reportDestinationType="$destinationType" source="$source" stimulusKind="$stimulusKind" nodeLabel="51824827" />
                  </Sequence>
                </CallbackEventCatch_reportData>
              </Report>
              <Scan canSkip="1">
                <CallbackEventCatch_empty>
                  <ErrorNode Message="&apos;[$this.name;] Unhandled behavior \&apos;Scan\&apos; for stimulus: $stimulusKind!&apos;" />
                </CallbackEventCatch_empty>
              </Scan>
              <Selfhelp canSkip="1">
                <CallbackEventCatch_empty>
                  <Sequence>
                    <Function_crime_addCorpseLink corpse="$stimulus.corpse" corpseState="$enum:corpseState.discovered" mateReacting="false" resolve="false" storeTime="false" nodeLabel="46827114" />
                    <Function_callInterrupt_selfhelp alreadyCriminal="false" assaultData="" freshlyAttributedCrime="false" ignorePriority="false" information="$information" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" source="$source" stimulusKind="$stimulusKind" nodeLabel="12067727" />
                  </Sequence>
                </CallbackEventCatch_empty>
              </Selfhelp>
              <Watch canSkip="1">
                <CallbackEventCatch_empty>
                  <Sequence>
                    <Function_crime_addCorpseLink corpse="$stimulus.corpse" corpseState="$enum:corpseState.discovered" mateReacting="false" resolve="false" storeTime="false" nodeLabel="19234739" />
                    <Function_callInterrupt_watch alreadyCriminal="false" assaultData="$assaultData" corpseState="$enum:corpseState.undiscovered" defenceMode="false" freshlyAttributedCrime="false" ignorePriority="false" information="$information" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" source="$source" stimulusKind="$stimulusKind" target="$__player" nodeLabel="44894688" />
                  </Sequence>
                </CallbackEventCatch_empty>
              </Watch>
            </CallDecorator_crime_chooseReaction>
          </IfCondition>
          <GetAreMates Npc1="$this.id" Npc2="$stimulus.corpse" AreMates="$corpseIsMate" />
          <IfCondition failOnCondition="false" condition="$corpseIsMate">
            <Function_callInterrupt_mourn ignorePriority="false" initiator="$enum:switch_interruptInitiator.unknown" mournTarget="$stimulus.corpse" previousReaction="$enum:crime_reactionKind.unknown" stimulusKind="$enum:crime_stimulusKind.corpse" nodeLabel="86051546" />
          </IfCondition>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="_information" comment="" />
        <Variable name="assaultData" comment="" />
        <Variable name="corpseIsMate" comment="" />
        <Variable name="fleeInsteadOfWatch" comment="" />
        <Variable name="ignoreStimulusReaction" comment="" />
        <Variable name="information" comment="" />
        <Variable name="murderInformation" comment="" />
        <Variable name="source" comment="" />
        <Variable name="stimulusKind" comment="" />
        <Variable name="stimulus" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="10" editorPosY="-410" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Success>
                </Then>
              </EntityContextCheck>
              <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Success>
                </Then>
              </EntityContextCheck>
              <DefaultBranch>
                <AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="If we already know murder - corpseViolation will get deleted in arrest anyway" breakpointFlags="0">
                      <OutputBreakpoints />
                      <RetrieveInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </RetrieveInformation>
                      <CheckInformationKnowledge hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </CheckInformationKnowledge>
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                    </Sequence>
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <CreateInformationWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </CreateInformationWrapper>
                      <LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <SetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </SetDynamicInformationValue>
                      </LockDynamicInformationValues>
                    </Sequence>
                  </Selector>
                </AtomicDecorator>
              </DefaultBranch>
            </Switch>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <CallDecorator_crime_chooseReaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Subtree>
                  <ChooseReaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </ChooseReaction>
                </Subtree>
                <Attack>
                  <CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Function_crime_addCorpseLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Function_crime_addCorpseLink>
                      <Function_callInterrupt_attack hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Function_callInterrupt_attack>
                    </Sequence>
                  </CallbackEventCatch_empty>
                </Attack>
                <Arrest>
                  <CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Function_crime_addCorpseLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Function_crime_addCorpseLink>
                      <Function_callInterrupt_arrest hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Function_callInterrupt_arrest>
                    </Sequence>
                  </CallbackEventCatch_empty>
                </Arrest>
                <LookAround>
                  <CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </ErrorNode>
                  </CallbackEventCatch_empty>
                </LookAround>
                <Flee>
                  <CallbackEventCatch_fleeData hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Function_callInterrupt_flee hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Function_callInterrupt_flee>
                  </CallbackEventCatch_fleeData>
                </Flee>
                <ReactionToRecognitionState_I>
                  <CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Function_stealth_recognitionState_I_reaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Function_stealth_recognitionState_I_reaction>
                  </CallbackEventCatch_empty>
                </ReactionToRecognitionState_I>
                <ReactionToRecognitionState_II>
                  <CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Function_stealth_recognitionState_II_reaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Function_stealth_recognitionState_II_reaction>
                  </CallbackEventCatch_empty>
                </ReactionToRecognitionState_II>
                <Report>
                  <CallbackEventCatch_reportData hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Function_crime_addCorpseLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Function_crime_addCorpseLink>
                      <Function_callInterrupt_report hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Function_callInterrupt_report>
                    </Sequence>
                  </CallbackEventCatch_reportData>
                </Report>
                <Scan>
                  <CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </ErrorNode>
                  </CallbackEventCatch_empty>
                </Scan>
                <Selfhelp>
                  <CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Function_crime_addCorpseLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Function_crime_addCorpseLink>
                      <Function_callInterrupt_selfhelp hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Function_callInterrupt_selfhelp>
                    </Sequence>
                  </CallbackEventCatch_empty>
                </Selfhelp>
                <Watch>
                  <CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Function_crime_addCorpseLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Function_crime_addCorpseLink>
                      <Function_callInterrupt_watch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Function_callInterrupt_watch>
                    </Sequence>
                  </CallbackEventCatch_empty>
                </Watch>
              </CallDecorator_crime_chooseReaction>
            </IfCondition>
            <GetAreMates hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </GetAreMates>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Function_callInterrupt_mourn hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Function_callInterrupt_mourn>
            </IfCondition>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>