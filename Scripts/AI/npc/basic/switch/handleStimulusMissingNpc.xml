<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_handleStimulusMissingNpc" is_function="1">
		<Variables>
			<Variable name="amIBuddy" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="hotEntity" type="switch:hotEntity" values="" isPersistent="0" form="single" />
			<Variable name="lookAroundPosition" type="vec3" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="stimulus" type="switch:stimulus:missingNpc" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$hotEntity.reason = $enum:switch_hotEntityReason.missingNpc" />
					<Function_switch_addHotEntity data="$hotEntity" entity="$stimulus.missingNpc" expiration="300" nodeLabel="37674111" />
					<Expression expressions="$amIBuddy = $stimulus.missingNpcData.buddy == $this.id" />
					<IfElseCondition failOnCondition="false" condition="$amIBuddy | $stimulus.alwaysUseDataDestination" saveVersion="2">
						<Then canSkip="1">
							<Expression expressions="$lookAroundPosition = $stimulus.missingNpcData.destination" />
						</Then>
						<Else canSkip="1">
							<GetSpatialInfo In="$stimulus.volume" Out="$lookAroundPosition" What="Position" />
						</Else>
					</IfElseCondition>
					<IfCondition failOnCondition="false" condition="$stimulus.missingNpcData.smartObject ~= $__null">
						<AddLink From="$this.id" To="$stimulus.missingNpc" Tag="&apos;crime_followUpBehavior_kickMissingNpc&apos;" Data="smartObject($stimulus.missingNpcData.smartObject)" LinkOpHandleMode="Success" />
					</IfCondition>
					<Function_callInterrupt_lookAround alarmReactionType="$enum:crime_alarmReactionType.none" amIBuddy="$amIBuddy" corpseState="$enum:corpseState.undiscovered" directHit="false" forcePebbleReaction="false" ignorePriority="false" information_look="" initiator="$enum:switch_interruptInitiator.switch" missingNpc="$stimulus.missingNpc" position="$lookAroundPosition" previousReaction="$enum:crime_reactionKind.unknown" reactingToSoundBecauseAlone="false" reportedBy="$__null" searchDirection="" searchPointsFromDirection="false" shooter="$__player" soundType="$enum:sound.movement" source="$enum:crime_source.direct" stimulusAnimalAbuse="" stimulusKind="$enum:crime_stimulusKind.missingNpc" nodeLabel="15805987" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="amIBuddy" comment="" />
				<Variable name="hotEntity" comment="" />
				<Variable name="lookAroundPosition" comment="" />
				<Variable name="stimulus" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<Function_switch_addHotEntity hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_switch_addHotEntity>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Then>
							<Else>
								<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetSpatialInfo>
							</Else>
						</IfElseCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AddLink>
						</IfCondition>
						<Function_callInterrupt_lookAround hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_callInterrupt_lookAround>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>