<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_handleAwareness_player" is_function="1">
		<Variables>
			<Variable name="doWarnPlayer" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="playerIsConspicuous" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="playersOffences" type="enum:crime_offence" values="" isPersistent="0" form="array" />
			<Variable name="playersOffences_value" type="enum:crime_offence" values="" isPersistent="0" form="single" />
			<Variable name="stimulusOffence" type="switch:stimulus:offence" values="" isPersistent="0" form="single" />
			<Variable name="stimulusThreat" type="switch:stimulus:threat" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="reactionIntermediateData" type="switch:reactionIntermediateData" values="" isPersistent="0" form="single" requirementType="Reference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<IsTimeSkipping saveVersion="2">
					<Then canSkip="1">
						<Success />
					</Then>
					<Else canSkip="1">
						<IsFastTraveling saveVersion="2">
							<Then canSkip="1">
								<Success />
							</Then>
							<Else canSkip="1">
								<HasActiveThreats SoulWUID="$__player" FailSubtMissing="false" saveVersion="2">
									<Then canSkip="1">
										<Success />
									</Then>
									<Else canSkip="1">
										<Switch>
											<EntityContextCheck context="switch_recognitionLevel_I" target="" saveVersion="2">
												<Then canSkip="1">
													<Success />
												</Then>
											</EntityContextCheck>
											<EntityContextCheck context="switch_recognitionLevel_II" target="" saveVersion="2">
												<Then canSkip="1">
													<Success />
												</Then>
											</EntityContextCheck>
											<DefaultBranch>
												<Sequence>
													<EntityContextCheck context="crime_bff" target="" saveVersion="2">
														<Else canSkip="1">
															<Sequence>
																<Function_crime_getPlayersOffences offences="$playersOffences" nodeLabel="63321296" />
																<EntityContextCheck context="crime_isAuthority" target="$this.id" saveVersion="2">
																	<Then canSkip="1">
																		<IfCondition failOnCondition="false" condition="#playersOffences &gt; 0">
																			<Sequence>
																				<Function_switch_handleStimulusOffence stimulus="$stimulusOffence" nodeLabel="14156329" />
																				<Expression expressions="$doWarnPlayer = true" />
																			</Sequence>
																		</IfCondition>
																	</Then>
																	<Else canSkip="1">
																		<ForEach startIndex="0" step="1" array="$playersOffences" iterator="" value="$playersOffences_value" break="">
																			<Switch>
																				<IfCondition failOnCondition="false" condition="$playersOffences_value == $enum:crime_offence.noTorch">
																					<IfCondition failOnCondition="false" condition="$reactionIntermediateData.barkData.priority &lt; $data:script_param[&apos;crime_barkReactionPriority_noTorch&apos;].value">
																						<Sequence>
																							<ReinitVariable variable="$reactionIntermediateData" />
																							<Expression expressions="$reactionIntermediateData.barkData.priority = $data:script_param[&apos;crime_barkReactionPriority_noTorch&apos;].value &#10;$reactionIntermediateData.barkData.lookAt = $__player &#10;$reactionIntermediateData.barkData.metarole = &apos;NPC_REAGUJE_NA_HRACE_BEZ_POCHODNE&apos; &#10;$reactionIntermediateData.barkData.barkKind = $enum:crime_barkReactionKind.isTorchless &#10;$reactionIntermediateData.barkData.genderData.isGenderSpecific = false" />
																						</Sequence>
																					</IfCondition>
																				</IfCondition>
																				<IfCondition failOnCondition="false" condition="$playersOffences_value == $enum:crime_offence.drawnWeapon">
																					<IfCondition failOnCondition="false" condition="$reactionIntermediateData.barkData.priority &lt; $data:script_param[&apos;crime_barkReactionPriority_weaponDrawn&apos;].value">
																						<EntityContextCheck context="crime_isSecurity" target="" saveVersion="2">
																							<Then canSkip="1">
																								<DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="7.000000" High="7.000000" Negation="false" ValueOnMiddle="false" failOnCondition="false">
																									<Sequence>
																										<Expression expressions="$stimulusThreat.threatSource = $__player" />
																										<Function_switch_handleStimulusThreat stimulus="$stimulusThreat" nodeLabel="55722913" />
																									</Sequence>
																								</DistanceCondition>
																							</Then>
																							<Else canSkip="1">
																								<IsWeaponDrawn who="$__player" WeaponSet="Secondary" saveVersion="2">
																									<Then canSkip="1">
																										<Sequence>
																											<ReinitVariable variable="$reactionIntermediateData" />
																											<Expression expressions="$reactionIntermediateData.barkData.priority = $data:script_param[&apos;crime_barkReactionPriority_weaponDrawn&apos;].value &#10;$reactionIntermediateData.barkData.lookAt = $__player &#10;$reactionIntermediateData.barkData.metarole = &apos;NPC_VIDI_HRACE_SE_ZBRANI_(RANGED)&apos; &#10;$reactionIntermediateData.barkData.barkKind = $enum:crime_barkReactionKind.hasWeapon &#10;$reactionIntermediateData.barkData.genderData.isGenderSpecific = false" />
																										</Sequence>
																									</Then>
																									<Else canSkip="1">
																										<HasPerceivableState PerceivableState="&apos;threat&apos;" PerceivedWUID="$__player" PerceptorWUID="$this.id" FailSubtMissing="false" saveVersion="2">
																											<Then canSkip="1">
																												<Success />
																											</Then>
																											<Else canSkip="1">
																												<Sequence>
																													<ReinitVariable variable="$reactionIntermediateData" />
																													<Expression expressions="$reactionIntermediateData.barkData.priority = $data:script_param[&apos;crime_barkReactionPriority_weaponDrawn&apos;].value &#10;$reactionIntermediateData.barkData.lookAt = $__player &#10;$reactionIntermediateData.barkData.metarole = &apos;NPC_VIDI_HRACE_SE_ZBRANI_(MELEE)&apos; &#10;$reactionIntermediateData.barkData.barkKind = $enum:crime_barkReactionKind.hasWeapon &#10;$reactionIntermediateData.barkData.genderData.isGenderSpecific = false" />
																												</Sequence>
																											</Else>
																										</HasPerceivableState>
																									</Else>
																								</IsWeaponDrawn>
																							</Else>
																						</EntityContextCheck>
																					</IfCondition>
																				</IfCondition>
																				<DefaultBranch>
																					<ErrorNode Message="&apos;Unhandled offence! Consider handling it.&apos;" />
																				</DefaultBranch>
																			</Switch>
																		</ForEach>
																	</Else>
																</EntityContextCheck>
															</Sequence>
														</Else>
													</EntityContextCheck>
													<EntityContextCheck context="crime_bff" target="" saveVersion="2">
														<Else canSkip="1">
															<IfCondition failOnCondition="false" condition="$reactionIntermediateData.barkData.priority &lt; $data:script_param[&apos;crime_barkReactionPriority_crouch&apos;].value &#10;&amp; ~$doWarnPlayer">
																<HasPerceivableState PerceivableState="&apos;crouch&apos;" PerceivedWUID="$__player" PerceptorWUID="" FailSubtMissing="false" saveVersion="2">
																	<Then canSkip="1">
																		<EntityContextCheck context="crime_ignoreCrouchingPlayer" target="" saveVersion="2">
																			<Then canSkip="1">
																				<Success />
																			</Then>
																			<Else canSkip="1">
																				<Sequence>
																					<ReinitVariable variable="$reactionIntermediateData" />
																					<Expression expressions="$reactionIntermediateData.barkData.priority = $data:script_param[&apos;crime_barkReactionPriority_crouch&apos;].value &#10;$reactionIntermediateData.barkData.lookAt = $__player &#10;$reactionIntermediateData.barkData.metarole = &apos;NPC_VIDI_HRACE_V_CROUCHI&apos; &#10;$reactionIntermediateData.barkData.barkKind = $enum:crime_barkReactionKind.playerInStealth &#10;$reactionIntermediateData.barkData.genderData.isGenderSpecific = false" />
																				</Sequence>
																			</Else>
																		</EntityContextCheck>
																	</Then>
																</HasPerceivableState>
															</IfCondition>
														</Else>
													</EntityContextCheck>
													<IfCondition failOnCondition="false" condition="$reactionIntermediateData.barkData.priority &lt; $data:script_param[&apos;crime_barkReactionPriority_greet&apos;].value &#10;&amp; ~$doWarnPlayer">
														<GameContextCheck context="crime_global_dontGreetPlayer" saveVersion="2">
															<Then canSkip="1">
																<Success />
															</Then>
															<Else canSkip="1">
																<EntityContextCheck context="crime_dontGreetPlayer" target="" saveVersion="2">
																	<Then canSkip="1">
																		<Success />
																	</Then>
																	<Else canSkip="1">
																		<Sequence>
																			<ReinitVariable variable="$reactionIntermediateData" />
																			<Expression expressions="$reactionIntermediateData.barkData.priority = $data:script_param[&apos;crime_barkReactionPriority_greet&apos;].value &#10;$reactionIntermediateData.barkData.lookAt = $__player &#10;$reactionIntermediateData.barkData.metarole = &apos;NPC_ZDRAVI_HRACE&apos; &#10;$reactionIntermediateData.barkData.barkKind = $enum:crime_barkReactionKind.greetPlayer &#10;$reactionIntermediateData.barkData.genderData.isGenderSpecific = false &#10;$reactionIntermediateData.barkData.barkType = $enum:crime_barkReactionType.chat" />
																		</Sequence>
																	</Else>
																</EntityContextCheck>
															</Else>
														</GameContextCheck>
													</IfCondition>
												</Sequence>
											</DefaultBranch>
										</Switch>
									</Else>
								</HasActiveThreats>
							</Else>
						</IsFastTraveling>
					</Else>
				</IsTimeSkipping>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="doWarnPlayer" comment="" />
				<Variable name="playerIsConspicuous" comment="" />
				<Variable name="playersOffences" comment="" />
				<Variable name="playersOffences_value" comment="" />
				<Variable name="stimulusOffence" comment="" />
				<Variable name="stimulusThreat" comment="" />
				<Variable name="reactionIntermediateData" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<IsTimeSkipping hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Then>
						<Else>
							<IsFastTraveling hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</Then>
								<Else>
									<HasActiveThreats hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Then>
										<Else>
											<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</Then>
												</EntityContextCheck>
												<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</Then>
												</EntityContextCheck>
												<DefaultBranch>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Else>
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Function_crime_getPlayersOffences hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_crime_getPlayersOffences>
																	<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																		<Then>
																			<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Function_switch_handleStimulusOffence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Function_switch_handleStimulusOffence>
																					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Expression>
																				</Sequence>
																			</IfCondition>
																		</Then>
																		<Else>
																			<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<IfCondition hasInputBreakpoint="0" comment="torch 30" breakpointFlags="0">
																							<OutputBreakpoints />
																							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</ReinitVariable>
																								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</Expression>
																							</Sequence>
																						</IfCondition>
																					</IfCondition>
																					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<IfCondition hasInputBreakpoint="0" comment="weapon 40" breakpointFlags="0">
																							<OutputBreakpoints />
																							<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																								<OutputBreakpoints />
																								<Then>
																									<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																										<Sequence hasInputBreakpoint="0" comment="No reactors yet" breakpointFlags="0">
																											<OutputBreakpoints />
																											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																											</Expression>
																											<Function_switch_handleStimulusThreat hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																											</Function_switch_handleStimulusThreat>
																										</Sequence>
																									</DistanceCondition>
																								</Then>
																								<Else>
																									<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																										<OutputBreakpoints />
																										<Then>
																											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																												<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																												</ReinitVariable>
																												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																												</Expression>
																											</Sequence>
																										</Then>
																										<Else>
																											<HasPerceivableState hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																												<OutputBreakpoints />
																												<Then>
																													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																														<OutputBreakpoints />
																													</Success>
																												</Then>
																												<Else>
																													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																														<OutputBreakpoints />
																														<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																														</ReinitVariable>
																														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																														</Expression>
																													</Sequence>
																												</Else>
																											</HasPerceivableState>
																										</Else>
																									</IsWeaponDrawn>
																								</Else>
																							</EntityContextCheck>
																						</IfCondition>
																					</IfCondition>
																					<DefaultBranch>
																						<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</ErrorNode>
																					</DefaultBranch>
																				</Switch>
																			</ForEach>
																		</Else>
																	</EntityContextCheck>
																</Sequence>
															</Else>
														</EntityContextCheck>
														<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Else>
																<IfCondition hasInputBreakpoint="0" comment="crouch 20" breakpointFlags="0">
																	<OutputBreakpoints />
																	<HasPerceivableState hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																		<Then>
																			<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																				<OutputBreakpoints />
																				<Then>
																					<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Success>
																				</Then>
																				<Else>
																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</ReinitVariable>
																						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Expression>
																					</Sequence>
																				</Else>
																			</EntityContextCheck>
																		</Then>
																	</HasPerceivableState>
																</IfCondition>
															</Else>
														</EntityContextCheck>
														<IfCondition hasInputBreakpoint="0" comment="greet 10" breakpointFlags="0">
															<OutputBreakpoints />
															<GameContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Success>
																</Then>
																<Else>
																	<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																		<Then>
																			<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Success>
																		</Then>
																		<Else>
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</ReinitVariable>
																				<Expression hasInputBreakpoint="0" comment="For greetings we decide wheather we play bark or chat only in the handleAwareness_barkReaction tree" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Expression>
																			</Sequence>
																		</Else>
																	</EntityContextCheck>
																</Else>
															</GameContextCheck>
														</IfCondition>
													</Sequence>
												</DefaultBranch>
											</Switch>
										</Else>
									</HasActiveThreats>
								</Else>
							</IsFastTraveling>
						</Else>
					</IsTimeSkipping>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>