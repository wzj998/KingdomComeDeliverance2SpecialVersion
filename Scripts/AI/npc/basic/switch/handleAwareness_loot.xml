<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_handleAwareness_loot" is_function="1">
		<Variables>
			<Variable name="alreadyReactedToLootInstance" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="check" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" />
			<Variable name="owner" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stash" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stashType" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="stimulus" type="switch:stimulus:theft" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="reactionIntermediateData" type="switch:reactionIntermediateData" values="" isPersistent="0" form="single" requirementType="Reference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Switch>
					<EntityContextCheck context="crime_ignorePlayerPerception" target="" saveVersion="2">
						<Then canSkip="1">
							<Success />
						</Then>
					</EntityContextCheck>
					<EntityContextCheck context="crime_ignoreThefts" target="" saveVersion="2">
						<Then canSkip="1">
							<Success />
						</Then>
					</EntityContextCheck>
					<DefaultBranch>
						<Sequence>
							<Switch>
								<EntityContextCheck context="switch_recognitionLevel_I" target="" saveVersion="2">
									<Then canSkip="1">
										<Success />
									</Then>
								</EntityContextCheck>
								<EntityContextCheck context="switch_recognitionLevel_II" target="" saveVersion="2">
									<Then canSkip="1">
										<Success />
									</Then>
								</EntityContextCheck>
								<DefaultBranch>
									<SuppressFailure>
										<Sequence>
											<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;crime_reactedToLootInstance&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
												<WUIDFilter WUID="$this.id" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
											</GraphSearch>
											<Expression expressions="$alreadyReactedToLootInstance = true" />
										</Sequence>
									</SuppressFailure>
								</DefaultBranch>
							</Switch>
							<IfCondition failOnCondition="false" condition="~$alreadyReactedToLootInstance">
								<Sequence>
									<Switch>
										<EntityContextCheck context="switch_recognitionLevel_I" target="" saveVersion="2">
											<Then canSkip="1">
												<Success />
											</Then>
										</EntityContextCheck>
										<EntityContextCheck context="switch_recognitionLevel_II" target="" saveVersion="2">
											<Then canSkip="1">
												<Success />
											</Then>
										</EntityContextCheck>
										<DefaultBranch>
											<AddLink From="$__player" To="$this.id" Tag="&apos;crime_reactedToLootInstance&apos;" Data="" LinkOpHandleMode="Error" />
										</DefaultBranch>
									</Switch>
									<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;loot&apos;" prune="true" negprune="unknown" Parent="" Child="$stash" Data="" />
									</GraphSearch>
									<GetType WUID="$stash" OutString="$stashType" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
									<IfElseCondition failOnCondition="false" condition="$stashType == &apos;NPC&apos;" saveVersion="2">
										<Then canSkip="1">
											<Sequence>
												<Function_switch_handleAwareness_lootCorpse corpse="$stash" reactionIntermediateData="$reactionIntermediateData" nodeLabel="25791590" />
												<IsDeadCheck SoulWUID="$stash" FailSubtMissing="false" saveVersion="2">
													<Then canSkip="1">
														<Function_switch_handleAwareness_corpse corpse="$stash" reactionIntermediateData="$reactionIntermediateData" nodeLabel="60343571" />
													</Then>
													<Else canSkip="1">
														<Function_switch_handleAwareness_unconsciousBody body="$stash" reactionIntermediateData="$reactionIntermediateData" nodeLabel="74689774" />
													</Else>
												</IsDeadCheck>
											</Sequence>
										</Then>
										<Else canSkip="1">
											<IfElseCondition failOnCondition="false" condition="$stashType == &apos;NHNPC&apos;" saveVersion="2">
												<Then canSkip="1">
													<Function_switch_handleAwareness_animal_lootCorpse corpse="$stash" reactionIntermediateData="$reactionIntermediateData" nodeLabel="54474078" />
												</Then>
												<Else canSkip="1">
													<Selector>
														<GraphSearch Origin="$stash" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<LinkTagFilter tag="&apos;crime_lootIsLegal&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
															<UnionOp Results="true" Advance="true" EndOp="true" ShortCircuit="false" LocalNodalyzers="false">
																<WUIDFilter WUID="$this.id" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
																<WUIDFilter WUID="$stash" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
															</UnionOp>
														</GraphSearch>
														<Sequence>
															<GetOwner Object="$stash" Owner="$owner" />
															<IfCondition failOnCondition="false" condition="$owner ~= $__null">
																<EntityContextCheck context="crime_bff" target="" saveVersion="2">
																	<Then canSkip="1">
																		<Function_crime_addBffIntermediateBarkData corpse="" isCorpse="false" isViolent="false" reactionIntermediateData="$reactionIntermediateData" nodeLabel="16891813" />
																	</Then>
																	<Else canSkip="1">
																		<Sequence>
																			<Function_crime_checkReactionToTheftFrom owner="$owner" result="$check" nodeLabel="80653905" />
																			<IfCondition failOnCondition="false" condition="$check">
																				<Sequence>
																					<Expression expressions="$stimulus.method = $enum:crime_theftMethod.loot &#10;$stimulus.owner = $owner &#10;$stimulus.pivot = $stash &#10;$stimulus.immediate = true" />
																					<Function_crime_createTheftInformation count="0" immediate="$stimulus.immediate" isNonAttributedCrime="false" kettleType="$enum:kettleType.kettle" method="$stimulus.method" owner="$stimulus.owner" pivot="$stimulus.pivot" seenEquippedItems="" information="$information" nodeLabel="51227736" />
																					<Expression expressions="$stimulus.information = $information" />
																					<Function_switch_handleStimulusTheft stimulus="$stimulus" nodeLabel="29562908" />
																				</Sequence>
																			</IfCondition>
																		</Sequence>
																	</Else>
																</EntityContextCheck>
															</IfCondition>
														</Sequence>
													</Selector>
												</Else>
											</IfElseCondition>
										</Else>
									</IfElseCondition>
								</Sequence>
							</IfCondition>
						</Sequence>
					</DefaultBranch>
				</Switch>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="alreadyReactedToLootInstance" comment="" />
				<Variable name="check" comment="" />
				<Variable name="information" comment="" />
				<Variable name="owner" comment="" />
				<Variable name="stash" comment="" />
				<Variable name="stashType" comment="" />
				<Variable name="stimulus" comment="" />
				<Variable name="reactionIntermediateData" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-290" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Then>
						</EntityContextCheck>
						<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Success hasInputBreakpoint="0" comment="Ignore theft" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Then>
						</EntityContextCheck>
						<DefaultBranch>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Then>
									</EntityContextCheck>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Then>
									</EntityContextCheck>
									<DefaultBranch>
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
													<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WUIDFilter>
												</GraphSearch>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Sequence>
										</SuppressFailure>
									</DefaultBranch>
								</Switch>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Then>
											</EntityContextCheck>
											<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Then>
											</EntityContextCheck>
											<DefaultBranch>
												<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</AddLink>
											</DefaultBranch>
										</Switch>
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetType>
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_switch_handleAwareness_lootCorpse hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_switch_handleAwareness_lootCorpse>
													<IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<Function_switch_handleAwareness_corpse hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_switch_handleAwareness_corpse>
														</Then>
														<Else>
															<Function_switch_handleAwareness_unconsciousBody hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_switch_handleAwareness_unconsciousBody>
														</Else>
													</IsDeadCheck>
												</Sequence>
											</Then>
											<Else>
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Function_switch_handleAwareness_animal_lootCorpse hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_switch_handleAwareness_animal_lootCorpse>
													</Then>
													<Else>
														<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
																<UnionOp hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</WUIDFilter>
																	<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</WUIDFilter>
																</UnionOp>
															</GraphSearch>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<GetOwner hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</GetOwner>
																<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<EntityContextCheck hasInputBreakpoint="0" comment="comment if it has an owner, doesnt matter who" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																		<Then>
																			<Function_crime_addBffIntermediateBarkData hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Function_crime_addBffIntermediateBarkData>
																		</Then>
																		<Else>
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Function_crime_checkReactionToTheftFrom hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Function_crime_checkReactionToTheftFrom>
																				<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Expression>
																						<Function_crime_createTheftInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Function_crime_createTheftInformation>
																						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Expression>
																						<Function_switch_handleStimulusTheft hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Function_switch_handleStimulusTheft>
																					</Sequence>
																				</IfCondition>
																			</Sequence>
																		</Else>
																	</EntityContextCheck>
																</IfCondition>
															</Sequence>
														</Selector>
													</Else>
												</IfElseCondition>
											</Else>
										</IfElseCondition>
									</Sequence>
								</IfCondition>
							</Sequence>
						</DefaultBranch>
					</Switch>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>