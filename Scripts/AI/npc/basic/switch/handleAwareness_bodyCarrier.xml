<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_handleAwareness_bodyCarrier" is_function="1">
		<Variables>
			<Variable name="alreadyReactedToThisInstance" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="areMates" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="body" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="body_soul" type="cast:wuid_soul" values="" isPersistent="0" form="single" />
			<Variable name="carrier_soul" type="cast:wuid_soul" values="" isPersistent="0" form="single" />
			<Variable name="corpseData" type="crime:corpseData" values="" isPersistent="0" form="single" />
			<Variable name="deltaSinceLasthit" type="_int" values="600" isPersistent="0" form="single" />
			<Variable name="guardSeesGuard" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="ignore" type="_bool" values="true" isPersistent="0" form="single" />
			<Variable name="information" type="information" values="" isPersistent="0" form="single" />
			<Variable name="lastHitByPlayer" type="crime:lastHitByPlayer" values="" isPersistent="0" form="single" />
			<Variable name="now" type="_int64" values="" isPersistent="0" form="single" />
			<Variable name="observer_soul" type="cast:wuid_soul" values="" isPersistent="0" form="single" />
			<Variable name="stimulusCombat" type="switch:stimulus:combat" values="" isPersistent="0" form="single" />
			<Variable name="stimulusKind" type="enum:crime_stimulusKind" values="" isPersistent="0" form="single" />
			<Variable name="stimulus_corpseViolation" type="switch:stimulus:corpseViolation" values="" isPersistent="0" form="single" />
			<Variable name="stimulus_murder" type="switch:stimulus:murder" values="" isPersistent="0" form="single" />
			<Variable name="trespassInformation" type="information" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="carrier" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="reactionIntermediateData" type="switch:reactionIntermediateData" values="" isPersistent="0" form="single" requirementType="Reference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$carrier" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="&apos;carriedBody&apos;" SubGraph="&apos;carriedBody&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;carriedBody&apos;" prune="true" negprune="false" Parent="" Child="$body" Data="" />
					</GraphSearch>
					<SuppressFailure>
						<Sequence>
							<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;crime_reactedToBodyCarrierInstance&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								<WUIDFilter WUID="$this.id" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
							</GraphSearch>
							<Expression expressions="$alreadyReactedToThisInstance = true" />
						</Sequence>
					</SuppressFailure>
					<Switch>
						<IsDeadCheck SoulWUID="$body" FailSubtMissing="false" saveVersion="2">
							<Then canSkip="1">
								<EntityContextCheck context="combat_ignoreMurderedByPlayer" target="$body" saveVersion="2">
									<Else canSkip="1">
										<EntityContextCheck context="crime_ignoredCorpse" target="$body" saveVersion="2">
											<Else canSkip="1">
												<RelationContextCheck context="crime_ignoreCorpse" from="$this.id" to="$body" saveVersion="2">
													<Else canSkip="1">
														<EntityContextCheck context="crime_ignoreCorpses" target="" saveVersion="2">
															<Else canSkip="1">
																<Expression expressions="$ignore = false" />
															</Else>
														</EntityContextCheck>
													</Else>
												</RelationContextCheck>
											</Else>
										</EntityContextCheck>
									</Else>
								</EntityContextCheck>
							</Then>
						</IsDeadCheck>
						<IsUnconsciousCheck SoulWUID="$body" FailSubtMissing="false" saveVersion="2">
							<Then canSkip="1">
								<EntityContextCheck context="crime_ignoredUnconsciousBody" target="$body" saveVersion="2">
									<Else canSkip="1">
										<RelationContextCheck context="crime_ignoreUnconsciousBody" from="$this.id" to="$body" saveVersion="2">
											<Else canSkip="1">
												<EntityContextCheck context="crime_ignoreUnconsciousBodies" target="" saveVersion="2">
													<Else canSkip="1">
														<Expression expressions="$ignore = false" />
													</Else>
												</EntityContextCheck>
											</Else>
										</RelationContextCheck>
									</Else>
								</EntityContextCheck>
							</Then>
						</IsUnconsciousCheck>
						<DefaultBranch>
							<Expression expressions="$ignore = false" />
						</DefaultBranch>
					</Switch>
					<IfCondition failOnCondition="false" condition="~$ignore &amp; ~$alreadyReactedToThisInstance">
						<Sequence>
							<Switch>
								<CheckRelationshipInterval_SoulToSoul TargetSoul="$body" Soul="$this.id" Flag="friend" saveVersion="2">
									<Then canSkip="1">
										<Switch>
											<IsDeadCheck SoulWUID="$body" FailSubtMissing="false" saveVersion="2">
												<Then canSkip="1">
													<Sequence>
														<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="&apos;crime_lastHitByPlayer&apos;" SubGraph="&apos;crime_lastHitByPlayer&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<WUIDFilter WUID="$body" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
															<LinkTagFilter tag="&apos;crime_lastHitByPlayer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
															<Datalyzer Tag="&apos;crime_lastHitByPlayer&apos;" Quantifiers="Exists" Parent="" Child="" Data="$lastHitByPlayer" saveVersion="2" />
														</GraphSearch>
														<GetTime TimeType="GameTime" OutVar="$now" Delta="" />
														<IfCondition failOnCondition="false" condition="$lastHitByPlayer.time &gt; 0 &amp; &#10; $now &lt; $lastHitByPlayer.time + $data:script_param[&apos;crime_lastHit_expiration_time&apos;].value">
															<Expression expressions="$deltaSinceLasthit = ($now - $lastHitByPlayer.time + $data:script_param[&apos;crime_lastHit_gracePeriod&apos;].value) / 1000" />
														</IfCondition>
														<RecentlySkirmished NPC1="$this.id" NPC2="$body" MaxTime="$deltaSinceLasthit" saveVersion="2">
															<Then canSkip="1">
																<Success />
															</Then>
															<Else canSkip="1">
																<EntityContextCheck context="crime_bff" target="" saveVersion="2">
																	<Then canSkip="1">
																		<Switch>
																			<EntityContextCheck context="switch_recognitionLevel_I" target="" saveVersion="2">
																				<Then canSkip="1">
																					<Success />
																				</Then>
																			</EntityContextCheck>
																			<EntityContextCheck context="switch_recognitionLevel_II" target="" saveVersion="2">
																				<Then canSkip="1">
																					<Success />
																				</Then>
																			</EntityContextCheck>
																			<DefaultBranch>
																				<Function_crime_addBffIntermediateBarkData corpse="" isCorpse="false" isViolent="true" reactionIntermediateData="$reactionIntermediateData" nodeLabel="67119701" />
																			</DefaultBranch>
																		</Switch>
																	</Then>
																	<Else canSkip="1">
																		<Sequence>
																			<GraphSearch Origin="$body" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																				<LinkTagFilter tag="&apos;switch_corpse&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$corpseData" />
																			</GraphSearch>
																			<IfElseCondition failOnCondition="false" condition="~$corpseData.resolved &amp; &#10;~$lastHitByPlayer.hitIsIndifferent &amp; &#10;( &#10; $lastHitByPlayer.time &gt; 0 &amp; &#10; $now &lt; $lastHitByPlayer.time + $data:script_param[&apos;crime_lastHit_expiration_time&apos;].value &#10;)" saveVersion="2">
																				<Then canSkip="1">
																					<Sequence>
																						<Expression expressions="$stimulus_murder.corpse = $body &#10;$stimulus_murder.isCarried = true" />
																						<Function_switch_handleStimulusMurder stimulus="$stimulus_murder" nodeLabel="93956554" />
																					</Sequence>
																				</Then>
																				<Else canSkip="1">
																					<Sequence>
																						<Expression expressions="$stimulus_corpseViolation.corpse =  $body" />
																						<Function_switch_handleStimulusCorpseViolation stimulus="$stimulus_corpseViolation" nodeLabel="77775041" />
																					</Sequence>
																				</Else>
																			</IfElseCondition>
																		</Sequence>
																	</Else>
																</EntityContextCheck>
															</Else>
														</RecentlySkirmished>
													</Sequence>
												</Then>
											</IsDeadCheck>
											<IsUnconsciousCheck SoulWUID="$body" FailSubtMissing="false" saveVersion="2">
												<Then canSkip="1">
													<Sequence>
														<GraphSearch Origin="$__player" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="&apos;crime_lastHitByPlayer&apos;" SubGraph="&apos;crime_lastHitByPlayer&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<WUIDFilter WUID="$body" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
															<LinkTagFilter tag="&apos;crime_lastHitByPlayer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
															<Datalyzer Tag="&apos;crime_lastHitByPlayer&apos;" Quantifiers="Exists" Parent="" Child="" Data="$lastHitByPlayer" saveVersion="2" />
														</GraphSearch>
														<GetTime TimeType="GameTime" OutVar="$now" Delta="" />
														<IfCondition failOnCondition="false" condition="$lastHitByPlayer.time &gt; 0 &amp; &#10; $now &lt; $lastHitByPlayer.time + $data:script_param[&apos;crime_lastHit_expiration_time&apos;].value">
															<Expression expressions="$deltaSinceLasthit = ($now - $lastHitByPlayer.time + $data:script_param[&apos;crime_lastHit_gracePeriod&apos;].value) / 1000" />
														</IfCondition>
														<RecentlySkirmished NPC1="$this.id" NPC2="$body" MaxTime="$deltaSinceLasthit" saveVersion="2">
															<Then canSkip="1">
																<Function_crime_updateUnconsciousBodyData body="$body" discover="true" reset="false" nodeLabel="16330693" />
															</Then>
															<Else canSkip="1">
																<EntityContextCheck context="crime_bff" target="" saveVersion="2">
																	<Then canSkip="1">
																		<Switch>
																			<EntityContextCheck context="switch_recognitionLevel_I" target="" saveVersion="2">
																				<Then canSkip="1">
																					<Success />
																				</Then>
																			</EntityContextCheck>
																			<EntityContextCheck context="switch_recognitionLevel_II" target="" saveVersion="2">
																				<Then canSkip="1">
																					<Success />
																				</Then>
																			</EntityContextCheck>
																			<DefaultBranch>
																				<Function_crime_addBffIntermediateBarkData corpse="" isCorpse="false" isViolent="true" reactionIntermediateData="$reactionIntermediateData" nodeLabel="70060413" />
																			</DefaultBranch>
																		</Switch>
																	</Then>
																	<Else canSkip="1">
																		<IsIndifferent NPC="$body" saveVersion="2">
																			<Then canSkip="1">
																				<Function_crime_updateUnconsciousBodyData body="$body" discover="true" reset="false" nodeLabel="98297273" />
																			</Then>
																			<Else canSkip="1">
																				<IfElseCondition failOnCondition="false" condition="~$lastHitByPlayer.hitIsIndifferent &amp; &#10;( &#10; $lastHitByPlayer.time &gt; 0 &amp; &#10; $now &lt; $lastHitByPlayer.time + $data:script_param[&apos;crime_lastHit_expiration_time&apos;].value &#10;)" saveVersion="2">
																					<Then canSkip="1">
																						<Sequence>
																							<IfElseCondition failOnCondition="false" condition="$lastHitByPlayer.kind == $enum:crime_attackKind.stealth" saveVersion="2">
																								<Then canSkip="1">
																									<Expression expressions="$stimulusKind = $enum:crime_stimulusKind.takedown" />
																								</Then>
																								<Else canSkip="1">
																									<Expression expressions="$stimulusKind = $enum:crime_stimulusKind.combat" />
																								</Else>
																							</IfElseCondition>
																							<Switch>
																								<EntityContextCheck context="switch_recognitionLevel_I" target="" saveVersion="2">
																									<Then canSkip="1">
																										<Success />
																									</Then>
																								</EntityContextCheck>
																								<EntityContextCheck context="switch_recognitionLevel_II" target="" saveVersion="2">
																									<Then canSkip="1">
																										<Success />
																									</Then>
																								</EntityContextCheck>
																								<DefaultBranch>
																									<Function_crime_updateUnconsciousBodyData body="$body" discover="true" reset="false" nodeLabel="87334546" />
																								</DefaultBranch>
																							</Switch>
																							<AtomicDecorator>
																								<Sequence>
																									<CreateCombatInformation Victim="$body" AttackKind="$lastHitByPlayer.kind" DirectHit="true" AddConfiscation="true" Information="$information" />
																									<Function_crime_addEyeWitness information="$information" npc="$this.id" nodeLabel="61840304" />
																									<Function_crime_assessTrespass observer="" information="$trespassInformation" nodeLabel="58514221" />
																									<AddLink From="$this.id" To="$body" Tag="&apos;crime_followUpBehavior_wakeUp&apos;" Data="active(true)" LinkOpHandleMode="OverWrite" />
																									<Expression expressions="$stimulusCombat.participant1 = $__player &#10;$stimulusCombat.participant2 = $body &#10;$stimulusCombat.attackKind = $lastHitByPlayer.kind &#10;$stimulusCombat.hitStrength = $enum:HitReactionStrength.Fatal &#10;$stimulusCombat.freshlyAttributedCrime = true" />
																									<Function_switch_handleStimulusCombat stimulus="$stimulusCombat" nodeLabel="30902567" />
																								</Sequence>
																							</AtomicDecorator>
																						</Sequence>
																					</Then>
																					<Else canSkip="1">
																						<Switch>
																							<EntityContextCheck context="switch_recognitionLevel_I" target="" saveVersion="2">
																								<Then canSkip="1">
																									<Success />
																								</Then>
																							</EntityContextCheck>
																							<EntityContextCheck context="switch_recognitionLevel_II" target="" saveVersion="2">
																								<Then canSkip="1">
																									<Success />
																								</Then>
																							</EntityContextCheck>
																							<DefaultBranch>
																								<Sequence>
																									<Function_crime_updateUnconsciousBodyData body="$body" discover="true" reset="false" nodeLabel="40102201" />
																									<IfCondition failOnCondition="false" condition="$reactionIntermediateData.barkData.priority &lt; $data:script_param[&apos;crime_barkReactionPriority_carriedFriend&apos;].value">
																										<Sequence>
																											<ReinitVariable variable="$reactionIntermediateData" />
																											<Expression expressions="$reactionIntermediateData.barkData.priority = $data:script_param[&apos;crime_barkReactionPriority_carriedFriend&apos;].value &#10;$reactionIntermediateData.barkData.lookAt = $__player &#10;$reactionIntermediateData.barkData.barkKind = $enum:crime_barkReactionKind.heldBodyFriendly" />
																											<EntityContextCheck context="crime_isAuthority" target="$this.id" saveVersion="2">
																												<Then canSkip="1">
																													<EntityContextCheck context="crime_isAuthority" target="$body" saveVersion="2">
																														<Then canSkip="1">
																															<Expression expressions="$guardSeesGuard = true" />
																														</Then>
																														<Else canSkip="1">
																															<Success />
																														</Else>
																													</EntityContextCheck>
																												</Then>
																												<Else canSkip="1">
																													<Success />
																												</Else>
																											</EntityContextCheck>
																											<IfElseCondition failOnCondition="false" condition="$guardSeesGuard" saveVersion="2">
																												<Then canSkip="1">
																													<Expression expressions="$reactionIntermediateData.barkData.metarole = &apos;STRAZ_VIDI_HRACE_JAK_NESE_CLOVEKA_V_BEZVEDOMI_(STRAZ)&apos; &#10;$reactionIntermediateData.barkData.isDramatic = true &#10;$reactionIntermediateData.barkData.genderData.isGenderSpecific = false &#10;$reactionIntermediateData.barkData.animationApproach = $enum:animationApproach.tryDialogAnimations" />
																												</Then>
																												<Else canSkip="1">
																													<Sequence>
																														<GetAreMates Npc1="$this.id" Npc2="$body" AreMates="$areMates" />
																														<IfElseCondition failOnCondition="false" condition="$areMates" saveVersion="2">
																															<Then canSkip="1">
																																<Expression expressions="$reactionIntermediateData.barkData.metarole = &apos;NPC_VIDI_HRACE_JAK_NESE_CLOVEKA_V_BEZVEDOMI_(SPOLUBYDLICI)&apos;" />
																															</Then>
																															<Else canSkip="1">
																																<Expression expressions="$reactionIntermediateData.barkData.metarole = &apos;NPC_VIDI_HRACE_JAK_NESE_CLOVEKA_V_BEZVEDOMI_(PRITEL)&apos;" />
																															</Else>
																														</IfElseCondition>
																														<Expression expressions="$reactionIntermediateData.barkData.genderData.isGenderSpecific = true &#10;$reactionIntermediateData.barkData.isDramatic = true" />
																														<HasGenderCheck Gender="Female" SoulWUID="$body" FailSubtMissing="false" saveVersion="2">
																															<Then canSkip="1">
																																<Expression expressions="$reactionIntermediateData.barkData.genderData.isMan = false" />
																															</Then>
																															<Else canSkip="1">
																																<Expression expressions="$reactionIntermediateData.barkData.genderData.isMan = true" />
																															</Else>
																														</HasGenderCheck>
																													</Sequence>
																												</Else>
																											</IfElseCondition>
																										</Sequence>
																									</IfCondition>
																								</Sequence>
																							</DefaultBranch>
																						</Switch>
																					</Else>
																				</IfElseCondition>
																			</Else>
																		</IsIndifferent>
																	</Else>
																</EntityContextCheck>
															</Else>
														</RecentlySkirmished>
													</Sequence>
												</Then>
											</IsUnconsciousCheck>
											<DefaultBranch>
												<Success />
											</DefaultBranch>
										</Switch>
									</Then>
								</CheckRelationshipInterval_SoulToSoul>
								<CheckRelationshipInterval_SoulToSoul TargetSoul="$body" Soul="$this.id" Flag="enemy" saveVersion="2">
									<Then canSkip="1">
										<EntityContextCheck context="crime_bff" target="" saveVersion="2">
											<Else canSkip="1">
												<IfCondition failOnCondition="false" condition="$reactionIntermediateData.barkData.priority &lt; $data:script_param[&apos;crime_barkReactionPriority_carriedEnemy&apos;].value">
													<Switch>
														<IsDeadCheck SoulWUID="$body" FailSubtMissing="false" saveVersion="2">
															<Then canSkip="1">
																<Sequence>
																	<ReinitVariable variable="$reactionIntermediateData" />
																	<Expression expressions="$reactionIntermediateData.barkData.priority = $data:script_param[&apos;crime_barkReactionPriority_carriedEnemy&apos;].value &#10;$reactionIntermediateData.barkData.lookAt = $__player &#10;$reactionIntermediateData.barkData.barkKind = $enum:crime_barkReactionKind.heldBodyEnemy &#10;$reactionIntermediateData.barkData.animationApproach = $enum:animationApproach.tryDialogAnimations" />
																	<EntityContextCheck context="crime_isCuman" target="$body" saveVersion="2">
																		<Then canSkip="1">
																			<Expression expressions="$reactionIntermediateData.barkData.metarole = &apos;NPC_VIDI_HRACE_JAK_NESE_MRTVOLU_(KUMAN)&apos;" />
																		</Then>
																		<Else canSkip="1">
																			<Expression expressions="$reactionIntermediateData.barkData.metarole =  &apos;NPC_VIDI_HRACE_JAK_NESE_MRTVOLU_(NEPRITEL)&apos;" />
																		</Else>
																	</EntityContextCheck>
																</Sequence>
															</Then>
														</IsDeadCheck>
														<IsUnconsciousCheck SoulWUID="$body" FailSubtMissing="false" saveVersion="2">
															<Then canSkip="1">
																<Sequence>
																	<ReinitVariable variable="$reactionIntermediateData" />
																	<Expression expressions="$reactionIntermediateData.barkData.priority = $data:script_param[&apos;crime_barkReactionPriority_carriedEnemy&apos;].value &#10;$reactionIntermediateData.barkData.lookAt = $__player &#10;$reactionIntermediateData.barkData.barkKind = $enum:crime_barkReactionKind.heldBodyEnemy &#10;$reactionIntermediateData.barkData.animationApproach = $enum:animationApproach.tryDialogAnimations &#10; &#10;$reactionIntermediateData.barkData.metarole = &apos;NPC_VIDI_HRACE_JAK_NESE_CLOVEKA_V_BEZVEDOMI_(NEPRITEL)&apos;" />
																</Sequence>
															</Then>
														</IsUnconsciousCheck>
														<DefaultBranch>
															<Success />
														</DefaultBranch>
													</Switch>
												</IfCondition>
											</Else>
										</EntityContextCheck>
									</Then>
								</CheckRelationshipInterval_SoulToSoul>
								<DefaultBranch>
									<Success />
								</DefaultBranch>
							</Switch>
							<Switch>
								<EntityContextCheck context="switch_recognitionLevel_I" target="" saveVersion="2">
									<Then canSkip="1">
										<Success />
									</Then>
								</EntityContextCheck>
								<EntityContextCheck context="switch_recognitionLevel_II" target="" saveVersion="2">
									<Then canSkip="1">
										<Success />
									</Then>
								</EntityContextCheck>
								<DefaultBranch>
									<Sequence>
										<Expression expressions="$observer_soul.value = $this.id &#10;$carrier_soul.value = $carrier &#10;$body_soul.value = $body" />
										<SendAIConceptSignal_carriedBodySeenNotification observer="$observer_soul" carrier="$carrier_soul" body="$body_soul" />
										<AddLink From="$__player" To="$this.id" Tag="&apos;crime_reactedToBodyCarrierInstance&apos;" Data="" LinkOpHandleMode="Error" />
									</Sequence>
								</DefaultBranch>
							</Switch>
						</Sequence>
					</IfCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="alreadyReactedToThisInstance" comment="" />
				<Variable name="areMates" comment="" />
				<Variable name="body" comment="" />
				<Variable name="body_soul" comment="" />
				<Variable name="carrier_soul" comment="" />
				<Variable name="corpseData" comment="" />
				<Variable name="deltaSinceLasthit" comment="" />
				<Variable name="guardSeesGuard" comment="" />
				<Variable name="ignore" comment="" />
				<Variable name="information" comment="" />
				<Variable name="lastHitByPlayer" comment="" />
				<Variable name="now" comment="" />
				<Variable name="observer_soul" comment="" />
				<Variable name="stimulusCombat" comment="" />
				<Variable name="stimulusKind" comment="" />
				<Variable name="stimulus_corpseViolation" comment="" />
				<Variable name="stimulus_murder" comment="" />
				<Variable name="trespassInformation" comment="" />
				<Variable name="carrier" comment="" />
				<Variable name="reactionIntermediateData" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosY="-140" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
									<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WUIDFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
						</SuppressFailure>
						<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Else>
											<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Else>
													<RelationContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Else>
															<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Else>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Else>
															</EntityContextCheck>
														</Else>
													</RelationContextCheck>
												</Else>
											</EntityContextCheck>
										</Else>
									</EntityContextCheck>
								</Then>
							</IsDeadCheck>
							<IsUnconsciousCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Else>
											<RelationContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Else>
													<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Else>
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</Else>
													</EntityContextCheck>
												</Else>
											</RelationContextCheck>
										</Else>
									</EntityContextCheck>
								</Then>
							</IsUnconsciousCheck>
							<DefaultBranch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</DefaultBranch>
						</Switch>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<CheckRelationshipInterval_SoulToSoul hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GraphSearch hasInputBreakpoint="0" comment="Retrieve lastHit data" breakpointFlags="0">
																<OutputBreakpoints />
																<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</WUIDFilter>
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
																<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																</Datalyzer>
															</GraphSearch>
															<GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</GetTime>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<RecentlySkirmished hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Success>
																</Then>
																<Else>
																	<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																		<Then>
																			<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																					<Then>
																						<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Success>
																					</Then>
																				</EntityContextCheck>
																				<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																					<Then>
																						<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Success>
																					</Then>
																				</EntityContextCheck>
																				<DefaultBranch>
																					<Function_crime_addBffIntermediateBarkData hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Function_crime_addBffIntermediateBarkData>
																				</DefaultBranch>
																			</Switch>
																		</Then>
																		<Else>
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</LinkTagFilter>
																				</GraphSearch>
																				<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																					<Then>
																						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</Expression>
																							<Function_switch_handleStimulusMurder hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</Function_switch_handleStimulusMurder>
																						</Sequence>
																					</Then>
																					<Else>
																						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</Expression>
																							<Function_switch_handleStimulusCorpseViolation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</Function_switch_handleStimulusCorpseViolation>
																						</Sequence>
																					</Else>
																				</IfElseCondition>
																			</Sequence>
																		</Else>
																	</EntityContextCheck>
																</Else>
															</RecentlySkirmished>
														</Sequence>
													</Then>
												</IsDeadCheck>
												<IsUnconsciousCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GraphSearch hasInputBreakpoint="0" comment="Retrieve lastHit data" breakpointFlags="0">
																<OutputBreakpoints />
																<WUIDFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</WUIDFilter>
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
																<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																</Datalyzer>
															</GraphSearch>
															<GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</GetTime>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<RecentlySkirmished hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Function_crime_updateUnconsciousBodyData hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_crime_updateUnconsciousBodyData>
																</Then>
																<Else>
																	<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																		<Then>
																			<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																					<Then>
																						<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Success>
																					</Then>
																				</EntityContextCheck>
																				<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																					<Then>
																						<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Success>
																					</Then>
																				</EntityContextCheck>
																				<DefaultBranch>
																					<Function_crime_addBffIntermediateBarkData hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Function_crime_addBffIntermediateBarkData>
																				</DefaultBranch>
																			</Switch>
																		</Then>
																		<Else>
																			<IsIndifferent hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																				<OutputBreakpoints />
																				<Then>
																					<Function_crime_updateUnconsciousBodyData hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Function_crime_updateUnconsciousBodyData>
																				</Then>
																				<Else>
																					<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																						<OutputBreakpoints />
																						<Then>
																							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																									<OutputBreakpoints />
																									<Then>
																										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</Expression>
																									</Then>
																									<Else>
																										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</Expression>
																									</Else>
																								</IfElseCondition>
																								<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																										<OutputBreakpoints />
																										<Then>
																											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																											</Success>
																										</Then>
																									</EntityContextCheck>
																									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																										<OutputBreakpoints />
																										<Then>
																											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																											</Success>
																										</Then>
																									</EntityContextCheck>
																									<DefaultBranch>
																										<Function_crime_updateUnconsciousBodyData hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</Function_crime_updateUnconsciousBodyData>
																									</DefaultBranch>
																								</Switch>
																								<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																										<CreateCombatInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</CreateCombatInformation>
																										<Function_crime_addEyeWitness hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</Function_crime_addEyeWitness>
																										<Function_crime_assessTrespass hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</Function_crime_assessTrespass>
																										<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</AddLink>
																										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</Expression>
																										<Function_switch_handleStimulusCombat hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</Function_switch_handleStimulusCombat>
																									</Sequence>
																								</AtomicDecorator>
																							</Sequence>
																						</Then>
																						<Else>
																							<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																									<OutputBreakpoints />
																									<Then>
																										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</Success>
																									</Then>
																								</EntityContextCheck>
																								<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																									<OutputBreakpoints />
																									<Then>
																										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</Success>
																									</Then>
																								</EntityContextCheck>
																								<DefaultBranch>
																									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																										<Function_crime_updateUnconsciousBodyData hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</Function_crime_updateUnconsciousBodyData>
																										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																												<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																												</ReinitVariable>
																												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																												</Expression>
																												<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																													<OutputBreakpoints />
																													<Then>
																														<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																															<OutputBreakpoints />
																															<Then>
																																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																	<OutputBreakpoints />
																																</Expression>
																															</Then>
																															<Else>
																																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																	<OutputBreakpoints />
																																</Success>
																															</Else>
																														</EntityContextCheck>
																													</Then>
																													<Else>
																														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																														</Success>
																													</Else>
																												</EntityContextCheck>
																												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																													<OutputBreakpoints />
																													<Then>
																														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																														</Expression>
																													</Then>
																													<Else>
																														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																															<GetAreMates hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																															</GetAreMates>
																															<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																<OutputBreakpoints />
																																<Then>
																																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</Expression>
																																</Then>
																																<Else>
																																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</Expression>
																																</Else>
																															</IfElseCondition>
																															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																															</Expression>
																															<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																<OutputBreakpoints />
																																<Then>
																																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</Expression>
																																</Then>
																																<Else>
																																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</Expression>
																																</Else>
																															</HasGenderCheck>
																														</Sequence>
																													</Else>
																												</IfElseCondition>
																											</Sequence>
																										</IfCondition>
																									</Sequence>
																								</DefaultBranch>
																							</Switch>
																						</Else>
																					</IfElseCondition>
																				</Else>
																			</IsIndifferent>
																		</Else>
																	</EntityContextCheck>
																</Else>
															</RecentlySkirmished>
														</Sequence>
													</Then>
												</IsUnconsciousCheck>
												<DefaultBranch>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</DefaultBranch>
											</Switch>
										</Then>
									</CheckRelationshipInterval_SoulToSoul>
									<CheckRelationshipInterval_SoulToSoul hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Else>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</ReinitVariable>
																		<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Expression>
																		<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																			<OutputBreakpoints />
																			<Then>
																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Expression>
																			</Then>
																			<Else>
																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Expression>
																			</Else>
																		</EntityContextCheck>
																	</Sequence>
																</Then>
															</IsDeadCheck>
															<IsUnconsciousCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</ReinitVariable>
																		<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Expression>
																	</Sequence>
																</Then>
															</IsUnconsciousCheck>
															<DefaultBranch>
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</DefaultBranch>
														</Switch>
													</IfCondition>
												</Else>
											</EntityContextCheck>
										</Then>
									</CheckRelationshipInterval_SoulToSoul>
									<DefaultBranch>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</DefaultBranch>
								</Switch>
								<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Then>
									</EntityContextCheck>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Then>
									</EntityContextCheck>
									<DefaultBranch>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<SendAIConceptSignal_carriedBodySeenNotification hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</SendAIConceptSignal_carriedBodySeenNotification>
											<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AddLink>
										</Sequence>
									</DefaultBranch>
								</Switch>
							</Sequence>
						</IfCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>