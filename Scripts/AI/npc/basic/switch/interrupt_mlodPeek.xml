<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="interrupt_mlodPeek" is_function="1">
    <Variables />
    <Parameters>
      <Variable name="mlodPeekData" type="switch:interruptData:mlodPeek" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <EntityContext context="crime_preventDespawn" target="">
          <AnyDecorator preset="crime_keepStateAndItems" enabled="true">
            <LogToLabel Name="&apos;crime_interrupt&apos;" Wuid="" Message="&apos;interrupt:mlodPeek&apos;">
              <LogToLabel Name="&apos;crime_stimulusKind&apos;" Wuid="" Message="&apos;stimulusKind:$mlodPeekData.stimulusKind&apos;">
                <CheckWuidValid wuid="$mlodPeekData.target" FailSubtMissing="false" saveVersion="2">
                  <Then canSkip="1">
                    <Parallel successMode="Any" failureMode="Any">
                      <Sequence>
                        <Turn target="$mlodPeekData.target" align="false" />
                        <Wait duration="&apos;6s&apos;" timeType="GameTime" doFail="false" variation="" />
                      </Sequence>
                      <DistanceGate Origin="$this.id" ReferencePt="$__player" Low="30.000000" High="30.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
                        <Success />
                      </DistanceGate>
                    </Parallel>
                  </Then>
                </CheckWuidValid>
              </LogToLabel>
            </LogToLabel>
          </AnyDecorator>
        </EntityContext>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="mlodPeek" EventSet="">
      <Variables>
        <Variable name="mlodPeekData" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <CheckWuidValid hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Turn>
                          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Wait>
                        </Sequence>
                        <DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Success>
                        </DistanceGate>
                      </Parallel>
                    </Then>
                  </CheckWuidValid>
                </LogToLabel>
              </LogToLabel>
            </AnyDecorator>
          </EntityContext>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>