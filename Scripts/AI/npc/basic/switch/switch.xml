<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="root" is_function="0">
		<Variables>
			<Variable name="arrowFlyingBy" type="weapon:onPlayerArrowFlyingBy" values="" isPersistent="0" form="single" />
			<Variable name="assaultData" type="crime:assaultData" values="" isPersistent="0" form="single" />
			<Variable name="attackInitiatedByConcept" type="crime:attackInitiatedByConcept" values="" isPersistent="0" form="single" />
			<Variable name="buffTagChanged" type="rpgModule:buffTagChanged" values="" isPersistent="0" form="single" />
			<Variable name="cancelPerceptionIgnoreRequest" type="switch:cancelPerceptionIgnoreRequest" values="" isPersistent="0" form="single" />
			<Variable name="chatRequest" type="dialog:chatRequest" values="" isPersistent="0" form="single" />
			<Variable name="consciousness" type="enum:consciousness" values="$enum:consciousness.conscious" isPersistent="0" form="single" />
			<Variable name="crimeBarkRequest" type="crime:barkRequest" values="" isPersistent="0" form="single" />
			<Variable name="dialogRequest" type="dialogModule:onDialogRequest" values="" isPersistent="0" form="single" />
			<Variable name="forgetCrimesData" type="crime:forgetCrimesData" values="" isPersistent="0" form="single" />
			<Variable name="greeting_currentTarget" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="greeting_isValid" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="hitData" type="hitData" values="" isPersistent="0" form="single" />
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
			<Variable name="informationDiff" type="informationDiff" values="" isPersistent="0" form="single" />
			<Variable name="informationDiffSender" type="senderInfo" values="" isPersistent="0" form="single" />
			<Variable name="informationDiffSkip" type="informationDiff" values="" isPersistent="0" form="single" />
			<Variable name="isBleeding" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="isPoisoned" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="lockPickedDoorInfo" type="lockpickedDoorData" values="" isPersistent="0" form="single" />
			<Variable name="mrkev" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="nearMiss" type="combat:playerAttackNearMiss" values="" isPersistent="0" form="single" />
			<Variable name="observer_currentPerception" type="perceptionInfo" values="" isPersistent="0" form="single" />
			<Variable name="onSoulRevived" type="rpgModule:onSoulRevived" values="" isPersistent="0" form="single" />
			<Variable name="perception" type="perceptionInfo" values="" isPersistent="0" form="single" />
			<Variable name="perceptionSkip" type="perceptionInfo" values="" isPersistent="0" form="single" />
			<Variable name="pickpocket" type="minigame:pickpocket" values="" isPersistent="0" form="single" />
			<Variable name="playNearMissShockReaction" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="recognizing" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="teleportRequest" type="switch:teleportRequest" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<SuppressFailure>
						<Selector>
							<Function_crime_getMrkev mrkev="$mrkev" nodeLabel="40024453" />
							<ErrorNode Message="&apos;[$this.name;] Mrkev not found :(&apos;" />
						</Selector>
					</SuppressFailure>
					<SuppressFailure>
						<EntityContextCheck context="RPG_NOT_GENERATED_VIA_SCRIPT" target="" saveVersion="2">
							<Then canSkip="1">
								<Selector>
									<GraphSearch Origin="$__land" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;testingLevel&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
									</GraphSearch>
									<ErrorNode Message="&apos;[$this.name;] RPG NOT GENERATED VIA SCRIPT&apos;" />
								</Selector>
							</Then>
						</EntityContextCheck>
					</SuppressFailure>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<While doFail="false" propagateChildFail="false" condition="true">
					<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
						<Child canSkip="1">
					<GameContextBarrier context="debug_disableSwitch" Negation="true" RunLogic="Halt">
						<Parallel successMode="Any" failureMode="Any">
							<Parallel successMode="Any" failureMode="Any">
								<While doFail="false" propagateChildFail="false" condition="true">
									<DeadUnconsciousGate Who="" State="Any" Negation="true" RunLogic="Halt">
										<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$informationDiff" senderInfo="$informationDiffSender" inbox="&apos;informationDiff&apos;" condition="" answerVar="">
											<EntityContextCheck context="switch_disabledInformationReaction" target="$this.id" saveVersion="2">
												<Then canSkip="1">
													<Success />
												</Then>
												<Else canSkip="1">
													<IfCondition failOnCondition="false" condition="$consciousness == $enum:consciousness.conscious">
														<Sequence>
															<LoopUntil until="Fail" attemptCount="0">
																<Sequence>
																	<InstantReadMessage variable="$informationDiffSkip" senderInfo="" inbox="&apos;informationDiff&apos;" condition="$__content.information.perceivedWuid == $informationDiff.information.perceivedWuid &amp; &#10;$__content.information.label == $informationDiff.information.label &amp; &#10;$__content.status == $informationDiff.status" />
																	<Expression expressions="$informationDiff.updated = $informationDiff.updated &amp; $informationDiffSkip.updated" />
																</Sequence>
															</LoopUntil>
															<Function_switch_handleInformationDiff informationDiff="$informationDiff" informationDiffSender="$informationDiffSender" nodeLabel="69902805" />
														</Sequence>
													</IfCondition>
												</Else>
											</EntityContextCheck>
										</ProcessMessage>
									</DeadUnconsciousGate>
								</While>
								<Parallel successMode="Any" failureMode="Any">
									<While doFail="false" propagateChildFail="false" condition="true">
										<DeadUnconsciousGate Who="" State="Any" Negation="true" RunLogic="Halt">
											<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;crime_escalationLevel_recognizing&apos;" RunLogic="Halt">
												<SubtreeDecorator saveVersion="2">
													<Init canSkip="1">
														<Expression expressions="$recognizing += 1" />
													</Init>
													<Subtree canSkip="1">
														<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
													</Subtree>
													<Cleanup canSkip="1">
														<Expression expressions="$recognizing -= 1" />
													</Cleanup>
												</SubtreeDecorator>
											</ExternalLock>
										</DeadUnconsciousGate>
									</While>
									<While doFail="false" propagateChildFail="false" condition="true">
										<DeadUnconsciousGate Who="" State="Any" Negation="true" RunLogic="Halt">
											<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;crime_escalationLevel_recognizing_delay&apos;" RunLogic="KeepRunning">
												<SubtreeDecorator saveVersion="2">
													<Init canSkip="1">
														<Sequence>
															<Expression expressions="$recognizing += 1" />
															<SetExternalLock LockManagerType="Intellect" Locked="true" LockName="&apos;crime_escalationLevel_recognizing&apos;" />
														</Sequence>
													</Init>
													<Subtree canSkip="1">
														<Timeout duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="">
															<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;crime_escalationLevel_recognizing&apos;" RunLogic="KeepRunning">
																<Success />
															</ExternalLock>
														</Timeout>
													</Subtree>
													<Cleanup canSkip="1">
														<Sequence>
															<Expression expressions="$recognizing -= 1" />
															<SetExternalLock LockManagerType="Intellect" Locked="true" LockName="&apos;crime_escalationLevel_recognizing_delay&apos;" />
														</Sequence>
													</Cleanup>
												</SubtreeDecorator>
											</ExternalLock>
										</DeadUnconsciousGate>
									</While>
									<While doFail="false" propagateChildFail="false" condition="true">
													<IfGate atomic="false" condition="$recognizing &gt; 0" RunLogic="Halt">
														<EntityContext context="crime_escalationLevel_recognizing" target="">
															<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
														</EntityContext>
													</IfGate>
												</While>
									<While doFail="false" propagateChildFail="false" condition="true">
										<DeadUnconsciousGate Who="" State="Dead" Negation="true" RunLogic="Halt">
											<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$perception" senderInfo="" inbox="&apos;perceptionInfo&apos;" condition="" answerVar="">
												<Sequence>
													<GameContextCheck context="crime_perception_debugEnabled" saveVersion="2">
														<Then canSkip="1">
															<IfCondition failOnCondition="false" condition="$perception.perceptible == $__player">
																<IfElseCondition failOnCondition="false" condition="$perception.threshold &gt; 0" saveVersion="2">
																	<Then canSkip="1">
																		<AddLink From="$mrkev" To="$this.id" Tag="&apos;crime_perception_playerThreshold&apos;" Data="$perception.threshold" LinkOpHandleMode="OverWrite" />
																	</Then>
																	<Else canSkip="1">
																		<RemoveLink From="$mrkev" To="$this.id" Tag="&apos;crime_perception_playerThreshold&apos;" LinkOpHandleMode="OverWrite" />
																	</Else>
																</IfElseCondition>
															</IfCondition>
														</Then>
													</GameContextCheck>
													<IfCondition failOnCondition="false" condition="$perception.threshold ==  0.001 | &#10;($perception.threshold == 1 &amp; ~$perception.isInsideRecognitionBorder)">
														<SuppressFailure>
															<LoopUntil until="Fail" attemptCount="0">
																<Sequence>
																	<InstantReadMessage variable="$perceptionSkip" senderInfo="" inbox="&apos;perceptionInfo&apos;" condition="$__content.perceptible == $perception.perceptible &amp; &#10;$__content.threshold &gt; 0" />
																	<Switch>
																		<IfCondition failOnCondition="false" condition="$perception.threshold &lt; $perceptionSkip.threshold">
																			<Expression expressions="$perception = $perceptionSkip" />
																		</IfCondition>
																		<IfCondition failOnCondition="false" condition="$perception.threshold == 1 &amp;  &#10;~$perception.isInsideRecognitionBorder &amp; &#10;$perceptionSkip.isInsideRecognitionBorder">
																			<Expression expressions="$perception = $perceptionSkip" />
																		</IfCondition>
																		<DefaultBranch>
																			<Success />
																		</DefaultBranch>
																	</Switch>
																</Sequence>
															</LoopUntil>
														</SuppressFailure>
													</IfCondition>
													<EntityContextCheck context="switch_disabledPerceptionReaction" target="$this.id" saveVersion="2">
														<Then canSkip="1">
															<Success />
														</Then>
														<Else canSkip="1">
															<IfCondition failOnCondition="false" condition="$consciousness == $enum:consciousness.conscious">
																<Sequence>
																	<IfCondition failOnCondition="false" condition="( $observer_currentPerception.perceptible == $__null | &#10;  $perception.perceptible ~= $observer_currentPerception.perceptible) &amp; &#10;$perception.threshold == 1">
																		<Expression expressions="$observer_currentPerception = $perception" />
																	</IfCondition>
																	<IfCondition failOnCondition="false" condition="$perception.threshold == 1 &amp; &#10;$perception.isInsideRecognitionBorder">
																		<Sequence>
																			<Function_situation_greeting_isValidReceiver receiver="$perception.perceptible" isValid="$greeting_isValid" nodeLabel="96770695" />
																			<Expression expressions="$greeting_currentTarget = ($greeting_isValid) ? $perception.perceptible : $__null" />
																			<IfCondition failOnCondition="false" condition="$greeting_isValid">
																				<SetExternalLock LockManagerType="Intellect" Locked="false" LockName="&apos;greeting_targetAcquiredWarlock&apos;" />
																			</IfCondition>
																		</Sequence>
																	</IfCondition>
																	<Function_switch_handlePerception perception="$perception" nodeLabel="95406187" />
																</Sequence>
															</IfCondition>
														</Else>
													</EntityContextCheck>
												</Sequence>
											</ProcessMessage>
										</DeadUnconsciousGate>
									</While>
								</Parallel>
								<While doFail="false" propagateChildFail="false" condition="true">
									<DeadUnconsciousGate Who="$this.id" State="Dead" Negation="true" RunLogic="Halt">
										<DeadUnconsciousGate Who="$this.id" State="Unconscious" Negation="false" RunLogic="KeepRunning">
											<Function_switch_state_unconscious consciousness="$consciousness" nodeLabel="35179592" />
										</DeadUnconsciousGate>
									</DeadUnconsciousGate>
								</While>
										<While doFail="false" propagateChildFail="false" condition="true">
								<DeadUnconsciousGate Who="$this.id" State="Dead" Negation="false" RunLogic="Halt">
									<Function_switch_state_dead consciousness="$consciousness" nodeLabel="46572951" />
								</DeadUnconsciousGate>
										</While>
								<Parallel successMode="Any" failureMode="Any">
									<While doFail="false" propagateChildFail="false" condition="true">
										<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$buffTagChanged" senderInfo="" inbox="&apos;rpgModule&apos;" condition="" answerVar="">
											<Switch>
												<IfCondition failOnCondition="false" condition="$buffTagChanged.tagId == $enum:buffTagId.poison">
													<Expression expressions="$isPoisoned = $buffTagChanged.add" />
												</IfCondition>
												<IfCondition failOnCondition="false" condition="$buffTagChanged.tagId == $enum:buffTagId.injury">
													<Expression expressions="$isBleeding = $buffTagChanged.add" />
												</IfCondition>
												<DefaultBranch>
													<Success />
												</DefaultBranch>
											</Switch>
										</ProcessMessage>
									</While>
									<While doFail="false" propagateChildFail="false" condition="true">
										<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$onSoulRevived" senderInfo="" inbox="&apos;rpgModule&apos;" condition="" answerVar="">
											<Function_switch_handleOnSoulRevived onSoulRevived="$onSoulRevived" nodeLabel="37579920" />
										</ProcessMessage>
									</While>
								</Parallel>
								<While doFail="true" propagateChildFail="false" condition="true">
									<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$teleportRequest" senderInfo="" inbox="&apos;switch_teleportRequest&apos;" condition="" answerVar="">
										<Function_callInterrupt_teleport positionVec3="$teleportRequest.positionVec3" positionWuid="$teleportRequest.positionWuid" useWuidPosition="$teleportRequest.shouldUseWuidPosition" nodeLabel="36701060" />
									</ProcessMessage>
								</While>
								<While doFail="false" propagateChildFail="false" condition="true">
									<Sequence>
										<SuppressFailure>
											<Sequence>
												<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;crime_forgetCrimes&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;crime_forgetCrimes&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
												</GraphSearch>
												<Function_crime_forgetCrimes nodeLabel="40286349" />
											</Sequence>
										</SuppressFailure>
										<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$forgetCrimesData" senderInfo="" inbox="&apos;crime_forgetCrimes&apos;" condition="" answerVar="">
											<Function_crime_forgetCrimes nodeLabel="41286579" />
										</ProcessMessage>
									</Sequence>
								</While>
								<While doFail="false" propagateChildFail="false" condition="true">
									<Sequence>
										<EntityContextBarrier context="combat_fightInQuestSkirmish" target="" Negation="false" RunLogic="Halt">
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
										</EntityContextBarrier>
										<RemoveLink From="$this.id" To="$this.id" Tag="&apos;alreadyFledFromSkirmish&apos;" LinkOpHandleMode="Success" />
									</Sequence>
								</While>
								<While doFail="false" propagateChildFail="false" condition="true">
									<Function_crime_interruptReservationsWatcher nodeLabel="60869144" />
								</While>
								<Function_crime_checking_poison isPoisoned="$isPoisoned" nodeLabel="58738306" />
								<Function_crime_checking_bleeding isBleeding="$isBleeding" nodeLabel="27405692" />
								<Function_crime_processNpcEmergency nodeLabel="22953046" />
								<EntityContextCheck context="switch_static_periodicallyAutoWash" target="" saveVersion="2">
									<Then canSkip="1">
										<Function_switch_periodicAutoWash nodeLabel="68353501" />
									</Then>
									<Else canSkip="1">
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
									</Else>
								</EntityContextCheck>
								<Function_switch_handleCheckMates nodeLabel="97750698" />
							</Parallel>
							<Loop count="-1">
								<NonMonsterLODBehaviorBarrier RunLogic="Halt">
									<Parallel successMode="Any" failureMode="Any">
										<Sequence>
											<ClearInbox inbox="&apos;switch_cancelPerceptionIgnoreRequest&apos;" type="" condition="" />
											<While doFail="false" propagateChildFail="false" condition="true">
												<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$cancelPerceptionIgnoreRequest" senderInfo="" inbox="&apos;switch_cancelPerceptionIgnoreRequest&apos;" condition="" answerVar="">
													<CancelPerceptionIgnore PerceptorObject="$this.id" PerceptibleObject="$cancelPerceptionIgnoreRequest.perceptibleObject" WasIgnoredAtLeastFor="$cancelPerceptionIgnoreRequest.wasIgnoredAtLeastFor" />
												</ProcessMessage>
											</While>
										</Sequence>
										<Sequence>
											<ClearInbox inbox="&apos;hitReaction&apos;" type="" condition="" />
											<While doFail="false" propagateChildFail="false" condition="true">
												<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
													<Function_switch_handleHitReaction hitReaction="$hitReaction" nodeLabel="25738869" />
												</ProcessMessage>
											</While>
										</Sequence>
										<Sequence>
											<ClearInbox inbox="&apos;hitData&apos;" type="" condition="" />
											<While doFail="false" propagateChildFail="false" condition="true">
												<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitData" senderInfo="" inbox="&apos;hitData&apos;" condition="" answerVar="">
													<Function_switch_forwardHitData hitData="$hitData" sender="$this.id" nodeLabel="36403296" />
												</ProcessMessage>
											</While>
										</Sequence>
										<Sequence>
											<ClearInbox inbox="&apos;combatPlayerAttackNearMiss&apos;" type="" condition="" />
											<While doFail="false" propagateChildFail="false" condition="true">
												<DeadUnconsciousGate Who="" State="Dead" Negation="true" RunLogic="Halt">
													<Sequence>
														<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$nearMiss" senderInfo="" inbox="&apos;combatPlayerAttackNearMiss&apos;" condition="" answerVar="">
															<EntityContextCheck context="switch_disabledHitReaction" target="$this.id" saveVersion="2">
																<Then canSkip="1">
																	<Success />
																</Then>
																<Else canSkip="1">
																	<EntityContextCheck context="switch_disabledNearMissReaction" target="$this.id" saveVersion="2">
																		<Then canSkip="1">
																			<Success />
																		</Then>
																		<Else canSkip="1">
																			<IfCondition failOnCondition="false" condition="$consciousness == $enum:consciousness.conscious">
																				<Function_switch_handleNearMiss react="$playNearMissShockReaction" nodeLabel="21085534" />
																			</IfCondition>
																		</Else>
																	</EntityContextCheck>
																</Else>
															</EntityContextCheck>
														</ProcessMessage>
														<IfCondition failOnCondition="false" condition="$playNearMissShockReaction">
															<EntityContextCheck context="crime_suppressShockReactionFromSwitch" target="" saveVersion="2">
																<Else canSkip="1">
																	<ShockNPC Target="$this.id" Source="$__player" Type="Medium" />
																</Else>
															</EntityContextCheck>
														</IfCondition>
													</Sequence>
												</DeadUnconsciousGate>
											</While>
										</Sequence>
										<Sequence>
											<ClearInbox inbox="&apos;weaponOnPlayerArrowFlyingBy&apos;" type="" condition="" />
											<While doFail="false" propagateChildFail="false" condition="true">
												<DeadUnconsciousGate Who="" State="Dead" Negation="true" RunLogic="Halt">
													<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$arrowFlyingBy" senderInfo="" inbox="&apos;weaponOnPlayerArrowFlyingBy&apos;" condition="" answerVar="">
														<EntityContextCheck context="switch_disabledHitReaction" target="$this.id" saveVersion="2">
															<Then canSkip="1">
																<Success />
															</Then>
															<Else canSkip="1">
																<IfCondition failOnCondition="false" condition="$consciousness == $enum:consciousness.conscious">
																	<Function_switch_handleArrowFlyby arrowFlyingBy="$arrowFlyingBy" nodeLabel="97392648" />
																</IfCondition>
															</Else>
														</EntityContextCheck>
													</ProcessMessage>
												</DeadUnconsciousGate>
											</While>
										</Sequence>
										<Sequence>
											<ClearInbox inbox="&apos;minigamePickpocket&apos;" type="" condition="" />
											<While doFail="false" propagateChildFail="false" condition="true">
												<DeadUnconsciousGate Who="" State="Dead" Negation="true" RunLogic="Halt">
													<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$pickpocket" senderInfo="" inbox="&apos;minigamePickpocket&apos;" condition="" answerVar="">
														<EntityContextCheck context="switch_disabledPickpocketReaction" target="$this.id" saveVersion="2">
															<Then canSkip="1">
																<Success />
															</Then>
															<Else canSkip="1">
																<IfCondition failOnCondition="false" condition="$consciousness == $enum:consciousness.conscious">
																	<Function_switch_handlePickpocket pickpocket="$pickpocket" nodeLabel="41694504" />
																</IfCondition>
															</Else>
														</EntityContextCheck>
													</ProcessMessage>
												</DeadUnconsciousGate>
											</While>
										</Sequence>
										<While doFail="false" propagateChildFail="false" condition="true">
											<DeadUnconsciousGate Who="" State="Any" Negation="true" RunLogic="Halt">
												<Function_switch_handleHearingSubscriptions consciousness="$consciousness" nodeLabel="55486323" />
											</DeadUnconsciousGate>
										</While>
										<Sequence>
											<ClearInbox inbox="&apos;lockpickedDoor&apos;" type="" condition="" />
											<While doFail="false" propagateChildFail="false" condition="true">
												<DeadUnconsciousGate Who="$this.id" State="Dead" Negation="true" RunLogic="Halt">
													<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$lockPickedDoorInfo" senderInfo="" inbox="&apos;lockpickedDoor&apos;" condition="" answerVar="">
														<IfCondition failOnCondition="false" condition="$consciousness == $enum:consciousness.conscious">
															<Function_switch_handleLockpickedDoor lockpickedDoorInfo="$lockPickedDoorInfo" nodeLabel="76393235" />
														</IfCondition>
													</ProcessMessage>
												</DeadUnconsciousGate>
											</While>
										</Sequence>
										<While doFail="false" propagateChildFail="false" condition="true">
											<EntityContextBarrier context="speech_greyOutE" target="$this.id" Negation="false" RunLogic="Halt">
												<LuaWrapper onEnter="entity.soul:RestrictDialog(true)" onExit="entity.soul:RestrictDialog(false)">
													<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
												</LuaWrapper>
											</EntityContextBarrier>
										</While>
										<While doFail="false" propagateChildFail="false" condition="true">
											<EntityContextBarrier context="speech_removeNPCMetarole" target="$this.id" Negation="false" RunLogic="Halt">
												<LuaWrapper onEnter="entity.soul:RemoveMetaRoleByName(&apos;NPC&apos;)" onExit="entity.soul:AddMetaRoleByName(&apos;NPC&apos;)">
													<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
												</LuaWrapper>
											</EntityContextBarrier>
										</While>
										<Sequence>
											<ClearInbox inbox="&apos;dialogMailbox&apos;" type="" condition="" />
											<While doFail="false" propagateChildFail="false" condition="true">
												<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$dialogRequest" senderInfo="" inbox="&apos;dialogMailbox&apos;" condition="" answerVar="">
													<Function_switch_handleDialog dialogRequest="$dialogRequest" nodeLabel="68945293" />
												</ProcessMessage>
											</While>
										</Sequence>
										<Sequence>
											<ClearInbox inbox="&apos;crime_switchBark&apos;" type="" condition="" />
											<Parallel successMode="Any" failureMode="Any">
												<While doFail="false" propagateChildFail="false" condition="true">
													<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$crimeBarkRequest" senderInfo="" inbox="&apos;crime_switchBark&apos;" condition="" answerVar="">
														<Function_crime_processCrimeSwitchBark barkRequest="$crimeBarkRequest" nodeLabel="75269117" />
													</ProcessMessage>
												</While>
												<While doFail="false" propagateChildFail="false" condition="true">
													<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$crimeBarkRequest" senderInfo="" inbox="&apos;crime_switchBark&apos;" condition="" answerVar="">
														<Function_crime_processCrimeSwitchBark barkRequest="$crimeBarkRequest" nodeLabel="41097077" />
													</ProcessMessage>
												</While>
											</Parallel>
										</Sequence>
										<Sequence>
											<ClearInbox inbox="&apos;dialogMailbox&apos;" type="" condition="" />
											<While doFail="false" propagateChildFail="false" condition="true">
												<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$chatRequest" senderInfo="" inbox="&apos;dialogMailbox&apos;" condition="" answerVar="">
													<Function_switch_handleChat chatRequest="$chatRequest" nodeLabel="82379441" />
												</ProcessMessage>
											</While>
										</Sequence>
										<While doFail="false" propagateChildFail="false" condition="true">
											<IncludeTree File="&apos;speech/sb_dialog.xml&apos;" Name="&apos;monologRequest&apos;" nodeLabel="42316223" />
										</While>
										<While doFail="false" propagateChildFail="false" condition="true">
											<DetailBehaviorBarrier RunLogic="Halt">
												<DialogGate Who="$this.id" Negation="false" EndDialogInRoot="false" Condition="InIngame" RunLogic="Halt">
													<DialogGate Who="$this.id" Negation="true" EndDialogInRoot="false" Condition="InMonolog" RunLogic="Halt">
														<DialogGate Who="$this.id" Negation="true" EndDialogInRoot="false" Condition="InChat" RunLogic="Halt">
															<EntityContextBarrier context="speech_disablePerceptionDebuff" target="" Negation="true" RunLogic="Halt">
																<DecoratorBuff BuffId="&apos;053b4122-6dfa-44d1-9a7c-70bf14c67506&apos;" SoulWUID="$this.id">
																	<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																</DecoratorBuff>
															</EntityContextBarrier>
														</DialogGate>
													</DialogGate>
												</DialogGate>
											</DetailBehaviorBarrier>
										</While>
										<While doFail="false" propagateChildFail="false" condition="true">
											<DetailBehaviorBarrier RunLogic="Halt">
												<EntityContextBarrier context="speech_openworldChatThatShouldntSetTheGreetingCooldownInProgress" target="" Negation="true" RunLogic="Halt">
													<DialogGate Who="$this.id" Negation="false" EndDialogInRoot="false" Condition="InInteractiveDialog" RunLogic="KeepRunning">
														<DialogGate Who="$this.id" Negation="true" EndDialogInRoot="false" Condition="InInteractiveDialog" RunLogic="KeepRunning">
															<Function_crime_addOpenWorldCooldown cooldownType="$enum:openWorld_cooldownEventType.dialogPlayerGreeting" crimeReactionPriority="0" globalCooldown="true" personalCooldown="true" nodeLabel="23073678" />
														</DialogGate>
													</DialogGate>
												</EntityContextBarrier>
											</DetailBehaviorBarrier>
										</While>
										<Sequence>
											<ClearInbox inbox="&apos;crime_attackInitiatedByConcept&apos;" type="" condition="" />
											<While doFail="false" propagateChildFail="false" condition="true">
												<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$attackInitiatedByConcept" senderInfo="" inbox="&apos;crime_attackInitiatedByConcept&apos;" condition="" answerVar="">
													<HasGenderCheck Gender="Male" SoulWUID="$this.id" FailSubtMissing="false" saveVersion="2">
														<Then canSkip="1">
															<Function_callInterrupt_attack assaultData="$assaultData" criminalFreshness="$enum:crime_criminalFreshness.unknown" defenceMode="false" escalatedFromFailedSurrender="false" freshlyAttributedCrime="false" ignorePriority="true" information="" initiator="$enum:switch_interruptInitiator.concept" previousReaction="$enum:crime_reactionKind.unknown" priority="160" questBehavior="true" relationOverride="true" stimulusKind="$enum:crime_stimulusKind.enemy" target="$attackInitiatedByConcept.target" nodeLabel="98776280" />
														</Then>
														<Else canSkip="1">
															<ErrorNode Message="&apos;Women can not fight!&apos;" />
														</Else>
													</HasGenderCheck>
												</ProcessMessage>
											</While>
										</Sequence>
										<While doFail="false" propagateChildFail="false" condition="true">
											<DeadUnconsciousGate Who="" State="Any" Negation="true" RunLogic="Halt">
												<EntityContextBarrier context="crime_observerMode" target="" Negation="false" RunLogic="Halt">
													<EntityContext context="crime_shorterRecurrentPerceptionIgnore" target="">
														<Sequence>
															<AtomicDecorator>
																<Function_switch_handlePerception perception="$observer_currentPerception" nodeLabel="63279160" />
															</AtomicDecorator>
															<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
														</Sequence>
													</EntityContext>
												</EntityContextBarrier>
											</DeadUnconsciousGate>
										</While>
										<While doFail="false" propagateChildFail="false" condition="true">
											<DeadUnconsciousGate Who="" State="Any" Negation="true" RunLogic="Halt">
												<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;observerModeAim_lock&apos;" RunLogic="Halt">
													<EntityContext context="crime_disabledRecurrentPerceptionIgnore" target="">
														<LogToLabel Name="&apos;observerMode&apos;" Wuid="" Message="&apos;observerMode active&apos;">
															<Loop count="-1">
																<Sequence>
																	<AtomicDecorator>
																		<Sequence>
																			<GetCurrentPerceptionFocus PerceptionNfo="$perception" />
																			<Switch>
																				<IfCondition failOnCondition="false" condition="$perception.threshold &lt; 1">
																					<EntityContext context="switch_recognitionLevel_I" target="">
																						<Function_switch_handleAwareness_missileAim nodeLabel="56963644" />
																					</EntityContext>
																				</IfCondition>
																				<IfCondition failOnCondition="false" condition="~$perception.isInsideRecognitionBorder">
																					<EntityContextCheck context="stealth_disableRecognitionLevel_II" target="" saveVersion="2">
																						<Else canSkip="1">
																							<EntityContext context="switch_recognitionLevel_II" target="">
																								<Function_switch_handleAwareness_missileAim nodeLabel="79796655" />
																							</EntityContext>
																						</Else>
																					</EntityContextCheck>
																				</IfCondition>
																				<DefaultBranch>
																					<Function_switch_handleAwareness_missileAim nodeLabel="37647204" />
																				</DefaultBranch>
																			</Switch>
																		</Sequence>
																	</AtomicDecorator>
																	<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
																</Sequence>
															</Loop>
														</LogToLabel>
													</EntityContext>
												</ExternalLock>
											</DeadUnconsciousGate>
										</While>
										<While doFail="false" propagateChildFail="false" condition="true">
											<Sequence>
												<EntityContextBarrier context="crime_hasIgnoreCombatSoundsCooldown" target="" Negation="false" RunLogic="KeepRunning">
													<Success />
												</EntityContextBarrier>
												<EntityContext context="crime_ignoreCombatSounds" target="">
													<Sequence>
														<EntityContextBarrier context="crime_hasIgnoreCombatSoundsCooldown" target="" Negation="true" RunLogic="KeepRunning">
															<Success />
														</EntityContextBarrier>
														<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
													</Sequence>
												</EntityContext>
											</Sequence>
										</While>
										<Function_crime_processStimulusMessages nodeLabel="71676649" />
										<Function_crime_trespass_manageExpected nodeLabel="40113838" />
										<Function_situation_greeting_synchronization greetingReceiver="$greeting_currentTarget" nodeLabel="35740426" />
										<Function_crime_processInterruptMessages nodeLabel="39296919" />
										<Function_switch_handleCustomSwitchTree nodeLabel="25741487" />
										<Function_dice_processDiceDialogResult nodeLabel="41353041" />
										<While doFail="false" propagateChildFail="false" condition="true">
											<LinkGate from="$this.id" to="$__player" tag="&apos;bodyHolder&apos;" amount="AtLeastOne" presence="Present" RunLogic="Halt">
												<AddPerceivableState PerceivableLabel="&apos;heldBody_npc&apos;">
													<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
												</AddPerceivableState>
											</LinkGate>
										</While>
										<While doFail="false" propagateChildFail="false" condition="true">
											<LinkGate from="$this.id" to="$__player" tag="&apos;bodyCarrier&apos;" amount="AtLeastOne" presence="Present" RunLogic="Halt">
												<AddPerceivableState PerceivableLabel="&apos;carriedBody_npc&apos;">
													<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
												</AddPerceivableState>
											</LinkGate>
										</While>
										<Function_switch_handleChoke nodeLabel="19640593" />
										<Function_switch_handleBodyCarrier nodeLabel="51769668" />
										<Function_crime_processOpenWorldCooldowns_npc nodeLabel="70930299" />
										<IncludeTree File="&apos;speech/soliloquy.xml&apos;" Name="&apos;soliloquy&apos;" nodeLabel="35694935" />
										<Function_situation_handleSwitchGossip nodeLabel="58830438" />
										<Function_crime_handleNrbLevels nodeLabel="71089797" />
										<Function_switch_handleForceLook nodeLabel="53557281" />
									</Parallel>
								</NonMonsterLODBehaviorBarrier>
							</Loop>
						</Parallel>
					</GameContextBarrier>
						</Child>
						<OnSuccess canSkip="1">
							<Success />
						</OnSuccess>
						<OnFail canSkip="1">
							<SuppressFailure>
								<ErrorNode Message="&apos;ERROR! SWITCH SUBBRAIN HAS FAILED FOR NPC: $this.id. Pretty please, report this to Zbynek from script.&apos;" />
							</SuppressFailure>
						</OnFail>
					</FuseBox>
				</While>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="arrowFlyingBy" comment="" />
				<Variable name="assaultData" comment="" />
				<Variable name="attackInitiatedByConcept" comment="" />
				<Variable name="buffTagChanged" comment="" />
				<Variable name="cancelPerceptionIgnoreRequest" comment="" />
				<Variable name="chatRequest" comment="" />
				<Variable name="consciousness" comment="" />
				<Variable name="crimeBarkRequest" comment="" />
				<Variable name="dialogRequest" comment="" />
				<Variable name="forgetCrimesData" comment="" />
				<Variable name="greeting_currentTarget" comment="" />
				<Variable name="greeting_isValid" comment="" />
				<Variable name="hitData" comment="" />
				<Variable name="hitReaction" comment="" />
				<Variable name="informationDiff" comment="" />
				<Variable name="informationDiffSender" comment="" />
				<Variable name="informationDiffSkip" comment="" />
				<Variable name="isBleeding" comment="" />
				<Variable name="isPoisoned" comment="" />
				<Variable name="lockPickedDoorInfo" comment="" />
				<Variable name="mrkev" comment="" />
				<Variable name="nearMiss" comment="" />
				<Variable name="observer_currentPerception" comment="" />
				<Variable name="onSoulRevived" comment="" />
				<Variable name="perception" comment="" />
				<Variable name="perceptionSkip" comment="" />
				<Variable name="pickpocket" comment="" />
				<Variable name="playNearMissShockReaction" comment="" />
				<Variable name="recognizing" comment="" />
				<Variable name="teleportRequest" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-1160" editorPosY="30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_crime_getMrkev hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_getMrkev>
								<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ErrorNode>
							</Selector>
						</SuppressFailure>
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AnyLinkFilter>
										</GraphSearch>
										<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ErrorNode>
									</Selector>
								</Then>
							</EntityContextCheck>
						</SuppressFailure>
					</Sequence>
				</OnInit>
				<Behavior>
					<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
						<GameContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</Then>
													<Else>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<InstantReadMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</InstantReadMessage>
																		<Expression hasInputBreakpoint="0" comment="only updated if both are" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Expression>
																	</Sequence>
																</LoopUntil>
																<Function_switch_handleInformationDiff hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_switch_handleInformationDiff>
															</Sequence>
														</IfCondition>
													</Else>
												</EntityContextCheck>
											</ProcessMessage>
										</DeadUnconsciousGate>
									</While>
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<SubtreeDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Init>
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</Init>
														<Subtree>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Subtree>
														<Cleanup>
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</Cleanup>
													</SubtreeDecorator>
												</ExternalLock>
											</DeadUnconsciousGate>
										</While>
										<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<SubtreeDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Init>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
																<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</SetExternalLock>
															</Sequence>
														</Init>
														<Subtree>
															<Timeout hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Success>
																</ExternalLock>
															</Timeout>
														</Subtree>
														<Cleanup>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
																<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</SetExternalLock>
															</Sequence>
														</Cleanup>
													</SubtreeDecorator>
												</ExternalLock>
											</DeadUnconsciousGate>
										</While>
										<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
															<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
															</EntityContext>
														</IfGate>
													</While>
										<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GameContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																		<Then>
																			<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</AddLink>
																		</Then>
																		<Else>
																			<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</RemoveLink>
																		</Else>
																	</IfElseCondition>
																</IfCondition>
															</Then>
														</GameContextCheck>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<InstantReadMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</InstantReadMessage>
																		<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Expression>
																			</IfCondition>
																			<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Expression>
																			</IfCondition>
																			<DefaultBranch>
																				<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Success>
																			</DefaultBranch>
																		</Switch>
																	</Sequence>
																</LoopUntil>
															</SuppressFailure>
														</IfCondition>
														<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</Then>
															<Else>
																<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Expression>
																		</IfCondition>
																		<IfCondition hasInputBreakpoint="0" comment="Opens checking inside greeting_synchronization" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Function_situation_greeting_isValidReceiver hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Function_situation_greeting_isValidReceiver>
																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Expression>
																				<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</SetExternalLock>
																				</IfCondition>
																			</Sequence>
																		</IfCondition>
																		<Function_switch_handlePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_switch_handlePerception>
																	</Sequence>
																</IfCondition>
															</Else>
														</EntityContextCheck>
													</Sequence>
												</ProcessMessage>
											</DeadUnconsciousGate>
										</While>
									</Parallel>
									<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_switch_state_unconscious hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_switch_state_unconscious>
											</DeadUnconsciousGate>
										</DeadUnconsciousGate>
									</While>
											<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
									<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_switch_state_dead hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_switch_state_dead>
									</DeadUnconsciousGate>
											</While>
									<Parallel hasInputBreakpoint="0" comment="rpgModule" breakpointFlags="0">
										<OutputBreakpoints />
										<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<IfCondition hasInputBreakpoint="0" comment="Listening for Add/Remove of poisons" breakpointFlags="0">
														<OutputBreakpoints />
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</IfCondition>
													<IfCondition hasInputBreakpoint="0" comment="Listening for Add/Remove of injury (bleeding)" breakpointFlags="0">
														<OutputBreakpoints />
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</IfCondition>
													<DefaultBranch>
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</DefaultBranch>
												</Switch>
											</ProcessMessage>
										</While>
										<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_switch_handleOnSoulRevived hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_switch_handleOnSoulRevived>
											</ProcessMessage>
										</While>
									</Parallel>
									<While hasInputBreakpoint="0" comment="Request to teleport" breakpointFlags="0">
										<OutputBreakpoints />
										<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_callInterrupt_teleport hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_callInterrupt_teleport>
										</ProcessMessage>
									</While>
									<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SuppressFailure hasInputBreakpoint="0" comment="Let&apos;s check if we don&apos;t have unfinished forgetting" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
													</GraphSearch>
													<Function_crime_forgetCrimes hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_crime_forgetCrimes>
												</Sequence>
											</SuppressFailure>
											<ProcessMessage hasInputBreakpoint="0" comment="Not atomic because ForgetCrimes contains a linkGate" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_crime_forgetCrimes hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_crime_forgetCrimes>
											</ProcessMessage>
										</Sequence>
									</While>
									<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</EntityContextBarrier>
											<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</RemoveLink>
										</Sequence>
									</While>
									<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_crime_interruptReservationsWatcher hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_interruptReservationsWatcher>
									</While>
									<Function_crime_checking_poison hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_checking_poison>
									<Function_crime_checking_bleeding hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_checking_bleeding>
									<Function_crime_processNpcEmergency hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_crime_processNpcEmergency>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Function_switch_periodicAutoWash hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_switch_periodicAutoWash>
										</Then>
										<Else>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Else>
									</EntityContextCheck>
									<Function_switch_handleCheckMates hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_switch_handleCheckMates>
								</Parallel>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<NonMonsterLODBehaviorBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ClearInbox hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ClearInbox>
												<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<CancelPerceptionIgnore hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</CancelPerceptionIgnore>
													</ProcessMessage>
												</While>
											</Sequence>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ClearInbox hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ClearInbox>
												<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_switch_handleHitReaction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_switch_handleHitReaction>
													</ProcessMessage>
												</While>
											</Sequence>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ClearInbox hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ClearInbox>
												<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_switch_forwardHitData hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_switch_forwardHitData>
													</ProcessMessage>
												</While>
											</Sequence>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ClearInbox hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ClearInbox>
												<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<DeadUnconsciousGate hasInputBreakpoint="0" comment="only clear on death; keep active during unco" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Then>
																		<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Success>
																	</Then>
																	<Else>
																		<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																			<OutputBreakpoints />
																			<Then>
																				<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Success>
																			</Then>
																			<Else>
																				<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Function_switch_handleNearMiss hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Function_switch_handleNearMiss>
																				</IfCondition>
																			</Else>
																		</EntityContextCheck>
																	</Else>
																</EntityContextCheck>
															</ProcessMessage>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Else>
																		<ShockNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</ShockNPC>
																	</Else>
																</EntityContextCheck>
															</IfCondition>
														</Sequence>
													</DeadUnconsciousGate>
												</While>
											</Sequence>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ClearInbox hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ClearInbox>
												<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<DeadUnconsciousGate hasInputBreakpoint="0" comment="only clear on death; keep active during unco" breakpointFlags="0">
														<OutputBreakpoints />
														<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Success>
																</Then>
																<Else>
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Function_switch_handleArrowFlyby hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_switch_handleArrowFlyby>
																	</IfCondition>
																</Else>
															</EntityContextCheck>
														</ProcessMessage>
													</DeadUnconsciousGate>
												</While>
											</Sequence>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ClearInbox hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ClearInbox>
												<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Success>
																</Then>
																<Else>
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Function_switch_handlePickpocket hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_switch_handlePickpocket>
																	</IfCondition>
																</Else>
															</EntityContextCheck>
														</ProcessMessage>
													</DeadUnconsciousGate>
												</While>
											</Sequence>
											<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_switch_handleHearingSubscriptions hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_switch_handleHearingSubscriptions>
												</DeadUnconsciousGate>
											</While>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ClearInbox hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ClearInbox>
												<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_switch_handleLockpickedDoor hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_switch_handleLockpickedDoor>
															</IfCondition>
														</ProcessMessage>
													</DeadUnconsciousGate>
												</While>
											</Sequence>
											<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LuaWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</LuaWrapper>
												</EntityContextBarrier>
											</While>
											<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LuaWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</LuaWrapper>
												</EntityContextBarrier>
											</While>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ClearInbox hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ClearInbox>
												<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_switch_handleDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_switch_handleDialog>
													</ProcessMessage>
												</While>
											</Sequence>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ClearInbox hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ClearInbox>
												<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Function_crime_processCrimeSwitchBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_crime_processCrimeSwitchBark>
														</ProcessMessage>
													</While>
													<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Function_crime_processCrimeSwitchBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_crime_processCrimeSwitchBark>
														</ProcessMessage>
													</While>
												</Parallel>
											</Sequence>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ClearInbox hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ClearInbox>
												<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_switch_handleChat hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_switch_handleChat>
													</ProcessMessage>
												</While>
											</Sequence>
											<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</IncludeTree>
											</While>
											<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<DetailBehaviorBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<DialogGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<DialogGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<DialogGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<DecoratorBuff hasInputBreakpoint="0" comment="Each NPC has a small perception debuff while talking (or listening)" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Wait>
																	</DecoratorBuff>
																</EntityContextBarrier>
															</DialogGate>
														</DialogGate>
													</DialogGate>
												</DetailBehaviorBarrier>
											</While>
											<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<DetailBehaviorBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<DialogGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<DialogGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_crime_addOpenWorldCooldown hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_crime_addOpenWorldCooldown>
															</DialogGate>
														</DialogGate>
													</EntityContextBarrier>
												</DetailBehaviorBarrier>
											</While>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ClearInbox hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ClearInbox>
												<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Function_callInterrupt_attack hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_callInterrupt_attack>
															</Then>
															<Else>
																<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</ErrorNode>
															</Else>
														</HasGenderCheck>
													</ProcessMessage>
												</While>
											</Sequence>
											<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Function_switch_handlePerception hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_switch_handlePerception>
																</AtomicDecorator>
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
															</Sequence>
														</EntityContext>
													</EntityContextBarrier>
												</DeadUnconsciousGate>
											</While>
											<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<GetCurrentPerceptionFocus hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</GetCurrentPerceptionFocus>
																				<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<Function_switch_handleAwareness_missileAim hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</Function_switch_handleAwareness_missileAim>
																						</EntityContext>
																					</IfCondition>
																					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																							<OutputBreakpoints />
																							<Else>
																								<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<Function_switch_handleAwareness_missileAim hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</Function_switch_handleAwareness_missileAim>
																								</EntityContext>
																							</Else>
																						</EntityContextCheck>
																					</IfCondition>
																					<DefaultBranch>
																						<Function_switch_handleAwareness_missileAim hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Function_switch_handleAwareness_missileAim>
																					</DefaultBranch>
																				</Switch>
																			</Sequence>
																		</AtomicDecorator>
																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Wait>
																	</Sequence>
																</Loop>
															</LogToLabel>
														</EntityContext>
													</ExternalLock>
												</DeadUnconsciousGate>
											</While>
											<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</EntityContextBarrier>
													<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</EntityContextBarrier>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
													</EntityContext>
												</Sequence>
											</While>
											<Function_crime_processStimulusMessages hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_processStimulusMessages>
											<Function_crime_trespass_manageExpected hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_trespass_manageExpected>
											<Function_situation_greeting_synchronization hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_situation_greeting_synchronization>
											<Function_crime_processInterruptMessages hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_processInterruptMessages>
											<Function_switch_handleCustomSwitchTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_switch_handleCustomSwitchTree>
											<Function_dice_processDiceDialogResult hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_dice_processDiceDialogResult>
											<While hasInputBreakpoint="0" comment="to cancel perceptionIgnore" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<AddPerceivableState hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</AddPerceivableState>
												</LinkGate>
											</While>
											<While hasInputBreakpoint="0" comment="to cancel perceptionIgnore" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<AddPerceivableState hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</AddPerceivableState>
												</LinkGate>
											</While>
											<Function_switch_handleChoke hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_switch_handleChoke>
											<Function_switch_handleBodyCarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_switch_handleBodyCarrier>
											<Function_crime_processOpenWorldCooldowns_npc hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_processOpenWorldCooldowns_npc>
											<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</IncludeTree>
											<Function_situation_handleSwitchGossip hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_situation_handleSwitchGossip>
											<Function_crime_handleNrbLevels hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_crime_handleNrbLevels>
											<Function_switch_handleForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_switch_handleForceLook>
										</Parallel>
									</NonMonsterLODBehaviorBarrier>
								</Loop>
							</Parallel>
						</GameContextBarrier>
							</Child>
							<OnSuccess>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</OnSuccess>
							<OnFail>
								<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ErrorNode>
								</SuppressFailure>
							</OnFail>
						</FuseBox>
					</While>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>