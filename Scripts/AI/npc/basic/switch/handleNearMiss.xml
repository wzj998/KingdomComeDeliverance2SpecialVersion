<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_handleNearMiss" is_function="1">
		<Variables>
			<Variable name="attacker_soul" type="cast:wuid_soul" values="" isPersistent="0" form="single" />
			<Variable name="hasWeaponDrawn" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="priority" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="stimulus" type="switch:stimulus:hit" values="" isPersistent="0" form="single" />
			<Variable name="victim_soul" type="cast:wuid_soul" values="" isPersistent="0" form="single" />
			<Variable name="volumeData" type="crime:hitVolume" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="react" type="_bool" values="" isPersistent="0" form="single" requirementType="Out" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<EntityContextCheck context="crime_sleeping" target="" saveVersion="2">
						<Else canSkip="1">
							<EntityContextCheck context="crime_disableHitFromPlayerReaction" target="" saveVersion="2">
								<Else canSkip="1">
									<EntityContextCheck context="crime_interruptAttack" target="$this.id" saveVersion="2">
										<Then canSkip="1">
											<EntityContextCheck context="combat_defenceMode" target="$this.id" saveVersion="2">
												<Then canSkip="1">
													<Expression expressions="$react = true" />
												</Then>
											</EntityContextCheck>
										</Then>
										<Else canSkip="1">
											<Expression expressions="$react = true" />
										</Else>
									</EntityContextCheck>
								</Else>
							</EntityContextCheck>
						</Else>
					</EntityContextCheck>
					<Function_crime_hasMeleeWeaponDrawn npc="$__player" result="$hasWeaponDrawn" nodeLabel="93896470" />
					<IfElseCondition failOnCondition="false" condition="$hasWeaponDrawn" saveVersion="2">
						<Then canSkip="1">
							<Expression expressions="$stimulus.kind = $enum:crime_attackKind.armed" />
						</Then>
						<Else canSkip="1">
							<Expression expressions="$stimulus.kind = $enum:crime_attackKind.unarmed" />
						</Else>
					</IfElseCondition>
					<Expression expressions="$attacker_soul.value = $__player &#10;$victim_soul.value = $this.id" />
					<SendAIConceptSignal_nearMissNotification attacker="$attacker_soul" victim="$victim_soul" hitType="$stimulus.kind" />
					<IfCondition failOnCondition="false" condition="$react">
						<Sequence>
							<Expression expressions="$stimulus.attacker = $__player &#10;$stimulus.victim = $this.id &#10;$stimulus.directHit = false &#10; &#10;$volumeData.attacker = $__player &#10;$volumeData.target = $this.id &#10;$volumeData.kind = $stimulus.kind &#10;$volumeData.directHit = false" />
							<Function_switch_handleHitReaction_spawnVolume volumeData="$volumeData" nodeLabel="93198164" />
							<EntityContextCheck context="switch_disabledHitBehavioralReaction" target="$this.id" saveVersion="2">
								<Else canSkip="1">
									<Sequence>
										<Function_switch_handleStimulusHit stimulus="$stimulus" nodeLabel="70915543" />
										<Sequence>
											<GetScheduledPriority Priority="$priority" />
											<IfCondition failOnCondition="false" condition="$priority &lt; 99">
												<CheckRelationshipInterval_SoulToSoul TargetSoul="$__player" Soul="$this.id" Flag="enemy" saveVersion="2">
													<Then canSkip="1">
														<Success />
													</Then>
													<Else canSkip="1">
														<IfElseCondition failOnCondition="false" condition="$hasWeaponDrawn" saveVersion="2">
															<Then canSkip="1">
																<Function_crime_crimeSwitchBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBarkFromSleep="false" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;OBET_REAGUJE_NA_NEARMISS_(MELEE)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="68291299" />
															</Then>
															<Else canSkip="1">
																<Function_crime_crimeSwitchBark animationApproach="$enum:animationApproach.dontPlayDialogAnimations" canBarkFromSleep="false" canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__null" metarole="&apos;OBET_REAGUJE_NA_NEARMISS_(UNARMED)&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="14293397" />
															</Else>
														</IfElseCondition>
													</Else>
												</CheckRelationshipInterval_SoulToSoul>
											</IfCondition>
										</Sequence>
									</Sequence>
								</Else>
							</EntityContextCheck>
						</Sequence>
					</IfCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Expression expressions="$attacker_soul.value = $hitReaction.attacker &#10;$victim_soul.value = $this.id" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="attacker_soul" comment="" />
				<Variable name="hasWeaponDrawn" comment="" />
				<Variable name="priority" comment="" />
				<Variable name="stimulus" comment="" />
				<Variable name="victim_soul" comment="" />
				<Variable name="volumeData" comment="" />
				<Variable name="react" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosY="-250" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Else>
								<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Else>
										<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Then>
												</EntityContextCheck>
											</Then>
											<Else>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Else>
										</EntityContextCheck>
									</Else>
								</EntityContextCheck>
							</Else>
						</EntityContextCheck>
						<Function_crime_hasMeleeWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_crime_hasMeleeWeaponDrawn>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Then>
							<Else>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Else>
						</IfElseCondition>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<SendAIConceptSignal_nearMissNotification hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SendAIConceptSignal_nearMissNotification>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<Function_switch_handleHitReaction_spawnVolume hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_switch_handleHitReaction_spawnVolume>
								<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Else>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_switch_handleStimulusHit hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_switch_handleStimulusHit>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GetScheduledPriority hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</GetScheduledPriority>
												<IfCondition hasInputBreakpoint="0" comment="scan+ ignores" breakpointFlags="0">
													<OutputBreakpoints />
													<CheckRelationshipInterval_SoulToSoul hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<Success hasInputBreakpoint="0" comment="KCD2-196065 " breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</Then>
														<Else>
															<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Function_crime_crimeSwitchBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_crime_crimeSwitchBark>
																</Then>
																<Else>
																	<Function_crime_crimeSwitchBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_crime_crimeSwitchBark>
																</Else>
															</IfElseCondition>
														</Else>
													</CheckRelationshipInterval_SoulToSoul>
												</IfCondition>
											</Sequence>
										</Sequence>
									</Else>
								</EntityContextCheck>
							</Sequence>
						</IfCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Expression editorPosX="440" editorPosY="-670" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Expression>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>