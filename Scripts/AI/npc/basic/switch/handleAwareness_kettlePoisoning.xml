<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="switch_handleAwareness_kettlePoisoning" is_function="1">
		<Variables>
			<Variable name="kettle_volumeData" type="kettle:link:volumeData" values="" isPersistent="0" form="single" />
			<Variable name="owner" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stimulus" type="switch:stimulus:kettlePoisoning" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="reactionIntermediateData" type="switch:reactionIntermediateData" values="" isPersistent="0" form="single" requirementType="Reference" />
			<Variable name="volume" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Switch>
					<EntityContextCheck context="switch_recognitionLevel_I" target="" saveVersion="2">
						<Then canSkip="1">
							<Success />
						</Then>
					</EntityContextCheck>
					<EntityContextCheck context="switch_recognitionLevel_II" target="" saveVersion="2">
						<Then canSkip="1">
							<Success />
						</Then>
					</EntityContextCheck>
					<DefaultBranch>
						<EntityContextCheck context="crime_ignorePlayerPerception" target="" saveVersion="2">
							<Else canSkip="1">
								<EntityContextCheck context="crime_ignorePlayersKettlePoisoning" target="" saveVersion="2">
									<Else canSkip="1">
										<Sequence>
											<GraphSearch Origin="$volume" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;kettle_volumeData&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;kettle_volumeData&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$kettle_volumeData" />
											</GraphSearch>
											<GetOwner Object="$kettle_volumeData.target" Owner="$owner" />
											<IfCondition failOnCondition="false" condition="$owner ~= $__null">
												<CheckRelationshipInterval_SoulToSoul TargetSoul="$owner" Soul="$this.id" Flag="friend" saveVersion="2">
													<Then canSkip="1">
														<EntityContextCheck context="crime_bff" target="" saveVersion="2">
															<Then canSkip="1">
																<Function_crime_addBffIntermediateBarkData corpse="" isCorpse="false" isViolent="false" reactionIntermediateData="$reactionIntermediateData" nodeLabel="93286591" />
															</Then>
															<Else canSkip="1">
																<Sequence>
																	<Expression expressions="$stimulus.kettle = $kettle_volumeData.target &#10;$stimulus.victim = $owner &#10;$stimulus.markKettleAsPoisoned = true &#10;$stimulus.kettleType = $kettle_volumeData.type" />
																	<Function_switch_handleStimulusKettlePoisoning stimulus="$stimulus" nodeLabel="18205795" />
																</Sequence>
															</Else>
														</EntityContextCheck>
													</Then>
												</CheckRelationshipInterval_SoulToSoul>
											</IfCondition>
										</Sequence>
									</Else>
								</EntityContextCheck>
							</Else>
						</EntityContextCheck>
					</DefaultBranch>
				</Switch>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="kettle_volumeData" comment="" />
				<Variable name="owner" comment="" />
				<Variable name="stimulus" comment="" />
				<Variable name="reactionIntermediateData" comment="" />
				<Variable name="volume" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Then>
						</EntityContextCheck>
						<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Then>
						</EntityContextCheck>
						<DefaultBranch>
							<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Else>
									<EntityContextCheck hasInputBreakpoint="0" comment="Override reaction" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Else>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
												</GraphSearch>
												<GetOwner hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</GetOwner>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<CheckRelationshipInterval_SoulToSoul hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Function_crime_addBffIntermediateBarkData hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_crime_addBffIntermediateBarkData>
																</Then>
																<Else>
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Expression>
																		<Function_switch_handleStimulusKettlePoisoning hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_switch_handleStimulusKettlePoisoning>
																	</Sequence>
																</Else>
															</EntityContextCheck>
														</Then>
													</CheckRelationshipInterval_SoulToSoul>
												</IfCondition>
											</Sequence>
										</Else>
									</EntityContextCheck>
								</Else>
							</EntityContextCheck>
						</DefaultBranch>
					</Switch>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>