<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="interrupt_arrest" is_function="0">
		<Variables>
			<Variable name="animationApproach" type="enum:animationApproach" values="$enum:animationApproach.tryDialogAnimations" isPersistent="0" form="single" />
			<Variable name="anyDecoratorPreset" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="arrestChatFeedback" type="crime:arrestChatFeedback" values="" isPersistent="0" form="single" />
			<Variable name="attackKind" type="enum:crime_attackKind" values="" isPersistent="0" form="single" />
			<Variable name="canInterruptLootLockpickAndReading" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="canUrge" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="chatStartPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="const_false" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="const_true" type="_bool" values="true" isPersistent="0" form="single" />
			<Variable name="cooperationNotification" type="enum:crime_cooperationNotification" values="" isPersistent="0" form="single" />
			<Variable name="crimeLevel" type="enum:crime_crimeLevel" values="" isPersistent="0" form="single" />
			<Variable name="crimesResolved" type="_bool" values="" isPersistent="1" form="single" />
			<Variable name="currentPlayerPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="directionStartPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="distanceStartToPlayer" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="emittingInformation" type="information" values="" isPersistent="0" form="single" />
			<Variable name="escalationContext" type="_float" values="" isPersistent="1" form="associative" />
			<Variable name="feedbackReceived" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="goIntoAttack" type="_bool" values="false" isPersistent="1" form="single" />
			<Variable name="goIntoResolve" type="_bool" values="false" isPersistent="1" form="single" />
			<Variable name="hasWeaponDrawn" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="knownInformation" type="information" values="" isPersistent="0" form="single" />
			<Variable name="knownInformations" type="information" values="" isPersistent="0" form="array" />
			<Variable name="lockOnFromSharedPerception" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="managedToGetCloseToPlayer" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="nextMostImportantInformation" type="information" values="" isPersistent="0" form="single" />
			<Variable name="pathFindingParams" type="pathFindingParams" values="useGeneratedNSO(true)" isPersistent="0" form="single" />
			<Variable name="playerHasWeaponDrawn" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="punishmentChanged" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="resetPlayersEscape" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="resolutionDialogIntroKind" type="enum:crime_resolutionDialogIntroKind" values="" isPersistent="0" form="single" />
			<Variable name="resolveData" type="switch:interruptData:resolve" values="" isPersistent="0" form="single" />
			<Variable name="searchDirection" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="shouldHaveDrawnWeapon" type="_bool" values="true" isPersistent="0" form="single" />
			<Variable name="skipToResolve" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="skirmishParticipants" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="startBarkFinished" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="stimulusCombat" type="switch:stimulus:combat" values="" isPersistent="0" form="single" />
			<Variable name="t_dialogParameters" type="dialog:parameters:initiator" values="" isPersistent="0" form="single" />
			<Variable name="urgingPriority" type="enum:crime_playerUrgingPriority" values="$enum:crime_playerUrgingPriority.arrest_far" isPersistent="1" form="single" />
			<Variable name="useGuardStance" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="arrestData" type="switch:interruptData:arrest" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<EntityContext context="crime_preventDespawn" target="">
							<EntityContext context="crime_suppressShockReactionFromSwitch" target="$this.id">
								<Sequence>
									<Function_crime_getAnyDecoratorPreset tryToKeepItems="false" tryToKeepSecondaryWeapon="true" presetString="$anyDecoratorPreset" nodeLabel="90573315" />
									<AnyDecorator preset="$anyDecoratorPreset" enabled="true">
										<EntityContext context="speech_greyOutE" target="$this.id">
											<EntityContextElement context="speech_greyOutE" enabled="true">
												<EntityContextElement context="crime_interrupt" enabled="true">
													<EntityContext context="crime_interruptArrest" target="">
														<AddPerceivableState PerceivableLabel="&apos;crime_interrupt&apos;">
															<EntityContext context="crime_playerUnderArrestByAuthority" target="$this.id">
																<GameContext context="crime_music_high">
																	<GameContext context="crime_escalationLevel_script_global_confrontingGeneral">
																		<EntityContext context="crime_escalationLevel_confrontingGeneral" target="">
																			<EntityContextElement context="crime_escalationLevel_confrontingGeneral" enabled="true">
																				<EntityContext context="crime_escalationLevel_script_confrontingGeneral" target="">
																					<EntityContextElement context="crime_escalationLevel_script_confrontingGeneral" enabled="true">
																						<EntityContext context="crime_nrbLevel_confronting" target="">
																							<EntityContext context="crime_escalationLevel_setFromBehavior_arrest" target="">
																								<LogToLabel Name="&apos;crime_interrupt&apos;" Wuid="" Message="&apos;interrupt:arrest&apos;">
																									<LogToLabel Name="&apos;crime_stimulusKind&apos;" Wuid="" Message="&apos;stimulusKind:$arrestData.stimulusKind&apos;">
																										<Sequence>
																											<Function_crime_limits_confirmReactionLink reactionKind="$enum:crime_reactionKind.arrest" nodeLabel="60200877" />
																											<Function_crime_checkInterruptInformation information="$arrestData.information" nodeLabel="69221567" />
																											<IfCondition failOnCondition="false" condition="$arrestData.source == $enum:crime_source.direct | $arrestData.source == $enum:crime_source.personal">
																												<LockDynamicInformationValues Information="$arrestData.information">
																													<ClearDynamicInformationValue Information="$arrestData.information" Tag="&apos;alreadyReactedToCrimeNpcs&apos;" />
																												</LockDynamicInformationValues>
																											</IfCondition>
																											<RemoveBuffs SoulWUID="" BuffGUID="&apos;ffc20522-134d-4811-8bc5-e933b74b7081&apos;" BuffTagId="-1" />
																											<Expression expressions="$emittingInformation = $arrestData.information" />
																											<Function_crime_hasWeaponDrawn checkingMethod="$enum:crime_weaponCheckingMethod.perceivableState" npc="$__player" result="$hasWeaponDrawn" nodeLabel="81383725" />
																											<GetCrimeLevelByLabel Label="$arrestData.information.label" CrimeLevel="$crimeLevel" />
																											<IfCondition failOnCondition="false" condition="~$crimesResolved">
																												<SubtreeDecorator saveVersion="2">
																													<Init canSkip="1">
																														<AddBuff SoulWUID="" BuffGUID="&apos;1951e0bc-532d-4813-a64d-38ef635b3fd5&apos;" />
																													</Init>
																													<Subtree canSkip="1">
																														<Parallel successMode="Any" failureMode="Any">
																															<IfGate atomic="false" condition="$crimesResolved" RunLogic="KeepRunning">
																																<Success />
																															</IfGate>
																															<Loop count="-1">
																																<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$cooperationNotification" senderInfo="" inbox="&apos;crime_cooperationNotification&apos;" condition="" answerVar="">
																																	<Switch>
																																		<IfCondition failOnCondition="false" condition="$cooperationNotification == $enum:crime_cooperationNotification.crimeResolved | &#10;$cooperationNotification == $enum:crime_cooperationNotification.informationTransformed">
																																			<Selector>
																																				<CheckInformationKnowledge Information="$arrestData.information" Holder="$this.id" />
																																				<Sequence>
																																					<ReinitVariable variable="$nextMostImportantInformation" />
																																					<EntityContextCheck context="crime_isAuthority" target="" saveVersion="2">
																																						<Then canSkip="1">
																																							<GetMostImportantCrimeInformation Npc="$this.id" OnlyRelated="false" MostImportantInformation="$nextMostImportantInformation" />
																																						</Then>
																																						<Else canSkip="1">
																																							<GetMostImportantCrimeInformation Npc="$this.id" OnlyRelated="true" MostImportantInformation="$nextMostImportantInformation" />
																																						</Else>
																																					</EntityContextCheck>
																																					<IfElseCondition failOnCondition="false" condition="$nextMostImportantInformation.label == &apos;&apos;" saveVersion="2">
																																						<Then canSkip="1">
																																							<Expression expressions="$crimesResolved = true" />
																																						</Then>
																																						<Else canSkip="1">
																																							<Sequence>
																																								<Expression expressions="$arrestData.information = $nextMostImportantInformation" />
																																								<LinkDataExpression From="$__player" To="$this.id" Expresssion="$__link_crime_reactor.information = $nextMostImportantInformation" />
																																								<Expression expressions="$emittingInformation = $nextMostImportantInformation" />
																																							</Sequence>
																																						</Else>
																																					</IfElseCondition>
																																				</Sequence>
																																			</Selector>
																																		</IfCondition>
																																		<IfCondition failOnCondition="false" condition="$cooperationNotification == $enum:crime_cooperationNotification.selfhelpEscalation | &#10;$cooperationNotification == $enum:crime_cooperationNotification.arrestEscalation">
																																			<Expression expressions="$goIntoAttack = true" />
																																		</IfCondition>
																																		<DefaultBranch>
																																			<Success />
																																		</DefaultBranch>
																																	</Switch>
																																</ProcessMessage>
																															</Loop>
																															<EntityContextCheck context="combat_leavePlayerUnconsciousAfterFight" target="" saveVersion="2">
																																<Then canSkip="1">
																																	<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																																</Then>
																																<Else canSkip="1">
																																	<GameContextPreset preset="crime_suppressUnconsciousPlayerShenanigans">
																																		<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																																	</GameContextPreset>
																																</Else>
																															</EntityContextCheck>
																															<Sequence>
																																<IfCondition failOnCondition="false" condition="$arrestData.information.label == &apos;murder&apos; | &#10;$arrestData.information.label == &apos;murderByDog&apos; | &#10;$arrestData.information.label == &apos;corpseViolation&apos;">
																																	<Function_crime_addCorpseLink corpse="$arrestData.information.perceivedWuid" corpseState="$enum:corpseState.investigated" mateReacting="false" resolve="true" storeTime="false" nodeLabel="52784211" />
																																</IfCondition>
																																<IsFastForwarded failOnCondition="false" saveVersion="2">
																																	<Else canSkip="1">
																																		<IsLoadedGate saveVersion="2">
																																			<Else canSkip="1">
																																				<Function_crime_playStartleAnimation assaultData="$arrestData.assaultData" crimeLevel="$crimeLevel" freshlyAttributedCrime="$arrestData.freshlyAttributedCrime" information="$arrestData.information" initiator="$arrestData.initiatedBy" previousReaction="$arrestData.previousReaction" reactionKind="$enum:crime_reactionKind.arrest" shockSource="$__player" source="$arrestData.source" stimulusKind="$arrestData.stimulusKind" nodeLabel="64431990" />
																																			</Else>
																																		</IsLoadedGate>
																																	</Else>
																																</IsFastForwarded>
																																<EntityContextCheck context="combat_forceUnarmedWhileInUnarmedSkirmish" target="$this.id" saveVersion="2">
																																	<Then canSkip="1">
																																		<Success />
																																	</Then>
																																	<Else canSkip="1">
																																		<Sequence>
																																			<Function_crime_hasMeleeWeaponDrawn npc="$__player" result="$playerHasWeaponDrawn" nodeLabel="14884099" />
																																			<GetKnownInformations OutArray="$knownInformations" Holder="$this.id" />
																																			<ForEach startIndex="0" step="1" array="$knownInformations" iterator="" value="$knownInformation" break="$useGuardStance">
																																				<Sequence>
																																					<IfCondition failOnCondition="false" condition="$knownInformation.label == &apos;assault&apos;">
																																						<Sequence>
																																							<LockDynamicInformationValues Information="$knownInformation">
																																								<GetDynamicInformationValue Information="$knownInformation" Tag="&apos;kind&apos;" Out="$attackKind" />
																																							</LockDynamicInformationValues>
																																							<IfCondition failOnCondition="false" condition="$attackKind == $enum:crime_attackKind.armed | $attackKind  == $enum:crime_attackKind.missile">
																																								<Expression expressions="$useGuardStance = true &#10;$animationApproach = $enum:animationApproach.dontPlayDialogAnimations" />
																																							</IfCondition>
																																						</Sequence>
																																					</IfCondition>
																																					<IfCondition failOnCondition="false" condition="$knownInformation.label == &apos;murder&apos; | &#10;$knownInformation.label == &apos;murderByDog&apos;">
																																						<Expression expressions="$useGuardStance = true &#10;$animationApproach = $enum:animationApproach.dontPlayDialogAnimations" />
																																					</IfCondition>
																																				</Sequence>
																																			</ForEach>
																																		</Sequence>
																																	</Else>
																																</EntityContextCheck>
																																<Parallel successMode="Any" failureMode="Any">
																																	<Function_crime_estimatePlayersPosition estimatePlayersPosition="$const_true" estimationStartPos="$directionStartPos" positionShared="$lockOnFromSharedPerception" nodeLabel="34053003" />
																																	<MoveParamsDecorator speed="Walk" pathFindingParams="$pathFindingParams" doorClosingPolicy="LeaveOpened">
																																		<MeleeGuardAutomationDecorator GuardMode="forceEnable" active="$useGuardStance">
																																			<SubsequentLocationDecorator Location="$__player">
																																				<Loop count="-1">
																																					<Switch>
																																						<IfCondition failOnCondition="false" condition="$goIntoResolve &amp; ~$crimesResolved">
																																							<Parallel successMode="Any" failureMode="Any">
																																								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																																								<IfGate atomic="false" condition="~$goIntoResolve | $crimesResolved" RunLogic="KeepRunning">
																																									<Success />
																																								</IfGate>
																																							</Parallel>
																																						</IfCondition>
																																						<IfCondition failOnCondition="false" condition="$canUrge">
																																							<UrgencyDecorator Urgency="Fast">
																																								<Parallel successMode="Any" failureMode="Any">
																																									<CrimeFollower Target="$__player" Mode="DontBackOff" Role="Main" RelativeSpeedLimit="Dash" DisableGhosting="true" />
																																									<IfGate atomic="false" condition="($goIntoResolve &amp; ~$crimesResolved) | ~$canUrge" RunLogic="KeepRunning">
																																										<Success />
																																									</IfGate>
																																								</Parallel>
																																							</UrgencyDecorator>
																																						</IfCondition>
																																						<IfCondition failOnCondition="false" condition="~$canUrge">
																																							<UrgencyDecorator Urgency="Fast">
																																								<Parallel successMode="Any" failureMode="Any">
																																									<CrimeFollower Target="$__player" Mode="DontBackOff" Role="Assist" RelativeSpeedLimit="Dash" DisableGhosting="true" />
																																									<IfGate atomic="false" condition="($goIntoResolve &amp; ~$crimesResolved) | $canUrge" RunLogic="KeepRunning">
																																										<Success />
																																									</IfGate>
																																								</Parallel>
																																							</UrgencyDecorator>
																																						</IfCondition>
																																					</Switch>
																																				</Loop>
																																			</SubsequentLocationDecorator>
																																		</MeleeGuardAutomationDecorator>
																																	</MoveParamsDecorator>
																																	<Function_crime_emitInformation crimeInformation="$emittingInformation" emitCrimeInformation="true" longDistanceModeEnabled="$const_false" reactionKind="$enum:crime_reactionKind.arrest" emitAlarmInformation="$const_true" nodeLabel="92256491" />
																																	<Function_crime_weaponDecorator suppressWaitAction="true" weaponSet="&apos;Primary&apos;" shouldHaveDrawnWeapon="$shouldHaveDrawnWeapon" waitActionFinished="" nodeLabel="40921886" />
																																	<Function_crime_playerInstantRecognitionHandler nodeLabel="53741190" />
																																	<ContinuousSwitch>
																																		<IfCondition failOnCondition="false" condition="$goIntoAttack">
																																			<AtomicDecorator>
																																				<Sequence>
																																					<AffectFeelings Npc="$this.id" Token="&apos;confrontationDialog_run&apos;" AffectNervousness="false" AffectReputation="true" />
																																					<Function_crime_broadcastCooperationNotification cooperationNotification="$enum:crime_cooperationNotification.arrestEscalation" nodeLabel="57769412" />
																																					<AddArrestEscalation Npc="$this.id" Reset="false" />
																																					<Function_callInterrupt_attack assaultData="$arrestData.assaultData" criminalFreshness="$enum:crime_criminalFreshness.unknown" defenceMode="false" escalatedFromFailedSurrender="false" freshlyAttributedCrime="false" ignorePriority="true" information="$arrestData.information" initiator="$enum:switch_interruptInitiator.scheduler" previousReaction="$enum:crime_reactionKind.arrest" priority="160" questBehavior="false" relationOverride="true" stimulusKind="$arrestData.stimulusKind" target="$__player" nodeLabel="45944054" />
																																				</Sequence>
																																			</AtomicDecorator>
																																		</IfCondition>
																																		<IfCondition failOnCondition="false" condition="true">
																																			<Parallel successMode="Any" failureMode="Any">
																																				<Function_crime_managePlayerUrging canUrge="$canUrge" priority="$urgingPriority" nodeLabel="44870840" />
																																				<Sequence>
																																					<FuseBox StatusPropagation="Success" OneCleanup="true" saveVersion="2">
																																						<Child canSkip="1">
																																							<IsLoadedGate saveVersion="2">
																																								<Else canSkip="1">
																																									<Parallel successMode="Any" failureMode="Any">
																																										<IfGate atomic="false" condition="$canUrge" RunLogic="Halt">
																																											<Function_crime_arrest_startBark arrestData="$arrestData" nodeLabel="79724458" />
																																										</IfGate>
																																										<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;crime_playerUrging_waiting&apos;" RunLogic="KeepRunning">
																																											<Success />
																																										</ExternalLock>
																																									</Parallel>
																																								</Else>
																																							</IsLoadedGate>
																																						</Child>
																																						<OnFail canSkip="1">
																																							<Expression expressions="$startBarkFinished = true" />
																																						</OnFail>
																																					</FuseBox>
																																					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																																				</Sequence>
																																				<HasActiveThreatsGate Who="$__player" Negation="false" RunLogic="KeepRunning">
																																					<SuppressFailure>
																																						<AtomicDecorator>
																																							<Sequence>
																																								<GetSkirmishParticipants ReferenceNPC="$__player" Active="true" Passive="false" Targets="false" HumanOnly="false" ParticipantsOutVar="$skirmishParticipants" />
																																								<Expression expressions="$stimulusCombat.participant1 = $__player &#10;$stimulusCombat.participant2 = $skirmishParticipants[0]" />
																																								<EntityContext context="crime_stimulusInitiatedByScheduler" target="">
																																									<Function_switch_handleStimulusCombat stimulus="$stimulusCombat" nodeLabel="11015830" />
																																								</EntityContext>
																																							</Sequence>
																																						</AtomicDecorator>
																																					</SuppressFailure>
																																				</HasActiveThreatsGate>
																																				<Loop count="-1">
																																					<IfGate atomic="false" condition="~$goIntoResolve" RunLogic="Halt">
																																						<Sequence>
																																							<Expression expressions="$resetPlayersEscape = false" />
																																							<IfGate atomic="false" condition="~$resetPlayersEscape" RunLogic="Halt">
																																								<CallDecorator_crime_handlePlayersEscape>
																																									<Subtree canSkip="1">
																																										<Function_crime_handlePlayersEscape npcPersistency="7" nodeLabel="31177004" />
																																									</Subtree>
																																									<PlayerLost canSkip="1">
																																										<CallbackEventCatch_empty>
																																											<Sequence>
																																												<Function_crime_getSearchDirectionTowardsPlayer startPos="$directionStartPos" direction="$searchDirection" nodeLabel="90000065" />
																																												<Function_callInterrupt_lookAround alarmReactionType="$enum:crime_alarmReactionType.none" amIBuddy="false" corpseState="$enum:corpseState.undiscovered" directHit="false" forceSubscribedSoundReaction="false" ignorePriority="true" information_look="$arrestData.information" initiator="$enum:switch_interruptInitiator.scheduler" missingNpc="$__null" position="" previousReaction="$enum:crime_reactionKind.arrest" reactingToSoundBecauseAlone="false" reportedBy="$__null" searchDirection="$searchDirection" searchPointsFromDirection="true" shooter="$__player" soundType="$enum:sound.movement" source="$enum:crime_source.direct" stimulusAnimalAbuse="" stimulusKind="$arrestData.stimulusKind" nodeLabel="38358431" />
																																											</Sequence>
																																										</CallbackEventCatch_empty>
																																									</PlayerLost>
																																								</CallDecorator_crime_handlePlayersEscape>
																																							</IfGate>
																																						</Sequence>
																																					</IfGate>
																																				</Loop>
																																				<CallDecorator_crime_sharePlayersPosition>
																																					<Subtree canSkip="1">
																																						<Function_crime_sharePlayersLastSeenPosition allowedAssistance="$enum:crime_allowedSharePlayerPosAssistance.none" requestVisualAssistanceFromOthers="true" direction="$searchDirection" position="" nodeLabel="13308527" />
																																					</Subtree>
																																					<PositionUpdatedFromOtherNpc canSkip="1">
																																						<CallbackEventCatch_empty>
																																							<Success />
																																						</CallbackEventCatch_empty>
																																					</PositionUpdatedFromOtherNpc>
																																					<PlayerFound canSkip="1">
																																						<CallbackEventCatch_empty>
																																							<Expression expressions="$resetPlayersEscape = true &#10;$lockOnFromSharedPerception = true" />
																																						</CallbackEventCatch_empty>
																																					</PlayerFound>
																																					<PointingStart canSkip="1">
																																						<CallbackEventCatch_empty>
																																							<Success />
																																						</CallbackEventCatch_empty>
																																					</PointingStart>
																																					<PointingEnd canSkip="1">
																																						<CallbackEventCatch_empty>
																																							<Success />
																																						</CallbackEventCatch_empty>
																																					</PointingEnd>
																																				</CallDecorator_crime_sharePlayersPosition>
																																				<ContinuousSwitch>
																																					<IfCondition failOnCondition="false" condition="$managedToGetCloseToPlayer">
																																						<AddPerceivableState PerceivableLabel="&apos;crime_arrest&apos;">
																																							<ForceLook LookTarget="$__player" DisableVariations="true">
																																								<Sequence>
																																									<Expression expressions="$urgingPriority = $enum:crime_playerUrgingPriority.arrest" />
																																									<Loop count="-1">
																																										<IfGate atomic="false" condition="$canUrge" RunLogic="Halt">
																																											<Parallel successMode="Any" failureMode="Any">
																																												<Sequence>
																																													<SuppressFailure>
																																														<TenseCircumstanceBarrier RunLogic="Halt">
																																															<LogToLabel Name="&apos;tense&apos;" Wuid="" Message="&apos;under TenseCircumstanceBarrier&apos;">
																																																<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																																															</LogToLabel>
																																														</TenseCircumstanceBarrier>
																																													</SuppressFailure>
																																													<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																																												</Sequence>
																																												<ContinuousSwitch>
																																													<IfCondition failOnCondition="false" condition="$goIntoResolve &amp; ~$crimesResolved">
																																														<Sequence>
																																															<Function_crime_getResolutionDialogIntroKind crimeSeen="$arrestData.crimeSeen" currentInterrupt="$enum:crime_reactionKind.arrest" postResolveSubscribers="" previousReaction="$arrestData.previousReaction" repeatedSurrender="false" stimulusKind="$arrestData.stimulusKind" resolutionDialogIntroKind="$resolutionDialogIntroKind" nodeLabel="98574503" />
																																															<Expression expressions="$resolveData.stimulusKind = $arrestData.stimulusKind &#10;$resolveData.previousReaction = $enum:crime_reactionKind.arrest &#10;$resolveData.initiatedBy = $enum:switch_interruptInitiator.switch &#10;$resolveData.information = $arrestData.information &#10;$resolveData.resolutionDialogIntroKind = $resolutionDialogIntroKind" />
																																															<Function_crime_resolveCrimeDialogue postresolveSubscribers="" resolveData="$resolveData" crimesResolved="$crimesResolved" punishmentChanged="$punishmentChanged" nodeLabel="65260340" />
																																														</Sequence>
																																													</IfCondition>
																																													<IfCondition failOnCondition="false" condition="$crimesResolved">
																																														<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																																													</IfCondition>
																																													<IfCondition failOnCondition="false" condition="true">
																																														<Sequence>
																																															<StanceCheck soul="$__player" stance="lying" smartObject="" negate="false" failOnCondition="false" saveVersion="2">
																																																<Then canSkip="1">
																																																	<Expression expressions="$skipToResolve = true" />
																																																</Then>
																																																<Else canSkip="1">
																																																	<Success />
																																																</Else>
																																															</StanceCheck>
																																															<IsTimeSkipping saveVersion="2">
																																																<Then canSkip="1">
																																																	<Expression expressions="$skipToResolve = true" />
																																																</Then>
																																																<Else canSkip="1">
																																																	<Success />
																																																</Else>
																																															</IsTimeSkipping>
																																															<Sequence>
																																																<GetSpatialInfo In="$this.id" Out="$chatStartPos" What="Position" />
																																																<IfCondition failOnCondition="false" condition="$skipToResolve">
																																																	<Expression expressions="$goIntoResolve = true &#10;$urgingPriority = $enum:crime_playerUrgingPriority.resolve" />
																																																</IfCondition>
																																																<IsLoadedGate saveVersion="2">
																																																	<Then canSkip="1">
																																																		<VariableExistsGate VarToTest="$escalationContext[&apos;surrenderAttempts&apos;]" VarIndexMode="All" FailSubtMissing="false" saveVersion="2">
																																																			<Then canSkip="1">
																																																				<Success />
																																																			</Then>
																																																			<Else canSkip="1">
																																																				<Expression expressions="$escalationContext[&apos;surrenderAttempts&apos;] = 0" />
																																																			</Else>
																																																		</VariableExistsGate>
																																																	</Then>
																																																	<Else canSkip="1">
																																																		<Expression expressions="$escalationContext[&apos;surrenderAttempts&apos;] = 0" />
																																																	</Else>
																																																</IsLoadedGate>
																																																<Parallel successMode="Any" failureMode="Any">
																																																	<Loop count="-1">
																																																		<IfGate atomic="false" condition="$startBarkFinished" RunLogic="KeepRunning">
																																																			<Parallel successMode="All" failureMode="Any">
																																																				<Sequence>
																																																					<Function_crime_crimeBark animationApproach="$animationApproach" canBeDelayed="false" dialogContext="" dramaticBark="true" lookAt="$__player" metarole="&apos;STRAZ_ZATYKANI_PRVNI_VYZVA&apos;" priority="$enum:crime_barkPriority.addressingPlayer" nodeLabel="12061412" />
																																																					<Expression expressions="$canInterruptLootLockpickAndReading = true" />
																																																					<Loop count="-1">
																																																						<Sequence>
																																																							<Wait duration="&apos;6s&apos;" timeType="GameTime" doFail="false" variation="&apos;2s&apos;" />
																																																							<SuppressFailure>
																																																								<AtomicDecorator>
																																																									<Sequence>
																																																										<InstantReadMessage variable="$arrestChatFeedback" senderInfo="" inbox="&apos;crime_arrestChatFeedback&apos;" condition="" />
																																																										<Expression expressions="$feedbackReceived = true" />
																																																									</Sequence>
																																																								</AtomicDecorator>
																																																							</SuppressFailure>
																																																							<IfCondition failOnCondition="false" condition="~$feedbackReceived">
																																																								<Sequence>
																																																									<Expression expressions="$escalationContext[&apos;surrenderAttempts&apos;] += 1" />
																																																									<IfElseCondition failOnCondition="false" condition="$escalationContext[&apos;surrenderAttempts&apos;] &gt;= 4" saveVersion="2">
																																																										<Then canSkip="1">
																																																											<Expression expressions="$goIntoAttack = true" />
																																																										</Then>
																																																										<Else canSkip="1">
																																																											<Function_crime_crimeBark animationApproach="$animationApproach" canBeDelayed="false" dialogContext="$escalationContext" dramaticBark="true" lookAt="$__player" metarole="&apos;STRAZ_ZATYKANI_OPAKOVANA_VYZVA&apos;" priority="$enum:crime_barkPriority.addressingPlayer" nodeLabel="73408268" />
																																																										</Else>
																																																									</IfElseCondition>
																																																								</Sequence>
																																																							</IfCondition>
																																																						</Sequence>
																																																					</Loop>
																																																				</Sequence>
																																																				<Sequence>
																																																					<ShowTutorial Name="crime_arrest" />
																																																					<SuppressFailure>
																																																						<Function_speech_dialogInitiator alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="&apos;STRAZ_ZATYKANI_CHAT&apos;" preset="$enum:dialogPreset.chat" recipient="$__player" recipientMetaroles="" nodeLabel="69694973" />
																																																					</SuppressFailure>
																																																					<IfGate atomic="false" condition="$feedbackReceived" RunLogic="KeepRunning">
																																																						<Switch>
																																																							<IfCondition failOnCondition="false" condition="$arrestChatFeedback.action == $enum:crime_arrestChatResult.accept">
																																																								<Expression expressions="$goIntoResolve = true &#10;$urgingPriority = $enum:crime_playerUrgingPriority.resolve" />
																																																							</IfCondition>
																																																							<IfCondition failOnCondition="false" condition="$arrestChatFeedback.action == $enum:crime_arrestChatResult.reject">
																																																								<Expression expressions="$goIntoAttack = true" />
																																																							</IfCondition>
																																																							<DefaultBranch>
																																																								<Expression expressions="$goIntoAttack = true" />
																																																							</DefaultBranch>
																																																						</Switch>
																																																					</IfGate>
																																																				</Sequence>
																																																				<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$arrestChatFeedback" senderInfo="" inbox="&apos;crime_arrestChatFeedback&apos;" condition="" answerVar="">
																																																					<Expression expressions="$feedbackReceived = true" />
																																																				</ProcessMessage>
																																																			</Parallel>
																																																		</IfGate>
																																																	</Loop>
																																																	<Loop count="-1">
																																																		<Parallel successMode="Any" failureMode="Any">
																																																			<StanceBarrier soul="$__player" stance="lying" smartObject="" negate="false" failOnCondition="false" RunLogic="KeepRunning">
																																																				<Expression expressions="$goIntoResolve = true &#10;$urgingPriority = $enum:crime_playerUrgingPriority.resolve" />
																																																			</StanceBarrier>
																																																			<DeadUnconsciousGate Who="$__player" State="Unconscious" Negation="false" RunLogic="KeepRunning">
																																																				<Expression expressions="$goIntoResolve = true &#10;$urgingPriority = $enum:crime_playerUrgingPriority.resolve" />
																																																			</DeadUnconsciousGate>
																																																			<IfGate atomic="false" condition="$canInterruptLootLockpickAndReading" RunLogic="KeepRunning">
																																																				<Sequence>
																																																					<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" />
																																																					<Parallel successMode="Any" failureMode="Any">
																																																						<LinkGate from="$__player" to="" tag="&apos;lockpick&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
																																																							<Expression expressions="$goIntoResolve = true &#10;$urgingPriority = $enum:crime_playerUrgingPriority.resolve" />
																																																						</LinkGate>
																																																						<LinkGate from="$__player" to="" tag="&apos;loot&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
																																																							<Expression expressions="$goIntoResolve = true &#10;$urgingPriority = $enum:crime_playerUrgingPriority.resolve" />
																																																						</LinkGate>
																																																						<ActorStateBarrier Who="$__player" ToState="reading" NegateTo="false" RunLogic="KeepRunning">
																																																							<Expression expressions="$goIntoResolve = true &#10;$urgingPriority = $enum:crime_playerUrgingPriority.resolve" />
																																																						</ActorStateBarrier>
																																																						<ActorStateBarrier Who="$__player" ToState="readingFromInventory" NegateTo="false" RunLogic="KeepRunning">
																																																							<Expression expressions="$goIntoResolve = true &#10;$urgingPriority = $enum:crime_playerUrgingPriority.resolve" />
																																																						</ActorStateBarrier>
																																																					</Parallel>
																																																				</Sequence>
																																																			</IfGate>
																																																			<Loop count="-1">
																																																				<Sequence>
																																																					<GetSpatialInfo In="$__player" Out="$currentPlayerPos" What="Position" />
																																																					<MeasureDistance position1="$chatStartPos" position2="$currentPlayerPos" mode="ThreeDimensions" result="$distanceStartToPlayer" />
																																																					<IfCondition failOnCondition="false" condition="$distanceStartToPlayer &gt; $data:script_param[&apos;crime_arrest_maxDistanceFromChatStart&apos;].value">
																																																						<Expression expressions="$goIntoAttack = true" />
																																																					</IfCondition>
																																																					<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
																																																				</Sequence>
																																																			</Loop>
																																																			<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;observerModeAim_lock&apos;" RunLogic="KeepRunning">
																																																				<Sequence>
																																																					<Expression expressions="$goIntoAttack = true" />
																																																					<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																																																				</Sequence>
																																																			</ExternalLock>
																																																			<StanceBarrier soul="$__player" stance="horse" smartObject="" negate="true" failOnCondition="false" RunLogic="KeepRunning">
																																																				<StanceBarrier soul="$__player" stance="horse" smartObject="" negate="false" failOnCondition="false" RunLogic="KeepRunning">
																																																					<Sequence>
																																																						<Expression expressions="$goIntoAttack = true" />
																																																						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																																																					</Sequence>
																																																				</StanceBarrier>
																																																			</StanceBarrier>
																																																			<Parallel successMode="Any" failureMode="Any">
																																																				<Loop count="-1">
																																																					<Sequence>
																																																						<Function_crime_hasWeaponDrawn checkingMethod="$enum:crime_weaponCheckingMethod.perceivableState" npc="$__player" result="$hasWeaponDrawn" nodeLabel="16980038" />
																																																						<Wait duration="&apos;250ms&apos;" timeType="GameTime" doFail="false" variation="" />
																																																					</Sequence>
																																																				</Loop>
																																																				<IfGate atomic="false" condition="~$hasWeaponDrawn" RunLogic="KeepRunning">
																																																					<IfGate atomic="false" condition="$hasWeaponDrawn" RunLogic="KeepRunning">
																																																						<Sequence>
																																																							<Expression expressions="$goIntoAttack = true" />
																																																							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																																																						</Sequence>
																																																					</IfGate>
																																																				</IfGate>
																																																			</Parallel>
																																																		</Parallel>
																																																	</Loop>
																																																</Parallel>
																																															</Sequence>
																																														</Sequence>
																																													</IfCondition>
																																												</ContinuousSwitch>
																																											</Parallel>
																																										</IfGate>
																																									</Loop>
																																								</Sequence>
																																							</ForceLook>
																																						</AddPerceivableState>
																																					</IfCondition>
																																					<IfCondition failOnCondition="false" condition="true">
																																						<Parallel successMode="Any" failureMode="Any">
																																							<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="7.000000" High="7.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
																																								<Expression expressions="$managedToGetCloseToPlayer = true" />
																																							</DistanceGate>
																																							<Loop count="-1">
																																								<IfGate atomic="false" condition="$canUrge" RunLogic="Halt">
																																									<Sequence>
																																										<Wait duration="&apos;1m&apos;" timeType="GameTime" doFail="false" variation="" />
																																										<Expression expressions="$goIntoAttack = true" />
																																									</Sequence>
																																								</IfGate>
																																							</Loop>
																																						</Parallel>
																																					</IfCondition>
																																				</ContinuousSwitch>
																																			</Parallel>
																																		</IfCondition>
																																	</ContinuousSwitch>
																																</Parallel>
																															</Sequence>
																														</Parallel>
																													</Subtree>
																													<Cleanup canSkip="1">
																														<RemoveBuffs SoulWUID="" BuffGUID="&apos;1951e0bc-532d-4813-a64d-38ef635b3fd5&apos;" BuffTagId="-1" />
																													</Cleanup>
																												</SubtreeDecorator>
																											</IfCondition>
																											<Function_callFollowUpBehavior previousReaction="$enum:crime_reactionKind.arrest" nodeLabel="44192742" />
																										</Sequence>
																									</LogToLabel>
																								</LogToLabel>
																							</EntityContext>
																						</EntityContext>
																					</EntityContextElement>
																				</EntityContext>
																			</EntityContextElement>
																		</EntityContext>
																	</GameContext>
																</GameContext>
															</EntityContext>
														</AddPerceivableState>
													</EntityContext>
												</EntityContextElement>
											</EntityContextElement>
										</EntityContext>
									</AnyDecorator>
								</Sequence>
							</EntityContext>
						</EntityContext>
					</Child>
					<OnFail canSkip="1">
						<Sequence>
							<Function_crime_addLeavingInterruptCooldown nodeLabel="54214138" />
							<Function_crime_limits_removeReactionLink information="$arrestData.information" reactionKind="$enum:crime_reactionKind.arrest" nodeLabel="59873253" />
						</Sequence>
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer>
			<LuaGate code="return player.human:IsInDialog()" saveVersion="2">
				<Then canSkip="1">
					<Sequence>
						<UrgencyDecorator Urgency="Fast">
							<WaitAction />
						</UrgencyDecorator>
						<StopMovement waitUntilStopped="false" />
					</Sequence>
				</Then>
				<Else canSkip="1">
					<Success />
				</Else>
			</LuaGate>
		</ForestContainer>
		<EditorData Signature="arrest" EventSet="">
			<Variables>
				<Variable name="animationApproach" comment="" />
				<Variable name="anyDecoratorPreset" comment="" />
				<Variable name="arrestChatFeedback" comment="" />
				<Variable name="attackKind" comment="" />
				<Variable name="canInterruptLootLockpickAndReading" comment="" />
				<Variable name="canUrge" comment="" />
				<Variable name="chatStartPos" comment="" />
				<Variable name="const_false" comment="" />
				<Variable name="const_true" comment="" />
				<Variable name="cooperationNotification" comment="" />
				<Variable name="crimeLevel" comment="" />
				<Variable name="crimesResolved" comment="" />
				<Variable name="currentPlayerPos" comment="" />
				<Variable name="directionStartPos" comment="" />
				<Variable name="distanceStartToPlayer" comment="" />
				<Variable name="emittingInformation" comment="" />
				<Variable name="escalationContext" comment="" />
				<Variable name="feedbackReceived" comment="" />
				<Variable name="goIntoAttack" comment="" />
				<Variable name="goIntoResolve" comment="" />
				<Variable name="hasWeaponDrawn" comment="" />
				<Variable name="knownInformation" comment="" />
				<Variable name="knownInformations" comment="" />
				<Variable name="lockOnFromSharedPerception" comment="" />
				<Variable name="managedToGetCloseToPlayer" comment="" />
				<Variable name="nextMostImportantInformation" comment="" />
				<Variable name="pathFindingParams" comment="" />
				<Variable name="playerHasWeaponDrawn" comment="" />
				<Variable name="punishmentChanged" comment="" />
				<Variable name="resetPlayersEscape" comment="" />
				<Variable name="resolutionDialogIntroKind" comment="" />
				<Variable name="resolveData" comment="" />
				<Variable name="searchDirection" comment="" />
				<Variable name="shouldHaveDrawnWeapon" comment="" />
				<Variable name="skipToResolve" comment="" />
				<Variable name="skirmishParticipants" comment="" />
				<Variable name="startBarkFinished" comment="" />
				<Variable name="stimulusCombat" comment="" />
				<Variable name="t_dialogParameters" comment="" />
				<Variable name="urgingPriority" comment="" />
				<Variable name="useGuardStance" comment="" />
				<Variable name="arrestData" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-980" editorPosY="-10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_crime_getAnyDecoratorPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_crime_getAnyDecoratorPreset>
										<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<AddPerceivableState hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<GameContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<GameContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																										<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																												<Function_crime_limits_confirmReactionLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																												</Function_crime_limits_confirmReactionLink>
																												<Function_crime_checkInterruptInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																												</Function_crime_checkInterruptInformation>
																												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																													<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
																														<OutputBreakpoints />
																														<ClearDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																														</ClearDynamicInformationValue>
																													</LockDynamicInformationValues>
																												</IfCondition>
																												<RemoveBuffs hasInputBreakpoint="0" comment="rm drunkeness" breakpointFlags="0">
																													<OutputBreakpoints />
																												</RemoveBuffs>
																												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																												</Expression>
																												<Function_crime_hasWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																												</Function_crime_hasWeaponDrawn>
																												<GetCrimeLevelByLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																												</GetCrimeLevelByLabel>
																												<IfCondition hasInputBreakpoint="0" comment="skip if loading $crimesResolved = true" breakpointFlags="0">
																													<OutputBreakpoints />
																													<SubtreeDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																														<OutputBreakpoints />
																														<Init>
																															<AddBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																															</AddBuff>
																														</Init>
																														<Subtree>
																															<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																																<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																	<OutputBreakpoints />
																																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</Success>
																																</IfGate>
																																<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																	<OutputBreakpoints />
																																	<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																		<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																			<OutputBreakpoints />
																																			<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																				<OutputBreakpoints />
																																				<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																					<OutputBreakpoints />
																																					<CheckInformationKnowledge hasInputBreakpoint="0" comment="This node fails if we don&apos;t known the information anymore" breakpointFlags="0">
																																						<OutputBreakpoints />
																																					</CheckInformationKnowledge>
																																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																						<OutputBreakpoints />
																																						<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																						</ReinitVariable>
																																						<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																							<OutputBreakpoints />
																																							<Then>
																																								<GetMostImportantCrimeInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																								</GetMostImportantCrimeInformation>
																																							</Then>
																																							<Else>
																																								<GetMostImportantCrimeInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																								</GetMostImportantCrimeInformation>
																																							</Else>
																																						</EntityContextCheck>
																																						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																							<OutputBreakpoints />
																																							<Then>
																																								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																								</Expression>
																																							</Then>
																																							<Else>
																																								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																									<Expression hasInputBreakpoint="0" comment="Update information to the next most critical one" breakpointFlags="0">
																																										<OutputBreakpoints />
																																									</Expression>
																																									<LinkDataExpression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																										<OutputBreakpoints />
																																									</LinkDataExpression>
																																									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																										<OutputBreakpoints />
																																									</Expression>
																																								</Sequence>
																																							</Else>
																																						</IfElseCondition>
																																					</Sequence>
																																				</Selector>
																																			</IfCondition>
																																			<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																				<OutputBreakpoints />
																																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																					<OutputBreakpoints />
																																				</Expression>
																																			</IfCondition>
																																			<DefaultBranch>
																																				<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																					<OutputBreakpoints />
																																				</Success>
																																			</DefaultBranch>
																																		</Switch>
																																	</ProcessMessage>
																																</Loop>
																																<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																	<OutputBreakpoints />
																																	<Then>
																																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																			<OutputBreakpoints />
																																		</Wait>
																																	</Then>
																																	<Else>
																																		<GameContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																			<OutputBreakpoints />
																																			<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																				<OutputBreakpoints />
																																			</Wait>
																																		</GameContextPreset>
																																	</Else>
																																</EntityContextCheck>
																																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																	<OutputBreakpoints />
																																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																		<Function_crime_addCorpseLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																			<OutputBreakpoints />
																																		</Function_crime_addCorpseLink>
																																	</IfCondition>
																																	<IsFastForwarded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																		<OutputBreakpoints />
																																		<Else>
																																			<IsLoadedGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																				<OutputBreakpoints />
																																				<Else>
																																					<Function_crime_playStartleAnimation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																						<OutputBreakpoints />
																																					</Function_crime_playStartleAnimation>
																																				</Else>
																																			</IsLoadedGate>
																																		</Else>
																																	</IsFastForwarded>
																																	<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																		<OutputBreakpoints />
																																		<Then>
																																			<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																				<OutputBreakpoints />
																																			</Success>
																																		</Then>
																																		<Else>
																																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																				<OutputBreakpoints />
																																				<Function_crime_hasMeleeWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																					<OutputBreakpoints />
																																				</Function_crime_hasMeleeWeaponDrawn>
																																				<GetKnownInformations hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																					<OutputBreakpoints />
																																				</GetKnownInformations>
																																				<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																					<OutputBreakpoints />
																																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																						<OutputBreakpoints />
																																						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																								<OutputBreakpoints />
																																								<LockDynamicInformationValues hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																									<GetDynamicInformationValue hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																										<OutputBreakpoints />
																																									</GetDynamicInformationValue>
																																								</LockDynamicInformationValues>
																																								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																										<OutputBreakpoints />
																																									</Expression>
																																								</IfCondition>
																																							</Sequence>
																																						</IfCondition>
																																						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																								<OutputBreakpoints />
																																							</Expression>
																																						</IfCondition>
																																					</Sequence>
																																				</ForEach>
																																			</Sequence>
																																		</Else>
																																	</EntityContextCheck>
																																	<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																		<Function_crime_estimatePlayersPosition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																			<OutputBreakpoints />
																																		</Function_crime_estimatePlayersPosition>
																																		<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																			<OutputBreakpoints />
																																			<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																				<OutputBreakpoints />
																																				<SubsequentLocationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																					<OutputBreakpoints />
																																					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																						<OutputBreakpoints />
																																						<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																								<OutputBreakpoints />
																																								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																										<OutputBreakpoints />
																																									</Wait>
																																									<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																										<OutputBreakpoints />
																																										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																											<OutputBreakpoints />
																																										</Success>
																																									</IfGate>
																																								</Parallel>
																																							</IfCondition>
																																							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																								<OutputBreakpoints />
																																								<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																										<OutputBreakpoints />
																																										<CrimeFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																											<OutputBreakpoints />
																																										</CrimeFollower>
																																										<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																											<OutputBreakpoints />
																																											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																												<OutputBreakpoints />
																																											</Success>
																																										</IfGate>
																																									</Parallel>
																																								</UrgencyDecorator>
																																							</IfCondition>
																																							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																								<OutputBreakpoints />
																																								<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																										<OutputBreakpoints />
																																										<CrimeFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																											<OutputBreakpoints />
																																										</CrimeFollower>
																																										<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																											<OutputBreakpoints />
																																											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																												<OutputBreakpoints />
																																											</Success>
																																										</IfGate>
																																									</Parallel>
																																								</UrgencyDecorator>
																																							</IfCondition>
																																						</Switch>
																																					</Loop>
																																				</SubsequentLocationDecorator>
																																			</MeleeGuardAutomationDecorator>
																																		</MoveParamsDecorator>
																																		<Function_crime_emitInformation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																			<OutputBreakpoints />
																																		</Function_crime_emitInformation>
																																		<Function_crime_weaponDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																			<OutputBreakpoints />
																																		</Function_crime_weaponDecorator>
																																		<Function_crime_playerInstantRecognitionHandler hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																			<OutputBreakpoints />
																																		</Function_crime_playerInstantRecognitionHandler>
																																		<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																			<OutputBreakpoints />
																																			<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																				<OutputBreakpoints />
																																				<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																					<OutputBreakpoints />
																																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																						<OutputBreakpoints />
																																						<AffectFeelings hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																						</AffectFeelings>
																																						<Function_crime_broadcastCooperationNotification hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																						</Function_crime_broadcastCooperationNotification>
																																						<AddArrestEscalation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																						</AddArrestEscalation>
																																						<Function_callInterrupt_attack hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																						</Function_callInterrupt_attack>
																																					</Sequence>
																																				</AtomicDecorator>
																																			</IfCondition>
																																			<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																				<OutputBreakpoints />
																																				<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																					<OutputBreakpoints />
																																					<Function_crime_managePlayerUrging hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																						<OutputBreakpoints />
																																					</Function_crime_managePlayerUrging>
																																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																						<OutputBreakpoints />
																																						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																							<OutputBreakpoints />
																																							<Child>
																																								<IsLoadedGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																									<OutputBreakpoints />
																																									<Else>
																																										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																											<OutputBreakpoints />
																																											<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																												<OutputBreakpoints />
																																												<Function_crime_arrest_startBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																													<OutputBreakpoints />
																																												</Function_crime_arrest_startBark>
																																											</IfGate>
																																											<ExternalLock hasInputBreakpoint="0" comment="if you didnt get to say startBark initially, dont try later" breakpointFlags="0">
																																												<OutputBreakpoints />
																																												<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																													<OutputBreakpoints />
																																												</Success>
																																											</ExternalLock>
																																										</Parallel>
																																									</Else>
																																								</IsLoadedGate>
																																							</Child>
																																							<OnFail>
																																								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																								</Expression>
																																							</OnFail>
																																						</FuseBox>
																																						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																						</Wait>
																																					</Sequence>
																																					<HasActiveThreatsGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																						<OutputBreakpoints />
																																						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																							<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																								<OutputBreakpoints />
																																								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																									<GetSkirmishParticipants hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																										<OutputBreakpoints />
																																									</GetSkirmishParticipants>
																																									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																										<OutputBreakpoints />
																																									</Expression>
																																									<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																										<OutputBreakpoints />
																																										<Function_switch_handleStimulusCombat hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																											<OutputBreakpoints />
																																										</Function_switch_handleStimulusCombat>
																																									</EntityContext>
																																								</Sequence>
																																							</AtomicDecorator>
																																						</SuppressFailure>
																																					</HasActiveThreatsGate>
																																					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																						<OutputBreakpoints />
																																						<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																								<OutputBreakpoints />
																																								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																								</Expression>
																																								<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																									<CallDecorator_crime_handlePlayersEscape hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																										<OutputBreakpoints />
																																										<Subtree>
																																											<Function_crime_handlePlayersEscape hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																												<OutputBreakpoints />
																																											</Function_crime_handlePlayersEscape>
																																										</Subtree>
																																										<PlayerLost>
																																											<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																												<OutputBreakpoints />
																																												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																													<OutputBreakpoints />
																																													<Function_crime_getSearchDirectionTowardsPlayer hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																														<OutputBreakpoints />
																																													</Function_crime_getSearchDirectionTowardsPlayer>
																																													<Function_callInterrupt_lookAround hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																														<OutputBreakpoints />
																																													</Function_callInterrupt_lookAround>
																																												</Sequence>
																																											</CallbackEventCatch_empty>
																																										</PlayerLost>
																																									</CallDecorator_crime_handlePlayersEscape>
																																								</IfGate>
																																							</Sequence>
																																						</IfGate>
																																					</Loop>
																																					<CallDecorator_crime_sharePlayersPosition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																						<OutputBreakpoints />
																																						<Subtree>
																																							<Function_crime_sharePlayersLastSeenPosition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																								<OutputBreakpoints />
																																							</Function_crime_sharePlayersLastSeenPosition>
																																						</Subtree>
																																						<PositionUpdatedFromOtherNpc>
																																							<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																								<OutputBreakpoints />
																																								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																								</Success>
																																							</CallbackEventCatch_empty>
																																						</PositionUpdatedFromOtherNpc>
																																						<PlayerFound>
																																							<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																								<OutputBreakpoints />
																																								<Expression hasInputBreakpoint="0" comment="when someone directs me straight to player, reset escape timer" breakpointFlags="0">
																																									<OutputBreakpoints />
																																								</Expression>
																																							</CallbackEventCatch_empty>
																																						</PlayerFound>
																																						<PointingStart>
																																							<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																								<OutputBreakpoints />
																																								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																								</Success>
																																							</CallbackEventCatch_empty>
																																						</PointingStart>
																																						<PointingEnd>
																																							<CallbackEventCatch_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																								<OutputBreakpoints />
																																								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																								</Success>
																																							</CallbackEventCatch_empty>
																																						</PointingEnd>
																																					</CallDecorator_crime_sharePlayersPosition>
																																					<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																						<OutputBreakpoints />
																																						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																							<AddPerceivableState hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																								<OutputBreakpoints />
																																								<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																										<OutputBreakpoints />
																																										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																											<OutputBreakpoints />
																																										</Expression>
																																										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																											<OutputBreakpoints />
																																											<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																												<OutputBreakpoints />
																																												<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																													<OutputBreakpoints />
																																													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																														<OutputBreakpoints />
																																														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																															<OutputBreakpoints />
																																															<TenseCircumstanceBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																<OutputBreakpoints />
																																																<LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																	<OutputBreakpoints />
																																																	<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																		<OutputBreakpoints />
																																																	</Wait>
																																																</LogToLabel>
																																															</TenseCircumstanceBarrier>
																																														</SuppressFailure>
																																														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																															<OutputBreakpoints />
																																														</Wait>
																																													</Sequence>
																																													<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																														<OutputBreakpoints />
																																														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																															<OutputBreakpoints />
																																															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																<OutputBreakpoints />
																																																<Function_crime_getResolutionDialogIntroKind hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																	<OutputBreakpoints />
																																																</Function_crime_getResolutionDialogIntroKind>
																																																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																	<OutputBreakpoints />
																																																</Expression>
																																																<Function_crime_resolveCrimeDialogue hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																	<OutputBreakpoints />
																																																</Function_crime_resolveCrimeDialogue>
																																															</Sequence>
																																														</IfCondition>
																																														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																															<OutputBreakpoints />
																																															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																<OutputBreakpoints />
																																															</Wait>
																																														</IfCondition>
																																														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																															<OutputBreakpoints />
																																															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																<OutputBreakpoints />
																																																<StanceCheck hasInputBreakpoint="0" comment="check before entering tenseCircumBarrier, but just remember it, go into resolve from under tenseCircumBarrier" breakpointFlags="0" saveVersion="2">
																																																	<OutputBreakpoints />
																																																	<Then>
																																																		<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																			<OutputBreakpoints />
																																																		</Expression>
																																																	</Then>
																																																	<Else>
																																																		<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																			<OutputBreakpoints />
																																																		</Success>
																																																	</Else>
																																																</StanceCheck>
																																																<IsTimeSkipping hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																																	<OutputBreakpoints />
																																																	<Then>
																																																		<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																			<OutputBreakpoints />
																																																		</Expression>
																																																	</Then>
																																																	<Else>
																																																		<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																			<OutputBreakpoints />
																																																		</Success>
																																																	</Else>
																																																</IsTimeSkipping>
																																																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																	<OutputBreakpoints />
																																																	<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																		<OutputBreakpoints />
																																																	</GetSpatialInfo>
																																																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																		<OutputBreakpoints />
																																																		<Expression hasInputBreakpoint="0" comment="do this under tenseCircumBarrier" breakpointFlags="0">
																																																			<OutputBreakpoints />
																																																		</Expression>
																																																	</IfCondition>
																																																	<IsLoadedGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																																		<OutputBreakpoints />
																																																		<Then>
																																																			<VariableExistsGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																																				<OutputBreakpoints />
																																																				<Then>
																																																					<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																						<OutputBreakpoints />
																																																					</Success>
																																																				</Then>
																																																				<Else>
																																																					<Expression hasInputBreakpoint="0" comment="gotta init" breakpointFlags="0">
																																																						<OutputBreakpoints />
																																																					</Expression>
																																																				</Else>
																																																			</VariableExistsGate>
																																																		</Then>
																																																		<Else>
																																																			<Expression hasInputBreakpoint="0" comment="gotta init" breakpointFlags="0">
																																																				<OutputBreakpoints />
																																																			</Expression>
																																																		</Else>
																																																	</IsLoadedGate>
																																																	<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																		<OutputBreakpoints />
																																																		<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																			<OutputBreakpoints />
																																																			<IfGate hasInputBreakpoint="0" comment="start &quot;chat&quot; after startBark finishes" breakpointFlags="0">
																																																				<OutputBreakpoints />
																																																				<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																					<OutputBreakpoints />
																																																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																						<OutputBreakpoints />
																																																						<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																							<OutputBreakpoints />
																																																						</Function_crime_crimeBark>
																																																						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																							<OutputBreakpoints />
																																																						</Expression>
																																																						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																							<OutputBreakpoints />
																																																							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																								<OutputBreakpoints />
																																																								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																									<OutputBreakpoints />
																																																								</Wait>
																																																								<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																									<OutputBreakpoints />
																																																									<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																										<OutputBreakpoints />
																																																										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																											<OutputBreakpoints />
																																																											<InstantReadMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																												<OutputBreakpoints />
																																																											</InstantReadMessage>
																																																											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																												<OutputBreakpoints />
																																																											</Expression>
																																																										</Sequence>
																																																									</AtomicDecorator>
																																																								</SuppressFailure>
																																																								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																									<OutputBreakpoints />
																																																									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																										<OutputBreakpoints />
																																																										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																											<OutputBreakpoints />
																																																										</Expression>
																																																										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																																																											<OutputBreakpoints />
																																																											<Then>
																																																												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																													<OutputBreakpoints />
																																																												</Expression>
																																																											</Then>
																																																											<Else>
																																																												<Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																													<OutputBreakpoints />
																																																												</Function_crime_crimeBark>
																																																											</Else>
																																																										</IfElseCondition>
																																																									</Sequence>
																																																								</IfCondition>
																																																							</Sequence>
																																																						</Loop>
																																																					</Sequence>
																																																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																						<OutputBreakpoints />
																																																						<ShowTutorial hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																							<OutputBreakpoints />
																																																						</ShowTutorial>
																																																						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																							<OutputBreakpoints />
																																																							<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																								<OutputBreakpoints />
																																																							</Function_speech_dialogInitiator>
																																																						</SuppressFailure>
																																																						<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																							<OutputBreakpoints />
																																																							<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																								<OutputBreakpoints />
																																																								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																									<OutputBreakpoints />
																																																									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																										<OutputBreakpoints />
																																																									</Expression>
																																																								</IfCondition>
																																																								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																									<OutputBreakpoints />
																																																									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																										<OutputBreakpoints />
																																																									</Expression>
																																																								</IfCondition>
																																																								<DefaultBranch>
																																																									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																										<OutputBreakpoints />
																																																									</Expression>
																																																								</DefaultBranch>
																																																							</Switch>
																																																						</IfGate>
																																																					</Sequence>
																																																					<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																						<OutputBreakpoints />
																																																						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																							<OutputBreakpoints />
																																																						</Expression>
																																																					</ProcessMessage>
																																																				</Parallel>
																																																			</IfGate>
																																																		</Loop>
																																																		<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																			<OutputBreakpoints />
																																																			<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																				<OutputBreakpoints />
																																																				<StanceBarrier hasInputBreakpoint="0" comment="TODO: most likely redundant, player cant start action under tenseCircumstances" breakpointFlags="0">
																																																					<OutputBreakpoints />
																																																					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																						<OutputBreakpoints />
																																																					</Expression>
																																																				</StanceBarrier>
																																																				<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																					<OutputBreakpoints />
																																																					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																						<OutputBreakpoints />
																																																					</Expression>
																																																				</DeadUnconsciousGate>
																																																				<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																					<OutputBreakpoints />
																																																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																						<OutputBreakpoints />
																																																						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																							<OutputBreakpoints />
																																																						</Wait>
																																																						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																							<OutputBreakpoints />
																																																							<LinkGate hasInputBreakpoint="0" comment="TODO: most likely redundant, player cant start action under tenseCircumstances" breakpointFlags="0">
																																																								<OutputBreakpoints />
																																																								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																									<OutputBreakpoints />
																																																								</Expression>
																																																							</LinkGate>
																																																							<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																								<OutputBreakpoints />
																																																								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																									<OutputBreakpoints />
																																																								</Expression>
																																																							</LinkGate>
																																																							<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																								<OutputBreakpoints />
																																																								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																									<OutputBreakpoints />
																																																								</Expression>
																																																							</ActorStateBarrier>
																																																							<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																								<OutputBreakpoints />
																																																								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																									<OutputBreakpoints />
																																																								</Expression>
																																																							</ActorStateBarrier>
																																																						</Parallel>
																																																					</Sequence>
																																																				</IfGate>
																																																				<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																					<OutputBreakpoints />
																																																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																						<OutputBreakpoints />
																																																						<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																							<OutputBreakpoints />
																																																						</GetSpatialInfo>
																																																						<MeasureDistance hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																							<OutputBreakpoints />
																																																						</MeasureDistance>
																																																						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																							<OutputBreakpoints />
																																																							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																								<OutputBreakpoints />
																																																							</Expression>
																																																						</IfCondition>
																																																						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																							<OutputBreakpoints />
																																																						</Wait>
																																																					</Sequence>
																																																				</Loop>
																																																				<ExternalLock hasInputBreakpoint="0" comment="KCD2-131594" breakpointFlags="0">
																																																					<OutputBreakpoints />
																																																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																						<OutputBreakpoints />
																																																						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																							<OutputBreakpoints />
																																																						</Expression>
																																																						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																							<OutputBreakpoints />
																																																						</Wait>
																																																					</Sequence>
																																																				</ExternalLock>
																																																				<StanceBarrier hasInputBreakpoint="0" comment="KCD2-89853" breakpointFlags="0">
																																																					<OutputBreakpoints />
																																																					<StanceBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																						<OutputBreakpoints />
																																																						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																							<OutputBreakpoints />
																																																							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																								<OutputBreakpoints />
																																																							</Expression>
																																																							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																								<OutputBreakpoints />
																																																							</Wait>
																																																						</Sequence>
																																																					</StanceBarrier>
																																																				</StanceBarrier>
																																																				<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																					<OutputBreakpoints />
																																																					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																						<OutputBreakpoints />
																																																						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																							<OutputBreakpoints />
																																																							<Function_crime_hasWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																								<OutputBreakpoints />
																																																							</Function_crime_hasWeaponDrawn>
																																																							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																								<OutputBreakpoints />
																																																							</Wait>
																																																						</Sequence>
																																																					</Loop>
																																																					<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																						<OutputBreakpoints />
																																																						<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																							<OutputBreakpoints />
																																																							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																								<OutputBreakpoints />
																																																								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																									<OutputBreakpoints />
																																																								</Expression>
																																																								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																																									<OutputBreakpoints />
																																																								</Wait>
																																																							</Sequence>
																																																						</IfGate>
																																																					</IfGate>
																																																				</Parallel>
																																																			</Parallel>
																																																		</Loop>
																																																	</Parallel>
																																																</Sequence>
																																															</Sequence>
																																														</IfCondition>
																																													</ContinuousSwitch>
																																												</Parallel>
																																											</IfGate>
																																										</Loop>
																																									</Sequence>
																																								</ForceLook>
																																							</AddPerceivableState>
																																						</IfCondition>
																																						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																							<OutputBreakpoints />
																																							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																								<OutputBreakpoints />
																																								<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																										<OutputBreakpoints />
																																									</Expression>
																																								</DistanceGate>
																																								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																									<OutputBreakpoints />
																																									<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																										<OutputBreakpoints />
																																										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																											<OutputBreakpoints />
																																											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																												<OutputBreakpoints />
																																											</Wait>
																																											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																												<OutputBreakpoints />
																																											</Expression>
																																										</Sequence>
																																									</IfGate>
																																								</Loop>
																																							</Parallel>
																																						</IfCondition>
																																					</ContinuousSwitch>
																																				</Parallel>
																																			</IfCondition>
																																		</ContinuousSwitch>
																																	</Parallel>
																																</Sequence>
																															</Parallel>
																														</Subtree>
																														<Cleanup>
																															<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																															</RemoveBuffs>
																														</Cleanup>
																													</SubtreeDecorator>
																												</IfCondition>
																												<Function_callFollowUpBehavior hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																												</Function_callFollowUpBehavior>
																											</Sequence>
																										</LogToLabel>
																									</LogToLabel>
																								</EntityContext>
																							</EntityContext>
																						</EntityContextElement>
																					</EntityContext>
																				</EntityContextElement>
																			</EntityContext>
																		</GameContext>
																	</GameContext>
																</EntityContext>
															</AddPerceivableState>
														</EntityContext>
													</EntityContextElement>
												</EntityContextElement>
											</EntityContext>
										</AnyDecorator>
									</Sequence>
								</EntityContext>
							</EntityContext>
						</Child>
						<OnFail>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Function_crime_addLeavingInterruptCooldown hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_addLeavingInterruptCooldown>
								<Function_crime_limits_removeReactionLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Function_crime_limits_removeReactionLink>
							</Sequence>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest>
				<LuaGate editorPosX="10110" editorPosY="4150" hasInputBreakpoint="0" comment="for when it is needed again" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Then>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
							</UrgencyDecorator>
							<StopMovement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</StopMovement>
						</Sequence>
					</Then>
					<Else>
						<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Success>
					</Else>
				</LuaGate>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>