<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="switch_handleCheckMates" is_function="1">
    <Variables>
      <Variable name="checkMatesRequest" type="crime:checkMatesRequest" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <ClearInbox inbox="&apos;crime_checkMatesRequest&apos;" type="" condition="" />
          <While doFail="false" propagateChildFail="false" condition="true">
            <ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$checkMatesRequest" senderInfo="" inbox="&apos;crime_checkMatesRequest&apos;" condition="" answerVar="">
              <Function_crime_checkMates checker="$this.id" deadMate="$checkMatesRequest.deadMate" initiator="$enum:switch_interruptInitiator.switch" previousReaction="$enum:crime_reactionKind.unknown" nodeLabel="88735109" />
            </ProcessMessage>
          </While>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="checkMatesRequest" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <ClearInbox hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </ClearInbox>
            <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Function_crime_checkMates hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Function_crime_checkMates>
              </ProcessMessage>
            </While>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>