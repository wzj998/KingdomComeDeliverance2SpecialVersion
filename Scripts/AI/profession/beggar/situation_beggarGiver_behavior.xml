<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="beggarGiver_behavior" is_function="0">
    <Variables>
      <Variable name="animLockName" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="beggarData" type="beggarData" values="" isPersistent="0" form="single" />
      <Variable name="beggarRef" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Sequence>
          <Expression expressions="$beggarRef = $__sit_roleHolders[&apos;role_beggar&apos;].id" />
          <GraphSearch Origin="$beggarRef" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;situation_beggarData&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$beggarData" />
          </GraphSearch>
        </Sequence>
      </OnInit>
      <Behavior canSkip="1">
        <Sequence>
          <Concatenation OutString="$animLockName" Pattern="&apos;situation_beggar_$__sit_contextVar&apos;" />
          <Switch>
            <IfCondition failOnCondition="false" condition="$beggarData.type == $enum:situation_beggarStyle.kneeling">
              <JoinedAnimationAction requiresMovement="true" lockContext="$beggarData.spot" lockName="$animLockName" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="&apos;BeggarGive&apos;" tags="&apos;beggarKneeling&apos;" eventReferenceObject="" alignObject="$beggarData.spot" slaveObject="" resourceOverride="&apos;giver&apos;" allowTorchForPlayer="false" />
            </IfCondition>
            <IfCondition failOnCondition="false" condition="$beggarData.type == $enum:situation_beggarStyle.laying">
              <JoinedAnimationAction requiresMovement="true" lockContext="$beggarData.spot" lockName="$animLockName" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="&apos;BeggarGive&apos;" tags="&apos;beggarLaying&apos;" eventReferenceObject="" alignObject="$beggarData.spot" slaveObject="" resourceOverride="&apos;giver&apos;" allowTorchForPlayer="false" />
            </IfCondition>
            <DefaultBranch>
              <ErrorNode Message="&apos;[$this.name;] beggarType &quot;$beggarData.type;&quot; not supported&apos;" />
            </DefaultBranch>
          </Switch>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="animLockName" comment="" />
        <Variable name="beggarData" comment="" />
        <Variable name="beggarRef" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="60" editorPosY="90" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
          </Sequence>
        </OnInit>
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Concatenation>
            <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </JoinedAnimationAction>
              </IfCondition>
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </JoinedAnimationAction>
              </IfCondition>
              <DefaultBranch>
                <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </ErrorNode>
              </DefaultBranch>
            </Switch>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>