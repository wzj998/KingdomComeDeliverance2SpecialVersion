<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="beggar_behavior" is_function="0">
    <Variables>
      <Variable name="animLockName" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="beggarData" type="beggarData" values="" isPersistent="0" form="single" />
      <Variable name="giver" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;situation_beggarData&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$beggarData" />
          </GraphSearch>
          <Concatenation OutString="$animLockName" Pattern="&apos;situation_beggar_$__sit_contextVar&apos;" />
          <Expression expressions="$giver = $__sit_roleHolders[&apos;role_beggarGiver&apos;].id" />
          <Switch>
            <IfCondition failOnCondition="false" condition="$beggarData.type == $enum:situation_beggarStyle.kneeling">
              <UnstanceElement unstance="BeggarKneeling" locationObject="$beggarData.spot" slaveObject="" enabled="true">
                <Sequence>
                  <JoinedAnimationAction requiresMovement="false" lockContext="$beggarData.spot" lockName="$animLockName" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="&apos;BeggarKneelGetAlms&apos;" tags="&apos;beggarKneel&apos;" eventReferenceObject="" alignObject="$beggarData.spot" slaveObject="" resourceOverride="&apos;beggar&apos;" allowTorchForPlayer="false" />
                  <Parallel successMode="All" failureMode="Any">
                    <Function_speech_dialogInitiator alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="&apos;ZEBRAK_DEKUJE_ZA_ALMUZNU&apos;" preset="$enum:dialogPreset.ingame" recipient="$giver" recipientMetaroles="&apos;ZEBRAK_DEKUJE_ZA_ALMUZNU&apos;" nodeLabel="10974765" />
                    <AnimationAction fragment="&apos;BeggarTake&apos;" tags="&apos;beggarKneel&apos;" eventReferenceObject="" alignObject="$beggarData.spot" slaveObject="" resourceOverride="&apos;beggar&apos;" allowTorchForPlayer="false" />
                  </Parallel>
                </Sequence>
              </UnstanceElement>
            </IfCondition>
            <IfCondition failOnCondition="false" condition="$beggarData.type == $enum:situation_beggarStyle.laying">
              <UnstanceElement unstance="BeggarLaying" locationObject="$beggarData.spot" slaveObject="" enabled="true">
                <Sequence>
                  <JoinedAnimationAction requiresMovement="false" lockContext="$beggarData.spot" lockName="$animLockName" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="&apos;BeggarFaceDownGetAlms&apos;" tags="&apos;beggar&apos;" eventReferenceObject="" alignObject="$beggarData.spot" slaveObject="" resourceOverride="&apos;beggar&apos;" allowTorchForPlayer="false" />
                  <Parallel successMode="All" failureMode="Any">
                    <Function_speech_dialogInitiator alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" customParameters="" metarole="&apos;ZEBRAK_DEKUJE_ZA_ALMUZNU&apos;" preset="$enum:dialogPreset.ingame" recipient="$giver" recipientMetaroles="&apos;ZEBRAK_DEKUJE_ZA_ALMUZNU&apos;" nodeLabel="30041735" />
                    <AnimationAction fragment="&apos;BeggarTake&apos;" tags="&apos;beggar&apos;" eventReferenceObject="" alignObject="$beggarData.spot" slaveObject="" resourceOverride="&apos;beggar&apos;" allowTorchForPlayer="false" />
                  </Parallel>
                </Sequence>
              </UnstanceElement>
            </IfCondition>
            <DefaultBranch>
              <ErrorNode Message="&apos;[$this.name;] beggarType &quot;$beggarData.type;&quot; not supported&apos;" />
            </DefaultBranch>
          </Switch>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer>
      <Function_speech_monolog alias="" canBeDelayed="false" context="" dramaticBark="false" lookAtId="$__null" metarole="&apos;ZEBRAK_DEKUJE_ZA_ALMUZNU&apos;" target="$this.id" wait="false" nodeLabel="71860737" />
      <Function_speech_monolog alias="" canBeDelayed="false" context="" dramaticBark="false" lookAtId="$__null" metarole="&apos;ZEBRAK_DEKUJE_ZA_ALMUZNU&apos;" target="$this.id" wait="false" nodeLabel="94974088" />
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="animLockName" comment="" />
        <Variable name="beggarData" comment="" />
        <Variable name="giver" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Concatenation>
            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
            <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </JoinedAnimationAction>
                    <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Function_speech_dialogInitiator>
                      <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </AnimationAction>
                    </Parallel>
                  </Sequence>
                </UnstanceElement>
              </IfCondition>
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </JoinedAnimationAction>
                    <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Function_speech_dialogInitiator>
                      <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </AnimationAction>
                    </Parallel>
                  </Sequence>
                </UnstanceElement>
              </IfCondition>
              <DefaultBranch>
                <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </ErrorNode>
              </DefaultBranch>
            </Switch>
          </Sequence>
        </Behavior>
      </Root>
      <Forest>
        <Function_speech_monolog editorPosX="1690" editorPosY="-240" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
        </Function_speech_monolog>
        <Function_speech_monolog editorPosX="2150" editorPosY="380" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
        </Function_speech_monolog>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>