<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="use_watch" is_function="0">
    <Variables>
      <Variable name="shouldMonolog" type="_bool" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Sequence>
          <RandomGate opensWithChance="0.500000" saveVersion="2">
            <Then canSkip="1">
              <Expression expressions="$shouldMonolog = true" />
            </Then>
            <Else canSkip="1">
              <Expression expressions="$shouldMonolog = false" />
            </Else>
          </RandomGate>
          <IfCondition failOnCondition="false" condition="$shouldMonolog">
            <ExecuteLua code="local soEntity = XGenAIModule.GetEntityByWUID(data.__object.id); &#10;data.shouldMonolog = EntityUtils.GetScriptProperty(soEntity,&apos;isCoal&apos;);" />
          </IfCondition>
        </Sequence>
      </OnInit>
      <Behavior canSkip="1">
        <Sequence>
          <ExactMove directionType="AlignWithEntity" directionSpecification="$__object.id" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$__object.id" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
          <Parallel successMode="Any" failureMode="Any">
            <AnimationAction fragment="&apos;miller&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
            <Sequence>
              <SuppressFailure>
                <IfCondition failOnCondition="false" condition="$shouldMonolog">
                  <Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;UHLIR_SAMOMLUVA&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="92679569" />
                </IfCondition>
              </SuppressFailure>
              <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
            </Sequence>
          </Parallel>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="shouldMonolog" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Then>
              <Else>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Else>
            </RandomGate>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </ExecuteLua>
            </IfCondition>
          </Sequence>
        </OnInit>
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </ExactMove>
            <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </AnimationAction>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Function_speech_schedulerMonolog>
                  </IfCondition>
                </SuppressFailure>
                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Wait>
              </Sequence>
            </Parallel>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>