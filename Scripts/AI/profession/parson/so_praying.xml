<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="useStanding" is_function="0">
		<Variables>
			<Variable name="randomNum" type="_float" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextElement context="praying_inPrayingUnstance" enabled="true">
					<Sequence>
						<HasFactionLabel_Soul Soul="$this.id" Flag="jewish" saveVersion="2">
							<Then canSkip="1">
								<UnstanceAction unstance="PrayStandingJew" locationObject="$__object.id" slaveObject="" />
							</Then>
							<Else canSkip="1">
								<UnstanceAction unstance="PrayStanding" locationObject="$__object.id" slaveObject="" />
							</Else>
						</HasFactionLabel_Soul>
						<EntityContextCheck context="praying_forcePrayer" target="$this.id" saveVersion="2">
							<Then canSkip="1">
								<Expression expressions="$randomNum = 0.0" />
							</Then>
							<Else canSkip="1">
								<EntityContextCheck context="praying_suppressPrayer" target="$this.id" saveVersion="2">
									<Then canSkip="1">
										<Expression expressions="$randomNum = 1.0" />
									</Then>
									<Else canSkip="1">
										<GenerateRandomFloat result="$randomNum" />
									</Else>
								</EntityContextCheck>
							</Else>
						</EntityContextCheck>
						<Selector>
							<IfElseCondition failOnCondition="false" condition="$randomNum &lt;= $data:script_param[&apos;professions_praying_chanceOfPrayingOutLoud&apos;].value" saveVersion="2">
								<Then canSkip="1">
									<EntityContextBarrier context="praying_suppressPrayer" target="$this.id" Negation="true" RunLogic="Halt">
										<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;NPC_SE_MODLI&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="85883433" />
									</EntityContextBarrier>
								</Then>
								<Else canSkip="1">
									<Fail />
								</Else>
							</IfElseCondition>
							<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
						</Selector>
					</Sequence>
				</EntityContextElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="randomNum" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<HasFactionLabel_Soul hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
								</Then>
								<Else>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
								</Else>
							</HasFactionLabel_Soul>
							<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Then>
								<Else>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Then>
										<Else>
											<GenerateRandomFloat hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GenerateRandomFloat>
										</Else>
									</EntityContextCheck>
								</Else>
							</EntityContextCheck>
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</EntityContextBarrier>
									</Then>
									<Else>
										<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Fail>
									</Else>
								</IfElseCondition>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Selector>
						</Sequence>
					</EntityContextElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="useKneelingDesk" is_function="0">
		<Variables>
			<Variable name="randomNum" type="_float" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextElement context="praying_inPrayingUnstance" enabled="true">
					<Sequence>
						<UnstanceAction unstance="PrayKneelingDesk" locationObject="$__resource.id" slaveObject="" />
						<EntityContextCheck context="praying_forcePrayer" target="$this.id" saveVersion="2">
							<Then canSkip="1">
								<Expression expressions="$randomNum = 0.0" />
							</Then>
							<Else canSkip="1">
								<EntityContextCheck context="praying_suppressPrayer" target="$this.id" saveVersion="2">
									<Then canSkip="1">
										<Expression expressions="$randomNum = 1.0" />
									</Then>
									<Else canSkip="1">
										<GenerateRandomFloat result="$randomNum" />
									</Else>
								</EntityContextCheck>
							</Else>
						</EntityContextCheck>
						<Selector>
							<IfElseCondition failOnCondition="false" condition="$randomNum &lt;= $data:script_param[&apos;professions_praying_chanceOfPrayingOutLoud&apos;].value" saveVersion="2">
								<Then canSkip="1">
									<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;NPC_SE_MODLI&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="83956627" />
								</Then>
								<Else canSkip="1">
									<Fail />
								</Else>
							</IfElseCondition>
							<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
						</Selector>
					</Sequence>
				</EntityContextElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="randomNum" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Then>
								<Else>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Then>
										<Else>
											<GenerateRandomFloat hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GenerateRandomFloat>
										</Else>
									</EntityContextCheck>
								</Else>
							</EntityContextCheck>
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_schedulerMonolog>
									</Then>
									<Else>
										<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Fail>
									</Else>
								</IfElseCondition>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Selector>
						</Sequence>
					</EntityContextElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="useKneelingGround" is_function="0">
		<Variables>
			<Variable name="randomNum" type="_float" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextElement context="praying_inPrayingUnstance" enabled="true">
					<Sequence>
						<HasGenderCheck Gender="Male" SoulWUID="$this.id" FailSubtMissing="false" saveVersion="2">
							<Then canSkip="1">
								<UnstanceAction unstance="PrayKneelingGround" locationObject="$__object.id" slaveObject="" />
							</Then>
							<Else canSkip="1">
								<UnstanceAction unstance="PrayKneelingGround_female" locationObject="$__object.id" slaveObject="" />
							</Else>
						</HasGenderCheck>
						<EntityContextCheck context="praying_forcePrayer" target="$this.id" saveVersion="2">
							<Then canSkip="1">
								<Expression expressions="$randomNum = 0.0" />
							</Then>
							<Else canSkip="1">
								<EntityContextCheck context="praying_suppressPrayer" target="$this.id" saveVersion="2">
									<Then canSkip="1">
										<Expression expressions="$randomNum = 1.0" />
									</Then>
									<Else canSkip="1">
										<GenerateRandomFloat result="$randomNum" />
									</Else>
								</EntityContextCheck>
							</Else>
						</EntityContextCheck>
						<Selector>
							<IfElseCondition failOnCondition="false" condition="$randomNum &lt;= $data:script_param[&apos;professions_praying_chanceOfPrayingOutLoud&apos;].value" saveVersion="2">
								<Then canSkip="1">
									<EntityContextBarrier context="praying_suppressPrayer" target="$this.id" Negation="true" RunLogic="Halt">
										<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;NPC_SE_MODLI&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="29412527" />
									</EntityContextBarrier>
								</Then>
								<Else canSkip="1">
									<Fail />
								</Else>
							</IfElseCondition>
							<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
						</Selector>
					</Sequence>
				</EntityContextElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="randomNum" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
								</Then>
								<Else>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</UnstanceAction>
								</Else>
							</HasGenderCheck>
							<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Then>
								<Else>
									<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Then>
										<Else>
											<GenerateRandomFloat hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GenerateRandomFloat>
										</Else>
									</EntityContextCheck>
								</Else>
							</EntityContextCheck>
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</EntityContextBarrier>
									</Then>
									<Else>
										<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Fail>
									</Else>
								</IfElseCondition>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Selector>
						</Sequence>
					</EntityContextElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="useKneelingGroundOneShotShort" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnimationAction fragment="&apos;PrayKneeling&apos;" tags="&apos;prayShort&apos;" eventReferenceObject="" alignObject="$__object.id" slaveObject="" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<OutputBreakpoints />
					</AnimationAction>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="useKneelingGroundOneShotLong" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnimationAction fragment="&apos;PrayKneeling&apos;" tags="&apos;prayLong&apos;" eventReferenceObject="" alignObject="$__object.id" slaveObject="" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<OutputBreakpoints />
					</AnimationAction>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="useStandingOneShotLong" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HasGenderCheck Gender="Male" SoulWUID="$this.id" FailSubtMissing="false" saveVersion="2">
					<Then canSkip="1">
						<AnimationAction fragment="&apos;PrayStandLong&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
					</Then>
					<Else canSkip="1">
						<AnimationAction fragment="&apos;PrayIdle&apos;" tags="&apos;prayShort&apos;" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
					</Else>
				</HasGenderCheck>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Then>
							<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnimationAction>
						</Then>
						<Else>
							<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AnimationAction>
						</Else>
					</HasGenderCheck>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>