<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="use_roastering" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <UnstanceAction unstance="stoneRoastering" locationObject="$__object.id" slaveObject="" />
          <SuppressFailure>
            <Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;REMESLNIK_SAMOMLUVA&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="16022866" />
          </SuppressFailure>
          <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </UnstanceAction>
            <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Function_speech_schedulerMonolog>
            </SuppressFailure>
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="use_basket" is_function="0">
    <Variables>
      <Variable name="basket" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="basketSlot" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <HandContentElement hand="Right" item="$basket" allowAny="false" decisionLabel="miner_carryBasket" saveVersion="2">
            <Search canSkip="1">
              <Function_findItemOnSlot linkName="&apos;slot_basket&apos;" npc="$this.id" searchOrigin="$__object.id" item="$basket" nodeLabel="37889920" />
            </Search>
            <Exec canSkip="1">
              <AnimationAction fragment="&apos;RoasterEmptyBasket&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="" />
            </Exec>
          </HandContentElement>
          <WaitAction />
          <ForgetDecision decisionLabel="miner_carryBasket" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="basket" comment="" />
        <Variable name="basketSlot" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Search>
                <Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Function_findItemOnSlot>
              </Search>
              <Exec>
                <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <OutputBreakpoints />
                </AnimationAction>
              </Exec>
            </HandContentElement>
            <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </WaitAction>
            <ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </ForgetDecision>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>