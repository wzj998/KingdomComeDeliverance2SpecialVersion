<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="use_bartender_bringBeer" is_function="0">
		<Variables>
			<Variable name="alignObject" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="animationTag" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="animationTagLeft" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="beer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="beerCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="customer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" />
			<Variable name="customers" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="customersCheck" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="customersParamsArray" type="customerParams" values="" isPersistent="0" form="array" />
			<Variable name="guest" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="guestSeat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="lockName" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="lockServeBeer" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="smartObjectName" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="spot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="staffSpot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stein" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="steinSO" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="steinSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="table" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tableCheck" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="tables" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="tablesArray" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="wantToCheers" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernBarrel&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$tables" saveVersion="2">
							<Child0 canSkip="1">
								<RangeSorter point="$__object.id" SortOrder="Ascending" Source="Child" />
							</Child0>
						</Nodalyzer>
					</GraphSearch>
					<Expression expressions="$npc = $this.id &#10;$steinSO = $__object.id" />
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
					<Sequence>
						<EntityContextElement context="ForceForbidAutoTorch" enabled="true">
							<EntityContextElement context="DisableSituationParticipation" enabled="true">
								<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_bartender_bringBeer&apos;" state="Enabled" allowAnyState="false" enabled="true">
									<Parallel successMode="Any" failureMode="Any">
										<Sequence>
											<SuppressFailure>
												<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;HOSPODSKA_OBJEDNAVKA&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="32628814" />
											</SuppressFailure>
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
										<Sequence>
											<ForEach startIndex="0" step="1" array="$tables" iterator="" value="$smartObject" break="">
												<Sequence>
													<ReinitVariable variable="$customersParamsArray" />
													<ReinitVariable variable="$customers" />
													<GraphSearch Origin="$smartObject" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
														<LinkTagFilter tag="&apos;staffSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$spot" Data="" />
													</GraphSearch>
													<GraphSearch Origin="$smartObject" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
														<LinkTagFilter tag="&apos;tavernGuest&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
														<Nodalyzer Quantifiers="ForAll" Parent="" Child="$customers" saveVersion="2">
															<Child0 canSkip="1">
																<RangeSorter point="$spot" SortOrder="Ascending" Source="Child" />
															</Child0>
														</Nodalyzer>
													</GraphSearch>
													<ForEach startIndex="0" step="1" array="$customers" iterator="" value="$customer" break="">
														<Sequence>
															<GraphSearch Origin="$customer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																<LinkTagFilter tag="&apos;guestBeer&apos;" prune="true" negprune="unknown" Parent="" Child="$beer" Data="" />
															</GraphSearch>
															<GraphSearch Origin="$customer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																<LinkTagFilter tag="&apos;guestSeat&apos;" prune="true" negprune="unknown" Parent="" Child="$seat" Data="" />
															</GraphSearch>
															<Expression expressions="$customerParams.customer = $customer &#10;$customerParams.beer = $beer &#10;$customerParams.seat = $seat" />
															<IfCondition failOnCondition="false" condition="$beer ~= $__null">
																<VarOperation varName="$customersParamsArray" targetVarName="" operation="PushBack" argument="($customerParams)" />
															</IfCondition>
														</Sequence>
													</ForEach>
													<ExecuteLua code="data.smartObjectName = XGenAIModule.GetEntityByWUID(data.smartObject):GetName()" />
													<Expression expressions="$lockName = $smartObjectName+&apos;guestCall&apos; &#10;$wantToCheers = false" />
													<HandContentElement hand="Right" item="$stein" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="tavern_stein" useDecision="true" enabled="true" saveVersion="2">
														<Search canSkip="1">
															<ErrorNode Message="&apos;trying to use search in bartender_bringBeer HCE&apos;" />
														</Search>
														<Exec canSkip="1">
															<Sequence>
																<ForEach startIndex="0" step="1" array="$customersParamsArray" iterator="" value="$customerParams" break="">
																	<Sequence>
																		<GraphSearch Origin="$customerParams.seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																			<LinkTagFilter tag="&apos;tavernBeerCount&apos;" prune="true" negprune="unknown" Parent="" Child="$beer" Data="" />
																		</GraphSearch>
																		<IfCondition failOnCondition="false" condition="$beer ~= $__null">
																			<RemoveLink From="$customerParams.seat" To="$beer" Tag="&apos;tavernBeerCount&apos;" LinkOpHandleMode="Success" />
																		</IfCondition>
																		<RemoveLink From="$customerParams.seat" To="$smartObject" Tag="&apos;orderFood&apos;" LinkOpHandleMode="Success" />
																		<RemoveLink From="$customerParams.seat" To="$smartObject" Tag="&apos;tavernParams&apos;" LinkOpHandleMode="Success" />
																	</Sequence>
																</ForEach>
																<SetExternalLock LockManagerType="Global" Locked="false" LockName="&apos;$lockName&apos;" />
																<IfCondition failOnCondition="false" condition="#customersParamsArray &gt; 1">
																	<RandomGate opensWithChance="0.500000" saveVersion="2">
																		<Then canSkip="1">
																			<Expression expressions="$wantToCheers = true" />
																		</Then>
																		<Else canSkip="1">
																			<Success />
																		</Else>
																	</RandomGate>
																</IfCondition>
																<ForEach startIndex="0" step="1" array="$customersParamsArray" iterator="" value="$customerParams" break="">
																	<Sequence>
																		<Expression expressions="$guest = $customerParams.customer" />
																		<ExecuteLua code="data.lockServeBeer = XGenAIModule.GetEntityByWUID(data.guest):GetName()" />
																		<Expression expressions="$lockName = $lockServeBeer+&apos;guestServe&apos;" />
																		<WaitAction />
																		<Parallel successMode="Any" failureMode="Any">
																			<Sequence>
																				<GraphSearch Origin="$customerParams.beer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																					<LinkTagFilter tag="&apos;spot&apos;" prune="true" negprune="unknown" Parent="" Child="$spot" Data="" />
																				</GraphSearch>
																				<GraphSearch Origin="$spot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																					<LinkTagFilter tag="&apos;alignObject&apos;" prune="true" negprune="unknown" Parent="" Child="$alignObject" Data="" />
																				</GraphSearch>
																				<GraphSearch Origin="$spot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																					<LinkTagFilter tag="&apos;beerSlotLeft&apos;" prune="true" negprune="unknown" Parent="" Child="$animationTagLeft" Data="" />
																				</GraphSearch>
																				<IfElseCondition failOnCondition="false" condition="$animationTagLeft == $customerParams.beer" saveVersion="2">
																					<Then canSkip="1">
																						<Expression expressions="$animationTag = &apos;fillDistClose,fillSideLeft&apos;" />
																					</Then>
																					<Else canSkip="1">
																						<Expression expressions="$animationTag = &apos;fillDistClose,fillSideRight&apos;" />
																					</Else>
																				</IfElseCondition>
																				<SetExternalLock LockManagerType="Global" Locked="false" LockName="&apos;$lockName&apos;" />
																				<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="2.000000" changeNPCState="false" fastForwardIncludesMove="true" destinationSpecification="$spot" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
																				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
																					<Child canSkip="1">
																						<JoinedAnimationAction requiresMovement="true" lockContext="$smartObject" lockName="$lockServeBeer" lockCount="2" timeout="&apos;10s&apos;" ignoreOthersLeaving="false" fragment="&apos;Bartender_ServeBeer&apos;" tags="$animationTag" eventReferenceObject="$__object.id" alignObject="$alignObject" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
																					</Child>
																					<OnSuccess canSkip="1">
																						<IfCondition failOnCondition="false" condition="!$wantToCheers">
																							<Sequence>
																								<GenerateRandomInteger lowerBoundary="3" upperBoundary="7" result="$beerCount" />
																								<AddLink From="$customerParams.seat" To="$customerParams.beer" Tag="&apos;tavernBeerCount&apos;" Data="$beerCount" LinkOpHandleMode="OverWrite" />
																								<AddLink From="$customerParams.seat" To="$smartObject" Tag="&apos;tavernParams&apos;" Data="&apos;beer&apos;" LinkOpHandleMode="OverWrite" />
																							</Sequence>
																						</IfCondition>
																					</OnSuccess>
																				</FuseBox>
																			</Sequence>
																			<LinkGate from="$smartObject" to="$customersParamsArray.customer" tag="&apos;tavernGuest&apos;" amount="AtLeastOne" presence="NotThere" RunLogic="KeepRunning">
																				<Success />
																			</LinkGate>
																		</Parallel>
																		<GraphSearch Origin="$smartObject" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																			<LinkTagFilter tag="&apos;tavernGuest&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																			<Nodalyzer Quantifiers="ForAll" Parent="" Child="$customers" saveVersion="2">
																				<Child0 canSkip="1">
																					<RangeSorter point="$spot" SortOrder="Ascending" Source="Child" />
																				</Child0>
																			</Nodalyzer>
																		</GraphSearch>
																		<IfCondition failOnCondition="false" condition="#customersParamsArray ~= #customers">
																			<ForEach startIndex="0" step="1" array="$customers" iterator="" value="$customer" break="">
																				<Sequence>
																					<ForEach startIndex="0" step="1" array="$customersParamsArray" iterator="" value="$customerParams" break="$customersCheck">
																						<IfCondition failOnCondition="false" condition="$customerParams.customer == $customer">
																							<Expression expressions="$customersCheck = true" />
																						</IfCondition>
																					</ForEach>
																					<IfCondition failOnCondition="false" condition="!$customersCheck">
																						<Sequence>
																							<GraphSearch Origin="$customer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																								<LinkTagFilter tag="&apos;guestBeer&apos;" prune="true" negprune="unknown" Parent="" Child="$beer" Data="" />
																							</GraphSearch>
																							<GraphSearch Origin="$customer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																								<LinkTagFilter tag="&apos;guestSeat&apos;" prune="true" negprune="unknown" Parent="" Child="$seat" Data="" />
																							</GraphSearch>
																							<Expression expressions="$customerParams.customer = $customer &#10;$customerParams.beer = $beer &#10;$customerParams.seat = $seat" />
																							<IfCondition failOnCondition="false" condition="$beer ~= $__null">
																								<PushToArray array="$customersParamsArray" value="$customerParams" direction="Back" />
																							</IfCondition>
																						</Sequence>
																					</IfCondition>
																					<Expression expressions="$customersCheck = false" />
																				</Sequence>
																			</ForEach>
																		</IfCondition>
																	</Sequence>
																</ForEach>
																<IfCondition failOnCondition="false" condition="$wantToCheers">
																	<ForEach startIndex="0" step="1" array="$customersParamsArray" iterator="" value="$customerParams" break="">
																		<Sequence>
																			<AddLink From="$customerParams.seat" To="$customerParams.beer" Tag="&apos;tavernCheering&apos;" Data="#customersParamsArray" LinkOpHandleMode="OverWrite" />
																			<GenerateRandomInteger lowerBoundary="3" upperBoundary="7" result="$beerCount" />
																			<AddLink From="$customerParams.seat" To="$customerParams.beer" Tag="&apos;tavernBeerCount&apos;" Data="$beerCount" LinkOpHandleMode="OverWrite" />
																			<AddLink From="$customerParams.seat" To="$smartObject" Tag="&apos;tavernParams&apos;" Data="&apos;cheers&apos;" LinkOpHandleMode="OverWrite" />
																		</Sequence>
																	</ForEach>
																</IfCondition>
															</Sequence>
														</Exec>
													</HandContentElement>
													<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
														<LinkTagFilter tag="&apos;tavernBarrel&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
														<Nodalyzer Quantifiers="ForAll" Parent="" Child="$tablesArray" saveVersion="2">
															<Child0 canSkip="1">
																<RangeSorter point="$__object.id" SortOrder="Ascending" Source="Child" />
															</Child0>
														</Nodalyzer>
													</GraphSearch>
													<IfCondition failOnCondition="false" condition="#tables ~= #tablesArray">
														<ForEach startIndex="0" step="1" array="$tablesArray" iterator="" value="$table" break="">
															<Sequence>
																<ForEach startIndex="0" step="1" array="$tables" iterator="" value="$smartObject" break="$tableCheck">
																	<IfCondition failOnCondition="false" condition="$smartObject == $table">
																		<Expression expressions="$tableCheck = true" />
																	</IfCondition>
																</ForEach>
																<IfCondition failOnCondition="false" condition="!$tableCheck">
																	<PushToArray array="$tables" value="$table" direction="Back" />
																</IfCondition>
																<Expression expressions="$tableCheck = false" />
															</Sequence>
														</ForEach>
													</IfCondition>
												</Sequence>
											</ForEach>
											<WaitAction />
										</Sequence>
									</Parallel>
								</ChangeBehaviorStateElement>
							</EntityContextElement>
						</EntityContextElement>
						<WaitAction />
					</Sequence>
				</MoveParamsDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="alignObject" comment="" />
				<Variable name="animationTag" comment="" />
				<Variable name="animationTagLeft" comment="" />
				<Variable name="beer" comment="" />
				<Variable name="beerCount" comment="" />
				<Variable name="customer" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="customers" comment="" />
				<Variable name="customersCheck" comment="" />
				<Variable name="customersParamsArray" comment="" />
				<Variable name="guest" comment="" />
				<Variable name="guestSeat" comment="" />
				<Variable name="lockName" comment="" />
				<Variable name="lockServeBeer" comment="" />
				<Variable name="npc" comment="" />
				<Variable name="seat" comment="" />
				<Variable name="smartObject" comment="" />
				<Variable name="smartObjectName" comment="" />
				<Variable name="spot" comment="" />
				<Variable name="staffSpot" comment="" />
				<Variable name="stein" comment="" />
				<Variable name="steinSO" comment="" />
				<Variable name="steinSlot" comment="" />
				<Variable name="table" comment="" />
				<Variable name="tableCheck" comment="" />
				<Variable name="tables" comment="" />
				<Variable name="tablesArray" comment="" />
				<Variable name="wantToCheers" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child0>
									<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</RangeSorter>
								</Child0>
							</Nodalyzer>
						</GraphSearch>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</Sequence>
				</OnInit>
				<Behavior>
					<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_speech_schedulerMonolog>
												</SuppressFailure>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ReinitVariable>
														<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ReinitVariable>
														<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</LinkTagFilter>
														</GraphSearch>
														<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</LinkTagFilter>
															<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Child0>
																	<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</RangeSorter>
																</Child0>
															</Nodalyzer>
														</GraphSearch>
														<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</LinkTagFilter>
																</GraphSearch>
																<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</LinkTagFilter>
																</GraphSearch>
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
																<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</VarOperation>
																</IfCondition>
															</Sequence>
														</ForEach>
														<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ExecuteLua>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
														<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Search>
																<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</ErrorNode>
															</Search>
															<Exec>
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</LinkTagFilter>
																			</GraphSearch>
																			<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</RemoveLink>
																			</IfCondition>
																			<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</RemoveLink>
																			<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</RemoveLink>
																		</Sequence>
																	</ForEach>
																	<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</SetExternalLock>
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																			<OutputBreakpoints />
																			<Then>
																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Expression>
																			</Then>
																			<Else>
																				<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Success>
																			</Else>
																		</RandomGate>
																	</IfCondition>
																	<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Expression>
																			<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</ExecuteLua>
																			<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Expression>
																			<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</WaitAction>
																			<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</LinkTagFilter>
																					</GraphSearch>
																					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</LinkTagFilter>
																					</GraphSearch>
																					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</LinkTagFilter>
																					</GraphSearch>
																					<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																						<OutputBreakpoints />
																						<Then>
																							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</Expression>
																						</Then>
																						<Else>
																							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</Expression>
																						</Else>
																					</IfElseCondition>
																					<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</SetExternalLock>
																					<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Move>
																					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																						<OutputBreakpoints />
																						<Child>
																							<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</JoinedAnimationAction>
																						</Child>
																						<OnSuccess>
																							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<GenerateRandomInteger hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</GenerateRandomInteger>
																									<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</AddLink>
																									<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</AddLink>
																								</Sequence>
																							</IfCondition>
																						</OnSuccess>
																					</FuseBox>
																				</Sequence>
																				<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Success>
																				</LinkGate>
																			</Parallel>
																			<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</LinkTagFilter>
																				<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																					<Child0>
																						<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</RangeSorter>
																					</Child0>
																				</Nodalyzer>
																			</GraphSearch>
																			<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</Expression>
																							</IfCondition>
																						</ForEach>
																						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</LinkTagFilter>
																								</GraphSearch>
																								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</LinkTagFilter>
																								</GraphSearch>
																								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</Expression>
																								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</PushToArray>
																								</IfCondition>
																							</Sequence>
																						</IfCondition>
																						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Expression>
																					</Sequence>
																				</ForEach>
																			</IfCondition>
																		</Sequence>
																	</ForEach>
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</AddLink>
																				<GenerateRandomInteger hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</GenerateRandomInteger>
																				<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</AddLink>
																				<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</AddLink>
																			</Sequence>
																		</ForEach>
																	</IfCondition>
																</Sequence>
															</Exec>
														</HandContentElement>
														<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</LinkTagFilter>
															<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Child0>
																	<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</RangeSorter>
																</Child0>
															</Nodalyzer>
														</GraphSearch>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Expression>
																		</IfCondition>
																	</ForEach>
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</PushToArray>
																	</IfCondition>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Sequence>
															</ForEach>
														</IfCondition>
													</Sequence>
												</ForEach>
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
											</Sequence>
										</Parallel>
									</ChangeBehaviorStateElement>
								</EntityContextElement>
							</EntityContextElement>
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
						</Sequence>
					</MoveParamsDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_bartender_cleaningTable" is_function="0">
		<Variables>
			<Variable name="alignObject" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="animationApproach" type="enum:animationApproach" values="" isPersistent="0" form="single" />
			<Variable name="antifood" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="antifoods" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="bowl" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="bowlSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="chickenBowl" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="chickenBowlSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="seats" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="spot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="spots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="staffSpot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tavernParams" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$seats" saveVersion="2" />
						<LinkTagFilter tag="&apos;tavernSeat&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;antifood&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$antifoods" saveVersion="2" />
					</GraphSearch>
					<Selector>
						<Sequence>
							<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;staffSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$spot" Data="" />
							</GraphSearch>
							<PushToArray array="$spots" value="$spot" direction="Back" />
						</Sequence>
						<Success />
					</Selector>
					<Selector>
						<Sequence>
							<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;staffSpot2&apos;" prune="true" negprune="unknown" Parent="" Child="$spot" Data="" />
							</GraphSearch>
							<PushToArray array="$spots" value="$spot" direction="Back" />
						</Sequence>
						<Success />
					</Selector>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;chickenSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$chickenBowlSlot" Data="" />
					</GraphSearch>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
					<EntityContextElement context="ForceForbidAutoTorch" enabled="true">
						<EntityContextElement context="DisableSituationParticipation" enabled="true">
							<Sequence>
								<ForEach startIndex="0" step="1" array="$seats" iterator="" value="$seat" break="">
									<Sequence>
										<RemoveLink From="$seat" To="$__object.id" Tag="&apos;antifood&apos;" LinkOpHandleMode="Success" />
										<RemoveLink From="$seat" To="$__object.id" Tag="&apos;orderFood&apos;" LinkOpHandleMode="Success" />
										<Selector>
											<Sequence>
												<HandContentElement hand="Left" item="$bowl" allowAny="false" decisionLabel="tavern_bowls" useDecision="true" enabled="true" saveVersion="2">
													<Search canSkip="1">
														<Sequence>
															<Selector>
																<GraphSearch Origin="$seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																	<LinkTagFilter tag="&apos;soup&apos;" prune="true" negprune="unknown" Parent="" Child="$bowlSlot" Data="" />
																</GraphSearch>
																<GraphSearch Origin="$seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																	<LinkTagFilter tag="&apos;soupEaten&apos;" prune="true" negprune="unknown" Parent="" Child="$bowlSlot" Data="" />
																</GraphSearch>
															</Selector>
															<GetItemInSlot slot="$bowlSlot" useHomeItem="false" item="$bowl" />
														</Sequence>
													</Search>
													<Exec canSkip="1">
														<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
															<Child canSkip="1">
																<WaitAction />
															</Child>
															<OnSuccess canSkip="1">
																<AtomicDecorator>
																	<Sequence>
																		<RemoveLink From="$seat" To="$bowl" Tag="&apos;soupEaten&apos;" LinkOpHandleMode="Success" />
																		<RemoveLink From="$seat" To="$bowl" Tag="&apos;soup&apos;" LinkOpHandleMode="Success" />
																	</Sequence>
																</AtomicDecorator>
															</OnSuccess>
														</FuseBox>
													</Exec>
												</HandContentElement>
												<WaitAction />
												<ForgetDecision decisionLabel="tavern_bowls" />
											</Sequence>
											<Success />
										</Selector>
										<GraphSearch Origin="$seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;tavernParams&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$tavernParams" />
										</GraphSearch>
										<IfCondition failOnCondition="false" condition="$tavernParams == &apos;orderFood&apos; | $tavernParams == &apos;cheers&apos; | $tavernParams == &apos;beer&apos; | $tavernParams == &apos;soup&apos; | $tavernParams == &apos;soupEaten&apos;">
											<RemoveLink From="$seat" To="$__object.id" Tag="&apos;tavernParams&apos;" LinkOpHandleMode="Success" />
										</IfCondition>
										<ReinitVariable variable="$tavernParams" />
									</Sequence>
								</ForEach>
								<IfCondition failOnCondition="false" condition="$chickenBowlSlot ~= $__null">
									<Selector>
										<Sequence>
											<GraphSearch Origin="$chickenBowlSlot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;SlotLink&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
												<Nodalyzer Quantifiers="Exists" Parent="" Child="$chickenBowl" saveVersion="2" />
											</GraphSearch>
											<HandContentElement hand="Right" item="$chickenBowl" allowAny="false" decisionLabel="tavern_chicken" useDecision="true" enabled="true" saveVersion="2">
												<Search canSkip="1">
													<Success />
												</Search>
												<Exec canSkip="1">
													<Sequence>
														<WaitAction />
														<RemoveLink From="$__object.id" To="$chickenBowlSlot" Tag="&apos;tavernChicken&apos;" LinkOpHandleMode="Success" />
														<RemoveLink From="$__object.id" To="$chickenBowlSlot" Tag="&apos;chickenEaten&apos;" LinkOpHandleMode="Success" />
													</Sequence>
												</Exec>
											</HandContentElement>
											<WaitAction />
											<RemoveLink From="$chickenBowl" To="$chickenBowl" Tag="&apos;bowlUsed&apos;" LinkOpHandleMode="Success" />
											<ForEach startIndex="0" step="1" array="$seats" iterator="" value="$seat" break="">
												<Sequence>
													<GraphSearch Origin="$seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
														<LinkTagFilter tag="&apos;tavernParams&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$tavernParams" />
													</GraphSearch>
													<IfCondition failOnCondition="false" condition="$tavernParams == &apos;chickenEaten&apos; | $tavernParams == &apos;chicken&apos;">
														<RemoveLink From="$seat" To="$__object.id" Tag="&apos;tavernParams&apos;" LinkOpHandleMode="Success" />
													</IfCondition>
												</Sequence>
											</ForEach>
										</Sequence>
										<Success />
									</Selector>
								</IfCondition>
								<ForEach startIndex="0" step="1" array="$spots" iterator="" value="$spot" break="">
									<Sequence>
										<GraphSearch Origin="$spot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;alignObject&apos;" prune="true" negprune="unknown" Parent="" Child="$alignObject" Data="" />
										</GraphSearch>
										<Parallel successMode="Any" failureMode="Any">
											<AnimationAction fragment="&apos;Bartender_CleaningTable&apos;" tags="" eventReferenceObject="" alignObject="$alignObject" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
											<Sequence>
												<Expression expressions="$animationApproach = $enum:animationApproach.dontPlayDialogAnimations" />
												<DistanceGate Origin="$this.id" ReferencePt="$spot" Low="0.500000" High="0.500000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
													<SuppressFailure>
														<Function_speech_schedulerMonolog alias="" animationApproach="$animationApproach" context="" lookAtId="" metarole="&apos;HOSPODSKA_UTIRA_STUL&apos;" skipInLOD="true" subtitlesDown="false" nodeLabel="75674413" />
													</SuppressFailure>
												</DistanceGate>
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</Parallel>
									</Sequence>
								</ForEach>
							</Sequence>
						</EntityContextElement>
					</EntityContextElement>
				</MoveParamsDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="alignObject" comment="" />
				<Variable name="animationApproach" comment="" />
				<Variable name="antifood" comment="" />
				<Variable name="antifoods" comment="" />
				<Variable name="bowl" comment="" />
				<Variable name="bowlSlot" comment="" />
				<Variable name="chickenBowl" comment="" />
				<Variable name="chickenBowlSlot" comment="" />
				<Variable name="seat" comment="" />
				<Variable name="seats" comment="" />
				<Variable name="spot" comment="" />
				<Variable name="spots" comment="" />
				<Variable name="staffSpot" comment="" />
				<Variable name="tavernParams" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</PushToArray>
							</Sequence>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Selector>
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</PushToArray>
							</Sequence>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Selector>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
					</Sequence>
				</OnInit>
				<Behavior>
					<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</RemoveLink>
											<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</RemoveLink>
											<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Search>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</LinkTagFilter>
																	</GraphSearch>
																	<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</LinkTagFilter>
																	</GraphSearch>
																</Selector>
																<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</GetItemInSlot>
															</Sequence>
														</Search>
														<Exec>
															<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Child>
																	<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</WaitAction>
																</Child>
																<OnSuccess>
																	<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</RemoveLink>
																			<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</RemoveLink>
																		</Sequence>
																	</AtomicDecorator>
																</OnSuccess>
															</FuseBox>
														</Exec>
													</HandContentElement>
													<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WaitAction>
													<ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ForgetDecision>
												</Sequence>
												<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Success>
											</Selector>
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
											</GraphSearch>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</RemoveLink>
											</IfCondition>
											<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</ReinitVariable>
										</Sequence>
									</ForEach>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
													<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
													</Nodalyzer>
												</GraphSearch>
												<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Search>
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</Search>
													<Exec>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</WaitAction>
															<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</RemoveLink>
															<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</RemoveLink>
														</Sequence>
													</Exec>
												</HandContentElement>
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
												<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</RemoveLink>
												<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</LinkTagFilter>
														</GraphSearch>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</RemoveLink>
														</IfCondition>
													</Sequence>
												</ForEach>
											</Sequence>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Selector>
									</IfCondition>
									<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
											</GraphSearch>
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</AnimationAction>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_speech_schedulerMonolog>
														</SuppressFailure>
													</DistanceGate>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</Parallel>
										</Sequence>
									</ForEach>
								</Sequence>
							</EntityContextElement>
						</EntityContextElement>
					</MoveParamsDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_customer" is_function="0">
		<Variables>
			<Variable name="antiFood" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="apointmentSpot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="beerCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="beerSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="beerSlots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="beerSlotsData" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="behavior" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="bench" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" />
			<Variable name="fireplace" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeerSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeerSlots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="hiddenBeerSlotsData" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="hiddenBeerTag" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="iterator" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="seats" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="seatsdata" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="someoneWantToTalk" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="soupSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="soupSlots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="soupSlotsData" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="talkSyncName" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="tankard" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="target" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<Selector>
						<Sequence>
							<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;guestSeat&apos;" prune="true" negprune="unknown" Parent="" Child="$customerParams.seat" Data="$customerParams.Position" />
							</GraphSearch>
							<IfCondition failOnCondition="true" condition="$customerParams.seat == $__resource.id">
								<Sequence>
									<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;guestHidden&apos;" prune="true" negprune="unknown" Parent="" Child="$hiddenBeer" Data="" />
									</GraphSearch>
									<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;guestBeer&apos;" prune="true" negprune="unknown" Parent="" Child="$customerParams.beer" Data="" />
									</GraphSearch>
									<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;guestSoup&apos;" prune="true" negprune="unknown" Parent="" Child="$customerParams.soup" Data="" />
									</GraphSearch>
								</Sequence>
							</IfCondition>
						</Sequence>
						<Sequence>
							<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory,slot&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;tavernSeat&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								<Datalyzer Tag="&apos;tavernSeat&apos;" Quantifiers="ForAll" Parent="" Child="$seats" Data="$seatsdata" saveVersion="2" />
							</GraphSearch>
							<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;tavernBeer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								<Datalyzer Tag="&apos;tavernBeer&apos;" Quantifiers="ForAll" Parent="" Child="$beerSlots" Data="$beerSlotsData" saveVersion="2" />
							</GraphSearch>
							<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;hiddenTavernBeer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								<Datalyzer Tag="&apos;hiddenTavernBeer&apos;" Quantifiers="ForAll" Parent="" Child="$hiddenBeerSlots" Data="$hiddenBeerSlotsData" saveVersion="2" />
							</GraphSearch>
							<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;tavernSoup&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								<Datalyzer Tag="&apos;tavernSoup&apos;" Quantifiers="ForAll" Parent="" Child="$soupSlots" Data="$soupSlotsData" saveVersion="2" />
							</GraphSearch>
							<ForEach startIndex="0" step="1" array="$seats" iterator="$iterator" value="$seat" break="">
								<IfCondition failOnCondition="false" condition="$seat == $__resource.id">
									<Expression expressions="$customerParams.Position = $seatsdata[$iterator] &#10;$customerParams.seat = $seat" />
								</IfCondition>
							</ForEach>
							<ForEach startIndex="0" step="1" array="$beerSlots" iterator="$iterator" value="$beerSlot" break="">
								<IfCondition failOnCondition="false" condition="$beerSlotsData[$iterator] == $customerParams.Position">
									<Expression expressions="$customerParams.beer = $beerSlot" />
								</IfCondition>
							</ForEach>
							<ForEach startIndex="0" step="1" array="$hiddenBeerSlots" iterator="$iterator" value="$hiddenBeerSlot" break="">
								<IfCondition failOnCondition="false" condition="$hiddenBeerSlotsData[$iterator] == $customerParams.Position">
									<Expression expressions="$hiddenBeer = $hiddenBeerSlot &#10;$hiddenBeerTag = &apos;hiddenTavernBeer&apos;+$customerParams.Position" />
								</IfCondition>
							</ForEach>
							<ForEach startIndex="0" step="1" array="$soupSlots" iterator="$iterator" value="$soupSlot" break="">
								<IfCondition failOnCondition="false" condition="$soupSlotsData[$iterator] == $customerParams.Position">
									<Expression expressions="$customerParams.soup = $soupSlot" />
								</IfCondition>
							</ForEach>
						</Sequence>
					</Selector>
					<Expression expressions="$talkSyncName = $__object.name+&apos;guestTalk&apos; &#10;$smartObject = $__object.id &#10;$target = $this.id &#10;$customerParams.customer = $this.id &#10;$bench = $__resource.id" />
					<GraphSearch Origin="$customerParams.seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernParams&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$behavior" />
					</GraphSearch>
					<Selector>
						<Sequence>
							<GraphSearch Origin="$customerParams.seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;soup&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Expression expressions="$behavior = &apos;soup&apos;" />
						</Sequence>
						<Success />
					</Selector>
					<GraphSearch Origin="$customerParams.seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;antifood&apos;" prune="true" negprune="unknown" Parent="" Child="$antiFood" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernTalk&apos;" prune="true" negprune="unknown" Parent="" Child="$someoneWantToTalk" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$customerParams.soup" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;bowlSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$soupSlot" Data="" />
					</GraphSearch>
					<Selector>
						<Sequence>
							<GraphSearch Origin="$customerParams.seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;soup&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Expression expressions="$behavior = &apos;soup&apos;" />
						</Sequence>
						<Sequence>
							<GraphSearch Origin="$soupSlot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;SlotLink&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Expression expressions="$behavior = &apos;soup&apos;" />
						</Sequence>
						<Success />
					</Selector>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
					<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_bartender_cleaningTable&apos;" state="Disabled" allowAnyState="false" enabled="true">
						<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_innkeeper_closing&apos;" state="Enabled" allowAnyState="false" enabled="true">
							<EntityContextElement context="DisableSituationParticipation" enabled="true">
								<EntityContextElement context="tavern_customer" enabled="true">
									<EntityContextElement context="ForceForbidAutoTorch" enabled="true">
										<AddLinkElement from="$this.id" to="$customerParams.seat" tag="&apos;guestSeat&apos;" data="$customerParams.Position" enabled="true">
											<AddLinkElement from="$this.id" to="$hiddenBeer" tag="&apos;guestHidden&apos;" data="" enabled="true">
												<AddLinkElement from="$this.id" to="$customerParams.beer" tag="&apos;guestBeer&apos;" data="" enabled="true">
													<AddLinkElement from="$this.id" to="$customerParams.soup" tag="&apos;guestSoup&apos;" data="" enabled="true">
														<AddLinkElement from="$__object.id" to="$this.id" tag="&apos;tavernGuest&apos;" data="" enabled="true">
															<StanceElement smartObject="$bench" stance="sitting" allowAny="false" enabled="true">
																<Sequence>
																	<EntityContextCheck context="tavern_customer" target="" saveVersion="2">
																		<Else canSkip="1">
																			<IsFastForwarded failOnCondition="false" saveVersion="2">
																				<Else canSkip="1">
																					<WaitAction />
																				</Else>
																			</IsFastForwarded>
																		</Else>
																	</EntityContextCheck>
																	<HandContentElement hand="Right" item="$tankard" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="tavern_stein" useDecision="false" enabled="true" saveVersion="2">
																		<Search canSkip="1">
																			<GetItemInSlot slot="$hiddenBeer" useHomeItem="true" item="$tankard" />
																		</Search>
																		<Exec canSkip="1">
																			<ItemSetAsideElement item="$tankard" slot="$customerParams.beer" enabled="true">
																				<Switch>
																					<IfCondition failOnCondition="false" condition="$someoneWantToTalk ~= $__null">
																						<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;3s&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$talkSyncName&apos;" RunLogic="Halt">
																							<Sequence>
																								<WaitAction />
																								<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
																							</Sequence>
																						</Synchronize>
																					</IfCondition>
																					<IfCondition failOnCondition="false" condition="$behavior == &apos;soup&apos;">
																						<Function_customerEatMash customerParams="$customerParams" smartObject="$smartObject" nodeLabel="15798143" />
																					</IfCondition>
																					<IfCondition failOnCondition="false" condition="$behavior == &apos;soupEaten&apos;">
																						<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_bartender_takeAwayBowl&apos;" state="Enabled" allowAnyState="false" enabled="true">
																							<Sequence>
																								<WaitAction />
																								<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
																							</Sequence>
																						</ChangeBehaviorStateElement>
																					</IfCondition>
																					<IfCondition failOnCondition="false" condition="$behavior == &apos;chicken&apos;">
																						<Function_customerEatChicken customerParams="$customerParams" smartObject="$smartObject" nodeLabel="51426016" />
																					</IfCondition>
																					<IfCondition failOnCondition="false" condition="$behavior == &apos;chickenEaten&apos;">
																						<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_bartender_takeAwayTray&apos;" state="Enabled" allowAnyState="false" enabled="true">
																							<Sequence>
																								<WaitAction />
																								<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
																							</Sequence>
																						</ChangeBehaviorStateElement>
																					</IfCondition>
																					<IfCondition failOnCondition="false" condition="$behavior == &apos;orderFood&apos;">
																						<Function_customerOrderFood customerParams="$customerParams" smartObject="$smartObject" nodeLabel="73250010" />
																					</IfCondition>
																					<IfCondition failOnCondition="false" condition="$behavior == &apos;cheers&apos;">
																						<Sequence>
																							<WaitAction />
																							<Function_customerCheers customerParams="$customerParams" smartObject="$smartObject" nodeLabel="89131678" />
																						</Sequence>
																					</IfCondition>
																					<IfCondition failOnCondition="false" condition="$behavior == &apos;beer&apos;">
																						<Sequence>
																							<Function_customerDrink customerParams="$customerParams" smartObject="$smartObject" talkSyncName="$talkSyncName" nodeLabel="67309356" />
																							<Selector>
																								<Sequence>
																									<GraphSearch Origin="$smartObject" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																										<LinkTagFilter tag="&apos;appointmentSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$apointmentSpot" Data="" />
																									</GraphSearch>
																									<GraphSearch Origin="$apointmentSpot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																										<LinkTagFilter tag="&apos;fireplace&apos;" prune="true" negprune="unknown" Parent="" Child="$fireplace" Data="" />
																									</GraphSearch>
																									<Selector>
																										<GraphSearch Origin="$fireplace" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																											<LinkTagFilter tag="&apos;tavern_poisonedKettle&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																										</GraphSearch>
																										<IfCondition failOnCondition="false" condition="$beerCount &lt; 1 &amp; $antiFood == $__null">
																											<RandomGate opensWithChance="0.300000" saveVersion="2">
																												<Then canSkip="1">
																													<Sequence>
																														<AddLink From="$customerParams.seat" To="$smartObject" Tag="&apos;orderFood&apos;" Data="" LinkOpHandleMode="OverWrite" />
																														<AddLink From="$customerParams.seat" To="$__object.id" Tag="&apos;tavernParams&apos;" Data="&apos;orderFood&apos;" LinkOpHandleMode="OverWrite" />
																													</Sequence>
																												</Then>
																												<Else canSkip="1">
																													<Success />
																												</Else>
																											</RandomGate>
																										</IfCondition>
																									</Selector>
																								</Sequence>
																								<Success />
																							</Selector>
																						</Sequence>
																					</IfCondition>
																					<DefaultBranch>
																						<Function_customerWaitingForBeer customerParams="$customerParams" smartObject="$smartObject" nodeLabel="83689248" />
																					</DefaultBranch>
																				</Switch>
																			</ItemSetAsideElement>
																		</Exec>
																	</HandContentElement>
																</Sequence>
															</StanceElement>
														</AddLinkElement>
													</AddLinkElement>
												</AddLinkElement>
											</AddLinkElement>
										</AddLinkElement>
									</EntityContextElement>
								</EntityContextElement>
							</EntityContextElement>
						</ChangeBehaviorStateElement>
					</ChangeBehaviorStateElement>
				</MoveParamsDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="antiFood" comment="" />
				<Variable name="apointmentSpot" comment="" />
				<Variable name="beerCount" comment="" />
				<Variable name="beerSlot" comment="" />
				<Variable name="beerSlots" comment="" />
				<Variable name="beerSlotsData" comment="" />
				<Variable name="behavior" comment="" />
				<Variable name="bench" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="fireplace" comment="" />
				<Variable name="hiddenBeer" comment="" />
				<Variable name="hiddenBeerSlot" comment="" />
				<Variable name="hiddenBeerSlots" comment="" />
				<Variable name="hiddenBeerSlotsData" comment="" />
				<Variable name="hiddenBeerTag" comment="" />
				<Variable name="iterator" comment="" />
				<Variable name="seat" comment="" />
				<Variable name="seats" comment="" />
				<Variable name="seatsdata" comment="" />
				<Variable name="smartObject" comment="" />
				<Variable name="someoneWantToTalk" comment="" />
				<Variable name="soupSlot" comment="" />
				<Variable name="soupSlots" comment="" />
				<Variable name="soupSlotsData" comment="" />
				<Variable name="talkSyncName" comment="" />
				<Variable name="tankard" comment="" />
				<Variable name="target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
									</Sequence>
								</IfCondition>
							</Sequence>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
									<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
									</Datalyzer>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
									<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
									</Datalyzer>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
									<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
									</Datalyzer>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
									<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
									</Datalyzer>
								</GraphSearch>
								<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
								</ForEach>
								<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
								</ForEach>
								<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
								</ForEach>
								<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
								</ForEach>
							</Sequence>
						</Selector>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Selector>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Selector>
					</Sequence>
				</OnInit>
				<Behavior>
					<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																			<OutputBreakpoints />
																			<Else>
																				<IsFastForwarded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																					<Else>
																						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</WaitAction>
																					</Else>
																				</IsFastForwarded>
																			</Else>
																		</EntityContextCheck>
																		<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																			<OutputBreakpoints />
																			<Search>
																				<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</GetItemInSlot>
																			</Search>
																			<Exec>
																				<ItemSetAsideElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</WaitAction>
																									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</Wait>
																								</Sequence>
																							</Synchronize>
																						</IfCondition>
																						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<Function_customerEatMash hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</Function_customerEatMash>
																						</IfCondition>
																						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</WaitAction>
																									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</Wait>
																								</Sequence>
																							</ChangeBehaviorStateElement>
																						</IfCondition>
																						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<Function_customerEatChicken hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</Function_customerEatChicken>
																						</IfCondition>
																						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</WaitAction>
																									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</Wait>
																								</Sequence>
																							</ChangeBehaviorStateElement>
																						</IfCondition>
																						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<Function_customerOrderFood hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</Function_customerOrderFood>
																						</IfCondition>
																						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</WaitAction>
																								<Function_customerCheers hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</Function_customerCheers>
																							</Sequence>
																						</IfCondition>
																						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<Function_customerDrink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</Function_customerDrink>
																								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																											</LinkTagFilter>
																										</GraphSearch>
																										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																											</LinkTagFilter>
																										</GraphSearch>
																										<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																												</LinkTagFilter>
																											</GraphSearch>
																											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																												<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																													<OutputBreakpoints />
																													<Then>
																														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																															<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																															</AddLink>
																															<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																															</AddLink>
																														</Sequence>
																													</Then>
																													<Else>
																														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																														</Success>
																													</Else>
																												</RandomGate>
																											</IfCondition>
																										</Selector>
																									</Sequence>
																									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</Success>
																								</Selector>
																							</Sequence>
																						</IfCondition>
																						<DefaultBranch>
																							<Function_customerWaitingForBeer hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</Function_customerWaitingForBeer>
																						</DefaultBranch>
																					</Switch>
																				</ItemSetAsideElement>
																			</Exec>
																		</HandContentElement>
																	</Sequence>
																</StanceElement>
															</AddLinkElement>
														</AddLinkElement>
													</AddLinkElement>
												</AddLinkElement>
											</AddLinkElement>
										</EntityContextElement>
									</EntityContextElement>
								</EntityContextElement>
							</ChangeBehaviorStateElement>
						</ChangeBehaviorStateElement>
					</MoveParamsDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_bartender_serve" is_function="0">
		<Variables>
			<Variable name="bench" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="benches" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="guest" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="guests" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="3" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory,slot&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<CategoryFilter categories="&apos;Seat&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
						<Nodalyzer Quantifiers="Exists" Parent="" Child="$benches" saveVersion="2" />
					</GraphSearch>
					<ForEach startIndex="0" step="1" array="$benches" iterator="" value="$bench" break="">
						<Sequence>
							<GraphSearch Origin="$bench" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;tavernGuest&apos;" prune="true" negprune="unknown" Parent="" Child="$guest" Data="" />
							</GraphSearch>
							<IfCondition failOnCondition="false" condition="$guest ~= $__null">
								<VarOperation varName="$guests" targetVarName="$bench" operation="PushBack" argument="" />
							</IfCondition>
						</Sequence>
					</ForEach>
					<RandomGate opensWithChance="0.500000" saveVersion="2">
						<Then canSkip="1">
							<ForEach startIndex="0" step="1" array="$guests" iterator="" value="$guest" break="">
								<Sequence>
									<Move stopWithinDistance="1.000000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" destinationSpecification="$guest" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
									<AnimationAction fragment="&apos;Bartender_ServeBeer&apos;" tags="" eventReferenceObject="" alignObject="" alignHelper="-2" context="" keepContext="false" />
									<AddLink From="" To="" Tag="" Data="" LinkOpHandleMode="Error" />
								</Sequence>
							</ForEach>
						</Then>
						<Else canSkip="1">
							<RandomGate opensWithChance="0.500000" saveVersion="2">
								<Then canSkip="1">
									<AddLink From="" To="" Tag="" Data="" LinkOpHandleMode="Error" />
								</Then>
								<Else canSkip="1">
									<AddLink From="" To="" Tag="" Data="" LinkOpHandleMode="Error" />
								</Else>
							</RandomGate>
						</Else>
					</RandomGate>
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="bench" comment="" />
				<Variable name="benches" comment="" />
				<Variable name="guest" comment="" />
				<Variable name="guests" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<CategoryFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</CategoryFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</VarOperation>
								</IfCondition>
							</Sequence>
						</ForEach>
						<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
										<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<OutputBreakpoints />
										</AnimationAction>
										<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AddLink>
									</Sequence>
								</ForEach>
							</Then>
							<Else>
								<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AddLink>
									</Then>
									<Else>
										<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AddLink>
									</Else>
								</RandomGate>
							</Else>
						</RandomGate>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<GraphSearch editorPosX="1230" editorPosY="-176" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</GraphSearch>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_bartender_takeAwayBowl" is_function="0">
		<Variables>
			<Variable name="bowl" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="customer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" />
			<Variable name="customers" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="customersParamsArray" type="customerParams" values="" isPersistent="0" form="array" />
			<Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="searchOrigin" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="soup" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="soupEaten" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernGuest&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$customers" saveVersion="2">
							<Child0 canSkip="1">
								<RangeSorter point="$__object.id" SortOrder="Ascending" Source="Child" />
							</Child0>
						</Nodalyzer>
					</GraphSearch>
					<ForEach startIndex="0" step="1" array="$customers" iterator="" value="$customer" break="">
						<Sequence>
							<GraphSearch Origin="$customer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;guestSoup&apos;" prune="true" negprune="unknown" Parent="" Child="$soup" Data="" />
							</GraphSearch>
							<GraphSearch Origin="$customer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;guestSeat&apos;" prune="true" negprune="unknown" Parent="" Child="$seat" Data="" />
							</GraphSearch>
							<GraphSearch Origin="$customer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;soupEaten&apos;" prune="true" negprune="unknown" Parent="" Child="$soupEaten" Data="" />
							</GraphSearch>
							<Expression expressions="$customerParams.customer = $customer &#10;$customerParams.soup = $soup &#10;$customerParams.seat = $seat" />
							<VarOperation varName="$customersParamsArray" targetVarName="" operation="PushBack" argument="($customerParams)" />
						</Sequence>
					</ForEach>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
					<EntityContextElement context="ForceForbidAutoTorch" enabled="true">
						<EntityContextElement context="DisableSituationParticipation" enabled="true">
							<EntityContext context="crime_reactToHungryPlayer" target="">
								<Sequence>
									<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_bartender_takeAwayBowl&apos;" state="Enabled" allowAnyState="false" enabled="true">
										<ForEach startIndex="0" step="1" array="$customersParamsArray" iterator="" value="$customerParams" break="">
											<Sequence>
												<WaitAction />
												<GraphSearch Origin="$customerParams.seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;soupEaten&apos;" prune="true" negprune="unknown" Parent="" Child="$soupEaten" Data="" />
												</GraphSearch>
												<Expression expressions="$npc = $this.id &#10;$searchOrigin = $customerParams.customer" />
												<IfElseCondition failOnCondition="false" condition="$soupEaten ~= $__null" saveVersion="2">
													<Then canSkip="1">
														<HandContentElement hand="Left" item="$bowl" allowAny="false" decisionLabel="tavern_bowls" useDecision="true" enabled="true" saveVersion="2">
															<Search canSkip="1">
																<Function_findItemOnSlot linkName="&apos;soupEaten&apos;" npc="$npc" searchOrigin="$customerParams.seat" item="$bowl" nodeLabel="64692269" />
															</Search>
															<Exec canSkip="1">
																<Sequence>
																	<WaitAction />
																	<RemoveLink From="$customerParams.seat" To="$customerParams.soup" Tag="&apos;soupEaten&apos;" LinkOpHandleMode="Error" />
																	<RemoveLink From="$customerParams.seat" To="$__object.id" Tag="&apos;tavernParams&apos;" LinkOpHandleMode="Success" />
																</Sequence>
															</Exec>
														</HandContentElement>
													</Then>
												</IfElseCondition>
												<WaitAction />
												<ForgetDecision decisionLabel="tavern_bowls" />
											</Sequence>
										</ForEach>
									</ChangeBehaviorStateElement>
									<WaitAction />
								</Sequence>
							</EntityContext>
						</EntityContextElement>
					</EntityContextElement>
				</MoveParamsDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="bowl" comment="" />
				<Variable name="customer" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="customers" comment="" />
				<Variable name="customersParamsArray" comment="" />
				<Variable name="npc" comment="" />
				<Variable name="searchOrigin" comment="" />
				<Variable name="seat" comment="" />
				<Variable name="soup" comment="" />
				<Variable name="soupEaten" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child0>
									<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</RangeSorter>
								</Child0>
							</Nodalyzer>
						</GraphSearch>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</VarOperation>
							</Sequence>
						</ForEach>
					</Sequence>
				</OnInit>
				<Behavior>
					<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WaitAction>
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
													</GraphSearch>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Search>
																	<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_findItemOnSlot>
																</Search>
																<Exec>
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</WaitAction>
																		<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</RemoveLink>
																		<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</RemoveLink>
																	</Sequence>
																</Exec>
															</HandContentElement>
														</Then>
													</IfElseCondition>
													<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WaitAction>
													<ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ForgetDecision>
												</Sequence>
											</ForEach>
										</ChangeBehaviorStateElement>
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</Sequence>
								</EntityContext>
							</EntityContextElement>
						</EntityContextElement>
					</MoveParamsDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_bartender_bringFood" is_function="0">
		<Variables>
			<Variable name="animationApproach" type="enum:animationApproach" values="" isPersistent="0" form="single" />
			<Variable name="bowl" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="bowlSpot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="canBeBowl" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="canBeChicken" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="canBringFood" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="customer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" />
			<Variable name="customers" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="customersCheck" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="customersParamsArray" type="customerParams" values="" isPersistent="0" form="array" />
			<Variable name="kettle" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="poisonedKettle" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="position" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="randomFloat" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="slot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="soup" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="spot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Expression expressions="$npc = $this.id &#10;$smartObject = $__object.id &#10;$animationApproach = $enum:animationApproach.dontPlayDialogAnimations" />
			</OnInit>
			<Behavior canSkip="1">
				<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
					<Sequence>
						<SetExternalLock LockManagerType="Local" Locked="false" LockName="&apos;tavernFood&apos;" />
						<EntityContextElement context="ForceForbidAutoTorch" enabled="true">
							<EntityContextElement context="DisableSituationParticipation" enabled="true">
								<EntityContext context="crime_reactToHungryPlayer" target="">
									<Sequence>
										<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;appointmentSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$bowlSpot" Data="" />
										</GraphSearch>
										<Selector>
											<Sequence>
												<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;chickenSourceSlot&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
												</GraphSearch>
												<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;chickenSlot&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
												</GraphSearch>
												<Expression expressions="$canBeChicken = true" />
											</Sequence>
											<Expression expressions="$canBeChicken = false" />
										</Selector>
										<Selector>
											<Sequence>
												<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;onlyMash&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
												</GraphSearch>
												<Expression expressions="$canBeChicken = false" />
											</Sequence>
											<Success />
										</Selector>
										<Selector>
											<Sequence>
												<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;bowlStorage&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
												</GraphSearch>
												<GraphSearch Origin="$bowlSpot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;fireplace&apos;" prune="true" negprune="unknown" Parent="" Child="$kettle" Data="" />
												</GraphSearch>
												<Selector>
													<Sequence>
														<GraphSearch Origin="$kettle" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<LinkTagFilter tag="&apos;tavern_poisonedKettle&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
														</GraphSearch>
														<Expression expressions="$poisonedKettle = true" />
													</Sequence>
													<Expression expressions="$canBeBowl = true" />
												</Selector>
											</Sequence>
											<Expression expressions="$canBeBowl = false" />
										</Selector>
										<Switch>
											<IfCondition failOnCondition="false" condition="$canBeChicken &amp; $poisonedKettle">
												<Expression expressions="$randomFloat = 1 &#10;$canBringFood = true" />
											</IfCondition>
											<IfCondition failOnCondition="false" condition="!$canBeChicken &amp; $poisonedKettle">
												<Expression expressions="$canBringFood = false" />
											</IfCondition>
											<IfCondition failOnCondition="false" condition="$canBeChicken &amp; !$poisonedKettle &amp; $canBeBowl">
												<Expression expressions="$randomFloat = 0.75 &#10;$canBringFood = true" />
											</IfCondition>
											<IfCondition failOnCondition="false" condition="$canBeChicken &amp; !$poisonedKettle &amp; !$canBeBowl">
												<Expression expressions="$randomFloat = 1 &#10;$canBringFood = true" />
											</IfCondition>
											<IfCondition failOnCondition="false" condition="!$canBeChicken &amp; !$poisonedKettle &amp; !$canBeBowl">
												<Expression expressions="$canBringFood = false" />
											</IfCondition>
											<IfCondition failOnCondition="false" condition="!$canBeChicken &amp; !$poisonedKettle &amp; $canBeBowl">
												<Expression expressions="$randomFloat = 0 &#10;$canBringFood = true" />
											</IfCondition>
											<DefaultBranch>
												<Expression expressions="$randomFloat = 0.75 &#10;$canBringFood = true" />
											</DefaultBranch>
										</Switch>
										<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_bartender_bringFood&apos;" state="Enabled" allowAnyState="false" enabled="true">
											<IfElseCondition failOnCondition="false" condition="$canBringFood" saveVersion="2">
												<Then canSkip="1">
													<RandomGate opensWithChance="$randomFloat" saveVersion="2">
														<Then canSkip="1">
															<HandContentElement hand="Right" item="$bowl" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="tavern_chicken" useDecision="true" enabled="true" saveVersion="2">
																<Search canSkip="1">
																	<Function_findItemOnSlot linkName="&apos;chickenSourceSlot&apos;" npc="$npc" searchOrigin="$smartObject" item="$bowl" nodeLabel="49666290" />
																</Search>
																<Exec canSkip="1">
																	<Sequence>
																		<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																			<LinkTagFilter tag="&apos;chickenSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$slot" Data="" />
																		</GraphSearch>
																		<Selector>
																			<Sequence>
																				<GraphSearch Origin="$bowl" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																					<LinkTagFilter tag="&apos;bowlUsed&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																				</GraphSearch>
																				<Selector>
																					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																						<LinkTagFilter tag="&apos;tavernChicken&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																					</GraphSearch>
																					<Sequence>
																						<GraphSearch Origin="$smartObject" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																							<Nodalyzer Quantifiers="ForAll" Parent="" Child="$customers" saveVersion="2" />
																							<LinkTagFilter tag="&apos;tavernGuest&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																						</GraphSearch>
																						<RemoveLink From="$smartObject" To="$slot" Tag="&apos;tavernChicken&apos;" LinkOpHandleMode="Success" />
																						<ForEach startIndex="0" step="1" array="$customers" iterator="" value="$customer" break="">
																							<Sequence>
																								<GraphSearch Origin="$customer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																									<LinkTagFilter tag="&apos;guestSeat&apos;" prune="true" negprune="unknown" Parent="" Child="$seat" Data="" />
																								</GraphSearch>
																								<AddLink From="$seat" To="$smartObject" Tag="&apos;tavernParams&apos;" Data="&apos;chickenEaten&apos;" LinkOpHandleMode="OverWrite" />
																							</Sequence>
																						</ForEach>
																					</Sequence>
																				</Selector>
																			</Sequence>
																			<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
																				<Child canSkip="1">
																					<Parallel successMode="Any" failureMode="Any">
																						<Sequence>
																							<DistanceGate Origin="$this.id" ReferencePt="$slot" Low="4.000000" High="4.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
																								<SuppressFailure>
																									<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;HOSPODSKA_NESE_OBJEDNAVKU&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="18717485" />
																								</SuppressFailure>
																							</DistanceGate>
																							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																						</Sequence>
																						<PlaceAction item="$bowl" slot="$slot" />
																					</Parallel>
																				</Child>
																				<OnSuccess canSkip="1">
																					<AtomicDecorator>
																						<Sequence>
																							<AddLink From="$__object.id" To="$slot" Tag="&apos;tavernChicken&apos;" Data="4" LinkOpHandleMode="OverWrite" />
																							<AddLink From="$bowl" To="$bowl" Tag="&apos;bowlUsed&apos;" Data="" LinkOpHandleMode="Error" />
																							<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																								<LinkTagFilter tag="&apos;tavernGuest&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																								<Nodalyzer Quantifiers="ForAll" Parent="" Child="$customers" saveVersion="2" />
																							</GraphSearch>
																							<ForEach startIndex="0" step="1" array="$customers" iterator="" value="$customer" break="">
																								<Sequence>
																									<GraphSearch Origin="$customer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																										<LinkTagFilter tag="&apos;guestSeat&apos;" prune="true" negprune="unknown" Parent="" Child="$seat" Data="" />
																									</GraphSearch>
																									<AddLink From="$seat" To="$__object.id" Tag="&apos;tavernParams&apos;" Data="&apos;chicken&apos;" LinkOpHandleMode="OverWrite" />
																									<AddLink From="$seat" To="$slot" Tag="&apos;antifood&apos;" Data="" LinkOpHandleMode="OverWrite" />
																									<RemoveLink From="$seat" To="$__object.id" Tag="&apos;orderFood&apos;" LinkOpHandleMode="Success" />
																								</Sequence>
																							</ForEach>
																							<ForgetDecision decisionLabel="tavern_chicken" />
																						</Sequence>
																					</AtomicDecorator>
																				</OnSuccess>
																			</FuseBox>
																		</Selector>
																	</Sequence>
																</Exec>
															</HandContentElement>
														</Then>
														<Else canSkip="1">
															<ChangeBehaviorStateElement smartEntity="$kettle" behavior="&apos;cooking&apos;" state="Disabled" allowAnyState="false" enabled="true">
																<ChangeBehaviorStateElement smartEntity="$kettle" behavior="&apos;takingHerbs&apos;" state="Disabled" allowAnyState="false" enabled="true">
																	<ChangeBehaviorStateElement smartEntity="$kettle" behavior="&apos;takingIngredients&apos;" state="Disabled" allowAnyState="false" enabled="true">
																		<Sequence>
																			<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																				<LinkTagFilter tag="&apos;staffSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$spot" Data="" />
																			</GraphSearch>
																			<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																				<LinkTagFilter tag="&apos;tavernGuest&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																				<Nodalyzer Quantifiers="ForAll" Parent="" Child="$customers" saveVersion="2">
																					<Child0 canSkip="1">
																						<RangeSorter point="$spot" SortOrder="Ascending" Source="Child" />
																					</Child0>
																				</Nodalyzer>
																			</GraphSearch>
																			<ForEach startIndex="0" step="1" array="$customers" iterator="" value="$customer" break="">
																				<Sequence>
																					<GraphSearch Origin="$customer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																						<LinkTagFilter tag="&apos;guestSoup&apos;" prune="true" negprune="unknown" Parent="" Child="$soup" Data="" />
																					</GraphSearch>
																					<GraphSearch Origin="$customer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																						<LinkTagFilter tag="&apos;guestSeat&apos;" prune="true" negprune="unknown" Parent="" Child="$seat" Data="" />
																					</GraphSearch>
																					<Expression expressions="$customerParams.customer = $customer &#10;$customerParams.soup = $soup &#10;$customerParams.seat = $seat" />
																					<IfCondition failOnCondition="false" condition="$soup ~= $__null">
																						<VarOperation varName="$customersParamsArray" targetVarName="" operation="PushBack" argument="($customerParams)" />
																					</IfCondition>
																				</Sequence>
																			</ForEach>
																			<IsLoadedGate saveVersion="2">
																				<Then canSkip="1">
																					<Success />
																				</Then>
																				<Else canSkip="1">
																					<WaitAction />
																				</Else>
																			</IsLoadedGate>
																			<ForEach startIndex="0" step="1" array="$customersParamsArray" iterator="" value="$customerParams" break="">
																				<Parallel successMode="Any" failureMode="Any">
																					<Selector>
																						<GraphSearch Origin="$customerParams.seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																							<LinkTagFilter tag="&apos;soup&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																						</GraphSearch>
																						<GraphSearch Origin="$customerParams.seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																							<LinkTagFilter tag="&apos;soupEaten&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																						</GraphSearch>
																						<GraphSearch Origin="$customerParams.seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																							<LinkTagFilter tag="&apos;antifood&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																						</GraphSearch>
																						<HandContentElement hand="Left" item="$bowl" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="tavern_bowls" useDecision="true" enabled="true" saveVersion="2">
																							<Search canSkip="1">
																								<Function_findItemOnSlot linkName="&apos;bowlStorage&apos;" npc="$npc" searchOrigin="$smartObject" item="$bowl" nodeLabel="76630163" />
																							</Search>
																							<Exec canSkip="1">
																								<Parallel successMode="Any" failureMode="Any">
																									<Sequence>
																										<DistanceGate Origin="$this.id" ReferencePt="$bowl" Low="5.000000" High="5.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
																											<SuppressFailure>
																												<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;HOSPODSKA_OBJEDNAVKA&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="95859621" />
																											</SuppressFailure>
																										</DistanceGate>
																										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																									</Sequence>
																									<Sequence>
																										<Parallel successMode="Any" failureMode="Any">
																											<LinkGate from="$bowlSpot" to="$bowlSpot" tag="&apos;bartenderBowls&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
																												<Sequence>
																													<GetRandomPos StartPos="$bowlSpot" PosExtentHor="2.000000" PosExtentVert="0.500000" MaxRange="1.000000" Precise="false" MaxIterantions="1" Target="$position" navAgentType="Automatic" pathFindingParams="" />
																													<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" fastForwardIncludesMove="true" destinationSpecification="$position" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
																													<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																												</Sequence>
																											</LinkGate>
																											<LinkGate from="$bowlSpot" to="$bowlSpot" tag="&apos;bartenderBowls&apos;" amount="AtLeastOne" presence="NotThere" RunLogic="KeepRunning">
																												<Success />
																											</LinkGate>
																										</Parallel>
																										<AddLinkElement from="$bowlSpot" to="$bowlSpot" tag="&apos;bartenderBowls&apos;" data="" enabled="true">
																											<WaitAction />
																										</AddLinkElement>
																										<Parallel successMode="Any" failureMode="Any">
																											<LinkGate from="$kettle" to="$kettle" tag="&apos;bartenderKettle&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
																												<Sequence>
																													<GetRandomPos StartPos="$kettle" PosExtentHor="2.000000" PosExtentVert="0.500000" MaxRange="1.000000" Precise="false" MaxIterantions="1" Target="$position" navAgentType="Automatic" pathFindingParams="" />
																													<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="false" fastForwardIncludesMove="true" destinationSpecification="$position" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
																													<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																												</Sequence>
																											</LinkGate>
																											<LinkGate from="$kettle" to="$kettle" tag="&apos;bartenderKettle&apos;" amount="AtLeastOne" presence="NotThere" RunLogic="KeepRunning">
																												<Success />
																											</LinkGate>
																										</Parallel>
																										<AddLinkElement from="$kettle" to="$kettle" tag="&apos;bartenderKettle&apos;" data="" enabled="true">
																											<Sequence>
																												<WaitAction />
																												<AnimationAction fragment="&apos;GetMash&apos;" tags="" eventReferenceObject="$kettle" alignObject="$kettle" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
																												<InstantSendMessageToNPC target="$kettle" type="&apos;kettle:signal:onBowlFilled&apos;" values="bowl($bowl)" />
																											</Sequence>
																										</AddLinkElement>
																										<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
																											<Child canSkip="1">
																												<Parallel successMode="Any" failureMode="Any">
																													<Sequence>
																														<DistanceGate Origin="$this.id" ReferencePt="$customerParams.soup" Low="4.000000" High="4.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
																															<SuppressFailure>
																																<Function_speech_schedulerMonolog alias="" animationApproach="$animationApproach" context="" lookAtId="" metarole="&apos;HOSPODSKA_NESE_OBJEDNAVKU&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="66572150" />
																															</SuppressFailure>
																														</DistanceGate>
																														<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																													</Sequence>
																													<PlaceAction item="$bowl" slot="$customerParams.soup" />
																												</Parallel>
																											</Child>
																											<OnSuccess canSkip="1">
																												<AtomicDecorator>
																													<Sequence>
																														<ForgetDecision decisionLabel="tavern_bowls" />
																														<AddLink From="$customerParams.seat" To="$customerParams.soup" Tag="&apos;soup&apos;" Data="" LinkOpHandleMode="Error" />
																														<AddLink From="$customerParams.seat" To="$__object.id" Tag="&apos;tavernParams&apos;" Data="&apos;soup&apos;" LinkOpHandleMode="OverWrite" />
																														<AddLink From="$customerParams.seat" To="$customerParams.soup" Tag="&apos;antifood&apos;" Data="" LinkOpHandleMode="OverWrite" />
																														<RemoveLink From="$customerParams.seat" To="$__object.id" Tag="&apos;orderFood&apos;" LinkOpHandleMode="Success" />
																													</Sequence>
																												</AtomicDecorator>
																											</OnSuccess>
																										</FuseBox>
																										<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																											<LinkTagFilter tag="&apos;tavernGuest&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																											<Nodalyzer Quantifiers="ForAll" Parent="" Child="$customers" saveVersion="2">
																												<Child0 canSkip="1">
																													<RangeSorter point="$spot" SortOrder="Ascending" Source="Child" />
																												</Child0>
																											</Nodalyzer>
																										</GraphSearch>
																										<IfCondition failOnCondition="false" condition="#customersParamsArray ~= #customers">
																											<ForEach startIndex="0" step="1" array="$customers" iterator="" value="$customer" break="">
																												<Sequence>
																													<ForEach startIndex="0" step="1" array="$customersParamsArray" iterator="" value="$customerParams" break="$customersCheck">
																														<IfCondition failOnCondition="false" condition="$customerParams.customer == $customer">
																															<Expression expressions="$customersCheck = true" />
																														</IfCondition>
																													</ForEach>
																													<IfCondition failOnCondition="false" condition="!$customersCheck">
																														<Sequence>
																															<GraphSearch Origin="$customer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																																<LinkTagFilter tag="&apos;guestSoup&apos;" prune="true" negprune="unknown" Parent="" Child="$soup" Data="" />
																															</GraphSearch>
																															<GraphSearch Origin="$customer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																																<LinkTagFilter tag="&apos;guestSeat&apos;" prune="true" negprune="unknown" Parent="" Child="$seat" Data="" />
																															</GraphSearch>
																															<Expression expressions="$customerParams.customer = $customer &#10;$customerParams.soup = $soup &#10;$customerParams.seat = $seat" />
																															<IfCondition failOnCondition="false" condition="$soup ~= $__null">
																																<VarOperation varName="$customersParamsArray" targetVarName="" operation="PushBack" argument="($customerParams)" />
																															</IfCondition>
																														</Sequence>
																													</IfCondition>
																													<Expression expressions="$customersCheck = false" />
																												</Sequence>
																											</ForEach>
																										</IfCondition>
																									</Sequence>
																								</Parallel>
																							</Exec>
																						</HandContentElement>
																					</Selector>
																					<LinkGate from="$__object.id" to="$customersParamsArray.customer" tag="&apos;tavernGuest&apos;" amount="AtLeastOne" presence="NotThere" RunLogic="KeepRunning">
																						<Success />
																					</LinkGate>
																				</Parallel>
																			</ForEach>
																		</Sequence>
																	</ChangeBehaviorStateElement>
																</ChangeBehaviorStateElement>
															</ChangeBehaviorStateElement>
														</Else>
													</RandomGate>
												</Then>
												<Else canSkip="1">
													<AtomicDecorator>
														<Sequence>
															<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																<LinkTagFilter tag="&apos;tavernGuest&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																<Nodalyzer Quantifiers="ForAll" Parent="" Child="$customers" saveVersion="2" />
															</GraphSearch>
															<ForEach startIndex="0" step="1" array="$customers" iterator="" value="$customer" break="">
																<Sequence>
																	<GraphSearch Origin="$customer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																		<LinkTagFilter tag="&apos;guestSeat&apos;" prune="true" negprune="unknown" Parent="" Child="$seat" Data="" />
																	</GraphSearch>
																	<RemoveLink From="$seat" To="$__object.id" Tag="&apos;tavernParams&apos;" LinkOpHandleMode="Success" />
																	<AddLink From="$seat" To="$slot" Tag="&apos;antifood&apos;" Data="" LinkOpHandleMode="OverWrite" />
																	<RemoveLink From="$seat" To="$__object.id" Tag="&apos;orderFood&apos;" LinkOpHandleMode="Success" />
																</Sequence>
															</ForEach>
														</Sequence>
													</AtomicDecorator>
												</Else>
											</IfElseCondition>
										</ChangeBehaviorStateElement>
										<WaitAction />
									</Sequence>
								</EntityContext>
							</EntityContextElement>
						</EntityContextElement>
					</Sequence>
				</MoveParamsDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="animationApproach" comment="" />
				<Variable name="bowl" comment="" />
				<Variable name="bowlSpot" comment="" />
				<Variable name="canBeBowl" comment="" />
				<Variable name="canBeChicken" comment="" />
				<Variable name="canBringFood" comment="" />
				<Variable name="customer" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="customers" comment="" />
				<Variable name="customersCheck" comment="" />
				<Variable name="customersParamsArray" comment="" />
				<Variable name="kettle" comment="" />
				<Variable name="npc" comment="" />
				<Variable name="poisonedKettle" comment="" />
				<Variable name="position" comment="" />
				<Variable name="randomFloat" comment="" />
				<Variable name="seat" comment="" />
				<Variable name="slot" comment="" />
				<Variable name="smartObject" comment="" />
				<Variable name="soup" comment="" />
				<Variable name="spot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-10" editorPosY="-80" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</OnInit>
				<Behavior>
					<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</SetExternalLock>
							<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
											</GraphSearch>
											<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
													</GraphSearch>
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
													</GraphSearch>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Sequence>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Selector>
											<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
													</GraphSearch>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Sequence>
												<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Success>
											</Selector>
											<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
													</GraphSearch>
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
													</GraphSearch>
													<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
															</GraphSearch>
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</Sequence>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Selector>
												</Sequence>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Selector>
											<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</IfCondition>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</IfCondition>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</IfCondition>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</IfCondition>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</IfCondition>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</IfCondition>
												<DefaultBranch>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</DefaultBranch>
											</Switch>
											<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Search>
																		<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_findItemOnSlot>
																	</Search>
																	<Exec>
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</LinkTagFilter>
																			</GraphSearch>
																			<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</LinkTagFilter>
																					</GraphSearch>
																					<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</LinkTagFilter>
																						</GraphSearch>
																						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																									<OutputBreakpoints />
																								</Nodalyzer>
																								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</LinkTagFilter>
																							</GraphSearch>
																							<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</RemoveLink>
																							<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</LinkTagFilter>
																									</GraphSearch>
																									<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</AddLink>
																								</Sequence>
																							</ForEach>
																						</Sequence>
																					</Selector>
																				</Sequence>
																				<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																					<Child>
																						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																										<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</Function_speech_schedulerMonolog>
																									</SuppressFailure>
																								</DistanceGate>
																								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</Wait>
																							</Sequence>
																							<PlaceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</PlaceAction>
																						</Parallel>
																					</Child>
																					<OnSuccess>
																						<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</AddLink>
																								<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</AddLink>
																								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</LinkTagFilter>
																									<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																										<OutputBreakpoints />
																									</Nodalyzer>
																								</GraphSearch>
																								<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																											</LinkTagFilter>
																										</GraphSearch>
																										<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</AddLink>
																										<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</AddLink>
																										<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</RemoveLink>
																									</Sequence>
																								</ForEach>
																								<ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</ForgetDecision>
																							</Sequence>
																						</AtomicDecorator>
																					</OnSuccess>
																				</FuseBox>
																			</Selector>
																		</Sequence>
																	</Exec>
																</HandContentElement>
															</Then>
															<Else>
																<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</LinkTagFilter>
																				</GraphSearch>
																				<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</LinkTagFilter>
																					<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																						<OutputBreakpoints />
																						<Child0>
																							<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</RangeSorter>
																						</Child0>
																					</Nodalyzer>
																				</GraphSearch>
																				<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</LinkTagFilter>
																						</GraphSearch>
																						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</LinkTagFilter>
																						</GraphSearch>
																						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Expression>
																						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</VarOperation>
																						</IfCondition>
																					</Sequence>
																				</ForEach>
																				<IsLoadedGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																					<Then>
																						<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Success>
																					</Then>
																					<Else>
																						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</WaitAction>
																					</Else>
																				</IsLoadedGate>
																				<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</LinkTagFilter>
																							</GraphSearch>
																							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</LinkTagFilter>
																							</GraphSearch>
																							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</LinkTagFilter>
																							</GraphSearch>
																							<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																								<OutputBreakpoints />
																								<Search>
																									<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</Function_findItemOnSlot>
																								</Search>
																								<Exec>
																									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																											<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																												<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																													<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																														<OutputBreakpoints />
																													</Function_speech_schedulerMonolog>
																												</SuppressFailure>
																											</DistanceGate>
																											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																											</Wait>
																										</Sequence>
																										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																												<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																														<OutputBreakpoints />
																														<GetRandomPos hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																														</GetRandomPos>
																														<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																														</Move>
																														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																														</Wait>
																													</Sequence>
																												</LinkGate>
																												<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																														<OutputBreakpoints />
																													</Success>
																												</LinkGate>
																											</Parallel>
																											<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																												</WaitAction>
																											</AddLinkElement>
																											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																												<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																														<OutputBreakpoints />
																														<GetRandomPos hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																														</GetRandomPos>
																														<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																														</Move>
																														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																														</Wait>
																													</Sequence>
																												</LinkGate>
																												<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																														<OutputBreakpoints />
																													</Success>
																												</LinkGate>
																											</Parallel>
																											<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																													<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																														<OutputBreakpoints />
																													</WaitAction>
																													<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																														<OutputBreakpoints />
																													</AnimationAction>
																													<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
																														<OutputBreakpoints />
																													</InstantSendMessageToNPC>
																												</Sequence>
																											</AddLinkElement>
																											<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																												<OutputBreakpoints />
																												<Child>
																													<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																														<OutputBreakpoints />
																														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																															<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																																<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																	<OutputBreakpoints />
																																	<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</Function_speech_schedulerMonolog>
																																</SuppressFailure>
																															</DistanceGate>
																															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																															</Wait>
																														</Sequence>
																														<PlaceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																														</PlaceAction>
																													</Parallel>
																												</Child>
																												<OnSuccess>
																													<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																														<OutputBreakpoints />
																														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																															<ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																															</ForgetDecision>
																															<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																															</AddLink>
																															<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																															</AddLink>
																															<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																															</AddLink>
																															<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																															</RemoveLink>
																														</Sequence>
																													</AtomicDecorator>
																												</OnSuccess>
																											</FuseBox>
																											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																												</LinkTagFilter>
																												<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																													<OutputBreakpoints />
																													<Child0>
																														<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																														</RangeSorter>
																													</Child0>
																												</Nodalyzer>
																											</GraphSearch>
																											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																												<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																														<OutputBreakpoints />
																														<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																	<OutputBreakpoints />
																																</Expression>
																															</IfCondition>
																														</ForEach>
																														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																<OutputBreakpoints />
																																<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																	<OutputBreakpoints />
																																	<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</LinkTagFilter>
																																</GraphSearch>
																																<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																	<OutputBreakpoints />
																																	<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</LinkTagFilter>
																																</GraphSearch>
																																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																	<OutputBreakpoints />
																																</Expression>
																																<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																	<OutputBreakpoints />
																																	<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																																		<OutputBreakpoints />
																																	</VarOperation>
																																</IfCondition>
																															</Sequence>
																														</IfCondition>
																														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																															<OutputBreakpoints />
																														</Expression>
																													</Sequence>
																												</ForEach>
																											</IfCondition>
																										</Sequence>
																									</Parallel>
																								</Exec>
																							</HandContentElement>
																						</Selector>
																						<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</Success>
																						</LinkGate>
																					</Parallel>
																				</ForEach>
																			</Sequence>
																		</ChangeBehaviorStateElement>
																	</ChangeBehaviorStateElement>
																</ChangeBehaviorStateElement>
															</Else>
														</RandomGate>
													</Then>
													<Else>
														<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</LinkTagFilter>
																	<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																	</Nodalyzer>
																</GraphSearch>
																<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</LinkTagFilter>
																		</GraphSearch>
																		<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</RemoveLink>
																		<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</AddLink>
																		<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</RemoveLink>
																	</Sequence>
																</ForEach>
															</Sequence>
														</AtomicDecorator>
													</Else>
												</IfElseCondition>
											</ChangeBehaviorStateElement>
											<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</WaitAction>
										</Sequence>
									</EntityContext>
								</EntityContextElement>
							</EntityContextElement>
						</Sequence>
					</MoveParamsDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_bartender_takeAwayTray" is_function="0">
		<Variables>
			<Variable name="customer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="customers" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tray" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$customers" saveVersion="2" />
						<LinkTagFilter tag="&apos;tavernGuest&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
					</GraphSearch>
					<Expression expressions="$npc = $this.id &#10;$smartObject = $__object.id" />
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
					<EntityContextElement context="ForceForbidAutoTorch" enabled="true">
						<EntityContextElement context="DisableSituationParticipation" enabled="true">
							<EntityContext context="crime_reactToHungryPlayer" target="">
								<Sequence>
									<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_bartender_takeAwayTray&apos;" state="Enabled" allowAnyState="false" enabled="true">
										<HandContentElement hand="Right" item="$tray" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="tavern_chicken" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<Function_findItemOnSlot linkName="&apos;chickenSlot&apos;" npc="$npc" searchOrigin="$smartObject" item="$tray" nodeLabel="52813711" />
											</Search>
											<Exec canSkip="1">
												<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
													<Child canSkip="1">
														<WaitAction />
													</Child>
													<OnSuccess canSkip="1">
														<AtomicDecorator>
															<ForEach startIndex="0" step="1" array="$customers" iterator="" value="$customer" break="">
																<Sequence>
																	<GraphSearch Origin="$customer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																		<LinkTagFilter tag="&apos;guestSeat&apos;" prune="true" negprune="unknown" Parent="" Child="$seat" Data="" />
																	</GraphSearch>
																	<RemoveLink From="$seat" To="$__object.id" Tag="&apos;tavernParams&apos;" LinkOpHandleMode="Success" />
																</Sequence>
															</ForEach>
														</AtomicDecorator>
													</OnSuccess>
												</FuseBox>
											</Exec>
										</HandContentElement>
									</ChangeBehaviorStateElement>
									<WaitAction />
									<RemoveLink From="$tray" To="$tray" Tag="&apos;bowlUsed&apos;" LinkOpHandleMode="Success" />
									<ForgetDecision decisionLabel="tavern_chicken" />
								</Sequence>
							</EntityContext>
						</EntityContextElement>
					</EntityContextElement>
				</MoveParamsDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="customer" comment="" />
				<Variable name="customers" comment="" />
				<Variable name="npc" comment="" />
				<Variable name="seat" comment="" />
				<Variable name="smartObject" comment="" />
				<Variable name="tray" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-630" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</Sequence>
				</OnInit>
				<Behavior>
					<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_findItemOnSlot>
												</Search>
												<Exec>
													<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Child>
															<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</WaitAction>
														</Child>
														<OnSuccess>
															<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</LinkTagFilter>
																		</GraphSearch>
																		<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</RemoveLink>
																	</Sequence>
																</ForEach>
															</AtomicDecorator>
														</OnSuccess>
													</FuseBox>
												</Exec>
											</HandContentElement>
										</ChangeBehaviorStateElement>
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
										<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RemoveLink>
										<ForgetDecision hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ForgetDecision>
									</Sequence>
								</EntityContext>
							</EntityContextElement>
						</EntityContextElement>
					</MoveParamsDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_customerDrinkOnly" is_function="0">
		<Variables>
			<Variable name="beerSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="beerSlots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="beerSlotsData" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="behavior" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="bench" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeerSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hiddenBeerSlots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="hiddenBeerSlotsData" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="hiddenBeerTag" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="iterator" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="seats" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="seatsdata" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="someoneWantToTalk" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="talkSyncName" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="tankard" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<Selector>
						<Sequence>
							<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;guestSeat&apos;" prune="true" negprune="unknown" Parent="" Child="$customerParams.seat" Data="$customerParams.Position" />
							</GraphSearch>
							<IfCondition failOnCondition="true" condition="$customerParams.seat == $__resource.id">
								<Sequence>
									<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;guestHidden&apos;" prune="true" negprune="unknown" Parent="" Child="$hiddenBeer" Data="" />
									</GraphSearch>
									<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;guestBeer&apos;" prune="true" negprune="unknown" Parent="" Child="$customerParams.beer" Data="" />
									</GraphSearch>
								</Sequence>
							</IfCondition>
						</Sequence>
						<Sequence>
							<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory,slot&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;tavernSeat&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								<Datalyzer Tag="&apos;tavernSeat&apos;" Quantifiers="ForAll" Parent="" Child="$seats" Data="$seatsdata" saveVersion="2" />
							</GraphSearch>
							<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;tavernBeer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								<Datalyzer Tag="&apos;tavernBeer&apos;" Quantifiers="ForAll" Parent="" Child="$beerSlots" Data="$beerSlotsData" saveVersion="2" />
							</GraphSearch>
							<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;hiddenTavernBeer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								<Datalyzer Tag="&apos;hiddenTavernBeer&apos;" Quantifiers="ForAll" Parent="" Child="$hiddenBeerSlots" Data="$hiddenBeerSlotsData" saveVersion="2" />
							</GraphSearch>
							<ForEach startIndex="0" step="1" array="$seats" iterator="$iterator" value="$seat" break="">
								<IfCondition failOnCondition="false" condition="$seat == $__resource.id">
									<Expression expressions="$customerParams.Position = $seatsdata[$iterator] &#10;$customerParams.seat = $seat" />
								</IfCondition>
							</ForEach>
							<ForEach startIndex="0" step="1" array="$beerSlots" iterator="$iterator" value="$beerSlot" break="">
								<IfCondition failOnCondition="false" condition="$beerSlotsData[$iterator] == $customerParams.Position">
									<Expression expressions="$customerParams.beer = $beerSlot" />
								</IfCondition>
							</ForEach>
							<ForEach startIndex="0" step="1" array="$hiddenBeerSlots" iterator="$iterator" value="$hiddenBeerSlot" break="">
								<IfCondition failOnCondition="false" condition="$hiddenBeerSlotsData[$iterator] == $customerParams.Position">
									<Expression expressions="$hiddenBeer = $hiddenBeerSlot &#10;$hiddenBeerTag = &apos;hiddenTavernBeer&apos;+$customerParams.Position" />
								</IfCondition>
							</ForEach>
						</Sequence>
					</Selector>
					<Expression expressions="$talkSyncName = $__object.name+&apos;guestTalk&apos; &#10;$smartObject = $__object.id &#10;$customerParams.customer = $this.id &#10;$bench = $__resource.id" />
					<GraphSearch Origin="$customerParams.seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernParams&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$behavior" />
					</GraphSearch>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernTalk&apos;" prune="true" negprune="unknown" Parent="" Child="$someoneWantToTalk" Data="" />
					</GraphSearch>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
					<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_bartender_cleaningTable&apos;" state="Disabled" allowAnyState="false" enabled="true">
						<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_innkeeper_closing&apos;" state="Enabled" allowAnyState="false" enabled="true">
							<EntityContextElement context="DisableSituationParticipation" enabled="true">
								<EntityContextElement context="tavern_customer" enabled="true">
									<EntityContextElement context="ForceForbidAutoTorch" enabled="true">
										<AddLinkElement from="$this.id" to="$customerParams.seat" tag="&apos;guestSeat&apos;" data="$customerParams.Position" enabled="true">
											<AddLinkElement from="$this.id" to="$hiddenBeer" tag="&apos;guestHidden&apos;" data="" enabled="true">
												<AddLinkElement from="$this.id" to="$customerParams.beer" tag="&apos;guestBeer&apos;" data="" enabled="true">
													<AddLinkElement from="$__object.id" to="$this.id" tag="&apos;tavernGuest&apos;" data="" enabled="true">
														<StanceElement smartObject="$bench" stance="sitting" allowAny="false" enabled="true">
															<Sequence>
																<EntityContextCheck context="tavern_customer" target="" saveVersion="2">
																	<Else canSkip="1">
																		<IsFastForwarded failOnCondition="false" saveVersion="2">
																			<Else canSkip="1">
																				<WaitAction />
																			</Else>
																		</IsFastForwarded>
																	</Else>
																</EntityContextCheck>
																<HandContentElement hand="Right" item="$tankard" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="tavern_stein" useDecision="false" enabled="true" saveVersion="2">
																	<Search canSkip="1">
																		<GetItemInSlot slot="$hiddenBeer" useHomeItem="true" item="$tankard" />
																	</Search>
																	<Exec canSkip="1">
																		<ItemSetAsideElement item="$tankard" slot="$customerParams.beer" enabled="true">
																			<Switch>
																				<IfCondition failOnCondition="false" condition="$someoneWantToTalk ~= $__null">
																					<Sequence>
																						<WaitAction />
																						<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;3s&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$talkSyncName&apos;" RunLogic="Halt">
																							<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
																						</Synchronize>
																					</Sequence>
																				</IfCondition>
																				<IfCondition failOnCondition="false" condition="$behavior == &apos;cheers&apos;">
																					<Sequence>
																						<WaitAction />
																						<Function_customerCheers customerParams="$customerParams" smartObject="$smartObject" nodeLabel="11029649" />
																					</Sequence>
																				</IfCondition>
																				<IfCondition failOnCondition="false" condition="$behavior == &apos;beer&apos;">
																					<Function_customerDrink customerParams="$customerParams" smartObject="$smartObject" talkSyncName="$talkSyncName" nodeLabel="45481513" />
																				</IfCondition>
																				<DefaultBranch>
																					<Function_customerWaitingForBeer customerParams="$customerParams" smartObject="$smartObject" nodeLabel="92605054" />
																				</DefaultBranch>
																			</Switch>
																		</ItemSetAsideElement>
																	</Exec>
																</HandContentElement>
															</Sequence>
														</StanceElement>
													</AddLinkElement>
												</AddLinkElement>
											</AddLinkElement>
										</AddLinkElement>
									</EntityContextElement>
								</EntityContextElement>
							</EntityContextElement>
						</ChangeBehaviorStateElement>
					</ChangeBehaviorStateElement>
				</MoveParamsDecorator>
			</Behavior>
		</Root>
		<ForestContainer>
			<Expression expressions="$lockName = $__object.name+&apos;guestCall&apos; &#10;$cheersSyncName = $__object.name+&apos;CheersSync&apos;+$cheersCount &#10;$lockServeBeer = $this.name &#10;$lockServeBeerSoon = $lockServeBeer+&apos;guestServe&apos; &#10;$talkSyncName = $__object.name+&apos;guestTalk&apos; &#10;$smartObject = $__object.id" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="beerSlot" comment="" />
				<Variable name="beerSlots" comment="" />
				<Variable name="beerSlotsData" comment="" />
				<Variable name="behavior" comment="" />
				<Variable name="bench" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="hiddenBeer" comment="" />
				<Variable name="hiddenBeerSlot" comment="" />
				<Variable name="hiddenBeerSlots" comment="" />
				<Variable name="hiddenBeerSlotsData" comment="" />
				<Variable name="hiddenBeerTag" comment="" />
				<Variable name="iterator" comment="" />
				<Variable name="seat" comment="" />
				<Variable name="seats" comment="" />
				<Variable name="seatsdata" comment="" />
				<Variable name="smartObject" comment="" />
				<Variable name="someoneWantToTalk" comment="" />
				<Variable name="talkSyncName" comment="" />
				<Variable name="tankard" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
									</Sequence>
								</IfCondition>
							</Sequence>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
									<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
									</Datalyzer>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
									<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
									</Datalyzer>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
									<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
									</Datalyzer>
								</GraphSearch>
								<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
								</ForEach>
								<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
								</ForEach>
								<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
								</ForEach>
							</Sequence>
						</Selector>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
					</Sequence>
				</OnInit>
				<Behavior>
					<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																		<Else>
																			<IsFastForwarded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																				<OutputBreakpoints />
																				<Else>
																					<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</WaitAction>
																				</Else>
																			</IsFastForwarded>
																		</Else>
																	</EntityContextCheck>
																	<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																		<Search>
																			<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</GetItemInSlot>
																		</Search>
																		<Exec>
																			<ItemSetAsideElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</WaitAction>
																							<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</Wait>
																							</Synchronize>
																						</Sequence>
																					</IfCondition>
																					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</WaitAction>
																							<Function_customerCheers hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</Function_customerCheers>
																						</Sequence>
																					</IfCondition>
																					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<Function_customerDrink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Function_customerDrink>
																					</IfCondition>
																					<DefaultBranch>
																						<Function_customerWaitingForBeer hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Function_customerWaitingForBeer>
																					</DefaultBranch>
																				</Switch>
																			</ItemSetAsideElement>
																		</Exec>
																	</HandContentElement>
																</Sequence>
															</StanceElement>
														</AddLinkElement>
													</AddLinkElement>
												</AddLinkElement>
											</AddLinkElement>
										</EntityContextElement>
									</EntityContextElement>
								</EntityContextElement>
							</ChangeBehaviorStateElement>
						</ChangeBehaviorStateElement>
					</MoveParamsDecorator>
				</Behavior>
			</Root>
			<Forest>
				<Expression editorPosX="930" editorPosY="160" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Expression>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_customerEatOnly" is_function="0">
		<Variables>
			<Variable name="behavior" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="bench" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="bowlSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" />
			<Variable name="iterator" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="seats" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="seatsdata" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="someoneWantToTalk" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="soupSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="soupSlots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="soupSlotsData" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="talkSyncName" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="target" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory,slot&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernSeat&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;tavernSeat&apos;" Quantifiers="ForAll" Parent="" Child="$seats" Data="$seatsdata" saveVersion="2" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernSoup&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;tavernSoup&apos;" Quantifiers="ForAll" Parent="" Child="$soupSlots" Data="$soupSlotsData" saveVersion="2" />
					</GraphSearch>
					<ForEach startIndex="0" step="1" array="$seats" iterator="$iterator" value="$seat" break="">
						<IfCondition failOnCondition="false" condition="$seat == $__resource.id">
							<Expression expressions="$customerParams.Position = $seatsdata[$iterator] &#10;$customerParams.seat = $seat" />
						</IfCondition>
					</ForEach>
					<ForEach startIndex="0" step="1" array="$soupSlots" iterator="$iterator" value="$soupSlot" break="">
						<IfCondition failOnCondition="false" condition="$soupSlotsData[$iterator] == $customerParams.Position">
							<Expression expressions="$customerParams.soup = $soupSlot" />
						</IfCondition>
					</ForEach>
					<Expression expressions="$talkSyncName = $__object.name+&apos;guestTalk&apos; &#10;$smartObject = $__object.id &#10;$target = $this.id &#10;$customerParams.customer = $this.id &#10;$bench = $__null" />
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;guestSeat&apos;" prune="true" negprune="unknown" Parent="" Child="$bench" Data="" />
					</GraphSearch>
					<IfCondition failOnCondition="false" condition="$bench == $__null">
						<Sequence>
							<Expression expressions="$bench = $__resource.id" />
							<AddLink From="$customerParams.seat" To="$__object.id" Tag="&apos;orderFood&apos;" Data="" LinkOpHandleMode="OverWrite" />
							<AddLink From="$customerParams.seat" To="$__object.id" Tag="&apos;tavernParams&apos;" Data="&apos;orderFood&apos;" LinkOpHandleMode="OverWrite" />
						</Sequence>
					</IfCondition>
					<GraphSearch Origin="$customerParams.seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernParams&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$behavior" />
					</GraphSearch>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernTalk&apos;" prune="true" negprune="unknown" Parent="" Child="$someoneWantToTalk" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$customerParams.soup" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;bowlSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$soupSlot" Data="" />
					</GraphSearch>
					<Selector>
						<Sequence>
							<GraphSearch Origin="$customerParams.seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;soup&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Expression expressions="$behavior = &apos;soup&apos;" />
						</Sequence>
						<Sequence>
							<GraphSearch Origin="$soupSlot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;SlotLink&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Expression expressions="$behavior = &apos;soup&apos;" />
						</Sequence>
						<Success />
					</Selector>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
					<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_bartender_cleaningTable&apos;" state="Disabled" allowAnyState="false" enabled="true">
						<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_innkeeper_closing&apos;" state="Enabled" allowAnyState="false" enabled="true">
							<EntityContextElement context="DisableSituationParticipation" enabled="true">
								<EntityContextElement context="tavern_customer" enabled="true">
									<EntityContextElement context="ForceForbidAutoTorch" enabled="true">
										<AddLinkElement from="$this.id" to="$customerParams.seat" tag="&apos;guestSeat&apos;" data="" enabled="true">
											<AddLinkElement from="$this.id" to="$customerParams.soup" tag="&apos;guestSoup&apos;" data="" enabled="true">
												<AddLinkElement from="$__object.id" to="$this.id" tag="&apos;tavernGuest&apos;" data="" enabled="true">
													<AddLinkElement from="$__object.id" to="$this.id" tag="&apos;onlyMash&apos;" data="" enabled="true">
														<StanceElement smartObject="$bench" stance="sitting" allowAny="false" enabled="true">
															<Switch>
																<IfCondition failOnCondition="false" condition="$behavior == &apos;soup&apos;">
																	<Function_customerEatMash customerParams="$customerParams" smartObject="$smartObject" nodeLabel="13743550" />
																</IfCondition>
																<IfCondition failOnCondition="false" condition="$behavior == &apos;soupEaten&apos;">
																	<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_bartender_takeAwayBowl&apos;" state="Enabled" allowAnyState="false" enabled="true">
																		<Sequence>
																			<WaitAction />
																			<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
																		</Sequence>
																	</ChangeBehaviorStateElement>
																</IfCondition>
																<IfCondition failOnCondition="false" condition="$behavior == &apos;chicken&apos;">
																	<Function_customerEatChicken customerParams="$customerParams" smartObject="$smartObject" nodeLabel="72934607" />
																</IfCondition>
																<IfCondition failOnCondition="false" condition="$behavior == &apos;chickenEaten&apos;">
																	<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_bartender_takeAwayTray&apos;" state="Enabled" allowAnyState="false" enabled="true">
																		<Sequence>
																			<WaitAction />
																			<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
																		</Sequence>
																	</ChangeBehaviorStateElement>
																</IfCondition>
																<IfCondition failOnCondition="false" condition="$behavior == &apos;orderFood&apos;">
																	<Function_customerOrderFood customerParams="$customerParams" smartObject="$smartObject" nodeLabel="96181613" />
																</IfCondition>
																<IfCondition failOnCondition="false" condition="$someoneWantToTalk ~= $__null">
																	<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;3s&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$talkSyncName&apos;" RunLogic="Halt">
																		<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
																	</Synchronize>
																</IfCondition>
																<DefaultBranch>
																	<Sequence>
																		<WaitAction />
																		<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
																	</Sequence>
																</DefaultBranch>
															</Switch>
														</StanceElement>
													</AddLinkElement>
												</AddLinkElement>
											</AddLinkElement>
										</AddLinkElement>
									</EntityContextElement>
								</EntityContextElement>
							</EntityContextElement>
						</ChangeBehaviorStateElement>
					</ChangeBehaviorStateElement>
				</MoveParamsDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="behavior" comment="" />
				<Variable name="bench" comment="" />
				<Variable name="bowlSlot" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="iterator" comment="" />
				<Variable name="seat" comment="" />
				<Variable name="seats" comment="" />
				<Variable name="seatsdata" comment="" />
				<Variable name="smartObject" comment="" />
				<Variable name="someoneWantToTalk" comment="" />
				<Variable name="soupSlot" comment="" />
				<Variable name="soupSlots" comment="" />
				<Variable name="soupSlotsData" comment="" />
				<Variable name="talkSyncName" comment="" />
				<Variable name="target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</AddLink>
								<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</AddLink>
							</Sequence>
						</IfCondition>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Selector>
					</Sequence>
				</OnInit>
				<Behavior>
					<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Function_customerEatMash hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_customerEatMash>
																	</IfCondition>
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</WaitAction>
																				<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Wait>
																			</Sequence>
																		</ChangeBehaviorStateElement>
																	</IfCondition>
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Function_customerEatChicken hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_customerEatChicken>
																	</IfCondition>
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</WaitAction>
																				<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Wait>
																			</Sequence>
																		</ChangeBehaviorStateElement>
																	</IfCondition>
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Function_customerOrderFood hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_customerOrderFood>
																	</IfCondition>
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Wait>
																		</Synchronize>
																	</IfCondition>
																	<DefaultBranch>
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</WaitAction>
																			<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Wait>
																		</Sequence>
																	</DefaultBranch>
																</Switch>
															</StanceElement>
														</AddLinkElement>
													</AddLinkElement>
												</AddLinkElement>
											</AddLinkElement>
										</EntityContextElement>
									</EntityContextElement>
								</EntityContextElement>
							</ChangeBehaviorStateElement>
						</ChangeBehaviorStateElement>
					</MoveParamsDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="customerDrink" is_function="1">
		<Variables>
			<Variable name="animationApproach" type="enum:animationApproach" values="" isPersistent="0" form="single" />
			<Variable name="beerCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="customer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="customers" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="dialogPreset" type="enum:dialogPreset" values="" isPersistent="0" form="single" />
			<Variable name="waitCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="waitTime" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="wantToTalk" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="talkSyncName" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Expression expressions="$animationApproach = $enum:animationApproach.ingameDialogPoseAndAnimations" />
			</OnInit>
			<Behavior canSkip="1">
				<ChangeBehaviorStateElement smartEntity="$smartObject" behavior="&apos;use_innkeeper_talkingWithGuests&apos;" state="Enabled" allowAnyState="false" enabled="true">
					<Sequence>
						<WaitAction />
						<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
							<Child canSkip="1">
								<AnimationAction fragment="&apos;Guest_DrinkBeer&apos;" tags="" eventReferenceObject="$this.id" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false">
									<EventData_pickup Slot="$customerParams.beer" name="&apos;beer&apos;" />
									<EventData_place Slot="$customerParams.beer" name="&apos;beer&apos;" />
								</AnimationAction>
							</Child>
							<OnSuccess canSkip="1">
								<AtomicDecorator>
									<Sequence>
										<GraphSearch Origin="$customerParams.seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;tavernBeerCount&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$beerCount" />
										</GraphSearch>
										<IfElseCondition failOnCondition="false" condition="$beerCount &gt; 1" saveVersion="2">
											<Then canSkip="1">
												<Sequence>
													<Expression expressions="$beerCount = $beerCount-1" />
													<AddLink From="$customerParams.seat" To="$customerParams.beer" Tag="&apos;tavernBeerCount&apos;" Data="$beerCount" LinkOpHandleMode="OverWrite" />
												</Sequence>
											</Then>
											<Else canSkip="1">
												<Sequence>
													<RemoveLink From="$customerParams.seat" To="$customerParams.beer" Tag="&apos;tavernBeerCount&apos;" LinkOpHandleMode="Success" />
													<RemoveLink From="$customerParams.seat" To="$smartObject" Tag="&apos;tavernParams&apos;" LinkOpHandleMode="Success" />
												</Sequence>
											</Else>
										</IfElseCondition>
									</Sequence>
								</AtomicDecorator>
							</OnSuccess>
						</FuseBox>
						<EntityContextCheck context="tavern_disableTalking" target="$this.id" saveVersion="2">
							<Then canSkip="1">
								<Success />
							</Then>
							<Else canSkip="1">
								<RandomGate opensWithChance="0.500000" saveVersion="2">
									<Then canSkip="1">
										<Sequence>
											<GraphSearch Origin="$smartObject" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;tavernGuest&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
												<Nodalyzer Quantifiers="ForAll" Parent="" Child="$customers" saveVersion="2" />
											</GraphSearch>
											<IfElseCondition failOnCondition="false" condition="#customers &gt; 1" saveVersion="2">
												<Then canSkip="1">
													<Sequence>
														<ForEach startIndex="0" step="1" array="$customers" iterator="" value="$customer" break="$wantToTalk">
															<IfCondition failOnCondition="false" condition="$customer ~= $this.id">
																<Selector>
																	<GraphSearch Origin="$customer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																		<LinkTagFilter tag="&apos;tavernTalk&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																	</GraphSearch>
																	<Expression expressions="$wantToTalk = true &#10;$dialogPreset = $enum:dialogPreset.ingame" />
																</Selector>
															</IfCondition>
														</ForEach>
														<IfCondition failOnCondition="false" condition="$wantToTalk">
															<AddLinkElement from="$customer" to="$this.id" tag="&apos;tavernTalk&apos;" data="" enabled="true">
																<Sequence>
																	<WaitAction />
																	<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;10s&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$talkSyncName&apos;" RunLogic="KeepRunning">
																		<Function_speech_dialogInitiator alias="" animationApproach="$animationApproach" context="" customParameters="" metarole="&apos;GOSSIP&apos;" preset="$dialogPreset" recipient="$customer" recipientMetaroles="&apos;GOSSIP&apos;" nodeLabel="63346440" />
																	</Synchronize>
																</Sequence>
															</AddLinkElement>
														</IfCondition>
													</Sequence>
												</Then>
												<Else canSkip="1">
													<HasGenderCheck Gender="Male" SoulWUID="$this.id" FailSubtMissing="false" saveVersion="2">
														<Then canSkip="1">
															<Function_speech_schedulerMonolog alias="" animationApproach="$animationApproach" context="" lookAtId="" metarole="&apos;ZAKAZNIK_SAMOMLUVA&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="74976429" />
														</Then>
														<Else canSkip="1">
															<Success />
														</Else>
													</HasGenderCheck>
												</Else>
											</IfElseCondition>
										</Sequence>
									</Then>
									<Else canSkip="1">
										<Success />
									</Else>
								</RandomGate>
							</Else>
						</EntityContextCheck>
						<IfCondition failOnCondition="false" condition="!$wantToTalk">
							<Sequence>
								<GenerateRandomInteger lowerBoundary="5" upperBoundary="12" result="$waitCount" />
								<Concatenation OutString="$waitTime" Pattern="&apos;$waitCount;s&apos;" />
								<Wait duration="$waitTime" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</IfCondition>
					</Sequence>
				</ChangeBehaviorStateElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="animationApproach" comment="" />
				<Variable name="beerCount" comment="" />
				<Variable name="customer" comment="" />
				<Variable name="customers" comment="" />
				<Variable name="dialogPreset" comment="" />
				<Variable name="waitCount" comment="" />
				<Variable name="waitTime" comment="" />
				<Variable name="wantToTalk" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="smartObject" comment="" />
				<Variable name="talkSyncName" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</OnInit>
				<Behavior>
					<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child>
									<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</EventData_pickup>
										<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</EventData_place>
									</AnimationAction>
								</Child>
								<OnSuccess>
									<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
											</GraphSearch>
											<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
														<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</AddLink>
													</Sequence>
												</Then>
												<Else>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</RemoveLink>
														<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</RemoveLink>
													</Sequence>
												</Else>
											</IfElseCondition>
										</Sequence>
									</AtomicDecorator>
								</OnSuccess>
							</FuseBox>
							<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</Then>
								<Else>
									<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
													<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
													</Nodalyzer>
												</GraphSearch>
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</LinkTagFilter>
																		</GraphSearch>
																		<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Expression>
																	</Selector>
																</IfCondition>
															</ForEach>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</WaitAction>
																		<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Function_speech_dialogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Function_speech_dialogInitiator>
																		</Synchronize>
																	</Sequence>
																</AddLinkElement>
															</IfCondition>
														</Sequence>
													</Then>
													<Else>
														<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_schedulerMonolog>
															</Then>
															<Else>
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</Else>
														</HasGenderCheck>
													</Else>
												</IfElseCondition>
											</Sequence>
										</Then>
										<Else>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Else>
									</RandomGate>
								</Else>
							</EntityContextCheck>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GenerateRandomInteger hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GenerateRandomInteger>
									<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Concatenation>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</IfCondition>
						</Sequence>
					</ChangeBehaviorStateElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="customerCheers" is_function="1">
		<Variables>
			<Variable name="animationApproach" type="enum:animationApproach" values="" isPersistent="0" form="single" />
			<Variable name="beer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="cheers" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="cheersBeer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="cheersBeerTwo" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="cheersCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="cheersTag" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="customer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="customers" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="target" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<WaitAction />
					<GraphSearch Origin="$customerParams.seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernCheering&apos;" prune="true" negprune="unknown" Parent="" Child="$beer" Data="$cheersCount" />
					</GraphSearch>
					<GraphSearch Origin="$smartObject" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernGuest&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$customers" saveVersion="2" />
					</GraphSearch>
					<ForEach startIndex="0" step="1" array="$customers" iterator="" value="$customer" break="">
						<Sequence>
							<GraphSearch Origin="$customer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;guestSeat&apos;" prune="true" negprune="unknown" Parent="" Child="$seat" Data="" />
							</GraphSearch>
							<GraphSearch Origin="$seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;tavernCheering&apos;" prune="true" negprune="unknown" Parent="" Child="$cheers" Data="" />
							</GraphSearch>
							<IfCondition failOnCondition="false" condition="$cheers ~= $__null &amp; $customerParams.beer ~= $cheers">
								<Expression expressions="$cheersBeer = $cheers" />
							</IfCondition>
						</Sequence>
					</ForEach>
					<IfElseCondition failOnCondition="false" condition="$cheersCount &gt; 2" saveVersion="2">
						<Then canSkip="1">
							<Expression expressions="$cheersTag = &apos;cheersFullHouse,cheersPartner&apos;+$customerParams.Position" />
						</Then>
						<Else canSkip="1">
							<Sequence>
								<IfCondition failOnCondition="false" condition="$customerParams.Position == &apos;C&apos;">
									<Expression expressions="$customerParams.Position = &apos;A&apos;" />
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$customerParams.Position == &apos;D&apos;">
									<Expression expressions="$customerParams.Position = &apos;B&apos;" />
								</IfCondition>
								<Expression expressions="$cheersTag = &apos;cheersFront,cheersPartner&apos;+$customerParams.Position" />
								<GraphSearch Origin="$beer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;beer2&apos;" prune="true" negprune="unknown" Parent="" Child="$cheersBeerTwo" Data="" />
								</GraphSearch>
								<IfElseCondition failOnCondition="false" condition="$cheersBeer == $cheersBeerTwo" saveVersion="2">
									<Then canSkip="1">
										<Expression expressions="$cheersTag = &apos;cheersCrossLeft,cheersPartner&apos;+$customerParams.Position" />
									</Then>
									<Else canSkip="1">
										<Sequence>
											<GraphSearch Origin="$beer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;beer4&apos;" prune="true" negprune="unknown" Parent="" Child="$cheersBeerTwo" Data="" />
											</GraphSearch>
											<IfElseCondition failOnCondition="false" condition="$cheersBeer == $cheersBeerTwo" saveVersion="2">
												<Then canSkip="1">
													<Expression expressions="$cheersTag = &apos;cheersCrossRight,cheersPartner&apos;+$customerParams.Position" />
												</Then>
												<Else canSkip="1">
													<Sequence>
														<GraphSearch Origin="$beer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<LinkTagFilter tag="&apos;beer3&apos;" prune="true" negprune="unknown" Parent="" Child="$cheersBeerTwo" Data="" />
														</GraphSearch>
														<IfElseCondition failOnCondition="false" condition="$cheersBeer == $cheersBeerTwo" saveVersion="2">
															<Then canSkip="1">
																<Expression expressions="$cheersTag = &apos;cheersSide,cheersPartnerB&apos;" />
															</Then>
															<Else canSkip="1">
																<Sequence>
																	<GraphSearch Origin="$beer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																		<LinkTagFilter tag="&apos;beer5&apos;" prune="true" negprune="unknown" Parent="" Child="$cheersBeerTwo" Data="" />
																	</GraphSearch>
																	<IfCondition failOnCondition="false" condition="$cheersBeer == $cheersBeerTwo">
																		<Expression expressions="$cheersTag = &apos;cheersSide,cheersPartnerA&apos;" />
																	</IfCondition>
																</Sequence>
															</Else>
														</IfElseCondition>
													</Sequence>
												</Else>
											</IfElseCondition>
										</Sequence>
									</Else>
								</IfElseCondition>
							</Sequence>
						</Else>
					</IfElseCondition>
					<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
						<Child canSkip="1">
							<Synchronize SemaphoreCount="$cheersCount" InsideTimerValue="&apos;15s&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;tavernCheers&apos;" RunLogic="KeepRunning">
								<Sequence>
									<Expression expressions="$target = $this.id &#10;$animationApproach = $enum:animationApproach.dontPlayDialogAnimations" />
									<Parallel successMode="All" failureMode="Any">
										<SuppressFailure>
											<Function_speech_schedulerMonolog alias="" animationApproach="$animationApproach" context="" lookAtId="" metarole="&apos;HOSPODA_ZAKAZNIK_PRIPITEK&apos;" skipInLOD="true" subtitlesDown="false" nodeLabel="76660969" />
										</SuppressFailure>
										<JoinedAnimationAction requiresMovement="false" lockContext="$smartObject" lockName="&apos;tavernCheersAnim&apos;" lockCount="$cheersCount" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="&apos;Guest_CheersBeer&apos;" tags="$cheersTag" eventReferenceObject="$this.id" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
									</Parallel>
									<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="&apos;5s&apos;" />
								</Sequence>
							</Synchronize>
						</Child>
						<OnSuccess canSkip="1">
							<Sequence>
								<RemoveLink From="$customerParams.seat" To="$beer" Tag="&apos;tavernCheering&apos;" LinkOpHandleMode="Success" />
								<AddLink From="$customerParams.seat" To="$smartObject" Tag="&apos;tavernParams&apos;" Data="&apos;beer&apos;" LinkOpHandleMode="OverWrite" />
							</Sequence>
						</OnSuccess>
					</FuseBox>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<AnimationAction fragment="&apos;Guest_CheersBeer&apos;" tags="$cheersTag" eventReferenceObject="$this.id" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="animationApproach" comment="" />
				<Variable name="beer" comment="" />
				<Variable name="cheers" comment="" />
				<Variable name="cheersBeer" comment="" />
				<Variable name="cheersBeerTwo" comment="" />
				<Variable name="cheersCount" comment="" />
				<Variable name="cheersTag" comment="" />
				<Variable name="customer" comment="" />
				<Variable name="customers" comment="" />
				<Variable name="seat" comment="" />
				<Variable name="target" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="smartObject" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</IfCondition>
							</Sequence>
						</ForEach>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Then>
							<Else>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Then>
										<Else>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
												</GraphSearch>
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Then>
													<Else>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
															</GraphSearch>
															<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Then>
																<Else>
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</LinkTagFilter>
																		</GraphSearch>
																		<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Expression>
																		</IfCondition>
																	</Sequence>
																</Else>
															</IfElseCondition>
														</Sequence>
													</Else>
												</IfElseCondition>
											</Sequence>
										</Else>
									</IfElseCondition>
								</Sequence>
							</Else>
						</IfElseCondition>
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerMonolog>
											</SuppressFailure>
											<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</JoinedAnimationAction>
										</Parallel>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Synchronize>
							</Child>
							<OnSuccess>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</RemoveLink>
									<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AddLink>
								</Sequence>
							</OnSuccess>
						</FuseBox>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<AnimationAction editorPosX="1770" editorPosY="1050" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</AnimationAction>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="customerWaitingForBeer" is_function="1">
		<Variables>
			<Variable name="animationApproach" type="enum:animationApproach" values="" isPersistent="0" form="single" />
			<Variable name="barrel" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="guestCallLock" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="infiniteBeer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="lockServeBeer" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="lockServeBeerSoon" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="serveTag" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="smartObjectName" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="target" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="wait" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="waitAnim" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="waitServe" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<ExecuteLua code="data.smartObjectName = XGenAIModule.GetEntityByWUID(data.smartObject):GetName()" />
					<Expression expressions="$lockServeBeer = $this.name &#10;$lockServeBeerSoon = $lockServeBeer+&apos;guestServe&apos; &#10;$animationApproach = $enum:animationApproach.dontPlayDialogAnimations &#10;$guestCallLock = $smartObjectName+&apos;guestCall&apos;" />
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<Selector>
					<Sequence>
						<GraphSearch Origin="$smartObject" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;infiniteBeer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						</GraphSearch>
						<WaitAction />
						<AddLink From="$customerParams.seat" To="$customerParams.beer" Tag="&apos;tavernBeerCount&apos;" Data="10" LinkOpHandleMode="OverWrite" />
						<AddLink From="$customerParams.seat" To="$smartObject" Tag="&apos;tavernParams&apos;" Data="&apos;beer&apos;" LinkOpHandleMode="OverWrite" />
					</Sequence>
					<Sequence>
						<GraphSearch Origin="$smartObject" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;barrel&apos;" prune="true" negprune="unknown" Parent="" Child="$barrel" Data="" />
						</GraphSearch>
						<IfElseCondition failOnCondition="false" condition="$barrel ~= $__null" saveVersion="2">
							<Then canSkip="1">
								<ChangeBehaviorStateElement smartEntity="$barrel" behavior="&apos;use_bartender_bringBeer&apos;" state="Enabled" allowAnyState="false" enabled="true">
									<AddLinkElement from="$barrel" to="$smartObject" tag="&apos;tavernBarrel&apos;" data="" enabled="true">
										<Sequence>
											<WaitAction />
											<Parallel successMode="Any" failureMode="Any">
												<Sequence>
													<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
													<IfGate atomic="false" condition="!$wait" RunLogic="KeepRunning">
														<RandomGate opensWithChance="0.100000" saveVersion="2">
															<Then canSkip="1">
																<SuppressFailure>
																	<Function_speech_schedulerMonolog alias="" animationApproach="$animationApproach" context="" lookAtId="" metarole="&apos;ZAKAZNIK_CEKA_MUZ&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="14910831" />
																</SuppressFailure>
															</Then>
															<Else canSkip="1">
																<Success />
															</Else>
														</RandomGate>
													</IfGate>
												</Sequence>
												<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Global" SemaphoreName="&apos;$guestCallLock&apos;" RunLogic="KeepRunning">
													<Sequence>
														<SetExternalLock LockManagerType="Global" Locked="true" LockName="&apos;$guestCallLock&apos;" />
														<Expression expressions="$wait = true &#10;$waitAnim = true &#10;$target = $this.id" />
														<IfCondition failOnCondition="false" condition="!$waitServe">
															<Parallel successMode="All" failureMode="Any">
																<SuppressFailure>
																	<Function_speech_schedulerMonolog alias="" animationApproach="$animationApproach" context="" lookAtId="" metarole="&apos;HOSPODA_ZAKAZNIK_OBJEDNANI&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="65450459" />
																</SuppressFailure>
																<AnimationAction fragment="&apos;Guest_Call&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
															</Parallel>
														</IfCondition>
														<Expression expressions="$waitAnim = false" />
														<IfGate atomic="false" condition="!$waitServe" RunLogic="KeepRunning">
															<Success />
														</IfGate>
													</Sequence>
												</ExternalLock>
												<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Global" SemaphoreName="&apos;$lockServeBeerSoon&apos;" RunLogic="KeepRunning">
													<Sequence>
														<Expression expressions="$wait = true &#10;$waitServe = true" />
														<Switch>
															<IfCondition failOnCondition="false" condition="$customerParams.Position == &apos;A&apos;">
																<Expression expressions="$serveTag = &apos;fillDistClose,fillSideRight&apos;" />
															</IfCondition>
															<IfCondition failOnCondition="false" condition="$customerParams.Position == &apos;B&apos;">
																<Expression expressions="$serveTag = &apos;fillDistClose,fillSideRight&apos;" />
															</IfCondition>
															<IfCondition failOnCondition="false" condition="$customerParams.Position == &apos;C&apos;">
																<Expression expressions="$serveTag = &apos;fillDistClose,fillSideLeft&apos;" />
															</IfCondition>
															<DefaultBranch>
																<Expression expressions="$serveTag = &apos;fillDistClose,fillSideLeft&apos;" />
															</DefaultBranch>
														</Switch>
														<IfGate atomic="false" condition="!$waitAnim" RunLogic="KeepRunning">
															<SuppressFailure>
																<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
																	<Child canSkip="1">
																		<JoinedAnimationAction requiresMovement="false" lockContext="$smartObject" lockName="$lockServeBeer" lockCount="2" timeout="&apos;10s&apos;" ignoreOthersLeaving="false" fragment="&apos;Guest_ServeBeer&apos;" tags="$serveTag" eventReferenceObject="$this.id" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
																	</Child>
																	<OnSuccess canSkip="1">
																		<SetExternalLock LockManagerType="Global" Locked="true" LockName="&apos;$lockServeBeerSoon&apos;" />
																	</OnSuccess>
																</FuseBox>
															</SuppressFailure>
														</IfGate>
													</Sequence>
												</ExternalLock>
											</Parallel>
										</Sequence>
									</AddLinkElement>
								</ChangeBehaviorStateElement>
							</Then>
							<Else canSkip="1">
								<Sequence>
									<WaitAction />
									<AddLink From="$customerParams.seat" To="$customerParams.beer" Tag="&apos;tavernBeerCount&apos;" Data="10" LinkOpHandleMode="OverWrite" />
									<AddLink From="$customerParams.seat" To="$smartObject" Tag="&apos;tavernParams&apos;" Data="&apos;beer&apos;" LinkOpHandleMode="OverWrite" />
								</Sequence>
							</Else>
						</IfElseCondition>
					</Sequence>
				</Selector>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="animationApproach" comment="" />
				<Variable name="barrel" comment="" />
				<Variable name="guestCallLock" comment="" />
				<Variable name="infiniteBeer" comment="" />
				<Variable name="lockServeBeer" comment="" />
				<Variable name="lockServeBeerSoon" comment="" />
				<Variable name="serveTag" comment="" />
				<Variable name="smartObjectName" comment="" />
				<Variable name="target" comment="" />
				<Variable name="wait" comment="" />
				<Variable name="waitAnim" comment="" />
				<Variable name="waitServe" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="smartObject" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExecuteLua>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</Sequence>
				</OnInit>
				<Behavior>
					<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AddLink>
							<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AddLink>
						</Sequence>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="waiting for beer" breakpointFlags="0">
												<OutputBreakpoints />
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
												<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
														<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_speech_schedulerMonolog>
																	</SuppressFailure>
																</Then>
																<Else>
																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Success>
																</Else>
															</RandomGate>
														</IfGate>
													</Sequence>
													<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</SetExternalLock>
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_speech_schedulerMonolog>
																	</SuppressFailure>
																	<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</AnimationAction>
																</Parallel>
															</IfCondition>
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
															<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</IfGate>
														</Sequence>
													</ExternalLock>
													<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
															<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</IfCondition>
																<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</IfCondition>
																<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</IfCondition>
																<DefaultBranch>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</DefaultBranch>
															</Switch>
															<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																		<Child>
																			<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</JoinedAnimationAction>
																		</Child>
																		<OnSuccess>
																			<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</SetExternalLock>
																		</OnSuccess>
																	</FuseBox>
																</SuppressFailure>
															</IfGate>
														</Sequence>
													</ExternalLock>
												</Parallel>
											</Sequence>
										</AddLinkElement>
									</ChangeBehaviorStateElement>
								</Then>
								<Else>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
										<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AddLink>
										<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AddLink>
									</Sequence>
								</Else>
							</IfElseCondition>
						</Sequence>
					</Selector>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="customerEatMash" is_function="1">
		<Variables>
			<Variable name="bowlItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="bowlPoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="initSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="kettle" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="soupSlot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$smartObject" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;appointmentSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$bowlPoint" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$bowlPoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;fireplace&apos;" prune="true" negprune="unknown" Parent="" Child="$kettle" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$customerParams.soup" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;bowlSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$soupSlot" Data="" />
					</GraphSearch>
					<GetItemInSlot slot="$customerParams.soup" useHomeItem="false" item="$bowlItem" />
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<Selector>
					<Sequence>
						<GraphSearch Origin="$kettle" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;tavern_poisonedKettle&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						</GraphSearch>
						<RemoveLink From="$customerParams.seat" To="$customerParams.soup" Tag="&apos;soup&apos;" LinkOpHandleMode="Error" />
						<AddLink From="$customerParams.seat" To="$customerParams.soup" Tag="&apos;soupEaten&apos;" Data="" LinkOpHandleMode="Error" />
						<AddLink From="$customerParams.seat" To="$smartObject" Tag="&apos;tavernParams&apos;" Data="&apos;soupEaten&apos;" LinkOpHandleMode="OverWrite" />
					</Sequence>
					<Sequence>
						<IfElseCondition failOnCondition="false" condition="$customerParams.Position == &apos;A&apos; | $customerParams.Position == &apos;B&apos;" saveVersion="2">
							<Then canSkip="1">
								<UnstanceAction unstance="guest_eatingMashSitting_left" locationObject="" slaveObject="">
									<EventData_phaseitem Slot="$customerParams.soup" name="&apos;fillBowlOnStart&apos;" />
									<EventData_pickup Slot="$customerParams.soup" name="&apos;bowlFarIn&apos;" />
									<EventData_place Slot="$soupSlot" name="&apos;bowlCloseIn&apos;" />
									<EventData_phaseitem Slot="$soupSlot" name="&apos;fillBowl&apos;" />
									<EventData_phaseitem Slot="$soupSlot" name="&apos;bowlSlot&apos;" />
									<EventData_pickup Slot="$soupSlot" name="&apos;bowlCloseOut&apos;" />
									<EventData_place Slot="$customerParams.soup" name="&apos;bowlFarOut&apos;" />
								</UnstanceAction>
							</Then>
							<Else canSkip="1">
								<UnstanceAction unstance="guest_eatingMashSitting_right" locationObject="" slaveObject="">
									<EventData_phaseitem Slot="$customerParams.soup" name="&apos;fillBowlOnStart&apos;" />
									<EventData_place Slot="$soupSlot" name="&apos;bowlCloseIn&apos;" />
									<EventData_pickup Slot="$customerParams.soup" name="&apos;bowlFarIn&apos;" />
									<EventData_phaseitem Slot="$soupSlot" name="&apos;fillBowl&apos;" />
									<EventData_phaseitem Slot="$soupSlot" name="&apos;bowlSlot&apos;" />
									<EventData_pickup Slot="$soupSlot" name="&apos;bowlCloseOut&apos;" />
									<EventData_place Slot="$customerParams.soup" name="&apos;bowlFarOut&apos;" />
								</UnstanceAction>
							</Else>
						</IfElseCondition>
						<InstantSendMessageToNPC target="$kettle" type="&apos;kettle:signal:onNPCEating&apos;" values="user($this.id),bowl($bowlItem)" />
						<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
						<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
							<Child canSkip="1">
								<WaitAction />
							</Child>
							<OnSuccess canSkip="1">
								<AtomicDecorator>
									<Sequence>
										<RemoveLink From="$customerParams.seat" To="$customerParams.soup" Tag="&apos;soup&apos;" LinkOpHandleMode="Error" />
										<AddLink From="$customerParams.seat" To="$customerParams.soup" Tag="&apos;soupEaten&apos;" Data="" LinkOpHandleMode="Error" />
										<AddLink From="$customerParams.seat" To="$smartObject" Tag="&apos;tavernParams&apos;" Data="&apos;soupEaten&apos;" LinkOpHandleMode="OverWrite" />
									</Sequence>
								</AtomicDecorator>
							</OnSuccess>
						</FuseBox>
					</Sequence>
				</Selector>
			</Behavior>
		</Root>
		<ForestContainer>
			<IfElseCondition failOnCondition="false" condition="$bowlItem == $__null" saveVersion="2">
				<Then canSkip="1">
					<Sequence>
						<Expression expressions="$initSlot = $soupSlot" />
						<GetItemInSlot slot="$soupSlot" useHomeItem="false" item="$bowlItem" />
					</Sequence>
				</Then>
				<Else canSkip="1">
					<Expression expressions="$initSlot = $customerParams.soup" />
				</Else>
			</IfElseCondition>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="bowlItem" comment="" />
				<Variable name="bowlPoint" comment="" />
				<Variable name="initSlot" comment="" />
				<Variable name="kettle" comment="" />
				<Variable name="soupSlot" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="smartObject" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetItemInSlot>
					</Sequence>
				</OnInit>
				<Behavior>
					<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</RemoveLink>
							<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AddLink>
							<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AddLink>
						</Sequence>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<EventData_phaseitem hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</EventData_phaseitem>
										<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</EventData_pickup>
										<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</EventData_place>
										<EventData_phaseitem hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</EventData_phaseitem>
										<EventData_phaseitem hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</EventData_phaseitem>
										<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</EventData_pickup>
										<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</EventData_place>
									</UnstanceAction>
								</Then>
								<Else>
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<EventData_phaseitem hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</EventData_phaseitem>
										<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</EventData_place>
										<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</EventData_pickup>
										<EventData_phaseitem hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</EventData_phaseitem>
										<EventData_phaseitem hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</EventData_phaseitem>
										<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</EventData_pickup>
										<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</EventData_place>
									</UnstanceAction>
								</Else>
							</IfElseCondition>
							<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantSendMessageToNPC>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child>
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
								</Child>
								<OnSuccess>
									<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</RemoveLink>
											<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AddLink>
											<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</AddLink>
										</Sequence>
									</AtomicDecorator>
								</OnSuccess>
							</FuseBox>
						</Sequence>
					</Selector>
				</Behavior>
			</Root>
			<Forest>
				<IfElseCondition editorPosX="850" editorPosY="-390" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Then>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetItemInSlot>
						</Sequence>
					</Then>
					<Else>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</Else>
				</IfElseCondition>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="customerEatChicken" is_function="1">
		<Variables>
			<Variable name="chicken" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="chickenPhase" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="chickenTag" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="customer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="customers" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$smartObject" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;chickenSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$chicken" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<WaitAction />
					<IfElseCondition failOnCondition="false" condition="$customerParams.Position == &apos;A&apos; | $customerParams.Position == &apos;B&apos;" saveVersion="2">
						<Then canSkip="1">
							<Expression expressions="$chickenTag = &apos;sideRight&apos;" />
						</Then>
						<Else canSkip="1">
							<Expression expressions="$chickenTag = &apos;sideLeft&apos;" />
						</Else>
					</IfElseCondition>
					<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
						<Child canSkip="1">
							<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;tavernChicken&apos;">
								<IfElseCondition failOnCondition="false" condition="$chickenTag == &apos;sideLeft&apos;" saveVersion="2">
									<Then canSkip="1">
										<UnstanceAction unstance="eatingChickenLeftSitting" locationObject="" slaveObject="">
											<EventData_phaseitem Slot="$chicken" name="&apos;chickenSlot&apos;" />
										</UnstanceAction>
									</Then>
									<Else canSkip="1">
										<UnstanceAction unstance="eatingChickenRightSitting" locationObject="" slaveObject="">
											<EventData_phaseitem Slot="$chicken" name="&apos;chickenSlot&apos;" />
										</UnstanceAction>
									</Else>
								</IfElseCondition>
							</Semaphore>
						</Child>
						<OnSuccess canSkip="1">
							<AtomicDecorator>
								<Sequence>
									<GraphSearch Origin="$smartObject" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;tavernChicken&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$chickenPhase" />
									</GraphSearch>
									<Expression expressions="$chickenPhase = $chickenPhase - 1" />
									<IfElseCondition failOnCondition="false" condition="$chickenPhase &gt; 1" saveVersion="2">
										<Then canSkip="1">
											<AddLink From="$smartObject" To="$chicken" Tag="&apos;tavernChicken&apos;" Data="$chickenPhase" LinkOpHandleMode="OverWrite" />
										</Then>
										<Else canSkip="1">
											<Sequence>
												<GraphSearch Origin="$smartObject" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<Nodalyzer Quantifiers="ForAll" Parent="" Child="$customers" saveVersion="2" />
													<LinkTagFilter tag="&apos;tavernGuest&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
												</GraphSearch>
												<RemoveLink From="$smartObject" To="$chicken" Tag="&apos;tavernChicken&apos;" LinkOpHandleMode="Success" />
												<ForEach startIndex="0" step="1" array="$customers" iterator="" value="$customer" break="">
													<Sequence>
														<GraphSearch Origin="$customer" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<LinkTagFilter tag="&apos;guestSeat&apos;" prune="true" negprune="unknown" Parent="" Child="$seat" Data="" />
														</GraphSearch>
														<AddLink From="$seat" To="$smartObject" Tag="&apos;tavernParams&apos;" Data="&apos;chickenEaten&apos;" LinkOpHandleMode="OverWrite" />
													</Sequence>
												</ForEach>
											</Sequence>
										</Else>
									</IfElseCondition>
								</Sequence>
							</AtomicDecorator>
						</OnSuccess>
					</FuseBox>
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="chicken" comment="" />
				<Variable name="chickenPhase" comment="" />
				<Variable name="chickenTag" comment="" />
				<Variable name="customer" comment="" />
				<Variable name="customers" comment="" />
				<Variable name="seat" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="smartObject" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Then>
							<Else>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Else>
						</IfElseCondition>
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<OutputBreakpoints />
												<EventData_phaseitem hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</EventData_phaseitem>
											</UnstanceAction>
										</Then>
										<Else>
											<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<OutputBreakpoints />
												<EventData_phaseitem hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</EventData_phaseitem>
											</UnstanceAction>
										</Else>
									</IfElseCondition>
								</Semaphore>
							</Child>
							<OnSuccess>
								<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</AddLink>
											</Then>
											<Else>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
														</Nodalyzer>
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
													</GraphSearch>
													<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</RemoveLink>
													<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
															</GraphSearch>
															<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</AddLink>
														</Sequence>
													</ForEach>
												</Sequence>
											</Else>
										</IfElseCondition>
									</Sequence>
								</AtomicDecorator>
							</OnSuccess>
						</FuseBox>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="customerOrderFood" is_function="1">
		<Variables>
			<Variable name="animationApproach" type="enum:animationApproach" values="" isPersistent="0" form="single" />
			<Variable name="archetype" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="tavernParams" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<LinkGate from="$customerParams.seat" to="$smartObject" tag="&apos;orderFood&apos;" amount="AtLeastOne" presence="Present" RunLogic="Halt">
						<ChangeBehaviorStateElement smartEntity="$smartObject" behavior="&apos;use_bartender_bringFood&apos;" state="Enabled" allowAnyState="false" enabled="true">
							<Sequence>
								<WaitAction />
								<SuppressFailure>
									<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;10s&apos;" LockManagerType="Local" SemaphoreName="&apos;tavernFood&apos;" RunLogic="KeepRunning">
										<Sequence>
											<SetExternalLock LockManagerType="Local" Locked="true" LockName="&apos;tavernFood&apos;" />
											<Expression expressions="$animationApproach = $enum:animationApproach.dontPlayDialogAnimations" />
											<Function_crime_getSoulArchetype soul="$this.id" archetype="$archetype" nodeLabel="22707161" />
											<IfElseCondition failOnCondition="false" condition="$archetype == &apos;NPC&apos;" saveVersion="2">
												<Then canSkip="1">
													<Parallel successMode="All" failureMode="Any">
														<Function_speech_schedulerMonolog alias="" animationApproach="$animationApproach" context="" lookAtId="" metarole="&apos;ZAKAZNIK_OBJEDNANI_JIDLA_MUZ&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="12199105" />
														<AnimationAction fragment="&apos;Guest_Call&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
													</Parallel>
												</Then>
												<Else canSkip="1">
													<AnimationAction fragment="&apos;BathrobesSittingCall&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
												</Else>
											</IfElseCondition>
											<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
									</ExternalLock>
								</SuppressFailure>
							</Sequence>
						</ChangeBehaviorStateElement>
					</LinkGate>
					<LinkGate from="$customerParams.seat" to="$smartObject" tag="&apos;orderFood&apos;" amount="AtLeastOne" presence="NotThere" RunLogic="KeepRunning">
						<Sequence>
							<GraphSearch Origin="$customerParams.seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;tavernParams&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$tavernParams" />
							</GraphSearch>
							<IfCondition failOnCondition="false" condition="$tavernParams == &apos;orderFood&apos;">
								<RemoveLink From="$customerParams.seat" To="$smartObject" Tag="&apos;tavernParams&apos;" LinkOpHandleMode="Success" />
							</IfCondition>
						</Sequence>
					</LinkGate>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="animationApproach" comment="" />
				<Variable name="archetype" comment="" />
				<Variable name="tavernParams" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="smartObject" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</SetExternalLock>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
												<Function_crime_getSoulArchetype hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_crime_getSoulArchetype>
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_speech_schedulerMonolog>
															<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</AnimationAction>
														</Parallel>
													</Then>
													<Else>
														<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</AnimationAction>
													</Else>
												</IfElseCondition>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</ExternalLock>
									</SuppressFailure>
								</Sequence>
							</ChangeBehaviorStateElement>
						</LinkGate>
						<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</RemoveLink>
								</IfCondition>
							</Sequence>
						</LinkGate>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="findEmptySlot" is_function="1">
		<Variables>
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="linkName" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="searchOrigin" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="slot" type="_wuid" values="" isPersistent="0" form="single" requirementType="Out" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<HandCheck who="$npc" LeftHand="$leftHand" RightHand="$rightHand" />
					<Selector>
						<IfCondition failOnCondition="true" condition="$leftHand ~= $__null">
							<Sequence>
								<GetItemProperty itemId="$leftHand" property="Guid" result="$itemGuid" />
								<GraphSearch Origin="$searchOrigin" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="$linkName" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									<SlotClassFilter ClassId="$itemGuid" Category="" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
								</GraphSearch>
								<Expression expressions="$item = $leftHand" />
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="true" condition="$rightHand ~= $__null">
							<Sequence>
								<GetItemProperty itemId="$rightHand" property="Guid" result="$itemGuid" />
								<GraphSearch Origin="$searchOrigin" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="$linkName" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									<SlotClassFilter ClassId="$itemGuid" Category="" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
								</GraphSearch>
								<Expression expressions="$item = $rightHand" />
							</Sequence>
						</IfCondition>
						<GraphSearch Origin="$searchOrigin" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="$linkName" prune="true" negprune="unknown" Parent="" Child="$slot" Data="" />
							<ExistPath Origin="$slot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;SlotLink&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								<Nodalyzer Quantifiers="Exists" Parent="" Child="$item" saveVersion="2" />
							</ExistPath>
						</GraphSearch>
						<GraphSearch Origin="$searchOrigin" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="$linkName" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							<SlotHasAvailableItemFilter reservationHolder="$npc" useHomeItem="true" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
							<Nodalyzer Quantifiers="Exists" Parent="" Child="$slot" saveVersion="2" />
						</GraphSearch>
					</Selector>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Function_findItemOnSlot linkName="" npc="" searchOrigin="" item="" nodeLabel="69486920" />
			<Sequence>
				<GetItemInSlot slot="$slot" useHomeItem="true" item="$item" />
			</Sequence>
			<SlotClassFilter ClassId="" Category="" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
			<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="linkName" comment="" />
				<Variable name="searchOrigin" comment="" />
				<Variable name="slot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</HandCheck>
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetItemProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetItemProperty>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<SlotClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SlotClassFilter>
									</GraphSearch>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetItemProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetItemProperty>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
										<SlotClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SlotClassFilter>
									</GraphSearch>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
							</IfCondition>
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
								<ExistPath hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
									<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
									</Nodalyzer>
								</ExistPath>
							</GraphSearch>
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
								<SlotHasAvailableItemFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SlotHasAvailableItemFilter>
								<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
								</Nodalyzer>
							</GraphSearch>
						</Selector>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Function_findItemOnSlot editorPosX="20" editorPosY="-120" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Function_findItemOnSlot>
				<Sequence editorPosX="520" editorPosY="930" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</GetItemInSlot>
				</Sequence>
				<SlotClassFilter editorPosX="1018" editorPosY="608" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</SlotClassFilter>
				<GraphSearch editorPosX="95" editorPosY="330" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</GraphSearch>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_female" is_function="0">
		<Variables>
			<Variable name="antiFood" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="apointmentSpot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="behavior" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="bench" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="customerParams" type="customerParams" values="" isPersistent="0" form="single" />
			<Variable name="fireplace" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="iterator" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="seats" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="seatsdata" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="soupSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="soupSlots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="soupSlotsData" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="target" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<Selector>
						<Sequence>
							<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;guestSeat&apos;" prune="true" negprune="unknown" Parent="" Child="$customerParams.seat" Data="$customerParams.Position" />
							</GraphSearch>
							<IfCondition failOnCondition="true" condition="$customerParams.seat == $__resource.id">
								<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;guestSoup&apos;" prune="true" negprune="unknown" Parent="" Child="$customerParams.soup" Data="" />
								</GraphSearch>
							</IfCondition>
						</Sequence>
						<Sequence>
							<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory,slot&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;tavernSeat&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								<Datalyzer Tag="&apos;tavernSeat&apos;" Quantifiers="ForAll" Parent="" Child="$seats" Data="$seatsdata" saveVersion="2" />
							</GraphSearch>
							<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;tavernSoup&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								<Datalyzer Tag="&apos;tavernSoup&apos;" Quantifiers="ForAll" Parent="" Child="$soupSlots" Data="$soupSlotsData" saveVersion="2" />
							</GraphSearch>
							<ForEach startIndex="0" step="1" array="$seats" iterator="$iterator" value="$seat" break="">
								<IfCondition failOnCondition="false" condition="$seat == $__resource.id">
									<Expression expressions="$customerParams.Position = $seatsdata[$iterator] &#10;$customerParams.seat = $seat" />
								</IfCondition>
							</ForEach>
							<ForEach startIndex="0" step="1" array="$soupSlots" iterator="$iterator" value="$soupSlot" break="">
								<IfCondition failOnCondition="false" condition="$soupSlotsData[$iterator] == $customerParams.Position">
									<Expression expressions="$customerParams.soup = $soupSlot" />
								</IfCondition>
							</ForEach>
						</Sequence>
					</Selector>
					<Expression expressions="$smartObject = $__object.id &#10;$target = $this.id &#10;$customerParams.customer = $this.id &#10;$bench = $__resource.id" />
					<GraphSearch Origin="$customerParams.seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernParams&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$behavior" />
					</GraphSearch>
					<GraphSearch Origin="$customerParams.seat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;antifood&apos;" prune="true" negprune="unknown" Parent="" Child="$antiFood" Data="" />
					</GraphSearch>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<MoveParamsDecorator speed="Walk" pathFindingParams="" doorClosingPolicy="LeaveOpened">
					<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_bartender_cleaningTable&apos;" state="Disabled" allowAnyState="false" enabled="true">
						<EntityContextElement context="DisableSituationParticipation" enabled="true">
							<EntityContextElement context="ForceForbidAutoTorch" enabled="true">
								<AddLinkElement from="$this.id" to="$customerParams.seat" tag="&apos;guestSeat&apos;" data="$customerParams.Position" enabled="true">
									<AddLinkElement from="$this.id" to="$customerParams.soup" tag="&apos;guestSoup&apos;" data="" enabled="true">
										<AddLinkElement from="$__object.id" to="$this.id" tag="&apos;tavernGuest&apos;" data="" enabled="true">
											<StanceElement smartObject="$bench" stance="sitting" allowAny="false" enabled="true">
												<Switch>
													<IfCondition failOnCondition="false" condition="$behavior == &apos;soup&apos;">
														<Function_customerEatMash customerParams="$customerParams" smartObject="$smartObject" nodeLabel="69181451" />
													</IfCondition>
													<IfCondition failOnCondition="false" condition="$behavior == &apos;soupEaten&apos;">
														<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_bartender_takeAwayBowl&apos;" state="Enabled" allowAnyState="false" enabled="true">
															<Sequence>
																<WaitAction />
																<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
															</Sequence>
														</ChangeBehaviorStateElement>
													</IfCondition>
													<IfCondition failOnCondition="false" condition="$behavior == &apos;orderFood&apos;">
														<Function_customerOrderFood customerParams="$customerParams" smartObject="$smartObject" nodeLabel="59361933" />
													</IfCondition>
													<DefaultBranch>
														<Sequence>
															<WaitAction />
															<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
															<Selector>
																<Sequence>
																	<GraphSearch Origin="$smartObject" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																		<LinkTagFilter tag="&apos;appointmentSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$apointmentSpot" Data="" />
																	</GraphSearch>
																	<GraphSearch Origin="$apointmentSpot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																		<LinkTagFilter tag="&apos;fireplace&apos;" prune="true" negprune="unknown" Parent="" Child="$fireplace" Data="" />
																	</GraphSearch>
																	<Selector>
																		<GraphSearch Origin="$fireplace" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																			<LinkTagFilter tag="&apos;tavern_poisonedKettle&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																		</GraphSearch>
																		<IfCondition failOnCondition="false" condition="$antiFood == $__null">
																			<RandomGate opensWithChance="0.200000" saveVersion="2">
																				<Then canSkip="1">
																					<Sequence>
																						<AddLink From="$customerParams.seat" To="$smartObject" Tag="&apos;orderFood&apos;" Data="" LinkOpHandleMode="OverWrite" />
																						<AddLink From="$customerParams.seat" To="$__object.id" Tag="&apos;tavernParams&apos;" Data="&apos;orderFood&apos;" LinkOpHandleMode="OverWrite" />
																					</Sequence>
																				</Then>
																				<Else canSkip="1">
																					<Success />
																				</Else>
																			</RandomGate>
																		</IfCondition>
																	</Selector>
																</Sequence>
																<Success />
															</Selector>
														</Sequence>
													</DefaultBranch>
												</Switch>
											</StanceElement>
										</AddLinkElement>
									</AddLinkElement>
								</AddLinkElement>
							</EntityContextElement>
						</EntityContextElement>
					</ChangeBehaviorStateElement>
				</MoveParamsDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="antiFood" comment="" />
				<Variable name="apointmentSpot" comment="" />
				<Variable name="behavior" comment="" />
				<Variable name="bench" comment="" />
				<Variable name="customerParams" comment="" />
				<Variable name="fireplace" comment="" />
				<Variable name="iterator" comment="" />
				<Variable name="seat" comment="" />
				<Variable name="seats" comment="" />
				<Variable name="seatsdata" comment="" />
				<Variable name="smartObject" comment="" />
				<Variable name="soupSlot" comment="" />
				<Variable name="soupSlots" comment="" />
				<Variable name="soupSlotsData" comment="" />
				<Variable name="target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
								</IfCondition>
							</Sequence>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
									<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
									</Datalyzer>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
									<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
									</Datalyzer>
								</GraphSearch>
								<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
								</ForEach>
								<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
								</ForEach>
							</Sequence>
						</Selector>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
					</Sequence>
				</OnInit>
				<Behavior>
					<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Function_customerEatMash hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_customerEatMash>
														</IfCondition>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</WaitAction>
																	<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Wait>
																</Sequence>
															</ChangeBehaviorStateElement>
														</IfCondition>
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Function_customerOrderFood hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_customerOrderFood>
														</IfCondition>
														<DefaultBranch>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</WaitAction>
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
																<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</LinkTagFilter>
																		</GraphSearch>
																		<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</LinkTagFilter>
																		</GraphSearch>
																		<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</LinkTagFilter>
																			</GraphSearch>
																			<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																					<Then>
																						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</AddLink>
																							<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</AddLink>
																						</Sequence>
																					</Then>
																					<Else>
																						<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Success>
																					</Else>
																				</RandomGate>
																			</IfCondition>
																		</Selector>
																	</Sequence>
																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Success>
																</Selector>
															</Sequence>
														</DefaultBranch>
													</Switch>
												</StanceElement>
											</AddLinkElement>
										</AddLinkElement>
									</AddLinkElement>
								</EntityContextElement>
							</EntityContextElement>
						</ChangeBehaviorStateElement>
					</MoveParamsDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_customerQuest" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="crime_keepConfiscatedItems" enabled="true">
					<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_customerEatOnly&apos;" state="Disabled" allowAnyState="false" enabled="true">
						<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_customerDrinkOnly&apos;" state="Disabled" allowAnyState="false" enabled="true">
							<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_customer&apos;" state="Disabled" allowAnyState="false" enabled="true">
								<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_female&apos;" state="Disabled" allowAnyState="false" enabled="true">
									<IncludeTree File="&apos;profession/tavern/bartender.xml&apos;" Name="&apos;use_customer&apos;" nodeLabel="30933266" />
								</ChangeBehaviorStateElement>
							</ChangeBehaviorStateElement>
						</ChangeBehaviorStateElement>
					</ChangeBehaviorStateElement>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="-40" editorPosY="-20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</IncludeTree>
									</ChangeBehaviorStateElement>
								</ChangeBehaviorStateElement>
							</ChangeBehaviorStateElement>
						</ChangeBehaviorStateElement>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_customerDrinkOnlyQuest" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="crime_keepConfiscatedItems" enabled="true">
					<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_customerEatOnly&apos;" state="Disabled" allowAnyState="false" enabled="true">
						<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_customerDrinkOnly&apos;" state="Disabled" allowAnyState="false" enabled="true">
							<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_customer&apos;" state="Disabled" allowAnyState="false" enabled="true">
								<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_female&apos;" state="Disabled" allowAnyState="false" enabled="true">
									<IncludeTree File="&apos;profession/tavern/bartender.xml&apos;" Name="&apos;use_customerDrinkOnly&apos;" nodeLabel="50766021" />
								</ChangeBehaviorStateElement>
							</ChangeBehaviorStateElement>
						</ChangeBehaviorStateElement>
					</ChangeBehaviorStateElement>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</IncludeTree>
									</ChangeBehaviorStateElement>
								</ChangeBehaviorStateElement>
							</ChangeBehaviorStateElement>
						</ChangeBehaviorStateElement>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="set_customerDrink" is_function="0">
		<Variables>
			<Variable name="beerSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="beerSlots" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="beerSlotsData" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="customerBeer" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="customerSeat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="iterator" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="position" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="seats" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="seatsData" type="_string" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory,slot&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernSeat&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;tavernSeat&apos;" Quantifiers="ForAll" Parent="" Child="$seats" Data="$seatsData" saveVersion="2" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernBeer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;tavernBeer&apos;" Quantifiers="ForAll" Parent="" Child="$beerSlots" Data="$beerSlotsData" saveVersion="2" />
					</GraphSearch>
					<ForEach startIndex="0" step="1" array="$seats" iterator="$iterator" value="$seat" break="">
						<IfCondition failOnCondition="false" condition="$seat == $__resource.id">
							<Expression expressions="$position = $seatsData[$iterator] &#10;$customerSeat = $seat" />
						</IfCondition>
					</ForEach>
					<ForEach startIndex="0" step="1" array="$beerSlots" iterator="$iterator" value="$beerSlot" break="">
						<IfCondition failOnCondition="false" condition="$beerSlotsData[$iterator] == $position">
							<Expression expressions="$customerBeer = $beerSlot" />
						</IfCondition>
					</ForEach>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<AnyDecorator preset="AnyStance">
					<Sequence>
						<AddLink From="$customerSeat" To="$customerBeer" Tag="&apos;tavernBeerCount&apos;" Data="20" LinkOpHandleMode="OverWrite" />
						<AddLink From="$customerSeat" To="$__object.id" Tag="&apos;tavernParams&apos;" Data="&apos;beer&apos;" LinkOpHandleMode="OverWrite" />
					</Sequence>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="beerSlot" comment="" />
				<Variable name="beerSlots" comment="" />
				<Variable name="beerSlotsData" comment="" />
				<Variable name="customerBeer" comment="" />
				<Variable name="customerSeat" comment="" />
				<Variable name="iterator" comment="" />
				<Variable name="position" comment="" />
				<Variable name="seat" comment="" />
				<Variable name="seats" comment="" />
				<Variable name="seatsData" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
					</Sequence>
				</OnInit>
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AddLink>
							<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AddLink>
						</Sequence>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="set_customerEat" is_function="0">
		<Variables>
			<Variable name="customerSeat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="iterator" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="position" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="seat" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="seats" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="seatsData" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="tavernParamsData" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory,slot&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernSeat&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Datalyzer Tag="&apos;tavernSeat&apos;" Quantifiers="ForAll" Parent="" Child="$seats" Data="$seatsData" saveVersion="2" />
					</GraphSearch>
					<ForEach startIndex="0" step="1" array="$seats" iterator="$iterator" value="$seat" break="">
						<IfCondition failOnCondition="false" condition="$seat == $__resource.id">
							<Expression expressions="$customerSeat = $seat" />
						</IfCondition>
					</ForEach>
					<GraphSearch Origin="$customerSeat" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tavernParams&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$tavernParamsData" />
					</GraphSearch>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<IfCondition failOnCondition="false" condition="$tavernParamsData == &apos;beer&apos; | $tavernParamsData == $__null | $tavernParamsData == &apos;&apos;">
					<AnyDecorator preset="AnyStance">
						<Sequence>
							<AddLink From="$customerSeat" To="$__object.id" Tag="&apos;orderFood&apos;" Data="" LinkOpHandleMode="OverWrite" />
							<AddLink From="$customerSeat" To="$__object.id" Tag="&apos;tavernParams&apos;" Data="&apos;orderFood&apos;" LinkOpHandleMode="OverWrite" />
						</Sequence>
					</AnyDecorator>
				</IfCondition>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="customerSeat" comment="" />
				<Variable name="iterator" comment="" />
				<Variable name="position" comment="" />
				<Variable name="seat" comment="" />
				<Variable name="seats" comment="" />
				<Variable name="seatsData" comment="" />
				<Variable name="tavernParamsData" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Datalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Datalyzer>
						</GraphSearch>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
						</ForEach>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
					</Sequence>
				</OnInit>
				<Behavior>
					<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</AddLink>
								<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</AddLink>
							</Sequence>
						</AnyDecorator>
					</IfCondition>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>