<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="waitInAnimation" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="wait" is_function="0">
		<Variables>
			<Variable name="arrows" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="bow" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="arrows" comment="" />
				<Variable name="bow" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-40" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="move_simple" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="iterator" type="_int" values="0" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="move" type="_bool" values="true" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tagpointArray" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="" Borders="" depth="-1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;move&apos;" prune="false" negprune="true" Parent="" Child="" Data="" />
					<Nodalyzer Quantifiers="ForAll" Parent="" Child="$tagpointArray" saveVersion="2" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<HandCheck who="$this.id" LeftHand="$leftHand" RightHand="$rightHand" />
							<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							<HandContentElement hand="Left" item="$leftHand" allowAny="false" decisionLabel="Label1" saveVersion="2">
								<Search canSkip="1">
									<Success />
								</Search>
								<Exec canSkip="1">
									<Sequence>
										<ForEach startIndex="0" step="1" array="$tagpointArray" iterator="$iterator" value="" break="">
											<Move stopWithinDistance="0.500000" stopDistanceVariation="2.000000" rayCasteFlee="false" successDistance="0.200000" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$tagpointArray[$iterator]" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
										</ForEach>
										<Expression expressions="$behaviorSuccess = true" />
										<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
									</Sequence>
								</Exec>
							</HandContentElement>
						</Sequence>
					</Child>
					<OnFail canSkip="1">
						<Sequence>
							<Expression expressions="$behaviorSuccess = false" />
							<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
						</Sequence>
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="iterator" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="move" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="tagpointArray" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
						<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
						</Nodalyzer>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</HandCheck>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Search>
									<Exec>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Move>
											</ForEach>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</InstantSendMessageToNPC>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</Exec>
								</HandContentElement>
							</Sequence>
						</Child>
						<OnFail>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantSendMessageToNPC>
							</Sequence>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="move_formation_leader" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="fight" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="enemySoldier" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="moveTarget" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="pathFindingParams" type="pathFindingParams" values="useGeneratedNSO(true)" isPersistent="0" form="single" />
			<Variable name="surrenderChatResult" type="crime:playerSurrenderChatFeedback" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="speech_readyForSwitchDialog" target="$this.id">
					<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
						<Child canSkip="1">
							<Sequence>
								<IsFastForwarded failOnCondition="false" saveVersion="2">
									<Else canSkip="1">
										<SyncWithTrackview NPC="$this.id" />
									</Else>
								</IsFastForwarded>
								<Selector>
									<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;moveBeforeAttack&apos;" prune="true" negprune="unknown" Parent="" Child="$moveTarget" Data="" />
									</GraphSearch>
									<Success />
								</Selector>
								<Selector>
									<Sequence>
										<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;fightPlayer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
										</GraphSearch>
										<Expression expressions="$enemySoldier = $__player" />
									</Sequence>
									<LinkGate from="$wuid" to="" tag="$string" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
										<GraphSearch Origin="$wuid" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="$string" prune="true" negprune="unknown" Parent="" Child="$enemySoldier" Data="" />
											<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
										</GraphSearch>
									</LinkGate>
								</Selector>
								<IfCondition failOnCondition="false" condition="$moveTarget ~= $__null">
									<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$moveTarget" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$pathFindingParams" staminaPolicy="" pathInfo="" />
								</IfCondition>
								<Parallel successMode="Any" failureMode="Any">
									<MeleeOffenseAutomationDecorator active="true">
										<MeleeDefenseAutomationDecorator active="true">
											<MeleeGuardAutomationDecorator GuardMode="automate" active="true">
												<WeaponAutomationDecorator WeaponChange="none" active="true">
													<CombatFollowerDecorator ProbablisticDrivenSweetSpot="true" RPGSweetSpotArcDriver="true" active="true">
														<CombatAction TargetNPC="$enemySoldier" RelationOverride="None" />
													</CombatFollowerDecorator>
												</WeaponAutomationDecorator>
											</MeleeGuardAutomationDecorator>
										</MeleeDefenseAutomationDecorator>
									</MeleeOffenseAutomationDecorator>
									<Loop count="-1">
										<SuppressFailure>
											<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$surrenderChatResult" senderInfo="" inbox="&apos;crime_playerSurrenderChatFeedback&apos;" condition="" answerVar="">
												<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;NPC_NEAKCEPTUJE_HRACOVO_VZDAVANI_NEVZDAVACI_KONTEXT&apos;" skipInLod="false" subtitlesDown="false" nodeLabel="18581200" />
											</ProcessMessage>
										</SuppressFailure>
									</Loop>
									<Loop count="-1">
										<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="$data:script_param[&apos;crime_surrenderingMaxDistance&apos;].value" High="$data:script_param[&apos;crime_surrenderingMaxDistance&apos;].value" Negation="false" OpenInMiddle="false" RunLogic="Halt">
											<GameContext context="combat_playerSurrenderDistanceCondition">
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
											</GameContext>
										</DistanceGate>
									</Loop>
								</Parallel>
								<Expression expressions="$behaviorSuccess = true" />
								<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</Child>
						<OnFail canSkip="1">
							<Sequence>
								<Expression expressions="$behaviorSuccess = false" />
								<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
							</Sequence>
						</OnFail>
					</FuseBox>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="enemySoldier" comment="" />
				<Variable name="moveTarget" comment="" />
				<Variable name="pathFindingParams" comment="" />
				<Variable name="surrenderChatResult" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IsFastForwarded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Else>
											<SyncWithTrackview hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</SyncWithTrackview>
										</Else>
									</IsFastForwarded>
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Selector>
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
											</GraphSearch>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Sequence>
										<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
												<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</SoulIsAliveFilter>
											</GraphSearch>
										</LinkGate>
									</Selector>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
									</IfCondition>
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<MeleeDefenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<CombatFollowerDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</CombatAction>
														</CombatFollowerDecorator>
													</WeaponAutomationDecorator>
												</MeleeGuardAutomationDecorator>
											</MeleeDefenseAutomationDecorator>
										</MeleeOffenseAutomationDecorator>
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_speech_schedulerMonolog>
												</ProcessMessage>
											</SuppressFailure>
										</Loop>
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GameContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</GameContext>
											</DistanceGate>
										</Loop>
									</Parallel>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantSendMessageToNPC>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Child>
							<OnFail>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantSendMessageToNPC>
								</Sequence>
							</OnFail>
						</FuseBox>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="animcharSetup" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="endNotification">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="shoot" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData Signature="goto" EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="-50" editorPosY="-10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="move_formation" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="formation" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="formationParticipants" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="ladderItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ladderLink" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ladderSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leader" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="params" type="pathFindingParams" values="usePaths(false)" isPersistent="0" form="single" />
			<Variable name="placeSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tagPoint" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnyDecorator preset="crime_keepItems">
					<Parallel successMode="Any" failureMode="Any">
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;ladder&apos;" prune="true" negprune="unknown" Parent="" Child="$ladderLink" Data="" />
							</GraphSearch>
							<IfElseCondition failOnCondition="false" condition="$ladderLink ~= $__null" saveVersion="2">
								<Then canSkip="1">
									<GameContext context="Battle">
										<Sequence>
											<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;placeSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$ladderSlot" Data="" />
											</GraphSearch>
											<Function_findItemOnSlot linkName="&apos;placeSlot&apos;" npc="$this.id" searchOrigin="$this.id" item="$ladderItem" nodeLabel="12717627" />
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										</Sequence>
									</GameContext>
								</Then>
								<Else canSkip="1">
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Else>
							</IfElseCondition>
						</Sequence>
						<Sequence>
							<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;0s&apos;" LockManagerType="Local" SemaphoreName="&apos;leaderAssignment&apos;">
								<Selector>
									<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;leader&apos;" prune="true" negprune="unknown" Parent="" Child="$leader" Data="" />
									</GraphSearch>
									<AddLink From="$__object.id" To="$this.id" Tag="&apos;leader&apos;" Data="" LinkOpHandleMode="Success" />
								</Selector>
							</Semaphore>
							<LinkGate from="$__object.id" to="" tag="&apos;leader&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
								<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
									<Child canSkip="1">
										<Selector>
											<DistanceCondition Origin="$this.id" ReferencePt="$wuid" Low="5.000000" High="5.000000" Negation="true" ValueOnMiddle="false" failOnCondition="true">
												<MeleeGuardAutomationDecorator GuardMode="freeBlock" active="true">
													<Parallel successMode="Any" failureMode="Any">
														<LinkGate from="$__object.id" to="$this.id" tag="&apos;leader&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
															<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
																<Child canSkip="1">
																	<Sequence>
																		<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																			<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
																			<Nodalyzer Quantifiers="ForAll" Parent="" Child="$formationParticipants" saveVersion="2" />
																		</GraphSearch>
																		<MakeFormation FormationName="$string" HandleVariable="$formation" />
																		<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
																		<SuppressFailure>
																			<InstantMultiSendMessageToNPC targets="$formationParticipants" successMode="Any" failureMode="Any" variable="$formation" />
																		</SuppressFailure>
																		<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
																		<Callback_empty EventName="&apos;OnRecordingReady&apos;" />
																		<While doFail="false" propagateChildFail="false" condition="$wuid ~= $__null">
																			<Sequence>
																				<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$wuid" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$params" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
																				<Expression expressions="$tagPoint = $wuid" />
																				<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
																				<Selector>
																					<GraphSearch Origin="$tagPoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																						<LinkTagFilter tag="&apos;nextTp&apos;" prune="true" negprune="unknown" Parent="" Child="$wuid" Data="" />
																					</GraphSearch>
																					<Expression expressions="$wuid = $__null" />
																				</Selector>
																			</Sequence>
																		</While>
																		<IfCondition failOnCondition="false" condition="$ladderLink ~= $__null">
																			<HandContentElement hand="Right" item="$ladderItem" allowAny="false" decisionLabel="battle_ladder" useDecision="true" saveVersion="2">
																				<Search canSkip="1">
																					<Success />
																				</Search>
																				<Exec canSkip="1">
																					<PlaceAction item="$ladderItem" slot="$ladderSlot" />
																				</Exec>
																			</HandContentElement>
																		</IfCondition>
																		<Expression expressions="$behaviorSuccess = true" />
																		<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
																		<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
																	</Sequence>
																</Child>
																<OnFail canSkip="1">
																	<IfCondition failOnCondition="false" condition="$behaviorSuccess == false">
																		<SuppressFailure>
																			<EndFormation FormationHandle="$formation" />
																		</SuppressFailure>
																	</IfCondition>
																</OnFail>
															</FuseBox>
														</LinkGate>
														<LinkGate from="$__object.id" to="$this.id" tag="&apos;leader&apos;" amount="AtLeastOne" presence="NotThere" RunLogic="KeepRunning">
															<Sequence>
																<ReadMessage timeout="&apos;-1&apos;" timeType="GameTime" variable="$formation" senderInfo="" inbox="&apos;battle_formationSetup&apos;" condition="" />
																<SuppressFailure>
																	<Parallel successMode="Any" failureMode="Any">
																		<CombatMoveDecorator>
																			<FormationFollower FormationHandle="$formation" PreferredPositions="" FormationMode="MoveHistory" AllowRelocation="false" />
																		</CombatMoveDecorator>
																		<Sequence>
																			<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
																			<Expression expressions="$behaviorSuccess = true" />
																			<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
																			<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
																		</Sequence>
																	</Parallel>
																</SuppressFailure>
																<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
															</Sequence>
														</LinkGate>
													</Parallel>
												</MeleeGuardAutomationDecorator>
											</DistanceCondition>
											<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										</Selector>
									</Child>
									<OnFail canSkip="1">
										<IfCondition failOnCondition="false" condition="$behaviorSuccess == false">
											<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
										</IfCondition>
									</OnFail>
								</FuseBox>
							</LinkGate>
						</Sequence>
					</Parallel>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<Expression expressions="$behaviorSuccess = false" />
			</Sequence>
			<FormationInSpotsGate Formation="$formation" PercentageThreshold="100.000000" WaitingTimeout="&apos;-1&apos;" FailOnTimeout="false" RunLogic="KeepRunning">
				<EndFormation FormationHandle="$formation" />
			</FormationInSpotsGate>
			<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
		</ForestContainer>
		<EditorData Signature="wuidData_string" EventSet="battle_recordingNotification">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="formation" comment="" />
				<Variable name="formationParticipants" comment="" />
				<Variable name="ladderItem" comment="" />
				<Variable name="ladderLink" comment="" />
				<Variable name="ladderSlot" comment="" />
				<Variable name="leader" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="params" comment="" />
				<Variable name="placeSlot" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="tagPoint" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-560" editorPosY="-70" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<GameContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
												</GraphSearch>
												<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_findItemOnSlot>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</GameContext>
									</Then>
									<Else>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Else>
								</IfElseCondition>
							</Sequence>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AddLink>
									</Selector>
								</Semaphore>
								<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Child>
											<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Child>
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</SoulIsAliveFilter>
																				<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																				</Nodalyzer>
																			</GraphSearch>
																			<MakeFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</MakeFormation>
																			<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Wait>
																			<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<InstantMultiSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</InstantMultiSendMessageToNPC>
																			</SuppressFailure>
																			<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Wait>
																			<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Callback_empty>
																			<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Move>
																					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Expression>
																					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Wait>
																					<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</LinkTagFilter>
																						</GraphSearch>
																						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Expression>
																					</Selector>
																				</Sequence>
																			</While>
																			<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																					<Search>
																						<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Success>
																					</Search>
																					<Exec>
																						<PlaceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</PlaceAction>
																					</Exec>
																				</HandContentElement>
																			</IfCondition>
																			<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Expression>
																			<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</InstantSendMessageToNPC>
																			<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Wait>
																		</Sequence>
																	</Child>
																	<OnFail>
																		<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<EndFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</EndFormation>
																			</SuppressFailure>
																		</IfCondition>
																	</OnFail>
																</FuseBox>
															</LinkGate>
															<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<ReadMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</ReadMessage>
																	<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<CombatMoveDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<FormationFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</FormationFollower>
																			</CombatMoveDecorator>
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Wait>
																				<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Expression>
																				<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</InstantSendMessageToNPC>
																				<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Wait>
																			</Sequence>
																		</Parallel>
																	</SuppressFailure>
																	<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Wait>
																</Sequence>
															</LinkGate>
														</Parallel>
													</MeleeGuardAutomationDecorator>
												</DistanceCondition>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Selector>
										</Child>
										<OnFail>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</InstantSendMessageToNPC>
											</IfCondition>
										</OnFail>
									</FuseBox>
								</LinkGate>
							</Sequence>
						</Parallel>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="1070" editorPosY="710" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</Sequence>
				<FormationInSpotsGate editorPosX="3320" editorPosY="-290" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<EndFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</EndFormation>
				</FormationInSpotsGate>
				<Wait editorPosX="3320" editorPosY="-430" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Wait>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="onUpdate" is_function="0">
		<Variables>
			<Variable name="activeSoldiersCount" type="_int" values="0" isPersistent="0" form="single" />
			<Variable name="alreadyStarted" type="_bool" values="" isPersistent="1" form="single" />
			<Variable name="behaviorPriority" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="commandCompleted" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="linkTag" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="restart" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="signalSent" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="soldier" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="soldiers" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="soldiersCommandCompletedCount" type="_int" values="0" isPersistent="0" form="single" />
			<Variable name="soldiersCommandFailedCount" type="_int" values="0" isPersistent="0" form="single" />
			<Variable name="soldiersCount" type="_int" values="0" isPersistent="0" form="single" />
			<Variable name="temp" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="torch" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="weponSlot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Selector>
					<Sequence>
						<IfElseCondition failOnCondition="false" condition="!$alreadyStarted" saveVersion="2">
							<Then canSkip="1">
								<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$linkTag" senderInfo="" inbox="&apos;battle_groupController_init&apos;" condition="" answerVar="">
									<Sequence>
										<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
											<Nodalyzer Quantifiers="ForAll" Parent="" Child="$soldiers" saveVersion="2" />
										</GraphSearch>
										<SendAIConceptSignal_battleCommandComplete group="$this.id" success="true" />
										<Expression expressions="$alreadyStarted = true" />
									</Sequence>
								</ProcessMessage>
							</Then>
							<Else canSkip="1">
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
									<Nodalyzer Quantifiers="ForAll" Parent="" Child="$soldiers" saveVersion="2" />
								</GraphSearch>
							</Else>
						</IfElseCondition>
						<Parallel successMode="Any" failureMode="Any">
							<While doFail="false" propagateChildFail="false" condition="true">
								<Sequence>
									<Selector>
										<Sequence>
											<Expression expressions="$soldiersCount = 0" />
											<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
												<EvaLLyzer Expresion="$soldiersCount = $soldiersCount + 1" Quantifiers="ForAll" saveVersion="2" />
											</GraphSearch>
										</Sequence>
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
									</Selector>
									<IfGate atomic="true" condition="$restart == true" RunLogic="KeepRunning">
										<Expression expressions="$restart = false" />
									</IfGate>
								</Sequence>
							</While>
							<IfGate atomic="false" condition="$soldiersCount &gt; 0" RunLogic="KeepRunning">
								<While doFail="false" propagateChildFail="false" condition="true">
									<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$commandCompleted" senderInfo="" inbox="&apos;battle_behaviorCompleted&apos;" condition="" answerVar="">
										<Sequence>
											<IfElseCondition failOnCondition="false" condition="$commandCompleted" saveVersion="2">
												<Then canSkip="1">
													<Expression expressions="$soldiersCommandCompletedCount += 1" />
												</Then>
												<Else canSkip="1">
													<Expression expressions="$soldiersCommandFailedCount += 1" />
												</Else>
											</IfElseCondition>
											<ReinitVariable variable="$activeSoldiersCount" />
											<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
												<EvaLLyzer Expresion="$activeSoldiersCount = $activeSoldiersCount + 1" Quantifiers="ForAll" saveVersion="2" />
											</GraphSearch>
											<IfElseCondition failOnCondition="false" condition="$soldiersCommandCompletedCount &gt;= $activeSoldiersCount" saveVersion="2">
												<Then canSkip="1">
													<Sequence>
														<SendAIConceptSignal_battleCommandComplete group="$this.id" success="true" />
														<Expression expressions="$soldiersCommandCompletedCount = 0 &#10;$soldiersCommandFailedCount = 0 &#10;$signalSent = true &#10;$restart = true" />
													</Sequence>
												</Then>
												<Else canSkip="1">
													<IfCondition failOnCondition="false" condition="$soldiersCommandFailedCount &gt;= $soldiersCount">
														<Sequence>
															<SendAIConceptSignal_battleCommandComplete group="$this.id" success="false" />
															<Expression expressions="$soldiersCommandCompletedCount = 0 &#10;$soldiersCommandFailedCount = 0 &#10;$signalSent = true &#10;$restart = true" />
														</Sequence>
													</IfCondition>
												</Else>
											</IfElseCondition>
										</Sequence>
									</ProcessMessage>
								</While>
							</IfGate>
						</Parallel>
					</Sequence>
					<Sequence>
						<SendAIConceptSignal_battleCommandComplete group="$this.id" success="false" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</Selector>
			</Behavior>
		</Root>
		<ForestContainer>
			<RangeSorter point="" SortOrder="Ascending" Source="Child" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="activeSoldiersCount" comment="" />
				<Variable name="alreadyStarted" comment="" />
				<Variable name="behaviorPriority" comment="" />
				<Variable name="commandCompleted" comment="" />
				<Variable name="linkTag" comment="" />
				<Variable name="restart" comment="" />
				<Variable name="signalSent" comment="" />
				<Variable name="soldier" comment="" />
				<Variable name="soldiers" comment="" />
				<Variable name="soldiersCommandCompletedCount" comment="" />
				<Variable name="soldiersCommandFailedCount" comment="" />
				<Variable name="soldiersCount" comment="" />
				<Variable name="temp" comment="" />
				<Variable name="torch" comment="" />
				<Variable name="weponSlot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-460" editorPosY="-40" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</SoulIsAliveFilter>
												<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
												</Nodalyzer>
											</GraphSearch>
											<SendAIConceptSignal_battleCommandComplete hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</SendAIConceptSignal_battleCommandComplete>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Sequence>
									</ProcessMessage>
								</Then>
								<Else>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SoulIsAliveFilter>
										<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
										</Nodalyzer>
									</GraphSearch>
								</Else>
							</IfElseCondition>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</SoulIsAliveFilter>
													<EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
													</EvaLLyzer>
												</GraphSearch>
											</Sequence>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Selector>
										<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</IfGate>
									</Sequence>
								</While>
								<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Then>
													<Else>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Else>
												</IfElseCondition>
												<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ReinitVariable>
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</SoulIsAliveFilter>
													<EvaLLyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
													</EvaLLyzer>
												</GraphSearch>
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<SendAIConceptSignal_battleCommandComplete hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</SendAIConceptSignal_battleCommandComplete>
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</Sequence>
													</Then>
													<Else>
														<IfCondition hasInputBreakpoint="0" comment="nemelo by stacit &quot;==&quot;?" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<SendAIConceptSignal_battleCommandComplete hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</SendAIConceptSignal_battleCommandComplete>
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</Sequence>
														</IfCondition>
													</Else>
												</IfElseCondition>
											</Sequence>
										</ProcessMessage>
									</While>
								</IfGate>
							</Parallel>
						</Sequence>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SendAIConceptSignal_battleCommandComplete hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</SendAIConceptSignal_battleCommandComplete>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Selector>
				</Behavior>
			</Root>
			<Forest>
				<RangeSorter editorPosX="980" editorPosY="-390" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</RangeSorter>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="flee" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="params" type="pathFindingParams" values="usePaths(false)" isPersistent="0" form="single" />
			<Variable name="tagPoint" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<DisableCollisionAvoidance>
					<AnyDecorator preset="crime_keepStateAndItems" enabled="true">
						<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
							<Child canSkip="1">
								<DistanceCondition Origin="$this.id" ReferencePt="$data" Low="1.000000" High="1.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
									<Sequence>
										<While doFail="false" propagateChildFail="false" condition="$data ~= $__null">
											<Sequence>
												<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="true" successDistance="3.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$params" staminaPolicy="" pathInfo="" />
												<Expression expressions="$tagPoint = $data" />
												<Selector>
													<GraphSearch Origin="$tagPoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
														<LinkTagFilter tag="&apos;nextTp&apos;" prune="true" negprune="unknown" Parent="" Child="$data" Data="" />
													</GraphSearch>
													<Expression expressions="$data = $__null" />
												</Selector>
											</Sequence>
										</While>
										<Expression expressions="$behaviorSuccess = true" />
										<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
									</Sequence>
								</DistanceCondition>
							</Child>
							<OnFail canSkip="1">
								<Sequence>
									<Expression expressions="$behaviorSuccess = false" />
									<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
								</Sequence>
							</OnFail>
						</FuseBox>
					</AnyDecorator>
				</DisableCollisionAvoidance>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="params" comment="" />
				<Variable name="tagPoint" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-260" editorPosY="-30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<DisableCollisionAvoidance hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child>
									<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Move>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</LinkTagFilter>
														</GraphSearch>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Selector>
												</Sequence>
											</While>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</InstantSendMessageToNPC>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</DistanceCondition>
								</Child>
								<OnFail>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</InstantSendMessageToNPC>
									</Sequence>
								</OnFail>
							</FuseBox>
						</AnyDecorator>
					</DisableCollisionAvoidance>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="semaphoreMove" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="move_semaphore" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="canMove" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="group" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="referencePoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tagPoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tagPointHub" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tagPoints" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;tagPointHub&apos;" prune="true" negprune="unknown" Parent="" Child="$tagPointHub" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;distanceReference&apos;" prune="true" negprune="unknown" Parent="" Child="$referencePoint" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$tagPointHub" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;targetTagpoint&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						<Nodalyzer Quantifiers="ForAll" Parent="" Child="$tagPoints" saveVersion="2">
							<Child0 canSkip="1">
								<RangeSorter point="$this.id" SortOrder="Descending" Source="Child" />
							</Child0>
						</Nodalyzer>
					</GraphSearch>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<AnyDecorator preset="crime_keepItems" enabled="true">
					<Sequence>
						<While doFail="false" propagateChildFail="false" condition="~$canMove">
							<Sequence>
								<VarOperation varName="$group" targetVarName="" operation="Reinit" argument="" />
								<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
									<Nodalyzer Quantifiers="ForAll" Parent="" Child="$group" saveVersion="2">
										<Child0 canSkip="1">
											<RangeSorter point="$referencePoint" SortOrder="Ascending" Source="Child" />
										</Child0>
									</Nodalyzer>
								</GraphSearch>
								<IfCondition failOnCondition="false" condition="$group[0] == $this.id | $group[1] == $this.id">
									<Expression expressions="$canMove = true" />
								</IfCondition>
								<Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</While>
						<ForEach startIndex="0" step="1" array="$tagPoints" iterator="" value="$tagPoint" break="">
							<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;0s&apos;" LockManagerType="Local" SemaphoreName="&apos;$tagPoint&apos;">
								<Sequence>
									<ExactMove directionType="AlignWithEntity" directionSpecification="$tagPoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagPoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
									<Selector>
										<Sequence>
											<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;kneelOnFinished&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
											</GraphSearch>
											<UnstanceAction unstance="BattleKneelShswShld" locationObject="$tagPoint" slaveObject="" />
										</Sequence>
										<Success />
									</Selector>
									<Selector>
										<Sequence>
											<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;shieldUpOnFinished&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
											</GraphSearch>
											<IsWeaponDrawn who="$this.id" WeaponSet="Primary" saveVersion="2">
												<Then canSkip="1">
													<Sequence>
														<HandCheck who="$this.id" LeftHand="$leftHand" RightHand="$rightHand" />
														<IfElseCondition failOnCondition="false" condition="$leftHand ~= $__null" saveVersion="2">
															<Then canSkip="1">
																<UnstanceAction unstance="BattleLngsw" locationObject="$tagPoint" slaveObject="" />
															</Then>
															<Else canSkip="1">
																<UnstanceAction unstance="BattleShswShld" locationObject="$tagPoint" slaveObject="" />
															</Else>
														</IfElseCondition>
													</Sequence>
												</Then>
												<Else canSkip="1">
													<Success />
												</Else>
											</IsWeaponDrawn>
										</Sequence>
										<Success />
									</Selector>
									<Expression expressions="$behaviorSuccess = true" />
									<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Sequence>
							</Semaphore>
						</ForEach>
					</Sequence>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer>
			<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
				<Child canSkip="1">
					<Selector>
						<DistanceCondition Origin="$this.id" ReferencePt="$tagpoint" Low="3.000000" High="3.000000" Negation="true" ValueOnMiddle="false" failOnCondition="true">
							<Sequence>
								<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;lockSemaphore&apos;">
									<Move stopWithinDistance="0.500000" stopDistanceVariation="2.000000" rayCasteFlee="false" successDistance="0.200000" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$tagpoint" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
								</Semaphore>
								<Expression expressions="$behaviorSuccess = true" />
								<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
							</Sequence>
						</DistanceCondition>
						<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Selector>
				</Child>
				<OnFail canSkip="1">
					<Sequence>
						<Expression expressions="$behaviorSuccess = false" />
						<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
					</Sequence>
				</OnFail>
			</FuseBox>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="canMove" comment="" />
				<Variable name="group" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="referencePoint" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="tagPoint" comment="" />
				<Variable name="tagPointHub" comment="" />
				<Variable name="tagPoints" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child0>
									<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</RangeSorter>
								</Child0>
							</Nodalyzer>
						</GraphSearch>
					</Sequence>
				</OnInit>
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</VarOperation>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SoulIsAliveFilter>
										<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child0>
												<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</RangeSorter>
											</Child0>
										</Nodalyzer>
									</GraphSearch>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</While>
							<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ExactMove>
										<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
												</GraphSearch>
												<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</UnstanceAction>
											</Sequence>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Selector>
										<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
												</GraphSearch>
												<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</HandCheck>
															<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</UnstanceAction>
																</Then>
																<Else>
																	<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</UnstanceAction>
																</Else>
															</IfElseCondition>
														</Sequence>
													</Then>
													<Else>
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</Else>
												</IsWeaponDrawn>
											</Sequence>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Selector>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</InstantSendMessageToNPC>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Semaphore>
							</ForEach>
						</Sequence>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest>
				<FuseBox editorPosX="1470" editorPosY="-360" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Child>
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
									</Semaphore>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantSendMessageToNPC>
								</Sequence>
							</DistanceCondition>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Selector>
					</Child>
					<OnFail>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantSendMessageToNPC>
						</Sequence>
					</OnFail>
				</FuseBox>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="fight_formation" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="enemySoldier" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="fHolder" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="formation" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="$wuid" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="$string" prune="true" negprune="unknown" Parent="" Child="$enemySoldier" Data="" />
						<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;formationHolder&apos;" prune="true" negprune="unknown" Parent="" Child="$fHolder" Data="" />
					</GraphSearch>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<GetMemberFormation MemberWUID="$fHolder" FormationHandleOut="$formation" />
							<Parallel successMode="Any" failureMode="Any">
								<MeleeOffenseAutomationDecorator active="true">
									<MeleeDefenseAutomationDecorator active="true">
										<MeleeGuardAutomationDecorator GuardMode="automate" active="true">
											<WeaponAutomationDecorator WeaponChange="none" active="true">
												<CombatFollowerDecorator ProbablisticDrivenSweetSpot="true" RPGSweetSpotArcDriver="true" active="true">
													<CombatAction TargetNPC="$enemySoldier" RelationOverride="None" />
												</CombatFollowerDecorator>
											</WeaponAutomationDecorator>
										</MeleeGuardAutomationDecorator>
									</MeleeDefenseAutomationDecorator>
								</MeleeOffenseAutomationDecorator>
								<FormationFollower FormationHandle="$formation" PreferredPositions="&apos;firstLine&apos;" FormationMode="KeepShape" AllowRelocation="true" />
							</Parallel>
							<Expression expressions="$behaviorSuccess = true" />
							<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Child>
					<OnFail canSkip="1">
						<Sequence>
							<Expression expressions="$behaviorSuccess = false" />
							<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
						</Sequence>
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="enemySoldier" comment="" />
				<Variable name="fHolder" comment="" />
				<Variable name="formation" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</SoulIsAliveFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
					</Sequence>
				</OnInit>
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GetMemberFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetMemberFormation>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MeleeDefenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<CombatFollowerDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</CombatAction>
													</CombatFollowerDecorator>
												</WeaponAutomationDecorator>
											</MeleeGuardAutomationDecorator>
										</MeleeDefenseAutomationDecorator>
									</MeleeOffenseAutomationDecorator>
									<FormationFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</FormationFollower>
								</Parallel>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantSendMessageToNPC>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Child>
						<OnFail>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantSendMessageToNPC>
							</Sequence>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="playSynchronizedAnimation" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="">
						<JoinedUnstanceAction lockContext="" lockName="" lockCount="2" timeout="&apos;-1&apos;" unstance="AngryIdle" locationObject="" slaveObject="" />
					</Semaphore>
					<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="">
						<JoinedUnstanceAction lockContext="" lockName="" lockCount="2" timeout="&apos;-1&apos;" unstance="AngryIdle" locationObject="" slaveObject="" />
					</Semaphore>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</JoinedUnstanceAction>
						</Semaphore>
						<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</JoinedUnstanceAction>
						</Semaphore>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="guardArea" is_function="0">
		<Variables>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="allowStoneThrowing" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="anchor" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="anchorSet" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="barkingCooldown" type="_string" values="&apos;3s&apos;" isPersistent="0" form="single" />
			<Variable name="barkingLock" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="gateAttackers" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="gateNode" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="halberts" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="halbertsNumber" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="ladder" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ladders" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="metarole" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="pushLadderAvailable" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="pushLadderIterator" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="pushingLadderEnded" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="startPushingLadder" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="stonePileMinigame" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stoneThrowingArea" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stoneThrowingAvailable" type="_bool" values="false" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="enemyGroupController" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="guardArea" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="linkTag" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<Selector>
								<Sequence>
									<GraphSearch Origin="$guardArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;halbert&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
										<Nodalyzer Quantifiers="ForAll" Parent="" Child="$halberts" saveVersion="2">
											<Child0 canSkip="1">
												<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
											</Child0>
										</Nodalyzer>
									</GraphSearch>
									<GraphSearch Origin="$guardArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;ladder&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
										<Nodalyzer Quantifiers="ForAll" Parent="" Child="$ladders" saveVersion="2">
											<Child0 canSkip="1">
												<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
											</Child0>
										</Nodalyzer>
									</GraphSearch>
									<Expression expressions="$halbertsNumber = #halberts &#10;$pushLadderAvailable = true" />
								</Sequence>
								<Success />
							</Selector>
							<Selector>
								<Sequence>
									<GraphSearch Origin="$guardArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;anchor&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
										<Nodalyzer Quantifiers="ForAll" Parent="" Child="$anchor" saveVersion="2">
											<Child0 canSkip="1">
												<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
											</Child0>
										</Nodalyzer>
									</GraphSearch>
									<AddLink From="$this.id" To="$anchor[0]" Tag="&apos;combat_anchor&apos;" Data="" LinkOpHandleMode="Success" />
									<Expression expressions="$anchorSet = true" />
								</Sequence>
								<Success />
							</Selector>
							<Selector>
								<Sequence>
									<GraphSearch Origin="$guardArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<IsMinigameAvailableFilter minigameType="StoneThrowing" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
									</GraphSearch>
									<GraphSearch Origin="$guardArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;stoneThrowingArea&apos;" prune="true" negprune="unknown" Parent="" Child="$stoneThrowingArea" Data="" />
									</GraphSearch>
									<GraphSearch Origin="$stoneThrowingArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;gateNode&apos;" prune="true" negprune="unknown" Parent="" Child="$gateNode" Data="" />
									</GraphSearch>
									<Expression expressions="$stoneThrowingAvailable = true" />
								</Sequence>
								<Success />
							</Selector>
							<SyncWithTrackview NPC="$this.id" />
							<Selector>
								<Sequence>
									<GraphSearch Origin="$guardArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;delayStartOfAutomations&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									</GraphSearch>
									<Wait duration="&apos;200ms&apos;" timeType="GameTime" doFail="false" variation="&apos;2000ms&apos;" />
								</Sequence>
								<Success />
							</Selector>
							<MoveParamsDecorator speed="Run" pathFindingParams="" doorClosingPolicy="Automatic">
								<Parallel successMode="Any" failureMode="Any">
									<ContinuousSwitch>
										<IfCondition failOnCondition="false" condition="$startPushingLadder">
											<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
												<Child canSkip="1">
													<Function_npc_pushLadder guardArea="$guardArea" ladderSO="$ladder" nodeLabel="48057956" />
												</Child>
												<OnSuccess canSkip="1">
													<Expression expressions="$startPushingLadder = false &#10;$pushingLadderEnded = true" />
												</OnSuccess>
											</FuseBox>
										</IfCondition>
										<IfCondition failOnCondition="false" condition="$allowStoneThrowing">
											<While doFail="false" propagateChildFail="false" condition="true">
												<Selector>
													<Sequence>
														<GetAreaInhabitants area="$stoneThrowingArea" targetVar="$gateAttackers" />
														<IfCondition failOnCondition="true" condition="#gateAttackers &gt; 0">
															<MinigameElement minigameType="StoneThrowing" minigameObject="$stonePileMinigame" decisionLabel="battle_stones" useDecision="true" enabled="true" saveVersion="2">
																<Search canSkip="1">
																	<GraphSearch Origin="$guardArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																		<IsMinigameAvailableFilter minigameType="StoneThrowing" Source="Child" prune="true" negprune="unknown" Parent="" Child="$stonePileMinigame" />
																	</GraphSearch>
																</Search>
																<Exec canSkip="1">
																	<Sequence>
																		<WaitAction />
																		<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" />
																	</Sequence>
																</Exec>
															</MinigameElement>
														</IfCondition>
													</Sequence>
													<Expression expressions="$allowStoneThrowing = false" />
												</Selector>
											</While>
										</IfCondition>
										<IfCondition failOnCondition="false" condition="true">
											<Parallel successMode="Any" failureMode="Any">
												<MeleeOffenseAutomationDecorator active="true">
													<MeleeDefenseAutomationDecorator active="true">
														<MeleeGuardAutomationDecorator GuardMode="automate" active="true">
															<WeaponAutomationDecorator WeaponChange="none" active="true">
																<BattlementAutomationDecorator active="true">
																	<CombatFollowerDecorator ProbablisticDrivenSweetSpot="true" RPGSweetSpotArcDriver="true" active="true">
																		<BattleAction />
																	</CombatFollowerDecorator>
																</BattlementAutomationDecorator>
															</WeaponAutomationDecorator>
														</MeleeGuardAutomationDecorator>
													</MeleeDefenseAutomationDecorator>
												</MeleeOffenseAutomationDecorator>
												<Loop count="-1">
													<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="$data:script_param[&apos;crime_surrenderingMaxDistance&apos;].value" High="$data:script_param[&apos;crime_surrenderingMaxDistance&apos;].value" Negation="false" OpenInMiddle="false" RunLogic="Halt">
														<GameContext context="combat_playerSurrenderDistanceCondition">
															<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
														</GameContext>
													</DistanceGate>
												</Loop>
											</Parallel>
										</IfCondition>
									</ContinuousSwitch>
									<Loop count="-1">
										<IfGate atomic="false" condition="$pushLadderAvailable" RunLogic="KeepRunning">
											<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;pushLadder_halberts&apos;">
												<LinkGate from="$ladders" to="" tag="&apos;battleLadder_active&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
													<Sequence>
														<Expression expressions="$pushingLadderEnded = false" />
														<ForEach startIndex="0" step="1" array="$ladders" iterator="$pushLadderIterator" value="$ladder" break="$pushingLadderEnded">
															<Selector>
																<Sequence>
																	<GraphSearch Origin="$ladder" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																		<LinkTagFilter tag="&apos;battleLadder_active&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																	</GraphSearch>
																	<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
																	<Expression expressions="$startPushingLadder = true" />
																	<IfGate atomic="false" condition="$pushingLadderEnded" RunLogic="KeepRunning">
																		<Success />
																	</IfGate>
																</Sequence>
																<Success />
															</Selector>
														</ForEach>
													</Sequence>
												</LinkGate>
											</Semaphore>
										</IfGate>
									</Loop>
									<Loop count="-1">
										<IfGate atomic="false" condition="$stoneThrowingAvailable" RunLogic="KeepRunning">
											<LinkGate from="$gateNode" to="" tag="&apos;battleEntity&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
												<Selector>
													<Sequence>
														<GraphSearch Origin="$gateNode" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
														</GraphSearch>
														<GetAreaInhabitants area="$stoneThrowingArea" targetVar="$gateAttackers" />
														<IfCondition failOnCondition="false" condition="#gateAttackers &gt; 0">
															<Expression expressions="$allowStoneThrowing = true" />
														</IfCondition>
														<Fail />
													</Sequence>
													<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
												</Selector>
											</LinkGate>
										</IfGate>
									</Loop>
									<Loop count="-1">
										<LinkGate from="$guardArea" to="$guardArea" tag="&apos;guardArea_enableBarking&apos;" amount="AtLeastOne" presence="Present" RunLogic="Halt">
											<LinkGate from="$guardArea" to="$this.id" tag="&apos;barkingNpc&apos;" amount="AtLeastOne" presence="Present" RunLogic="Halt">
												<Sequence>
													<Selector>
														<GraphSearch Origin="$guardArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<LinkTagFilter tag="&apos;guardArea_alias&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$alias" />
														</GraphSearch>
														<GraphSearch Origin="$guardArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<LinkTagFilter tag="&apos;guardArea_metarole&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$metarole" />
														</GraphSearch>
														<ErrorNode Message="&apos;No alias or metarole provided. Bark will not be played&apos;" />
													</Selector>
													<SuppressFailure>
														<GraphSearch Origin="$guardArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<LinkTagFilter tag="&apos;guardArea_barkingCooldown&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$barkingCooldown" />
														</GraphSearch>
													</SuppressFailure>
													<Concatenation OutString="$barkingLock" Pattern="&apos;barkingLock_$alias&apos;" />
													<Loop count="-1">
														<Selector>
															<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Global" SemaphoreName="&apos;$barkingLock&apos;">
																<Sequence>
																	<DialogGate Who="$this.id" Negation="true" EndDialogInRoot="false" Condition="InMonolog" RunLogic="KeepRunning">
																		<EntityContext context="combat_disableAllSkirmishBarks" target="">
																			<Function_speech_schedulerMonolog alias="$alias" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="$metarole" skipInLod="false" subtitlesDown="false" nodeLabel="57701635" />
																		</EntityContext>
																	</DialogGate>
																	<Wait duration="$barkingCooldown" timeType="GameTime" doFail="false" variation="" />
																</Sequence>
															</Semaphore>
															<Wait duration="$barkingCooldown" timeType="GameTime" doFail="false" variation="" />
														</Selector>
													</Loop>
												</Sequence>
											</LinkGate>
										</LinkGate>
									</Loop>
								</Parallel>
							</MoveParamsDecorator>
							<Expression expressions="$behaviorSuccess = true" />
							<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</Child>
					<OnSuccess canSkip="1">
						<IfCondition failOnCondition="false" condition="$anchorSet">
							<RemoveLink From="$this.id" To="$anchor[0]" Tag="&apos;comabt_anchor&apos;" LinkOpHandleMode="Success" />
						</IfCondition>
					</OnSuccess>
					<OnFail canSkip="1">
						<Sequence>
							<IfCondition failOnCondition="false" condition="$anchorSet">
								<RemoveLink From="$this.id" To="$anchor[0]" Tag="&apos;comabt_anchor&apos;" LinkOpHandleMode="Success" />
							</IfCondition>
							<Expression expressions="$behaviorSuccess = false" />
							<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
						</Sequence>
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="battle_guardAreaSetup" EventSet="">
			<Variables>
				<Variable name="alias" comment="" />
				<Variable name="allowStoneThrowing" comment="" />
				<Variable name="anchor" comment="" />
				<Variable name="anchorSet" comment="" />
				<Variable name="barkingCooldown" comment="" />
				<Variable name="barkingLock" comment="" />
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="gateAttackers" comment="" />
				<Variable name="gateNode" comment="" />
				<Variable name="halberts" comment="" />
				<Variable name="halbertsNumber" comment="" />
				<Variable name="ladder" comment="" />
				<Variable name="ladders" comment="" />
				<Variable name="metarole" comment="" />
				<Variable name="pushLadderAvailable" comment="" />
				<Variable name="pushLadderIterator" comment="" />
				<Variable name="pushingLadderEnded" comment="" />
				<Variable name="startPushingLadder" comment="" />
				<Variable name="stonePileMinigame" comment="" />
				<Variable name="stoneThrowingArea" comment="" />
				<Variable name="stoneThrowingAvailable" comment="" />
				<Variable name="enemyGroupController" comment="" />
				<Variable name="guardArea" comment="" />
				<Variable name="linkTag" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
											<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Child0>
													<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</RangeSorter>
												</Child0>
											</Nodalyzer>
										</GraphSearch>
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
											<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Child0>
													<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</RangeSorter>
												</Child0>
											</Nodalyzer>
										</GraphSearch>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Sequence>
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</Selector>
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
											<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Child0>
													<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</RangeSorter>
												</Child0>
											</Nodalyzer>
										</GraphSearch>
										<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AddLink>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Sequence>
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</Selector>
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IsMinigameAvailableFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</IsMinigameAvailableFilter>
										</GraphSearch>
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Sequence>
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</Selector>
								<SyncWithTrackview hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SyncWithTrackview>
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</Selector>
								<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Child>
														<Function_npc_pushLadder hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_npc_pushLadder>
													</Child>
													<OnSuccess>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</OnSuccess>
												</FuseBox>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GetAreaInhabitants hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</GetAreaInhabitants>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<MinigameElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Search>
																		<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<IsMinigameAvailableFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</IsMinigameAvailableFilter>
																		</GraphSearch>
																	</Search>
																	<Exec>
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</WaitAction>
																			<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Wait>
																		</Sequence>
																	</Exec>
																</MinigameElement>
															</IfCondition>
														</Sequence>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Selector>
												</While>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<MeleeDefenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<BattlementAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<CombatFollowerDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<BattleAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</BattleAction>
																		</CombatFollowerDecorator>
																	</BattlementAutomationDecorator>
																</WeaponAutomationDecorator>
															</MeleeGuardAutomationDecorator>
														</MeleeDefenseAutomationDecorator>
													</MeleeOffenseAutomationDecorator>
													<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GameContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
															</GameContext>
														</DistanceGate>
													</Loop>
												</Parallel>
											</IfCondition>
										</ContinuousSwitch>
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
															<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</LinkTagFilter>
																		</GraphSearch>
																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Wait>
																		<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Expression>
																		<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Success>
																		</IfGate>
																	</Sequence>
																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Success>
																</Selector>
															</ForEach>
														</Sequence>
													</LinkGate>
												</Semaphore>
											</IfGate>
										</Loop>
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</SoulIsAliveFilter>
															</GraphSearch>
															<GetAreaInhabitants hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</GetAreaInhabitants>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Fail>
														</Sequence>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Selector>
												</LinkGate>
											</IfGate>
										</Loop>
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
															</GraphSearch>
															<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
															</GraphSearch>
															<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</ErrorNode>
														</Selector>
														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
															</GraphSearch>
														</SuppressFailure>
														<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Concatenation>
														<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<DialogGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Function_speech_schedulerMonolog>
																			</EntityContext>
																		</DialogGate>
																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Wait>
																	</Sequence>
																</Semaphore>
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
															</Selector>
														</Loop>
													</Sequence>
												</LinkGate>
											</LinkGate>
										</Loop>
									</Parallel>
								</MoveParamsDecorator>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantSendMessageToNPC>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Child>
						<OnSuccess>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</RemoveLink>
							</IfCondition>
						</OnSuccess>
						<OnFail>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</RemoveLink>
								</IfCondition>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantSendMessageToNPC>
							</Sequence>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="move_SwitchWeapons" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="movementTarget" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="params" type="pathFindingParams" values="usePaths(false)" isPersistent="0" form="single" />
			<Variable name="placeSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="shield" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Selector>
					<Sequence>
						<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;placeSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$placeSlot" Data="" />
						</GraphSearch>
						<Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="&apos;500ms&apos;" />
						<HandContentElement hand="Left" item="$shield" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_shield" useDecision="true" enabled="true" saveVersion="2">
							<Search canSkip="1">
								<Function_findItemOnSlot linkName="&apos;placeSlot&apos;" npc="$this.id" searchOrigin="$this.id" item="$shield" nodeLabel="41716219" />
							</Search>
							<Exec canSkip="1">
								<MoveParamsDecorator speed="Walk" pathFindingParams="$params" doorClosingPolicy="Automatic">
									<PlaceAction item="$shield" slot="$placeSlot" />
								</MoveParamsDecorator>
							</Exec>
						</HandContentElement>
						<Selector>
							<HandContentElement hand="Left" item="$leftHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_ranged" useDecision="true" enabled="true" saveVersion="2">
								<Search canSkip="1">
									<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
								</Search>
								<Exec canSkip="1">
									<WaitAction />
								</Exec>
							</HandContentElement>
							<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
								<Search canSkip="1">
									<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
								</Search>
								<Exec canSkip="1">
									<WaitAction />
								</Exec>
							</HandContentElement>
						</Selector>
						<Expression expressions="$behaviorSuccess = true" />
						<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
					<Sequence>
						<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;move&apos;" prune="true" negprune="unknown" Parent="" Child="$movementTarget" Data="" />
						</GraphSearch>
						<Selector>
							<HandContentElement hand="Left" item="$leftHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_ranged" useDecision="true" enabled="true" saveVersion="2">
								<Search canSkip="1">
									<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
								</Search>
								<Exec canSkip="1">
									<WaitAction />
								</Exec>
							</HandContentElement>
							<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_ranged" useDecision="true" enabled="true" saveVersion="2">
								<Search canSkip="1">
									<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
								</Search>
								<Exec canSkip="1">
									<WaitAction />
								</Exec>
							</HandContentElement>
							<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
								<Search canSkip="1">
									<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
								</Search>
								<Exec canSkip="1">
									<WaitAction />
								</Exec>
							</HandContentElement>
						</Selector>
						<Wait duration="&apos;1000ms&apos;" timeType="GameTime" doFail="false" variation="&apos;500ms&apos;" />
						<AnyDecorator preset="crime_keepStateAndItems" enabled="true">
							<DisableCollisionAvoidance>
								<ExactMove directionType="AlignWithEntity" directionSpecification="$movementTarget" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$movementTarget" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							</DisableCollisionAvoidance>
						</AnyDecorator>
						<Expression expressions="$behaviorSuccess = true" />
						<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</Selector>
			</Behavior>
		</Root>
		<ForestContainer>
			<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
				<OnSuccess canSkip="1">
					<Sequence>
						<Expression expressions="$behaviorSuccess = true" />
						<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
					</Sequence>
				</OnSuccess>
			</FuseBox>
			<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$movementTarget" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="$params" staminaPolicy="" pathInfo="" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="movementTarget" comment="" />
				<Variable name="params" comment="" />
				<Variable name="placeSlot" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="shield" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-680" editorPosY="30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Search>
									<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_findItemOnSlot>
								</Search>
								<Exec>
									<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<PlaceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</PlaceAction>
									</MoveParamsDecorator>
								</Exec>
							</HandContentElement>
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetWeaponsFromWeaponSet>
									</Search>
									<Exec>
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</Exec>
								</HandContentElement>
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetWeaponsFromWeaponSet>
									</Search>
									<Exec>
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</Exec>
								</HandContentElement>
							</Selector>
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantSendMessageToNPC>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetWeaponsFromWeaponSet>
									</Search>
									<Exec>
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</Exec>
								</HandContentElement>
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetWeaponsFromWeaponSet>
									</Search>
									<Exec>
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</Exec>
								</HandContentElement>
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetWeaponsFromWeaponSet>
									</Search>
									<Exec>
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</Exec>
								</HandContentElement>
							</Selector>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
							<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<DisableCollisionAvoidance hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExactMove>
								</DisableCollisionAvoidance>
							</AnyDecorator>
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantSendMessageToNPC>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Selector>
				</Behavior>
			</Root>
			<Forest>
				<FuseBox editorPosX="580" editorPosY="650" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<OnSuccess>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantSendMessageToNPC>
						</Sequence>
					</OnSuccess>
				</FuseBox>
				<Move editorPosX="820" editorPosY="730" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</Move>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="fight_join" is_function="0">
		<Variables>
			<Variable name="allies" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="skirmishTarget" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
								<Nodalyzer Quantifiers="ForAll" Parent="" Child="$allies" saveVersion="2">
									<Child0 canSkip="1">
										<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
									</Child0>
								</Nodalyzer>
							</GraphSearch>
							<HandContentElement hand="Left" item="$leftHand" allowAny="false" decisionLabel="battle_ranged" useDecision="true" saveVersion="2">
								<Search canSkip="1">
									<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
								</Search>
								<Exec canSkip="1">
									<WaitAction />
								</Exec>
							</HandContentElement>
							<IfCondition failOnCondition="false" condition="#allies &gt; 1">
								<Expression expressions="$skirmishTarget = $allies[#allies - 1]" />
							</IfCondition>
							<MeleeOffenseAutomationDecorator active="true">
								<MeleeDefenseAutomationDecorator active="true">
									<MeleeGuardAutomationDecorator GuardMode="automate" active="true">
										<WeaponAutomationDecorator WeaponChange="missile" active="true">
											<CombatFollowerDecorator ProbablisticDrivenSweetSpot="true" RPGSweetSpotArcDriver="true" active="true">
												<CombatAction TargetNPC="$skirmishTarget" RelationOverride="None" />
											</CombatFollowerDecorator>
										</WeaponAutomationDecorator>
									</MeleeGuardAutomationDecorator>
								</MeleeDefenseAutomationDecorator>
							</MeleeOffenseAutomationDecorator>
							<Expression expressions="$behaviorSuccess = true" />
							<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Child>
					<OnFail canSkip="1">
						<Sequence>
							<Expression expressions="$behaviorSuccess = false" />
							<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
						</Sequence>
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="allies" comment="" />
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="skirmishTarget" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</SoulIsAliveFilter>
									<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Child0>
											<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</RangeSorter>
										</Child0>
									</Nodalyzer>
								</GraphSearch>
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetWeaponsFromWeaponSet>
									</Search>
									<Exec>
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</Exec>
								</HandContentElement>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</IfCondition>
								<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<MeleeDefenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<CombatFollowerDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</CombatAction>
												</CombatFollowerDecorator>
											</WeaponAutomationDecorator>
										</MeleeGuardAutomationDecorator>
									</MeleeDefenseAutomationDecorator>
								</MeleeOffenseAutomationDecorator>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantSendMessageToNPC>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Child>
						<OnFail>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantSendMessageToNPC>
							</Sequence>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="weapon_setup" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="ladder" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ladderSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="melee" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ranged" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="shield" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tagLadder" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="torch" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="weponSlot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;ladder&apos;" prune="true" negprune="unknown" Parent="" Child="$tagLadder" Data="" />
							</GraphSearch>
							<IfElseCondition failOnCondition="false" condition="$tagLadder == $__null" saveVersion="2">
								<Then canSkip="1">
									<Selector>
										<IfCondition failOnCondition="true" condition="$string == &apos;melee,torch&apos;">
											<UrgencyDecorator Urgency="Instant">
												<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
													<Search canSkip="1">
														<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
													</Search>
													<Exec canSkip="1">
														<HandContentElement hand="Left" item="$torch" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_torch" useDecision="true" enabled="true" saveVersion="2">
															<Search canSkip="1">
																<Selector>
																	<Function_findItemOnSlot linkName="&apos;pickUpSlot&apos;" npc="$this.id" searchOrigin="$this.id" item="$torch" nodeLabel="44124666" />
																	<GetItem InventoryHost="$this.id" ItemGUID="&apos;4cea28a0-0814-405a-bf24-4fd711f7eb63&apos;" ItemCategory="" FailIfNotFound="true" ItemOut="$torch" AmountOut="" />
																	<CreateItem ItemGUID="&apos;4cea28a0-0814-405a-bf24-4fd711f7eb63&apos;" Amount="1" CreatedItem="$torchItem" Target="$this.id" NotifyUI="false" />
																</Selector>
															</Search>
															<Exec canSkip="1">
																<WaitAction />
															</Exec>
														</HandContentElement>
													</Exec>
												</HandContentElement>
											</UrgencyDecorator>
										</IfCondition>
										<IfCondition failOnCondition="true" condition="$string == &apos;melee&apos;">
											<UrgencyDecorator Urgency="Instant">
												<Sequence>
													<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
													<IfElseCondition failOnCondition="false" condition="$leftHand == $__null" saveVersion="2">
														<Then canSkip="1">
															<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
																<Search canSkip="1">
																	<Success />
																</Search>
																<Exec canSkip="1">
																	<WaitAction />
																</Exec>
															</HandContentElement>
														</Then>
														<Else canSkip="1">
															<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
																<Search canSkip="1">
																	<Success />
																</Search>
																<Exec canSkip="1">
																	<HandContentElement hand="Left" item="$leftHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_shield" useDecision="true" enabled="true" saveVersion="2">
																		<Search canSkip="1">
																			<Success />
																		</Search>
																		<Exec canSkip="1">
																			<WaitAction />
																		</Exec>
																	</HandContentElement>
																</Exec>
															</HandContentElement>
														</Else>
													</IfElseCondition>
												</Sequence>
											</UrgencyDecorator>
										</IfCondition>
										<IfCondition failOnCondition="true" condition="$string == &apos;shield&apos;">
											<UrgencyDecorator Urgency="Instant">
												<HandContentElement hand="Left" item="$shield" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_shield" useDecision="true" enabled="true" saveVersion="2">
													<Search canSkip="1">
														<Selector>
															<Function_findItemOnSlot linkName="&apos;pickUpSlot&apos;" npc="$this.id" searchOrigin="$this.id" item="$shield" nodeLabel="54025399" />
															<Function_findItemOnSlot linkName="&apos;placeSlot&apos;" npc="$this.id" searchOrigin="$this.id" item="$shield" nodeLabel="54032165" />
														</Selector>
													</Search>
													<Exec canSkip="1">
														<WaitAction />
													</Exec>
												</HandContentElement>
											</UrgencyDecorator>
										</IfCondition>
										<IfCondition failOnCondition="true" condition="$string == &apos;ranged&apos;">
											<UrgencyDecorator Urgency="Instant">
												<Sequence>
													<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
													<IfElseCondition failOnCondition="false" condition="$leftHand ~= $__null" saveVersion="2">
														<Then canSkip="1">
															<HandContentElement hand="Left" item="$leftHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_ranged" useDecision="true" enabled="true" saveVersion="2">
																<Search canSkip="1">
																	<Success />
																</Search>
																<Exec canSkip="1">
																	<WaitAction />
																</Exec>
															</HandContentElement>
														</Then>
														<Else canSkip="1">
															<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_ranged" useDecision="true" enabled="true" saveVersion="2">
																<Search canSkip="1">
																	<Success />
																</Search>
																<Exec canSkip="1">
																	<WaitAction />
																</Exec>
															</HandContentElement>
														</Else>
													</IfElseCondition>
												</Sequence>
											</UrgencyDecorator>
										</IfCondition>
										<IfCondition failOnCondition="true" condition="$string == &apos;torch&apos;">
											<UrgencyDecorator Urgency="Instant">
												<Sequence>
													<Selector>
														<Function_findItemOnSlot linkName="&apos;pickUpSlot&apos;" npc="$this.id" searchOrigin="$this.id" item="$torch" nodeLabel="84968784" />
														<GetItem InventoryHost="$this.id" ItemGUID="&apos;4cea28a0-0814-405a-bf24-4fd711f7eb63&apos;" ItemCategory="" FailIfNotFound="true" ItemOut="$torch" AmountOut="" />
													</Selector>
													<HandContentElement hand="Left" item="$torch" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_torch" useDecision="true" enabled="true" saveVersion="2">
														<Search canSkip="1">
															<Success />
														</Search>
														<Exec canSkip="1">
															<WaitAction />
														</Exec>
													</HandContentElement>
												</Sequence>
											</UrgencyDecorator>
										</IfCondition>
										<IfCondition failOnCondition="true" condition="$string == &apos;halberd&apos;">
											<UrgencyDecorator Urgency="Instant">
												<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_halbert" useDecision="true" enabled="true" saveVersion="2">
													<Search canSkip="1">
														<GetWeaponsFromWeaponSet WeaponSet="Oversized" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
													</Search>
													<Exec canSkip="1">
														<WaitAction />
													</Exec>
												</HandContentElement>
											</UrgencyDecorator>
										</IfCondition>
										<Success />
									</Selector>
								</Then>
								<Else canSkip="1">
									<UrgencyDecorator Urgency="Instant">
										<HandContentElement hand="Right" item="$ladder" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_ladder" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<Function_findItemOnSlot linkName="&apos;placeSlot&apos;" npc="$this.id" searchOrigin="$this.id" item="$ladder" nodeLabel="37579917" />
											</Search>
											<Exec canSkip="1">
												<WaitAction />
											</Exec>
										</HandContentElement>
									</UrgencyDecorator>
								</Else>
							</IfElseCondition>
							<Expression expressions="$behaviorSuccess = true" />
							<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</Child>
					<OnFail canSkip="1">
						<IfCondition failOnCondition="false" condition="$behaviorSuccess == false">
							<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
						</IfCondition>
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer>
			<Selector>
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;forceRanged&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
					</GraphSearch>
					<Expression expressions="$string = &apos;ranged&apos;" />
				</Sequence>
				<Success />
			</Selector>
		</ForestContainer>
		<EditorData Signature="string" EventSet="">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="ladder" comment="" />
				<Variable name="ladderSlot" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="melee" comment="" />
				<Variable name="ranged" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="shield" comment="" />
				<Variable name="tagLadder" comment="" />
				<Variable name="torch" comment="" />
				<Variable name="weponSlot" comment="" />
				<Variable name="string" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-420" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Search>
															<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</GetWeaponsFromWeaponSet>
														</Search>
														<Exec>
															<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Search>
																	<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_findItemOnSlot>
																		<GetItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</GetItem>
																		<CreateItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</CreateItem>
																	</Selector>
																</Search>
																<Exec>
																	<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</WaitAction>
																</Exec>
															</HandContentElement>
														</Exec>
													</HandContentElement>
												</UrgencyDecorator>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</GetWeaponsFromWeaponSet>
														<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Search>
																		<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Success>
																	</Search>
																	<Exec>
																		<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</WaitAction>
																	</Exec>
																</HandContentElement>
															</Then>
															<Else>
																<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Search>
																		<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Success>
																	</Search>
																	<Exec>
																		<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																			<OutputBreakpoints />
																			<Search>
																				<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Success>
																			</Search>
																			<Exec>
																				<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</WaitAction>
																			</Exec>
																		</HandContentElement>
																	</Exec>
																</HandContentElement>
															</Else>
														</IfElseCondition>
													</Sequence>
												</UrgencyDecorator>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Search>
															<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_findItemOnSlot>
																<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_findItemOnSlot>
															</Selector>
														</Search>
														<Exec>
															<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</WaitAction>
														</Exec>
													</HandContentElement>
												</UrgencyDecorator>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</GetWeaponsFromWeaponSet>
														<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Search>
																		<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Success>
																	</Search>
																	<Exec>
																		<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</WaitAction>
																	</Exec>
																</HandContentElement>
															</Then>
															<Else>
																<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Search>
																		<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Success>
																	</Search>
																	<Exec>
																		<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</WaitAction>
																	</Exec>
																</HandContentElement>
															</Else>
														</IfElseCondition>
													</Sequence>
												</UrgencyDecorator>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_findItemOnSlot>
															<GetItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</GetItem>
														</Selector>
														<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Search>
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</Search>
															<Exec>
																<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</WaitAction>
															</Exec>
														</HandContentElement>
													</Sequence>
												</UrgencyDecorator>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Search>
															<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</GetWeaponsFromWeaponSet>
														</Search>
														<Exec>
															<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</WaitAction>
														</Exec>
													</HandContentElement>
												</UrgencyDecorator>
											</IfCondition>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Selector>
									</Then>
									<Else>
										<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_findItemOnSlot>
												</Search>
												<Exec>
													<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WaitAction>
												</Exec>
											</HandContentElement>
										</UrgencyDecorator>
									</Else>
								</IfElseCondition>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantSendMessageToNPC>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Child>
						<OnFail>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<InstantSendMessageToNPC hasInputBreakpoint="0" comment="error nebo log to console?" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantSendMessageToNPC>
							</IfCondition>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest>
				<Selector editorPosX="620" editorPosY="-1860" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</Sequence>
					<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Success>
				</Selector>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="moveAndFight" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="celebrate" is_function="0">
		<Variables>
			<Variable name="acceptableEquipment" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="leftHand_item" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHand_itemType" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="rightHand_item" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand_itemType" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<HandCheck who="$this.id" LeftHand="$leftHand_item" RightHand="$rightHand_item" />
					<IfCondition failOnCondition="false" condition="$leftHand_item ~= $__null">
						<GetItemType WUID="$leftHand_item" OutCategory="" OutType="$leftHand_itemType" OutSubType="" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$rightHand_item ~= $__null">
						<GetItemType WUID="$rightHand_item" OutCategory="" OutType="$rightHand_itemType" OutSubType="" />
					</IfCondition>
					<Switch>
						<IfCondition failOnCondition="false" condition="($rightHand_itemType == &apos;sword&apos; | $rightHand_itemType == &apos;mace&apos; | $rightHand_itemType == &apos;axe&apos;) &amp; &#10;($leftHand_item == $__null | $leftHand_itemType == &apos;shield&apos;)">
							<Expression expressions="$acceptableEquipment = true" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$rightHand_itemType == &apos;longsword&apos; &amp; $leftHand_item == $__null">
							<Expression expressions="$acceptableEquipment = true" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="($leftHand_itemType == &apos;bow&apos; | $leftHand_itemType == &apos;crossbow_light&apos; | $leftHand_itemType == &apos;crossbow_medium&apos; | $leftHand_itemType == &apos;crossbow_heavy&apos;) &amp; &#10;$rightHand_item == $__null">
							<Expression expressions="$acceptableEquipment = true" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$rightHand_itemType == &apos;rifle&apos; &amp; $leftHand_item == $__null">
							<Expression expressions="$acceptableEquipment = true" />
						</IfCondition>
						<DefaultBranch>
							<Success />
						</DefaultBranch>
					</Switch>
					<IfCondition failOnCondition="false" condition="$acceptableEquipment">
						<AnyDecorator preset="bothHands_changeEquipment">
							<AnimationAction fragment="&apos;BattleVictory&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" />
						</AnyDecorator>
					</IfCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="acceptableEquipment" comment="" />
				<Variable name="leftHand_item" comment="" />
				<Variable name="leftHand_itemType" comment="" />
				<Variable name="rightHand_item" comment="" />
				<Variable name="rightHand_itemType" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</HandCheck>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GetItemType hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetItemType>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GetItemType hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetItemType>
						</IfCondition>
						<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="One-handed weapon and possibly shield" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="Longsword" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="Bow or crossbow" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="Rifle" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<DefaultBranch>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</DefaultBranch>
						</Switch>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<OutputBreakpoints />
								</AnimationAction>
							</AnyDecorator>
						</IfCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="move_formation_exactPoint_ladder" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="finalIdle" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="formation" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="formationParticipants" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="ladder" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ladderSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leader" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="params" type="pathFindingParams" values="usePaths(false)" isPersistent="0" form="single" />
			<Variable name="position" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="shield" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tagPoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="weapon" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="weaponType" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<DisableCollisionAvoidance>
					<Sequence>
						<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;leader&apos;" prune="true" negprune="unknown" Parent="" Child="$leader" Data="" />
						</GraphSearch>
						<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;test_string&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$position" />
						</GraphSearch>
						<IfCondition failOnCondition="false" condition="$this.id == $leader">
							<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;placeSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$ladderSlot" Data="" />
							</GraphSearch>
						</IfCondition>
						<Selector>
							<Sequence>
								<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;idle_kneel&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								</GraphSearch>
								<Expression expressions="$finalIdle = &apos;idle_kneel&apos;" />
							</Sequence>
							<Sequence>
								<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;idle_stand&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								</GraphSearch>
								<Expression expressions="$finalIdle = &apos;idle_stand&apos;" />
							</Sequence>
							<Success />
						</Selector>
						<LinkGate from="$__object.id" to="" tag="&apos;leader&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
							<Parallel successMode="Any" failureMode="Any">
								<LinkGate from="$__object.id" to="$this.id" tag="&apos;leader&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
									<Sequence>
										<HandContentElement hand="Right" item="$ladder" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_ladder" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<HandCheck who="" LeftHand="$leftHand" RightHand="$ladder" />
											</Search>
											<Exec canSkip="1">
												<Sequence>
													<Selector>
														<Sequence>
															<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
																<Nodalyzer Quantifiers="ForAll" Parent="" Child="$formationParticipants" saveVersion="2" />
															</GraphSearch>
															<MakeFormation FormationName="$string" HandleVariable="$formation" />
															<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
															<SuppressFailure>
																<InstantMultiSendMessageToNPC targets="$formationParticipants" successMode="Any" failureMode="Any" variable="$formation" />
															</SuppressFailure>
															<Callback_empty EventName="&apos;OnRecordingReady&apos;" />
														</Sequence>
													</Selector>
													<While doFail="false" propagateChildFail="false" condition="$wuid ~= $__null">
														<Sequence>
															<Expression expressions="$tagPoint = $wuid" />
															<Selector>
																<GraphSearch Origin="$tagPoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																	<LinkTagFilter tag="&apos;nextTp&apos;" prune="true" negprune="unknown" Parent="" Child="$wuid" Data="" />
																</GraphSearch>
																<Expression expressions="$wuid = $__null" />
															</Selector>
															<IfElseCondition failOnCondition="false" condition="$wuid == $__null" saveVersion="2">
																<Then canSkip="1">
																	<Sequence>
																		<SetExternalLock LockManagerType="Local" Locked="false" LockName="&apos;finalMove&apos;" />
																		<EndFormation FormationHandle="$formation" />
																		<ExactMove directionType="AlignWithEntity" directionSpecification="$tagPoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagPoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$params" staminaPolicy="" pathInfo="" />
																	</Sequence>
																</Then>
																<Else canSkip="1">
																	<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="true" successDistance="3.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagPoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$params" staminaPolicy="" pathInfo="" />
																</Else>
															</IfElseCondition>
														</Sequence>
													</While>
												</Sequence>
											</Exec>
										</HandContentElement>
										<WaitAction />
										<DrawAction WeaponSet="Primary" fullBody="false" tags="" useSelectedWeaponSet="false" />
									</Sequence>
								</LinkGate>
								<LinkGate from="$__object.id" to="$this.id" tag="&apos;leader&apos;" amount="AtLeastOne" presence="NotThere" RunLogic="KeepRunning">
									<AnyDecorator preset="crime_keepItems" enabled="true">
										<MeleeGuardAutomationDecorator GuardMode="freeBlock" active="true">
											<Sequence>
												<ReadMessage timeout="&apos;-1&apos;" timeType="GameTime" variable="$formation" senderInfo="" inbox="&apos;battle_formationSetup&apos;" condition="" />
												<SuppressFailure>
													<Parallel successMode="Any" failureMode="Any">
														<FormationFollower FormationHandle="$formation" PreferredPositions="$position" FormationMode="KeepShape" AllowRelocation="false" />
														<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;finalMove&apos;" RunLogic="KeepRunning">
															<Success />
														</ExternalLock>
													</Parallel>
												</SuppressFailure>
												<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;finalTp&apos;" prune="true" negprune="unknown" Parent="" Child="$tagPoint" Data="" />
												</GraphSearch>
												<ExactMove directionType="AlignWithEntity" directionSpecification="$tagPoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagPoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$params" staminaPolicy="" pathInfo="" />
											</Sequence>
										</MeleeGuardAutomationDecorator>
									</AnyDecorator>
								</LinkGate>
							</Parallel>
						</LinkGate>
						<AnyDecorator preset="crime_keepItems" enabled="true">
							<MeleeGuardAutomationDecorator GuardMode="forceDisable" active="true">
								<Sequence>
									<HandCheck who="" LeftHand="$shield" RightHand="$weapon" />
									<GetItemType WUID="$weapon" OutCategory="" OutType="$weaponType" OutSubType="" />
									<Switch>
										<IfCondition failOnCondition="false" condition="$weaponType == &apos;sword&apos; &amp; $finalIdle == &apos;idle_kneel&apos;">
											<UnstanceAction unstance="BattleKneelShswShld" locationObject="" slaveObject="" />
										</IfCondition>
										<IfCondition failOnCondition="false" condition="$weaponType == &apos;axe&apos; &amp; $finalIdle == &apos;idle_kneel&apos;">
											<UnstanceAction unstance="BattleKneelAxeShld" locationObject="" slaveObject="" />
										</IfCondition>
										<IfCondition failOnCondition="false" condition="$weaponType == &apos;mace&apos; &amp; $finalIdle == &apos;idle_kneel&apos;">
											<UnstanceAction unstance="BattleKneelMaceShld" locationObject="" slaveObject="" />
										</IfCondition>
										<IfCondition failOnCondition="false" condition="$finalIdle == &apos;idle_stand&apos;">
											<UnstanceAction unstance="BattleShswShld" locationObject="" slaveObject="" />
										</IfCondition>
										<DefaultBranch>
											<Success />
										</DefaultBranch>
									</Switch>
									<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
									<Expression expressions="$behaviorSuccess = true" />
									<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</MeleeGuardAutomationDecorator>
						</AnyDecorator>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</DisableCollisionAvoidance>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="battle_recordingNotification">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="finalIdle" comment="" />
				<Variable name="formation" comment="" />
				<Variable name="formationParticipants" comment="" />
				<Variable name="ladder" comment="" />
				<Variable name="ladderSlot" comment="" />
				<Variable name="leader" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="params" comment="" />
				<Variable name="position" comment="" />
				<Variable name="shield" comment="" />
				<Variable name="tagPoint" comment="" />
				<Variable name="weapon" comment="" />
				<Variable name="weaponType" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<DisableCollisionAvoidance hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
							</IfCondition>
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Selector>
							<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</HandCheck>
												</Search>
												<Exec>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</SoulIsAliveFilter>
																	<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																	</Nodalyzer>
																</GraphSearch>
																<MakeFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</MakeFormation>
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
																<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<InstantMultiSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</InstantMultiSendMessageToNPC>
																</SuppressFailure>
																<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Callback_empty>
															</Sequence>
														</Selector>
														<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
																<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</LinkTagFilter>
																	</GraphSearch>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Selector>
																<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Then>
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</SetExternalLock>
																			<EndFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</EndFormation>
																			<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</ExactMove>
																		</Sequence>
																	</Then>
																	<Else>
																		<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Move>
																	</Else>
																</IfElseCondition>
															</Sequence>
														</While>
													</Sequence>
												</Exec>
											</HandContentElement>
											<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</WaitAction>
											<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</DrawAction>
										</Sequence>
									</LinkGate>
									<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ReadMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ReadMessage>
													<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<FormationFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</FormationFollower>
															<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</ExternalLock>
														</Parallel>
													</SuppressFailure>
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
													</GraphSearch>
													<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ExactMove>
												</Sequence>
											</MeleeGuardAutomationDecorator>
										</AnyDecorator>
									</LinkGate>
								</Parallel>
							</LinkGate>
							<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</HandCheck>
										<GetItemType hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetItemType>
										<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</UnstanceAction>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</UnstanceAction>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</UnstanceAction>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</UnstanceAction>
											</IfCondition>
											<DefaultBranch>
												<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Success>
											</DefaultBranch>
										</Switch>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</InstantSendMessageToNPC>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</MeleeGuardAutomationDecorator>
							</AnyDecorator>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</DisableCollisionAvoidance>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="move_formation_exactPoint" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="finalIdle" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="finalTagpoints" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="formation" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="formationParticipants" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="leader" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="params" type="pathFindingParams" values="usePaths(false)" isPersistent="0" form="single" />
			<Variable name="position" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tagPoint" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;test_string&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$position" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;leader&apos;" prune="true" negprune="unknown" Parent="" Child="$leader" Data="" />
					</GraphSearch>
					<Selector>
						<Sequence>
							<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;idle_kneel&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Expression expressions="$finalIdle = &apos;idle_kneel&apos;" />
						</Sequence>
						<Sequence>
							<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;idle_stand&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Expression expressions="$finalIdle = &apos;idle_stand&apos;" />
						</Sequence>
						<Sequence>
							<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;idle_longsword&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Expression expressions="$finalIdle = &apos;idle_longsword&apos;" />
						</Sequence>
						<Sequence>
							<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;first_idle&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Expression expressions="$finalIdle = &apos;idle_longsword&apos;" />
						</Sequence>
						<Sequence>
							<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;idle_crashGate&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Expression expressions="$finalIdle = &apos;idle_crashgate&apos;" />
						</Sequence>
						<Success />
					</Selector>
					<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
						<Child canSkip="1">
							<AnyDecorator preset="crime_keepItems">
								<Sequence>
									<WaitAction />
									<MeleeGuardAutomationDecorator GuardMode="freeBlock" active="true">
										<Parallel successMode="Any" failureMode="Any">
											<LinkGate from="$__object.id" to="$this.id" tag="&apos;leader&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
												<Sequence>
													<SetExternalLock LockManagerType="Local" Locked="true" LockName="&apos;finalMove&apos;" />
													<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
														<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
														<Nodalyzer Quantifiers="ForAll" Parent="" Child="$formationParticipants" saveVersion="2" />
													</GraphSearch>
													<MakeFormation FormationName="$string" HandleVariable="$formation" />
													<Wait duration="&apos;6s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
													<SuppressFailure>
														<InstantMultiSendMessageToNPC targets="$formationParticipants" successMode="Any" failureMode="Any" variable="$formation" />
													</SuppressFailure>
													<Callback_empty EventName="&apos;OnRecordingReady&apos;" />
													<While doFail="false" propagateChildFail="false" condition="$wuid ~= $__null">
														<Sequence>
															<Expression expressions="$tagPoint = $wuid" />
															<Selector>
																<GraphSearch Origin="$tagPoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																	<LinkTagFilter tag="&apos;nextTp&apos;" prune="true" negprune="unknown" Parent="" Child="$wuid" Data="" />
																</GraphSearch>
																<Expression expressions="$wuid = $__null" />
															</Selector>
															<IfElseCondition failOnCondition="false" condition="$wuid == $__null" saveVersion="2">
																<Then canSkip="1">
																	<Sequence>
																		<SetExternalLock LockManagerType="Local" Locked="false" LockName="&apos;finalMove&apos;" />
																		<Wait duration="&apos;500&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
																		<EndFormation FormationHandle="$formation" />
																		<ExactMove directionType="AlignWithEntity" directionSpecification="$tagPoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagPoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$params" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
																	</Sequence>
																</Then>
																<Else canSkip="1">
																	<Move stopWithinDistance="0.500000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="2.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagPoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$params" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
																</Else>
															</IfElseCondition>
														</Sequence>
													</While>
												</Sequence>
											</LinkGate>
											<LinkGate from="$__object.id" to="$this.id" tag="&apos;leader&apos;" amount="AtLeastOne" presence="NotThere" RunLogic="KeepRunning">
												<Sequence>
													<ReadMessage timeout="&apos;-1&apos;" timeType="GameTime" variable="$formation" senderInfo="" inbox="&apos;battle_formationSetup&apos;" condition="" />
													<SuppressFailure>
														<Parallel successMode="Any" failureMode="Any">
															<FormationFollower FormationHandle="$formation" PreferredPositions="$position" FormationMode="KeepShape" AllowRelocation="false" />
															<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;finalMove&apos;" RunLogic="KeepRunning">
																<Success />
															</ExternalLock>
														</Parallel>
													</SuppressFailure>
													<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
														<LinkTagFilter tag="&apos;finalTp&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
														<Nodalyzer Quantifiers="ForAll" Parent="" Child="$finalTagpoints" saveVersion="2">
															<Child0 canSkip="1">
																<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
															</Child0>
														</Nodalyzer>
													</GraphSearch>
													<ExactMove directionType="AlignWithEntity" directionSpecification="$finalTagpoints[0]" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$finalTagpoints[0]" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$params" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
												</Sequence>
											</LinkGate>
										</Parallel>
									</MeleeGuardAutomationDecorator>
									<MeleeGuardAutomationDecorator GuardMode="forceDisable" active="true">
										<Sequence>
											<WaitAction />
											<Switch>
												<IfCondition failOnCondition="false" condition="$finalIdle == &apos;idle_stand&apos;">
													<UnstanceAction unstance="BattleShswShld" locationObject="" slaveObject="" />
												</IfCondition>
												<IfCondition failOnCondition="false" condition="$finalIdle == &apos;idle_kneel&apos;">
													<UnstanceAction unstance="BattleKneelShieldCover" locationObject="" slaveObject="" />
												</IfCondition>
												<IfCondition failOnCondition="false" condition="$finalIdle == &apos;idle_longsword&apos;">
													<UnstanceAction unstance="BattleLngsw" locationObject="" slaveObject="" />
												</IfCondition>
												<IfCondition failOnCondition="false" condition="$finalIdle == &apos;idle_crashgate&apos;">
													<UnstanceAction unstance="GateAttack_fromMove" locationObject="$finalTagpoints[0]" slaveObject="" />
												</IfCondition>
												<DefaultBranch>
													<Success />
												</DefaultBranch>
											</Switch>
											<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
											<Expression expressions="$behaviorSuccess = true" />
											<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
										</Sequence>
									</MeleeGuardAutomationDecorator>
								</Sequence>
							</AnyDecorator>
						</Child>
						<OnFail canSkip="1">
							<Sequence>
								<Expression expressions="$behaviorSuccess = false" />
								<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
							</Sequence>
						</OnFail>
					</FuseBox>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<DistanceGate Origin="$this.id" ReferencePt="$tagPoint" Low="4.000000" High="4.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
				<Success />
			</DistanceGate>
			<HandContentElement hand="Right" item="" allowAny="false" decisionLabel="battle_weapon" useDecision="true" saveVersion="2" />
		</ForestContainer>
		<EditorData Signature="wuidData_string" EventSet="battle_recordingNotification">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="finalIdle" comment="" />
				<Variable name="finalTagpoints" comment="" />
				<Variable name="formation" comment="" />
				<Variable name="formationParticipants" comment="" />
				<Variable name="leader" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="params" comment="" />
				<Variable name="position" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="tagPoint" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-700" editorPosY="-70" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Selector>
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
										<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</SetExternalLock>
														<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</SoulIsAliveFilter>
															<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
															</Nodalyzer>
														</GraphSearch>
														<MakeFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</MakeFormation>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<InstantMultiSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</InstantMultiSendMessageToNPC>
														</SuppressFailure>
														<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Callback_empty>
														<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
																<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</LinkTagFilter>
																	</GraphSearch>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Selector>
																<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Then>
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</SetExternalLock>
																			<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Wait>
																			<EndFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</EndFormation>
																			<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</ExactMove>
																		</Sequence>
																	</Then>
																	<Else>
																		<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Move>
																	</Else>
																</IfElseCondition>
															</Sequence>
														</While>
													</Sequence>
												</LinkGate>
												<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<ReadMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ReadMessage>
														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<FormationFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</FormationFollower>
																<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Success>
																</ExternalLock>
															</Parallel>
														</SuppressFailure>
														<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</LinkTagFilter>
															<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Child0>
																	<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</RangeSorter>
																</Child0>
															</Nodalyzer>
														</GraphSearch>
														<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ExactMove>
													</Sequence>
												</LinkGate>
											</Parallel>
										</MeleeGuardAutomationDecorator>
										<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
												<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</UnstanceAction>
													</IfCondition>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</UnstanceAction>
													</IfCondition>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</UnstanceAction>
													</IfCondition>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</UnstanceAction>
													</IfCondition>
													<DefaultBranch>
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</DefaultBranch>
												</Switch>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
												<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</InstantSendMessageToNPC>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</MeleeGuardAutomationDecorator>
									</Sequence>
								</AnyDecorator>
							</Child>
							<OnFail>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantSendMessageToNPC>
								</Sequence>
							</OnFail>
						</FuseBox>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<DistanceGate editorPosX="1940" editorPosY="600" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Success>
				</DistanceGate>
				<HandContentElement editorPosX="780" editorPosY="-610" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
				</HandContentElement>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="move_formation_exactPoint_shield" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="formation" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="formationParticipants" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="leader" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="params" type="pathFindingParams" values="usePaths(false)" isPersistent="0" form="single" />
			<Variable name="pavise" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="paviseSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="position" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tagPoint" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;leader&apos;" prune="true" negprune="unknown" Parent="" Child="$leader" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;placeSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$paviseSlot" Data="" />
					</GraphSearch>
					<LinkGate from="$__object.id" to="" tag="&apos;leader&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
						<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
							<Child canSkip="1">
								<Selector>
									<Parallel successMode="Any" failureMode="Any">
										<LinkGate from="$__object.id" to="$this.id" tag="&apos;leader&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
											<Sequence>
												<HandContentElement hand="Left" item="$pavise" allowAny="false" decisionLabel="battle_shield" useDecision="true" enabled="true" saveVersion="2">
													<Search canSkip="1">
														<HandCheck who="" LeftHand="$pavise" RightHand="" />
													</Search>
													<Exec canSkip="1">
														<Sequence>
															<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
																<Nodalyzer Quantifiers="ForAll" Parent="" Child="$formationParticipants" saveVersion="2" />
															</GraphSearch>
															<MakeFormation FormationName="$string" HandleVariable="$formation" />
															<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
															<Callback_empty EventName="&apos;OnRecordingReady&apos;" />
															<SuppressFailure>
																<InstantMultiSendMessageToNPC targets="$formationParticipants" successMode="Any" failureMode="Any" variable="$formation" />
															</SuppressFailure>
															<While doFail="false" propagateChildFail="false" condition="$wuid ~= $__null">
																<Sequence>
																	<Expression expressions="$tagPoint = $wuid" />
																	<Selector>
																		<GraphSearch Origin="$tagPoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																			<LinkTagFilter tag="&apos;nextTp&apos;" prune="true" negprune="unknown" Parent="" Child="$wuid" Data="" />
																		</GraphSearch>
																		<Expression expressions="$wuid = $__null" />
																	</Selector>
																	<IfElseCondition failOnCondition="false" condition="$wuid == $__null" saveVersion="2">
																		<Then canSkip="1">
																			<Sequence>
																				<SetExternalLock LockManagerType="Local" Locked="false" LockName="&apos;finalMove&apos;" />
																				<EndFormation FormationHandle="$formation" />
																				<PlaceAction item="$pavise" slot="$paviseSlot" />
																			</Sequence>
																		</Then>
																		<Else canSkip="1">
																			<Move stopWithinDistance="0.500000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="2.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagPoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$params" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
																		</Else>
																	</IfElseCondition>
																</Sequence>
															</While>
														</Sequence>
													</Exec>
												</HandContentElement>
												<HandContentElement hand="Left" item="$leftHand" allowAny="false" decisionLabel="battle_ranged" useDecision="true" enabled="true" saveVersion="2">
													<Search canSkip="1">
														<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
													</Search>
													<Exec canSkip="1">
														<WaitAction />
													</Exec>
												</HandContentElement>
												<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
												<Expression expressions="$behaviorSuccess = true" />
												<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
											</Sequence>
										</LinkGate>
										<LinkGate from="$__object.id" to="$this.id" tag="&apos;leader&apos;" amount="AtLeastOne" presence="NotThere" RunLogic="KeepRunning">
											<Sequence>
												<ReadMessage timeout="&apos;-1&apos;" timeType="GameTime" variable="$formation" senderInfo="" inbox="&apos;battle_formationSetup&apos;" condition="" />
												<HandContentElement hand="Left" item="$pavise" allowAny="false" decisionLabel="battle_shield" useDecision="true" enabled="true" saveVersion="2">
													<Search canSkip="1">
														<HandCheck who="" LeftHand="$pavise" RightHand="" />
													</Search>
													<Exec canSkip="1">
														<Sequence>
															<SuppressFailure>
																<Parallel successMode="Any" failureMode="Any">
																	<CombatMoveDecorator>
																		<FormationFollower FormationHandle="$formation" PreferredPositions="$position" FormationMode="KeepShape" AllowRelocation="false" />
																	</CombatMoveDecorator>
																	<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;finalMove&apos;" RunLogic="KeepRunning">
																		<Success />
																	</ExternalLock>
																</Parallel>
															</SuppressFailure>
															<PlaceAction item="$pavise" slot="$paviseSlot" />
														</Sequence>
													</Exec>
												</HandContentElement>
												<HandContentElement hand="Left" item="$leftHand" allowAny="false" decisionLabel="battle_ranged" useDecision="true" enabled="true" saveVersion="2">
													<Search canSkip="1">
														<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
													</Search>
													<Exec canSkip="1">
														<WaitAction />
													</Exec>
												</HandContentElement>
												<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
												<Expression expressions="$behaviorSuccess = true" />
												<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
											</Sequence>
										</LinkGate>
									</Parallel>
									<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Selector>
							</Child>
							<OnFail canSkip="1">
								<Sequence>
									<Expression expressions="$behaviorSuccess = false" />
									<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
								</Sequence>
							</OnFail>
						</FuseBox>
					</LinkGate>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="battle_recordingNotification">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="formation" comment="" />
				<Variable name="formationParticipants" comment="" />
				<Variable name="leader" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="params" comment="" />
				<Variable name="pavise" comment="" />
				<Variable name="paviseSlot" comment="" />
				<Variable name="position" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="tagPoint" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child>
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Search>
															<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</HandCheck>
														</Search>
														<Exec>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</SoulIsAliveFilter>
																	<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																	</Nodalyzer>
																</GraphSearch>
																<MakeFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</MakeFormation>
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
																<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Callback_empty>
																<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<InstantMultiSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</InstantMultiSendMessageToNPC>
																</SuppressFailure>
																<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Expression>
																		<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</LinkTagFilter>
																			</GraphSearch>
																			<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Expression>
																		</Selector>
																		<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																			<OutputBreakpoints />
																			<Then>
																				<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</SetExternalLock>
																					<EndFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</EndFormation>
																					<PlaceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</PlaceAction>
																				</Sequence>
																			</Then>
																			<Else>
																				<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Move>
																			</Else>
																		</IfElseCondition>
																	</Sequence>
																</While>
															</Sequence>
														</Exec>
													</HandContentElement>
													<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Search>
															<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</GetWeaponsFromWeaponSet>
														</Search>
														<Exec>
															<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</WaitAction>
														</Exec>
													</HandContentElement>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantSendMessageToNPC>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</LinkGate>
											<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ReadMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ReadMessage>
													<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Search>
															<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</HandCheck>
														</Search>
														<Exec>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<CombatMoveDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<FormationFollower hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</FormationFollower>
																		</CombatMoveDecorator>
																		<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Success>
																		</ExternalLock>
																	</Parallel>
																</SuppressFailure>
																<PlaceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</PlaceAction>
															</Sequence>
														</Exec>
													</HandContentElement>
													<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Search>
															<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</GetWeaponsFromWeaponSet>
														</Search>
														<Exec>
															<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</WaitAction>
														</Exec>
													</HandContentElement>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantSendMessageToNPC>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</LinkGate>
										</Parallel>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Selector>
								</Child>
								<OnFail>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</InstantSendMessageToNPC>
									</Sequence>
								</OnFail>
							</FuseBox>
						</LinkGate>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="move_npcToTagpoint" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="finalTagpoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="params" type="pathFindingParams" values="usePaths(false)" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tagpointTarget" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="$string" prune="true" negprune="unknown" Parent="" Child="$tagpointTarget" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<AnyDecorator preset="crime_keepItems" enabled="true">
					<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
						<Child canSkip="1">
							<Sequence>
								<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
								<IfElseCondition failOnCondition="false" condition="$leftHand == $__null" saveVersion="2">
									<Then canSkip="1">
										<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<Success />
											</Search>
											<Exec canSkip="1">
												<WaitAction />
											</Exec>
										</HandContentElement>
									</Then>
									<Else canSkip="1">
										<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<Success />
											</Search>
											<Exec canSkip="1">
												<HandContentElement hand="Left" item="$leftHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_shield" useDecision="true" enabled="true" saveVersion="2">
													<Search canSkip="1">
														<Success />
													</Search>
													<Exec canSkip="1">
														<WaitAction />
													</Exec>
												</HandContentElement>
											</Exec>
										</HandContentElement>
									</Else>
								</IfElseCondition>
								<MeleeGuardAutomationDecorator GuardMode="freeBlock" active="true">
									<DistanceCondition Origin="$this.id" ReferencePt="$tagpointTarget" Low="5.000000" High="5.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
										<DisableCollisionAvoidance>
											<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpointTarget" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpointTarget" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$params" staminaPolicy="" pathInfo="" />
										</DisableCollisionAvoidance>
									</DistanceCondition>
								</MeleeGuardAutomationDecorator>
								<Selector>
									<Sequence>
										<GraphSearch Origin="$tagpointTarget" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;kneelOnFinished&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
										</GraphSearch>
										<IsWeaponDrawn who="$this.id" WeaponSet="Primary" saveVersion="2">
											<Then canSkip="1">
												<Sequence>
													<HandCheck who="$this.id" LeftHand="$leftHand" RightHand="$rightHand" />
													<IfElseCondition failOnCondition="false" condition="$leftHand ~= $__null" saveVersion="2">
														<Then canSkip="1">
															<UnstanceAction unstance="BattleKneelShieldCover" locationObject="" slaveObject="" />
														</Then>
														<Else canSkip="1">
															<UnstanceAction unstance="BattleLngsw" locationObject="" slaveObject="" />
														</Else>
													</IfElseCondition>
												</Sequence>
											</Then>
											<Else canSkip="1">
												<Success />
											</Else>
										</IsWeaponDrawn>
									</Sequence>
									<Success />
								</Selector>
								<Selector>
									<Sequence>
										<GraphSearch Origin="$tagpointTarget" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;shieldUpOnFinished&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
										</GraphSearch>
										<IsWeaponDrawn who="$this.id" WeaponSet="Primary" saveVersion="2">
											<Then canSkip="1">
												<Sequence>
													<HandCheck who="$this.id" LeftHand="$leftHand" RightHand="$rightHand" />
													<IfElseCondition failOnCondition="false" condition="$leftHand ~= $__null" saveVersion="2">
														<Then canSkip="1">
															<UnstanceAction unstance="BattleShswShld" locationObject="" slaveObject="" />
														</Then>
														<Else canSkip="1">
															<UnstanceAction unstance="BattleLngsw" locationObject="" slaveObject="" />
														</Else>
													</IfElseCondition>
												</Sequence>
											</Then>
											<Else canSkip="1">
												<Success />
											</Else>
										</IsWeaponDrawn>
									</Sequence>
									<Success />
								</Selector>
								<Selector>
									<Sequence>
										<Selector>
											<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;move2&apos;" prune="true" negprune="unknown" Parent="" Child="$finalTagpoint" Data="" />
											</GraphSearch>
											<Expression expressions="$finalTagpoint = $tagpointTarget" />
										</Selector>
										<DistanceCondition Origin="$this.id" ReferencePt="$finalTagpoint" Low="5.000000" High="5.000000" Negation="false" ValueOnMiddle="false" failOnCondition="false">
											<Sequence>
												<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;forceRanged&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
												</GraphSearch>
												<Selector>
													<HandContentElement hand="Left" item="$leftHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_ranged" useDecision="true" enabled="true" saveVersion="2">
														<Search canSkip="1">
															<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
														</Search>
														<Exec canSkip="1">
															<WaitAction />
														</Exec>
													</HandContentElement>
													<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_ranged" useDecision="true" enabled="true" saveVersion="2">
														<Search canSkip="1">
															<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
														</Search>
														<Exec canSkip="1">
															<WaitAction />
														</Exec>
													</HandContentElement>
												</Selector>
											</Sequence>
										</DistanceCondition>
									</Sequence>
									<Success />
								</Selector>
								<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" />
								<Expression expressions="$behaviorSuccess = true" />
								<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</Child>
						<OnFail canSkip="1">
							<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
						</OnFail>
					</FuseBox>
				</AnyDecorator>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="string" EventSet="">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="finalTagpoint" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="params" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="tagpointTarget" comment="" />
				<Variable name="string" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</GetWeaponsFromWeaponSet>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Search>
												<Exec>
													<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WaitAction>
												</Exec>
											</HandContentElement>
										</Then>
										<Else>
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Search>
												<Exec>
													<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Search>
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</Search>
														<Exec>
															<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</WaitAction>
														</Exec>
													</HandContentElement>
												</Exec>
											</HandContentElement>
										</Else>
									</IfElseCondition>
									<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DisableCollisionAvoidance hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ExactMove>
											</DisableCollisionAvoidance>
										</DistanceCondition>
									</MeleeGuardAutomationDecorator>
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
											</GraphSearch>
											<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</HandCheck>
														<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</UnstanceAction>
															</Then>
															<Else>
																<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</UnstanceAction>
															</Else>
														</IfElseCondition>
													</Sequence>
												</Then>
												<Else>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Else>
											</IsWeaponDrawn>
										</Sequence>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Selector>
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
											</GraphSearch>
											<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</HandCheck>
														<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</UnstanceAction>
															</Then>
															<Else>
																<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</UnstanceAction>
															</Else>
														</IfElseCondition>
													</Sequence>
												</Then>
												<Else>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Else>
											</IsWeaponDrawn>
										</Sequence>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Selector>
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
												</GraphSearch>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Selector>
											<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
													</GraphSearch>
													<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Search>
																<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</GetWeaponsFromWeaponSet>
															</Search>
															<Exec>
																<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</WaitAction>
															</Exec>
														</HandContentElement>
														<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Search>
																<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</GetWeaponsFromWeaponSet>
															</Search>
															<Exec>
																<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</WaitAction>
															</Exec>
														</HandContentElement>
													</Selector>
												</Sequence>
											</DistanceCondition>
										</Sequence>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Selector>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantSendMessageToNPC>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Child>
							<OnFail>
								<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantSendMessageToNPC>
							</OnFail>
						</FuseBox>
					</AnyDecorator>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="npc_pushLadder" is_function="1">
		<Variables>
			<Variable name="climber" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="climbers" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="dropSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="halbert" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="halberts" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="ladderEntity" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ladderHeight" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="left" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="particle" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="placeSlot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="guardArea" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="ladderSO" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$ladderSO" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;battleLadder_active&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
					</GraphSearch>
					<LinkGate from="$ladderSO" to="$ladderSO" tag="&apos;battleLadder_active&apos;" amount="AtLeastOne" presence="Present" RunLogic="Halt">
						<Sequence>
							<GraphSearch Origin="$ladderSO" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;ladderSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$placeSlot" Data="" />
							</GraphSearch>
							<GraphSearch Origin="$ladderSO" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;dropSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$dropSlot" Data="" />
							</GraphSearch>
							<GraphSearch Origin="$ladderSO" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;ladder&apos;" prune="true" negprune="unknown" Parent="" Child="$ladderEntity" Data="" />
							</GraphSearch>
							<GraphSearch Origin="$ladderEntity" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;ladderHeight&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$ladderHeight" />
							</GraphSearch>
							<WaitAction />
							<MoveParamsDecorator speed="Run" pathFindingParams="" doorClosingPolicy="Automatic">
								<UrgencyDecorator Urgency="Fast">
									<EntityContext context="combat_disabledAsTarget" target="">
										<HandContentElement hand="Right" item="$halbert" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_halbert" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<IsWeaponDrawn who="$this.id" WeaponSet="Oversized" saveVersion="2">
													<Then canSkip="1">
														<HandCheck who="$this.id" LeftHand="$left" RightHand="$halbert" />
													</Then>
													<Else canSkip="1">
														<Sequence>
															<GraphSearch Origin="$guardArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																<LinkTagFilter tag="&apos;halbert&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																<SlotHasAvailableItemFilter reservationHolder="" useHomeItem="true" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
																<Nodalyzer Quantifiers="ForAll" Parent="" Child="$halberts" saveVersion="2">
																	<Child0 canSkip="1">
																		<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
																	</Child0>
																</Nodalyzer>
															</GraphSearch>
															<GetItemInSlot slot="$halberts[0]" useHomeItem="true" item="$halbert" />
														</Sequence>
													</Else>
												</IsWeaponDrawn>
											</Search>
											<Exec canSkip="1">
												<Sequence>
													<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="1.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$ladderSO" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
													<Selector>
														<GraphSearch Origin="$ladderSO" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<LinkTagFilter tag="&apos;battleLadder_pushLadder&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
														</GraphSearch>
														<Sequence>
															<SendAIConceptSignal_battleLadder ladder="$ladderSO" success="true" />
															<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
																<Child canSkip="1">
																	<LinkGate from="$ladderSO" to="$ladderSO" tag="&apos;ladderClimber_tooHigh&apos;" amount="AtLeastOne" presence="NotThere" RunLogic="KeepRunning">
																		<EntityContext context="combat_actorSupressHitreactionAnimation" target="$this.id">
																			<DecoratorBuff BuffId="&apos;0f6bc79a-fc67-4aab-a797-4a9d4e4c2dc5&apos;" SoulWUID="$this.id">
																				<Sequence>
																					<Selector>
																						<Sequence>
																							<GraphSearch Origin="$ladderEntity" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																								<LinkTagFilter tag="&apos;ladderClimber&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																								<Nodalyzer Quantifiers="ForAll" Parent="" Child="$climbers" saveVersion="2" />
																							</GraphSearch>
																							<ForEach startIndex="0" step="1" array="$climbers" iterator="" value="$climber" break="">
																								<Sequence>
																									<DropFromLadder Target="$climber" />
																									<ExecuteLua code="local ent = XGenAIModule.GetEntityByWUID(data.climber) &#10; &#10;ent.soul:DealDamage(200, 200, data.climber, false)" />
																								</Sequence>
																							</ForEach>
																						</Sequence>
																						<Success />
																					</Selector>
																					<Parallel successMode="Any" failureMode="Any">
																						<AnimationAction fragment="&apos;GuardHlbrdPushAway&apos;" tags="$ladderHeight" eventReferenceObject="$ladderSO" alignObject="$ladderSO" slaveObject="" resourceOverride="" allowTorchForPlayer="false">
																							<EventData_pickup Slot="$placeSlot" name="&apos;placeSlot&apos;" />
																							<EventData_place Slot="$dropSlot" name="&apos;dropSlot&apos;" />
																						</AnimationAction>
																						<Sequence>
																							<SuppressFailure>
																								<Sequence>
																									<GraphSearch Origin="$ladderSO" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																										<LinkTagFilter tag="&apos;particle&apos;" prune="true" negprune="unknown" Parent="" Child="$particle" Data="" />
																									</GraphSearch>
																									<LinkGate from="$dropSlot" to="" tag="&apos;SlotLink&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
																										<Sequence>
																											<ExecuteSoundTrigger entity="$particle" triggerName="&apos;q_M11_gate_crash_open2&apos;" stop="false" />
																											<ParticleEffectControl ParticleWuid="$particle" StartStopChoice="Start" />
																										</Sequence>
																									</LinkGate>
																								</Sequence>
																							</SuppressFailure>
																							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																						</Sequence>
																					</Parallel>
																				</Sequence>
																			</DecoratorBuff>
																		</EntityContext>
																	</LinkGate>
																</Child>
																<OnSuccess canSkip="1">
																	<SendAIConceptSignal_battleCommandComplete group="$ladderSO" success="true" />
																</OnSuccess>
																<OnFail canSkip="1">
																	<Selector>
																		<Sequence>
																			<GraphSearch Origin="$dropSlot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																				<LinkTagFilter tag="&apos;SlotLink&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																			</GraphSearch>
																			<SendAIConceptSignal_battleCommandComplete group="$ladderSO" success="true" />
																		</Sequence>
																		<Sequence>
																			<SetVisibility ItemWUID="$ladderEntity" Visibility="true" />
																			<SendAIConceptSignal_battleCommandComplete group="$ladderSO" success="false" />
																		</Sequence>
																	</Selector>
																</OnFail>
															</FuseBox>
														</Sequence>
													</Selector>
												</Sequence>
											</Exec>
										</HandContentElement>
									</EntityContext>
								</UrgencyDecorator>
							</MoveParamsDecorator>
						</Sequence>
					</LinkGate>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="climber" comment="" />
				<Variable name="climbers" comment="" />
				<Variable name="dropSlot" comment="" />
				<Variable name="halbert" comment="" />
				<Variable name="halberts" comment="" />
				<Variable name="ladderEntity" comment="" />
				<Variable name="ladderHeight" comment="" />
				<Variable name="left" comment="" />
				<Variable name="particle" comment="" />
				<Variable name="placeSlot" comment="" />
				<Variable name="guardArea" comment="" />
				<Variable name="ladderSO" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
								<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</HandCheck>
														</Then>
														<Else>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</LinkTagFilter>
																	<SlotHasAvailableItemFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</SlotHasAvailableItemFilter>
																	<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																		<Child0>
																			<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</RangeSorter>
																		</Child0>
																	</Nodalyzer>
																</GraphSearch>
																<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</GetItemInSlot>
															</Sequence>
														</Else>
													</IsWeaponDrawn>
												</Search>
												<Exec>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Move>
														<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
															</GraphSearch>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<SendAIConceptSignal_battleLadder hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</SendAIConceptSignal_battleLadder>
																<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Child>
																		<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<DecoratorBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																									</LinkTagFilter>
																									<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																										<OutputBreakpoints />
																									</Nodalyzer>
																								</GraphSearch>
																								<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																										<DropFromLadder hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</DropFromLadder>
																										<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</ExecuteLua>
																									</Sequence>
																								</ForEach>
																							</Sequence>
																							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</Success>
																						</Selector>
																						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</EventData_pickup>
																								<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</EventData_place>
																							</AnimationAction>
																							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																										<OutputBreakpoints />
																										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																											</LinkTagFilter>
																										</GraphSearch>
																										<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																												<OutputBreakpoints />
																												<ExecuteSoundTrigger hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																												</ExecuteSoundTrigger>
																												<ParticleEffectControl hasInputBreakpoint="0" comment="" breakpointFlags="0">
																													<OutputBreakpoints />
																												</ParticleEffectControl>
																											</Sequence>
																										</LinkGate>
																									</Sequence>
																								</SuppressFailure>
																								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</Wait>
																							</Sequence>
																						</Parallel>
																					</Sequence>
																				</DecoratorBuff>
																			</EntityContext>
																		</LinkGate>
																	</Child>
																	<OnSuccess>
																		<SendAIConceptSignal_battleCommandComplete hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</SendAIConceptSignal_battleCommandComplete>
																	</OnSuccess>
																	<OnFail>
																		<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</LinkTagFilter>
																				</GraphSearch>
																				<SendAIConceptSignal_battleCommandComplete hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</SendAIConceptSignal_battleCommandComplete>
																			</Sequence>
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<SetVisibility hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</SetVisibility>
																				<SendAIConceptSignal_battleCommandComplete hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</SendAIConceptSignal_battleCommandComplete>
																			</Sequence>
																		</Selector>
																	</OnFail>
																</FuseBox>
															</Sequence>
														</Selector>
													</Sequence>
												</Exec>
											</HandContentElement>
										</EntityContext>
									</UrgencyDecorator>
								</MoveParamsDecorator>
							</Sequence>
						</LinkGate>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="fight_ranged" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="enemySoldier" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<SyncWithTrackview NPC="$this.id" />
							<Selector>
								<Sequence>
									<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;fightPlayer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									</GraphSearch>
									<Expression expressions="$enemySoldier = $__player" />
								</Sequence>
								<LinkGate from="$wuid" to="" tag="$string" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
									<GraphSearch Origin="$wuid" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="$string" prune="true" negprune="unknown" Parent="" Child="$enemySoldier" Data="" />
										<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
									</GraphSearch>
								</LinkGate>
							</Selector>
							<MeleeOffenseAutomationDecorator active="true">
								<MeleeDefenseAutomationDecorator active="true">
									<MeleeGuardAutomationDecorator GuardMode="automate" active="true">
										<WeaponAutomationDecorator WeaponChange="none" active="true">
											<CombatFollowerDecorator ProbablisticDrivenSweetSpot="true" RPGSweetSpotArcDriver="true" active="true">
												<CombatAction TargetNPC="$enemySoldier" RelationOverride="None" />
											</CombatFollowerDecorator>
										</WeaponAutomationDecorator>
									</MeleeGuardAutomationDecorator>
								</MeleeDefenseAutomationDecorator>
							</MeleeOffenseAutomationDecorator>
							<Expression expressions="$behaviorSuccess = true" />
							<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Child>
					<OnFail canSkip="1">
						<Sequence>
							<Expression expressions="$behaviorSuccess = false" />
							<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
						</Sequence>
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="enemySoldier" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<SyncWithTrackview hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SyncWithTrackview>
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Sequence>
									<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
											<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</SoulIsAliveFilter>
										</GraphSearch>
									</LinkGate>
								</Selector>
								<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<MeleeDefenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<CombatFollowerDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</CombatAction>
												</CombatFollowerDecorator>
											</WeaponAutomationDecorator>
										</MeleeGuardAutomationDecorator>
									</MeleeDefenseAutomationDecorator>
								</MeleeOffenseAutomationDecorator>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantSendMessageToNPC>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Child>
						<OnFail>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantSendMessageToNPC>
							</Sequence>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="standFire" is_function="0">
		<Variables>
			<Variable name="enemySoldier" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Selector>
						<Sequence>
							<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;fightPlayer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Expression expressions="$enemySoldier = $__player" />
						</Sequence>
						<GraphSearch Origin="$wuid" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="$string" prune="true" negprune="unknown" Parent="" Child="$enemySoldier" Data="" />
							<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
						</GraphSearch>
					</Selector>
					<DrawAction WeaponSet="Secondary" fullBody="false" tags="" />
					<AnyDecorator preset="crime_keepStateAndItems">
						<MeleeOffenseAutomationDecorator active="true">
							<WeaponAutomationDecorator WeaponChange="missile" active="true">
								<CombatAction TargetNPC="$enemySoldier" RelationOverride="None" />
							</WeaponAutomationDecorator>
						</MeleeOffenseAutomationDecorator>
					</AnyDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="enemySoldier" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
								<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SoulIsAliveFilter>
							</GraphSearch>
						</Selector>
						<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</DrawAction>
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</CombatAction>
								</WeaponAutomationDecorator>
							</MeleeOffenseAutomationDecorator>
						</AnyDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="crouchFire" is_function="0">
		<Variables>
			<Variable name="enemySoldier" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="" stance="crouch" allowAny="false">
					<Sequence>
						<Selector>
							<Sequence>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;fightPlayer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								</GraphSearch>
								<Expression expressions="$enemySoldier = $__player" />
							</Sequence>
							<GraphSearch Origin="$wuid" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="$string" prune="true" negprune="unknown" Parent="" Child="$enemySoldier" Data="" />
								<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
							</GraphSearch>
						</Selector>
						<DrawAction WeaponSet="Secondary" fullBody="false" tags="" />
						<AnyDecorator preset="crime_keepStateAndItems">
							<MeleeOffenseAutomationDecorator active="true">
								<WeaponAutomationDecorator WeaponChange="missile" active="true">
									<CombatAction TargetNPC="$enemySoldier" RelationOverride="None" />
								</WeaponAutomationDecorator>
							</MeleeOffenseAutomationDecorator>
						</AnyDecorator>
					</Sequence>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="enemySoldier" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
									<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</SoulIsAliveFilter>
								</GraphSearch>
							</Selector>
							<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</DrawAction>
							<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</CombatAction>
									</WeaponAutomationDecorator>
								</MeleeOffenseAutomationDecorator>
							</AnyDecorator>
						</Sequence>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="move_npcToTagpoint2" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="params" type="pathFindingParams" values="usePaths(false)" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tagpointTarget" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;move&apos;" prune="true" negprune="unknown" Parent="" Child="$tagpointTarget" Data="" />
					</GraphSearch>
					<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
					<IfElseCondition failOnCondition="false" condition="$leftHand == $__null" saveVersion="2">
						<Then canSkip="1">
							<HandContentElement hand="Right" item="$rightHand" allowAny="false" decisionLabel="battle_weapon" useDecision="true" saveVersion="2">
								<Search canSkip="1">
									<Success />
								</Search>
								<Exec canSkip="1">
									<WaitAction />
								</Exec>
							</HandContentElement>
						</Then>
						<Else canSkip="1">
							<HandContentElement hand="Right" item="$rightHand" allowAny="false" decisionLabel="battle_weapon" useDecision="true" saveVersion="2">
								<Search canSkip="1">
									<Success />
								</Search>
								<Exec canSkip="1">
									<HandContentElement hand="Left" item="$leftHand" allowAny="false" decisionLabel="battle_shield" useDecision="true" saveVersion="2">
										<Search canSkip="1">
											<Success />
										</Search>
										<Exec canSkip="1">
											<WaitAction />
										</Exec>
									</HandContentElement>
								</Exec>
							</HandContentElement>
						</Else>
					</IfElseCondition>
					<AnyDecorator preset="battle">
						<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
							<Child canSkip="1">
								<Sequence>
									<MeleeGuardAutomationDecorator GuardMode="freeBlock" active="true">
										<DistanceCondition Origin="$this.id" ReferencePt="$tagpointTarget" Low="5.000000" High="5.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
											<Sequence>
												<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpointTarget" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$tagpointTarget" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$params" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
												<Expression expressions="$behaviorSuccess = true" />
												<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
											</Sequence>
										</DistanceCondition>
									</MeleeGuardAutomationDecorator>
									<Selector>
										<Sequence>
											<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;shieldUpOnFinished&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
											</GraphSearch>
											<IsWeaponDrawn who="$this.id" WeaponSet="Primary" saveVersion="2">
												<Then canSkip="1">
													<Sequence>
														<HandCheck who="$this.id" LeftHand="$leftHand" RightHand="$rightHand" />
														<IfElseCondition failOnCondition="false" condition="$leftHand ~= $__null" saveVersion="2">
															<Then canSkip="1">
																<UnstanceAction unstance="BattleLngsw" locationObject="$tagpointTarget" slaveObject="" />
															</Then>
															<Else canSkip="1">
																<UnstanceAction unstance="BattleShswShld" locationObject="$tagpointTarget" slaveObject="" />
															</Else>
														</IfElseCondition>
													</Sequence>
												</Then>
												<Else canSkip="1">
													<Success />
												</Else>
											</IsWeaponDrawn>
										</Sequence>
										<Success />
									</Selector>
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Sequence>
							</Child>
							<OnFail canSkip="1">
								<Sequence>
									<Expression expressions="$behaviorSuccess = false" />
									<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
								</Sequence>
							</OnFail>
						</FuseBox>
					</AnyDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="params" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="tagpointTarget" comment="" />
				<Variable name="string" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetWeaponsFromWeaponSet>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Search>
									<Exec>
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</Exec>
								</HandContentElement>
							</Then>
							<Else>
								<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Search>
									<Exec>
										<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Search>
												<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Success>
											</Search>
											<Exec>
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
											</Exec>
										</HandContentElement>
									</Exec>
								</HandContentElement>
							</Else>
						</IfElseCondition>
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ExactMove>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantSendMessageToNPC>
												</Sequence>
											</DistanceCondition>
										</MeleeGuardAutomationDecorator>
										<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
												</GraphSearch>
												<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</HandCheck>
															<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</UnstanceAction>
																</Then>
																<Else>
																	<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</UnstanceAction>
																</Else>
															</IfElseCondition>
														</Sequence>
													</Then>
													<Else>
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</Else>
												</IsWeaponDrawn>
											</Sequence>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Selector>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Child>
								<OnFail>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</InstantSendMessageToNPC>
									</Sequence>
								</OnFail>
							</FuseBox>
						</AnyDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments>
				<Comment text="this_happens_in_weapon_setup_in_standard_situations" posX="370" posY="-440" width="950" height="437" resizeBorderWidth="950" resizeBorderHeight="410" color="0.65,0.65,0.65" author="Arax" />
			</Comments>
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="stealthShootingTest" is_function="0">
		<Variables>
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="skirmishTarget" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;target&apos;" prune="true" negprune="unknown" Parent="" Child="$skirmishTarget" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					<StanceElement smartObject="" stance="crouch" allowAny="false">
						<MeleeOffenseAutomationDecorator active="true">
							<WeaponAutomationDecorator WeaponChange="missile" active="true">
								<CombatAction TargetNPC="$skirmishTarget" RelationOverride="Hostile" />
							</WeaponAutomationDecorator>
						</MeleeOffenseAutomationDecorator>
					</StanceElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<HandContentElement hand="Left" item="$leftHand" allowAny="false" decisionLabel="battle_ranged" useDecision="false" saveVersion="2">
				<Search canSkip="1">
					<GetWeaponsFromWeaponSet WeaponSet="Secondary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
				</Search>
				<Exec canSkip="1">
					<Sequence>
						<WaitAction />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</Exec>
			</HandContentElement>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="skirmishTarget" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</CombatAction>
								</WeaponAutomationDecorator>
							</MeleeOffenseAutomationDecorator>
						</StanceElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<HandContentElement editorPosX="440" editorPosY="570" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Search>
						<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetWeaponsFromWeaponSet>
					</Search>
					<Exec>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WaitAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Exec>
				</HandContentElement>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="gateDefend" is_function="0">
		<Variables>
			<Variable name="battlement" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="canUseBattlement" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="enemyBG" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stonePileMinigame" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stoneThrowingArea" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="wasThrowingStones" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="firstWuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="secondWuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Selector>
						<Sequence>
							<GraphSearch Origin="$secondWuid" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;stoneThrowingArea&apos;" prune="true" negprune="unknown" Parent="" Child="$stoneThrowingArea" Data="" />
							</GraphSearch>
							<GraphSearch Origin="$stoneThrowingArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;gateNode&apos;" prune="true" negprune="unknown" Parent="" Child="$enemyBG" Data="" />
							</GraphSearch>
							<GraphSearch Origin="$secondWuid" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<IsMinigameAvailableFilter minigameType="StoneThrowing" Source="Child" prune="true" negprune="unknown" Parent="" Child="$stonePileMinigame" />
							</GraphSearch>
							<Expression expressions="$wasThrowingStones = false" />
						</Sequence>
						<Expression expressions="$wasThrowingStones = true" />
					</Selector>
					<Selector>
						<Sequence>
							<GraphSearch Origin="$secondWuid" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;battlement&apos;" prune="true" negprune="unknown" Parent="" Child="$battlement" Data="" />
							</GraphSearch>
							<Expression expressions="$canUseBattlement = true" />
						</Sequence>
						<Expression expressions="$canUseBattlement = false" />
					</Selector>
					<Loop count="-1">
						<Sequence>
							<AnyDecorator preset="crime_keepItems" enabled="true">
								<ExactMove directionType="AlignWithEntity" directionSpecification="$secondWuid" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$secondWuid" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
							</AnyDecorator>
							<MoveParamsDecorator speed="Run" pathFindingParams="" doorClosingPolicy="Automatic">
								<Parallel successMode="Any" failureMode="Any">
									<IfElseCondition failOnCondition="false" condition="$canUseBattlement" saveVersion="2">
										<Then canSkip="1">
											<MeleeOffenseAutomationDecorator active="true">
												<WeaponAutomationDecorator WeaponChange="missile" active="true">
													<MinigameElement minigameType="BattleArchery" minigameObject="$battlement" decisionLabel="battle_archery" useDecision="true" enabled="true" saveVersion="2">
														<Search canSkip="1">
															<Success />
														</Search>
														<Exec canSkip="1">
															<CombatAction TargetNPC="$__player" RelationOverride="None" />
														</Exec>
													</MinigameElement>
												</WeaponAutomationDecorator>
											</MeleeOffenseAutomationDecorator>
										</Then>
										<Else canSkip="1">
											<MeleeOffenseAutomationDecorator active="true">
												<WeaponAutomationDecorator WeaponChange="missile" active="true">
													<CombatAction TargetNPC="$__player" RelationOverride="None" />
												</WeaponAutomationDecorator>
											</MeleeOffenseAutomationDecorator>
										</Else>
									</IfElseCondition>
									<IfGate atomic="false" condition="!$wasThrowingStones" RunLogic="KeepRunning">
										<AreaPresenceGate aiObjects="$__player" area="$firstWuid" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
											<LinkGate from="$enemyBG" to="" tag="&apos;battleEntity&apos;" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
												<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
											</LinkGate>
										</AreaPresenceGate>
									</IfGate>
								</Parallel>
							</MoveParamsDecorator>
							<IfCondition failOnCondition="false" condition="!$wasThrowingStones">
								<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
									<Child canSkip="1">
										<MinigameElement minigameType="StoneThrowing" minigameObject="$stonePileMinigame" decisionLabel="battle_stones" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<GraphSearch Origin="$secondWuid" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<IsMinigameAvailableFilter minigameType="StoneThrowing" Source="Child" prune="true" negprune="unknown" Parent="" Child="$stonePileMinigame" />
												</GraphSearch>
											</Search>
											<Exec canSkip="1">
												<Sequence>
													<WaitAction />
													<Wait duration="&apos;7s&apos;" timeType="GameTime" doFail="false" variation="" />
												</Sequence>
											</Exec>
										</MinigameElement>
									</Child>
									<OnSuccess canSkip="1">
										<Expression expressions="$wasThrowingStones = true" />
									</OnSuccess>
								</FuseBox>
							</IfCondition>
						</Sequence>
					</Loop>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<BattlementAutomationDecorator active="true">
				<CombatFollowerDecorator ProbablisticDrivenSweetSpot="true" RPGSweetSpotArcDriver="true" active="true" />
			</BattlementAutomationDecorator>
		</ForestContainer>
		<EditorData Signature="wuid_wuid" EventSet="">
			<Variables>
				<Variable name="battlement" comment="" />
				<Variable name="canUseBattlement" comment="" />
				<Variable name="enemyBG" comment="" />
				<Variable name="stonePileMinigame" comment="" />
				<Variable name="stoneThrowingArea" comment="" />
				<Variable name="wasThrowingStones" comment="" />
				<Variable name="firstWuid" comment="" />
				<Variable name="secondWuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IsMinigameAvailableFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</IsMinigameAvailableFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</Selector>
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</Selector>
						<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExactMove>
								</AnyDecorator>
								<MoveParamsDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<MinigameElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Search>
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</Search>
															<Exec>
																<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</CombatAction>
															</Exec>
														</MinigameElement>
													</WeaponAutomationDecorator>
												</MeleeOffenseAutomationDecorator>
											</Then>
											<Else>
												<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</CombatAction>
													</WeaponAutomationDecorator>
												</MeleeOffenseAutomationDecorator>
											</Else>
										</IfElseCondition>
										<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</LinkGate>
											</AreaPresenceGate>
										</IfGate>
									</Parallel>
								</MoveParamsDecorator>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Child>
											<MinigameElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IsMinigameAvailableFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</IsMinigameAvailableFilter>
													</GraphSearch>
												</Search>
												<Exec>
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</WaitAction>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Sequence>
												</Exec>
											</MinigameElement>
										</Child>
										<OnSuccess>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</OnSuccess>
									</FuseBox>
								</IfCondition>
							</Sequence>
						</Loop>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<BattlementAutomationDecorator editorPosX="1880" editorPosY="100" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<CombatFollowerDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</CombatFollowerDecorator>
				</BattlementAutomationDecorator>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="fight_withoutDefense" is_function="1">
		<Variables>
			<Variable name="anchor" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="enemySoldier" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="moveTarget" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="pathFindingParams" type="pathFindingParams" values="useGeneratedNSO(true)" isPersistent="0" form="single" />
			<Variable name="surrenderChatResult" type="crime:playerSurrenderChatFeedback" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="wuid" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<SyncWithTrackview NPC="$this.id" />
							<Selector>
								<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;moveBeforeAttack&apos;" prune="true" negprune="unknown" Parent="" Child="$moveTarget" Data="" />
								</GraphSearch>
								<Success />
							</Selector>
							<Selector>
								<Sequence>
									<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;fightPlayer&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									</GraphSearch>
									<Expression expressions="$enemySoldier = $__player" />
								</Sequence>
								<LinkGate from="$wuid" to="" tag="$string" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
									<GraphSearch Origin="$wuid" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="$string" prune="true" negprune="unknown" Parent="" Child="$enemySoldier" Data="" />
										<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
									</GraphSearch>
								</LinkGate>
							</Selector>
							<Selector>
								<Sequence>
									<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;anchor&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
										<Nodalyzer Quantifiers="ForAll" Parent="" Child="$anchor" saveVersion="2">
											<Child0 canSkip="1">
												<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
											</Child0>
										</Nodalyzer>
									</GraphSearch>
									<AddLink From="$this.id" To="$anchor[0]" Tag="&apos;combat_anchor&apos;" Data="" LinkOpHandleMode="Success" />
								</Sequence>
								<Success />
							</Selector>
							<IfCondition failOnCondition="false" condition="$moveTarget ~= $__null">
								<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$moveTarget" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$pathFindingParams" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
							</IfCondition>
							<Parallel successMode="Any" failureMode="Any">
								<MeleeOffenseAutomationDecorator active="true">
									<MeleeGuardAutomationDecorator GuardMode="automate" active="true">
										<WeaponAutomationDecorator WeaponChange="none" active="true">
											<CombatFollowerDecorator ProbablisticDrivenSweetSpot="true" RPGSweetSpotArcDriver="true" active="true">
												<CombatAction TargetNPC="$enemySoldier" RelationOverride="None" />
											</CombatFollowerDecorator>
										</WeaponAutomationDecorator>
									</MeleeGuardAutomationDecorator>
								</MeleeOffenseAutomationDecorator>
								<Loop count="-1">
									<SuppressFailure>
										<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$surrenderChatResult" senderInfo="" inbox="&apos;crime_playerSurrenderChatFeedback&apos;" condition="" answerVar="">
											<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;NPC_NEAKCEPTUJE_HRACOVO_VZDAVANI_NEVZDAVACI_KONTEXT&apos;" subtitlesDown="false" nodeLabel="18581200" />
										</ProcessMessage>
									</SuppressFailure>
								</Loop>
							</Parallel>
							<Expression expressions="$behaviorSuccess = true" />
							<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</Child>
					<OnFail canSkip="1">
						<Sequence>
							<Expression expressions="$behaviorSuccess = false" />
							<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
						</Sequence>
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData_string" EventSet="">
			<Variables>
				<Variable name="anchor" comment="" />
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="enemySoldier" comment="" />
				<Variable name="moveTarget" comment="" />
				<Variable name="pathFindingParams" comment="" />
				<Variable name="surrenderChatResult" comment="" />
				<Variable name="string" comment="" />
				<Variable name="wuid" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<SyncWithTrackview hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SyncWithTrackview>
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</Selector>
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Sequence>
									<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
											<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</SoulIsAliveFilter>
										</GraphSearch>
									</LinkGate>
								</Selector>
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
											<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Child0>
													<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</RangeSorter>
												</Child0>
											</Nodalyzer>
										</GraphSearch>
										<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</AddLink>
									</Sequence>
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</Selector>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Move>
								</IfCondition>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<CombatFollowerDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</CombatAction>
												</CombatFollowerDecorator>
											</WeaponAutomationDecorator>
										</MeleeGuardAutomationDecorator>
									</MeleeOffenseAutomationDecorator>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerMonolog>
											</ProcessMessage>
										</SuppressFailure>
									</Loop>
								</Parallel>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantSendMessageToNPC>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Child>
						<OnFail>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantSendMessageToNPC>
							</Sequence>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="throwStone" is_function="0">
		<Variables>
			<Variable name="stonePileMinigame" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<MinigameElement minigameType="StoneThrowing" minigameObject="$stonePileMinigame" decisionLabel="battle_stones" useDecision="true" saveVersion="2">
							<Search canSkip="1">
								<GraphSearch Origin="$data" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<IsMinigameAvailableFilter minigameType="StoneThrowing" Source="Child" prune="true" negprune="unknown" Parent="" Child="$stonePileMinigame" />
								</GraphSearch>
							</Search>
							<Exec canSkip="1">
								<Parallel successMode="Any" failureMode="Any">
									<WaitAction />
									<Wait duration="&apos;20s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Parallel>
							</Exec>
						</MinigameElement>
					</Child>
					<OnSuccess canSkip="1">
						<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
					</OnSuccess>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="endNotification">
			<Variables>
				<Variable name="stonePileMinigame" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<MinigameElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Search>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IsMinigameAvailableFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</IsMinigameAvailableFilter>
									</GraphSearch>
								</Search>
								<Exec>
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Parallel>
								</Exec>
							</MinigameElement>
						</Child>
						<OnSuccess>
							<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantCallback_empty>
						</OnSuccess>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="shootFromBattlement" is_function="0">
		<Variables>
			<Variable name="battlement" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="endBehavior" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="potetialTargets" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="skirmishTarget" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="targetDied" type="_bool" values="false" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Expression expressions="$skirmishTarget = $__player" />
			</OnInit>
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<EntityContext context="BattleShooter" target="">
						<While doFail="false" propagateChildFail="false" condition="true">
							<MinigameElement minigameType="BattleArchery" minigameObject="$battlement" decisionLabel="battle_archery" useDecision="true" enabled="true" saveVersion="2">
								<Search canSkip="1">
									<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<IsMinigameAvailableFilter minigameType="BattleArchery" Source="Child" prune="true" negprune="unknown" Parent="" Child="$battlement" />
									</GraphSearch>
								</Search>
								<Exec canSkip="1">
									<MeleeOffenseAutomationDecorator active="true">
										<WeaponAutomationDecorator WeaponChange="missile" active="true">
											<CombatAction TargetNPC="$skirmishTarget" RelationOverride="None" />
										</WeaponAutomationDecorator>
									</MeleeOffenseAutomationDecorator>
								</Exec>
							</MinigameElement>
						</While>
					</EntityContext>
					<While doFail="false" propagateChildFail="false" condition="~$endBehavior">
						<Selector>
							<Sequence>
								<VarOperation varName="$potetialTargets" targetVarName="" operation="Reinit" argument="" />
								<GraphSearch Origin="$data" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$potetialTargets" />
								</GraphSearch>
								<RelationContextDecorator context="combat_forcedTarget" target="$potetialTargets[0]" reverse="false" enabled="true">
									<DeadUnconsciousGate Who="$potetialTargets[0]" State="Dead" Negation="false" RunLogic="KeepRunning">
										<Expression expressions="$targetDied = true" />
									</DeadUnconsciousGate>
								</RelationContextDecorator>
							</Sequence>
							<Sequence>
								<IfCondition failOnCondition="false" condition="$targetDied == true">
									<Expression expressions="$endBehavior = true" />
								</IfCondition>
								<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</Selector>
					</While>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="battlement" comment="" />
				<Variable name="endBehavior" comment="" />
				<Variable name="potetialTargets" comment="" />
				<Variable name="skirmishTarget" comment="" />
				<Variable name="targetDied" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</OnInit>
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<MinigameElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Search>
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IsMinigameAvailableFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</IsMinigameAvailableFilter>
										</GraphSearch>
									</Search>
									<Exec>
										<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</CombatAction>
											</WeaponAutomationDecorator>
										</MeleeOffenseAutomationDecorator>
									</Exec>
								</MinigameElement>
							</While>
						</EntityContext>
						<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</VarOperation>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SoulIsAliveFilter>
									</GraphSearch>
									<RelationContextDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<DeadUnconsciousGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</DeadUnconsciousGate>
									</RelationContextDecorator>
								</Sequence>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Selector>
						</While>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="move_withHalberd" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="firstTagpoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="secondTagpoint" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;move&apos;" prune="true" negprune="unknown" Parent="" Child="$firstTagpoint" Data="" />
					</GraphSearch>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;move2&apos;" prune="true" negprune="unknown" Parent="" Child="$secondTagpoint" Data="" />
					</GraphSearch>
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$rightHand" allowAny="false" decisionLabel="battle_halbert" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<GetWeaponsFromWeaponSet WeaponSet="Oversized" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
					</Search>
					<Exec canSkip="1">
						<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
							<Child canSkip="1">
								<Sequence>
									<ExactMove directionType="AlignWithEntity" directionSpecification="$firstTagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$firstTagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$params" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
									<ExactMove directionType="AlignWithEntity" directionSpecification="$secondTagpoint" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$secondTagpoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$params" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
									<Expression expressions="$behaviorSuccess = true" />
									<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
									<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
								</Sequence>
							</Child>
							<OnFail canSkip="1">
								<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
							</OnFail>
						</FuseBox>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer>
			<AnyDecorator preset="crime_keepItems" enabled="true" />
			<WaitAction />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="firstTagpoint" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="secondTagpoint" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
					</Sequence>
				</OnInit>
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</GetWeaponsFromWeaponSet>
						</Search>
						<Exec>
							<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ExactMove>
										<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ExactMove>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</InstantSendMessageToNPC>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Child>
								<OnFail>
									<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantSendMessageToNPC>
								</OnFail>
							</FuseBox>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest>
				<AnyDecorator editorPosX="360" editorPosY="580" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</AnyDecorator>
				<WaitAction editorPosX="450" editorPosY="480" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</WaitAction>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="move_hodor" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="true" isPersistent="0" form="single" />
			<Variable name="gateTp" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Selector>
					<Sequence>
						<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;move2&apos;" prune="true" negprune="unknown" Parent="" Child="$gateTp" Data="" />
						</GraphSearch>
						<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$gateTp" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
						<UnstanceAction unstance="m48c_soldierHoldingDoor" locationObject="$gateTp" slaveObject="" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
					<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
				</Selector>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="gateTp" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Move>
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
						<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</InstantSendMessageToNPC>
					</Selector>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="fightOrFlee" is_function="0">
		<Variables>
			<Variable name="anchor" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="behaviorSuccess" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="guardArea" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="params" type="pathFindingParams" values="usePaths(false)" isPersistent="0" form="single" />
			<Variable name="surrenderChatResult" type="crime:playerSurrenderChatFeedback" values="" isPersistent="0" form="single" />
			<Variable name="tagPoint" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;guardArea&apos;" prune="true" negprune="unknown" Parent="" Child="$guardArea" Data="" />
					</GraphSearch>
					<IsInsideArea Origin="$this.id" Area="$guardArea" FailSubtMissing="false" saveVersion="2">
						<Then canSkip="1">
							<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
								<Child canSkip="1">
									<Sequence>
										<SyncWithTrackview NPC="$this.id" />
										<Selector>
											<Sequence>
												<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;anchor&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
													<Nodalyzer Quantifiers="ForAll" Parent="" Child="$anchor" saveVersion="2">
														<Child0 canSkip="1">
															<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
														</Child0>
													</Nodalyzer>
												</GraphSearch>
												<AddLink From="$this.id" To="$anchor[0]" Tag="&apos;combat_anchor&apos;" Data="" LinkOpHandleMode="Success" />
											</Sequence>
											<Success />
										</Selector>
										<Parallel successMode="Any" failureMode="Any">
											<MeleeDefenseAutomationDecorator active="true">
												<MeleeOffenseAutomationDecorator active="true">
													<MeleeGuardAutomationDecorator GuardMode="automate" active="true">
														<WeaponAutomationDecorator WeaponChange="none" active="true">
															<CombatFollowerDecorator ProbablisticDrivenSweetSpot="true" RPGSweetSpotArcDriver="true" active="true">
																<CombatAction TargetNPC="$__player" RelationOverride="None" />
															</CombatFollowerDecorator>
														</WeaponAutomationDecorator>
													</MeleeGuardAutomationDecorator>
												</MeleeOffenseAutomationDecorator>
											</MeleeDefenseAutomationDecorator>
											<Loop count="-1">
												<SuppressFailure>
													<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$surrenderChatResult" senderInfo="" inbox="&apos;crime_playerSurrenderChatFeedback&apos;" condition="" answerVar="">
														<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;NPC_NEAKCEPTUJE_HRACOVO_VZDAVANI_NEVZDAVACI_KONTEXT&apos;" skipInLod="false" subtitlesDown="false" nodeLabel="48630934" />
													</ProcessMessage>
												</SuppressFailure>
											</Loop>
										</Parallel>
										<Expression expressions="$behaviorSuccess = true" />
										<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</Child>
								<OnFail canSkip="1">
									<Sequence>
										<Expression expressions="$behaviorSuccess = false" />
										<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
									</Sequence>
								</OnFail>
							</FuseBox>
						</Then>
						<Else canSkip="1">
							<DisableCollisionAvoidance>
								<AnyDecorator preset="crime_keepStateAndItems" enabled="true">
									<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
										<Child canSkip="1">
											<DistanceCondition Origin="$this.id" ReferencePt="$data" Low="1.000000" High="1.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
												<Sequence>
													<While doFail="false" propagateChildFail="false" condition="$data ~= $__null">
														<Sequence>
															<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="true" successDistance="3.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$data" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="$params" staminaPolicy="" pathInfo="" />
															<Expression expressions="$tagPoint = $data" />
															<Selector>
																<GraphSearch Origin="$tagPoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																	<LinkTagFilter tag="&apos;nextTp&apos;" prune="true" negprune="unknown" Parent="" Child="$data" Data="" />
																</GraphSearch>
																<Expression expressions="$data = $__null" />
															</Selector>
														</Sequence>
													</While>
													<Expression expressions="$behaviorSuccess = true" />
													<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
													<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
												</Sequence>
											</DistanceCondition>
										</Child>
										<OnFail canSkip="1">
											<Sequence>
												<Expression expressions="$behaviorSuccess = false" />
												<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
											</Sequence>
										</OnFail>
									</FuseBox>
								</AnyDecorator>
							</DisableCollisionAvoidance>
						</Else>
					</IsInsideArea>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="wuidData" EventSet="">
			<Variables>
				<Variable name="anchor" comment="" />
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="guardArea" comment="" />
				<Variable name="params" comment="" />
				<Variable name="surrenderChatResult" comment="" />
				<Variable name="tagPoint" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="20" editorPosY="20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Child>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SyncWithTrackview hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</SyncWithTrackview>
											<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
														<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Child0>
																<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</RangeSorter>
															</Child0>
														</Nodalyzer>
													</GraphSearch>
													<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</AddLink>
												</Sequence>
												<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Success>
											</Selector>
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<MeleeDefenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<CombatFollowerDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</CombatAction>
																</CombatFollowerDecorator>
															</WeaponAutomationDecorator>
														</MeleeGuardAutomationDecorator>
													</MeleeOffenseAutomationDecorator>
												</MeleeDefenseAutomationDecorator>
												<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_speech_schedulerMonolog>
														</ProcessMessage>
													</SuppressFailure>
												</Loop>
											</Parallel>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</InstantSendMessageToNPC>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</Child>
									<OnFail>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</InstantSendMessageToNPC>
										</Sequence>
									</OnFail>
								</FuseBox>
							</Then>
							<Else>
								<DisableCollisionAvoidance hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child>
												<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Move>
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
																<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</LinkTagFilter>
																	</GraphSearch>
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</Selector>
															</Sequence>
														</While>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
														<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</InstantSendMessageToNPC>
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</Sequence>
												</DistanceCondition>
											</Child>
											<OnFail>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</InstantSendMessageToNPC>
												</Sequence>
											</OnFail>
										</FuseBox>
									</AnyDecorator>
								</DisableCollisionAvoidance>
							</Else>
						</IsInsideArea>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="fight_simple" is_function="0">
		<Variables>
			<Variable name="surrenderChatResult" type="crime:playerSurrenderChatFeedback" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="speech_readyForSwitchDialog" target="$this.id">
					<Sequence>
						<IsFastForwarded failOnCondition="false" saveVersion="2">
							<Else canSkip="1">
								<SyncWithTrackview NPC="$this.id" />
							</Else>
						</IsFastForwarded>
						<Parallel successMode="Any" failureMode="Any">
							<LoopUntil until="Success" attemptCount="0">
								<MeleeOffenseAutomationDecorator active="true">
									<MeleeDefenseAutomationDecorator active="true">
										<MeleeGuardAutomationDecorator GuardMode="automate" active="true">
											<WeaponAutomationDecorator WeaponChange="none" active="true">
												<CombatFollowerDecorator ProbablisticDrivenSweetSpot="true" RPGSweetSpotArcDriver="true" active="true">
													<CombatAction TargetNPC="$__player" RelationOverride="None" />
												</CombatFollowerDecorator>
											</WeaponAutomationDecorator>
										</MeleeGuardAutomationDecorator>
									</MeleeDefenseAutomationDecorator>
								</MeleeOffenseAutomationDecorator>
							</LoopUntil>
							<Loop count="-1">
								<SuppressFailure>
									<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$surrenderChatResult" senderInfo="" inbox="&apos;crime_playerSurrenderChatFeedback&apos;" condition="" answerVar="">
										<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;NPC_NEAKCEPTUJE_HRACOVO_VZDAVANI_NEVZDAVACI_KONTEXT&apos;" skipInLod="false" subtitlesDown="false" nodeLabel="69768649" />
									</ProcessMessage>
								</SuppressFailure>
							</Loop>
							<Loop count="-1">
								<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="$data:script_param[&apos;crime_surrenderingMaxDistance&apos;].value" High="$data:script_param[&apos;crime_surrenderingMaxDistance&apos;].value" Negation="false" OpenInMiddle="false" RunLogic="Halt">
									<GameContext context="combat_playerSurrenderDistanceCondition">
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
									</GameContext>
								</DistanceGate>
							</Loop>
						</Parallel>
					</Sequence>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="surrenderChatResult" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IsFastForwarded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Else>
									<SyncWithTrackview hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</SyncWithTrackview>
								</Else>
							</IsFastForwarded>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<MeleeDefenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<CombatFollowerDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</CombatAction>
													</CombatFollowerDecorator>
												</WeaponAutomationDecorator>
											</MeleeGuardAutomationDecorator>
										</MeleeDefenseAutomationDecorator>
									</MeleeOffenseAutomationDecorator>
								</LoopUntil>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_schedulerMonolog>
										</ProcessMessage>
									</SuppressFailure>
								</Loop>
								<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GameContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</GameContext>
									</DistanceGate>
								</Loop>
							</Parallel>
						</Sequence>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="move_withoutOrca" is_function="0">
		<Variables>
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="iterator" type="_int" values="0" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="move" type="_bool" values="true" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tagpointArray" type="_wuid" values="" isPersistent="0" form="array" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="" Borders="" depth="-1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;move&apos;" prune="false" negprune="true" Parent="" Child="" Data="" />
					<Nodalyzer Quantifiers="ForAll" Parent="" Child="$tagpointArray" saveVersion="2" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<ForEach startIndex="0" step="1" array="$tagpointArray" iterator="$iterator" value="" break="">
					<DisableCollisionAvoidance>
						<CombatMoveDecorator>
							<ExactMove directionType="AlignWithEntity" directionSpecification="$tagpointArray[$iterator]" animationTriggerDist="0.150000" precise="false" changeNPCState="false" fastForwardIncludesMove="false" destinationSpecification="$tagpointArray[$iterator]" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
						</CombatMoveDecorator>
					</DisableCollisionAvoidance>
				</ForEach>
			</Behavior>
		</Root>
		<ForestContainer>
			<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
				<Child canSkip="1">
					<Sequence>
						<Expression expressions="$behaviorSuccess = true" />
						<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</Child>
				<OnSuccess canSkip="1">
					<Sequence>
						<Expression expressions="$behaviorSuccess = false" />
						<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
					</Sequence>
				</OnSuccess>
			</FuseBox>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="iterator" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="move" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="tagpointArray" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
						<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
						</Nodalyzer>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DisableCollisionAvoidance hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<CombatMoveDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExactMove>
							</CombatMoveDecorator>
						</DisableCollisionAvoidance>
					</ForEach>
				</Behavior>
			</Root>
			<Forest>
				<FuseBox editorPosX="240" editorPosY="540" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Child>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantSendMessageToNPC>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Child>
					<OnSuccess>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantSendMessageToNPC>
						</Sequence>
					</OnSuccess>
				</FuseBox>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="guardArea_special" is_function="0">
		<Variables>
			<Variable name="allies" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="alliesInArea" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="ally" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="anchorTpDistance" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="areaAnchor" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="behaviorSuccess" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="combatAutomationsActive" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="currentArea" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="enemies" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="enemiesInArea" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="enemy" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="firstArea" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="firstAreaTp" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="firstTpDistance" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="gate" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="gateAlign" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
			<Variable name="leaveFirstArea" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="pathFindingParams" type="pathFindingParams" values="useGeneratedNSO(true)" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="stopAreaCheck" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="stopMovement" type="_bool" values="false" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alliedLadderController" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="guardArea" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<SyncWithTrackview NPC="$this.id" />
							<GraphSearch Origin="$guardArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;gateTp&apos;" prune="true" negprune="unknown" Parent="" Child="$gate" Data="" />
							</GraphSearch>
							<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;gateAlign&apos;" prune="true" negprune="unknown" Parent="" Child="$gateAlign" Data="" />
							</GraphSearch>
							<GraphSearch Origin="$guardArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;anchorTp&apos;" prune="true" negprune="unknown" Parent="" Child="$areaAnchor" Data="" />
							</GraphSearch>
							<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
							<IfElseCondition failOnCondition="false" condition="$leftHand == $__null" saveVersion="2">
								<Then canSkip="1">
									<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
										<Search canSkip="1">
											<Success />
										</Search>
										<Exec canSkip="1">
											<WaitAction />
										</Exec>
									</HandContentElement>
								</Then>
								<Else canSkip="1">
									<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
										<Search canSkip="1">
											<Success />
										</Search>
										<Exec canSkip="1">
											<HandContentElement hand="Left" item="$leftHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_shield" useDecision="true" enabled="true" saveVersion="2">
												<Search canSkip="1">
													<Success />
												</Search>
												<Exec canSkip="1">
													<WaitAction />
												</Exec>
											</HandContentElement>
										</Exec>
									</HandContentElement>
								</Else>
							</IfElseCondition>
							<Selector>
								<Sequence>
									<GraphSearch Origin="$guardArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;firstArea&apos;" prune="true" negprune="unknown" Parent="" Child="$firstArea" Data="" />
									</GraphSearch>
									<GraphSearch Origin="$firstArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;anchorTp&apos;" prune="true" negprune="unknown" Parent="" Child="$firstAreaTp" Data="" />
									</GraphSearch>
									<Expression expressions="$currentArea = $firstArea" />
									<MeasureDistance position1="$this.id" position2="$firstAreaTp" mode="ThreeDimensions" result="$firstTpDistance" />
									<MeasureDistance position1="$this.id" position2="$areaAnchor" mode="ThreeDimensions" result="$anchorTpDistance" />
									<IfCondition failOnCondition="false" condition="$firstTpDistance &gt; $anchorTpDistance">
										<Fail />
									</IfCondition>
									<AnyDecorator preset="crime_keepItems" enabled="true">
										<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="5.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$firstAreaTp" destinationSpecification2="" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="$pathFindingParams" staminaPolicy="" pathInfo="" />
									</AnyDecorator>
									<Expression expressions="$combatAutomationsActive = true" />
								</Sequence>
								<Expression expressions="$currentArea = $guardArea &#10;$combatAutomationsActive = true" />
							</Selector>
							<Parallel successMode="Any" failureMode="All">
								<Loop count="-1">
									<Sequence>
										<While doFail="false" propagateChildFail="false" condition="!$stopAreaCheck">
											<Sequence>
												<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
												<ReinitVariable variable="$enemies" />
												<ReinitVariable variable="$allies" />
												<Expression expressions="$enemiesInArea = 0 &#10;$alliesInArea = 0" />
												<GraphSearch Origin="$guardArea" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<Nodalyzer Quantifiers="ForAll" Parent="" Child="$enemies" saveVersion="2">
														<Child0 canSkip="1">
															<RangeSorter point="$this.id" SortOrder="Ascending" Source="Child" />
														</Child0>
													</Nodalyzer>
												</GraphSearch>
												<ForEach startIndex="0" step="1" array="$enemies" iterator="" value="$enemy" break="">
													<IsInsideArea Origin="$enemy" Area="$currentArea" FailSubtMissing="false" saveVersion="2">
														<Then canSkip="1">
															<Expression expressions="$enemiesInArea += 1" />
														</Then>
													</IsInsideArea>
												</ForEach>
												<GraphSearch Origin="$alliedLadderController" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<Nodalyzer Quantifiers="ForAll" Parent="" Child="$allies" saveVersion="2" />
												</GraphSearch>
												<ForEach startIndex="0" step="1" array="$allies" iterator="" value="$ally" break="">
													<IsInsideArea Origin="$ally" Area="$currentArea" FailSubtMissing="false" saveVersion="2">
														<Then canSkip="1">
															<Expression expressions="$alliesInArea += 1" />
														</Then>
													</IsInsideArea>
												</ForEach>
												<IfCondition failOnCondition="false" condition="$enemiesInArea &lt; $alliesInArea">
													<Expression expressions="$stopAreaCheck = true" />
												</IfCondition>
											</Sequence>
										</While>
										<IfCondition failOnCondition="false" condition="$currentArea == $guardArea">
											<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;0s&apos;" LockManagerType="Local" SemaphoreName="&apos;gateOpening&apos;">
												<Sequence>
													<Expression expressions="$combatAutomationsActive = false" />
													<SuppressFailure>
														<AnyDecorator preset="crime_keepItems" enabled="true">
															<ExactMove directionType="AlignWithEntity" directionSpecification="$gate" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$gate" destinationSpecification2="" destinationSpecification3="" speed="FastRun" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
														</AnyDecorator>
													</SuppressFailure>
													<Parallel successMode="Any" failureMode="Any">
														<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
															<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.MinorInjury">
																<Success />
															</IfCondition>
														</ProcessMessage>
														<Sequence>
															<UnstanceAction unstance="m48a_CartTow" locationObject="$gateAlign" slaveObject="" />
															<Wait duration="&apos;20s&apos;" timeType="GameTime" doFail="false" variation="" />
															<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
														</Sequence>
													</Parallel>
													<Expression expressions="$combatAutomationsActive = true" />
												</Sequence>
											</Semaphore>
										</IfCondition>
										<IfCondition failOnCondition="false" condition="$currentArea == $firstArea">
											<Sequence>
												<Expression expressions="$combatAutomationsActive = false" />
												<SuppressFailure>
													<AnyDecorator preset="crime_keepItems" enabled="true">
														<Parallel successMode="Any" failureMode="Any">
															<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="5.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$areaAnchor" destinationSpecification2="" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
															<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
																<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.MajorInjury">
																	<Success />
																</IfCondition>
															</ProcessMessage>
														</Parallel>
													</AnyDecorator>
												</SuppressFailure>
												<Expression expressions="$currentArea = $guardArea &#10;$combatAutomationsActive = true" />
											</Sequence>
										</IfCondition>
										<Expression expressions="$stopAreaCheck = false" />
									</Sequence>
								</Loop>
								<Loop count="-1">
									<IfGate atomic="false" condition="$combatAutomationsActive" RunLogic="Halt">
										<MeleeOffenseAutomationDecorator active="true">
											<MeleeDefenseAutomationDecorator active="true">
												<MeleeGuardAutomationDecorator GuardMode="automate" active="true">
													<WeaponAutomationDecorator WeaponChange="none" active="true">
														<CombatFollowerDecorator ProbablisticDrivenSweetSpot="true" RPGSweetSpotArcDriver="true" active="true">
															<BattleAction />
														</CombatFollowerDecorator>
													</WeaponAutomationDecorator>
												</MeleeGuardAutomationDecorator>
											</MeleeDefenseAutomationDecorator>
										</MeleeOffenseAutomationDecorator>
									</IfGate>
								</Loop>
								<Loop count="-1">
									<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="$data:script_param[&apos;crime_surrenderingMaxDistance&apos;].value" High="$data:script_param[&apos;crime_surrenderingMaxDistance&apos;].value" Negation="false" OpenInMiddle="false" RunLogic="Halt">
										<GameContext context="combat_playerSurrenderDistanceCondition">
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
										</GameContext>
									</DistanceGate>
								</Loop>
							</Parallel>
							<Expression expressions="$behaviorSuccess = true" />
							<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</Child>
					<OnFail canSkip="1">
						<Sequence>
							<Expression expressions="$behaviorSuccess = false" />
							<InstantSendMessageToNPC target="$__object.id" variable="$behaviorSuccess" />
						</Sequence>
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer>
			<Parallel successMode="All" failureMode="All">
				<Selector>
					<Sequence>
						<GraphSearch Origin="$guardArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;firstArea&apos;" prune="true" negprune="unknown" Parent="" Child="$firstArea" Data="" />
						</GraphSearch>
						<GraphSearch Origin="$firstArea" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;anchorTp&apos;" prune="true" negprune="unknown" Parent="" Child="$firstAreaTp" Data="" />
						</GraphSearch>
						<IsInsideArea Origin="$this.id" Area="$firstArea" FailSubtMissing="false" saveVersion="2">
							<Else canSkip="1">
								<AnyDecorator preset="crime_keepItems" enabled="true">
									<Parallel successMode="Any" failureMode="Any">
										<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="5.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$firstAreaTp" destinationSpecification2="" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
										<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
											<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.MinorInjury">
												<Success />
											</IfCondition>
										</ProcessMessage>
									</Parallel>
								</AnyDecorator>
							</Else>
						</IsInsideArea>
						<Expression expressions="$combatAutomationsActive = true" />
						<Parallel successMode="Any" failureMode="Any">
							<While doFail="false" propagateChildFail="false" condition="!$leaveFirstArea">
								<Sequence>
									<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
									<ReinitVariable variable="$enemies" />
									<ReinitVariable variable="$allies" />
									<Expression expressions="$enemiesInArea = 0 &#10;$alliesInArea = 0" />
									<GraphSearch Origin="$guardArea" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
										<Nodalyzer Quantifiers="ForAll" Parent="" Child="$enemies" saveVersion="2" />
									</GraphSearch>
									<ForEach startIndex="0" step="1" array="$enemies" iterator="" value="$enemy" break="">
										<IsInsideArea Origin="$enemy" Area="$firstArea" FailSubtMissing="false" saveVersion="2">
											<Then canSkip="1">
												<Expression expressions="$enemiesInArea += 1" />
											</Then>
										</IsInsideArea>
									</ForEach>
									<GraphSearch Origin="$alliedLadderController" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
										<Nodalyzer Quantifiers="ForAll" Parent="" Child="$allies" saveVersion="2">
											<Child0 canSkip="1">
												<RangeSorter point="$areaAnchor" SortOrder="Ascending" Source="Child" />
											</Child0>
										</Nodalyzer>
									</GraphSearch>
									<ForEach startIndex="0" step="1" array="$allies" iterator="" value="$ally" break="">
										<IsInsideArea Origin="$ally" Area="$firstArea" FailSubtMissing="false" saveVersion="2">
											<Then canSkip="1">
												<Expression expressions="$alliesInArea += 1" />
											</Then>
										</IsInsideArea>
									</ForEach>
									<IfCondition failOnCondition="false" condition="$enemiesInArea &lt; $alliesInArea">
										<Expression expressions="$leaveFirstArea = true" />
									</IfCondition>
								</Sequence>
							</While>
							<AreaPresenceGate aiObjects="$this.id" area="$firstArea" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
								<AreaPresenceGate aiObjects="$this.id" area="$firstArea" amount="AtLeastOne" presence="NotThere" RunLogic="KeepRunning">
									<Expression expressions="$leaveFirstArea = true" />
								</AreaPresenceGate>
							</AreaPresenceGate>
						</Parallel>
					</Sequence>
					<Success />
				</Selector>
				<Loop count="-1">
					<IfGate atomic="false" condition="$leaveFirstArea" RunLogic="KeepRunning">
						<AreaPresenceGate aiObjects="$this.id" area="$guardArea" amount="AtLeastOne" presence="NotThere" RunLogic="KeepRunning">
							<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;0s&apos;" LockManagerType="Intellect" SemaphoreName="&apos;movement&apos;">
								<Sequence>
									<Expression expressions="$combatAutomationsActive = false" />
									<AnyDecorator preset="crime_keepItems" enabled="true">
										<Parallel successMode="Any" failureMode="Any">
											<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="5.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$areaAnchor" destinationSpecification2="" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
											<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
												<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.MinorInjury">
													<Success />
												</IfCondition>
											</ProcessMessage>
										</Parallel>
									</AnyDecorator>
									<Expression expressions="$combatAutomationsActive = true" />
									<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</Semaphore>
						</AreaPresenceGate>
					</IfGate>
				</Loop>
				<Loop count="-1">
					<IfGate atomic="false" condition="$leaveFirstArea" RunLogic="KeepRunning">
						<AreaPresenceGate aiObjects="$this.id" area="$guardArea" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
							<Sequence>
								<ReinitVariable variable="$enemies" />
								<ReinitVariable variable="$allies" />
								<Expression expressions="$enemiesInArea = 0 &#10;$alliesInArea = 0" />
								<GraphSearch Origin="$guardArea" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
									<Nodalyzer Quantifiers="ForAll" Parent="" Child="$enemies" saveVersion="2">
										<Child0 canSkip="1">
											<RangeSorter point="$areaAnchor" SortOrder="Ascending" Source="Child" />
										</Child0>
									</Nodalyzer>
								</GraphSearch>
								<ForEach startIndex="0" step="1" array="$enemies" iterator="" value="$enemy" break="">
									<IsInsideArea Origin="$enemy" Area="$guardArea" FailSubtMissing="false" saveVersion="2">
										<Then canSkip="1">
											<Expression expressions="$enemiesInArea += 1" />
										</Then>
									</IsInsideArea>
								</ForEach>
								<GraphSearch Origin="$alliedLadderController" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
									<Nodalyzer Quantifiers="ForAll" Parent="" Child="$allies" saveVersion="2">
										<Child0 canSkip="1">
											<RangeSorter point="$areaAnchor" SortOrder="Ascending" Source="Child" />
										</Child0>
									</Nodalyzer>
								</GraphSearch>
								<ForEach startIndex="0" step="1" array="$allies" iterator="" value="$ally" break="">
									<IsInsideArea Origin="$ally" Area="$guardArea" FailSubtMissing="false" saveVersion="2">
										<Then canSkip="1">
											<Expression expressions="$alliesInArea += 1" />
										</Then>
									</IsInsideArea>
								</ForEach>
								<IfCondition failOnCondition="false" condition="$alliesInArea &gt;= $enemiesInArea">
									<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;0s&apos;" LockManagerType="Intellect" SemaphoreName="&apos;movement&apos;">
										<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;0s&apos;" LockManagerType="Local" SemaphoreName="&apos;gateOpening&apos;">
											<Sequence>
												<Expression expressions="$combatAutomationsActive = false" />
												<IfCondition failOnCondition="false" condition="!$stopMovement">
													<Expression expressions="$stopMovement = true" />
												</IfCondition>
												<AnyDecorator preset="crime_keepItems" enabled="true">
													<ExactMove directionType="AlignWithEntity" directionSpecification="$gate" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$gate" destinationSpecification2="" destinationSpecification3="" speed="Sprint" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
												</AnyDecorator>
												<Parallel successMode="Any" failureMode="Any">
													<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
														<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.MinorInjury">
															<Success />
														</IfCondition>
													</ProcessMessage>
													<Sequence>
														<UnstanceAction unstance="AlertedLookingAround" locationObject="$gateAlign" slaveObject="" />
														<Wait duration="&apos;20s&apos;" timeType="GameTime" doFail="false" variation="" />
														<InstantCallback_empty EventName="&apos;OnFinished&apos;" />
													</Sequence>
												</Parallel>
												<IfElseCondition failOnCondition="false" condition="$enemiesInArea &gt; 0" saveVersion="2">
													<Then canSkip="1">
														<Expression expressions="$combatAutomationsActive = true" />
													</Then>
												</IfElseCondition>
											</Sequence>
										</Semaphore>
									</Semaphore>
								</IfCondition>
								<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Sequence>
						</AreaPresenceGate>
					</IfGate>
				</Loop>
			</Parallel>
			<Parallel successMode="Any" failureMode="Any">
				<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
					<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.MajorInjury">
						<Success />
					</IfCondition>
				</ProcessMessage>
			</Parallel>
		</ForestContainer>
		<EditorData Signature="battle_guardAreaSpecialSetup" EventSet="endNotification">
			<Variables>
				<Variable name="allies" comment="" />
				<Variable name="alliesInArea" comment="" />
				<Variable name="ally" comment="" />
				<Variable name="anchorTpDistance" comment="" />
				<Variable name="areaAnchor" comment="" />
				<Variable name="behaviorSuccess" comment="" />
				<Variable name="combatAutomationsActive" comment="" />
				<Variable name="currentArea" comment="" />
				<Variable name="enemies" comment="" />
				<Variable name="enemiesInArea" comment="" />
				<Variable name="enemy" comment="" />
				<Variable name="firstArea" comment="" />
				<Variable name="firstAreaTp" comment="" />
				<Variable name="firstTpDistance" comment="" />
				<Variable name="gate" comment="" />
				<Variable name="gateAlign" comment="" />
				<Variable name="hitReaction" comment="" />
				<Variable name="leaveFirstArea" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="pathFindingParams" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="stopAreaCheck" comment="" />
				<Variable name="stopMovement" comment="" />
				<Variable name="alliedLadderController" comment="" />
				<Variable name="guardArea" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-270" editorPosY="-20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<SyncWithTrackview hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</SyncWithTrackview>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetWeaponsFromWeaponSet>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Search>
												<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Success>
											</Search>
											<Exec>
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
											</Exec>
										</HandContentElement>
									</Then>
									<Else>
										<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Search>
												<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Success>
											</Search>
											<Exec>
												<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Search>
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</Search>
													<Exec>
														<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</WaitAction>
													</Exec>
												</HandContentElement>
											</Exec>
										</HandContentElement>
									</Else>
								</IfElseCondition>
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<MeasureDistance hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</MeasureDistance>
										<MeasureDistance hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</MeasureDistance>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Fail>
										</IfCondition>
										<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Move>
										</AnyDecorator>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Sequence>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Selector>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
													<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ReinitVariable>
													<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ReinitVariable>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</SoulIsAliveFilter>
														<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Child0>
																<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</RangeSorter>
															</Child0>
														</Nodalyzer>
													</GraphSearch>
													<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</Then>
														</IsInsideArea>
													</ForEach>
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</SoulIsAliveFilter>
														<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
														</Nodalyzer>
													</GraphSearch>
													<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
															<Then>
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</Then>
														</IsInsideArea>
													</ForEach>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</IfCondition>
												</Sequence>
											</While>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
														<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</ExactMove>
															</AnyDecorator>
														</SuppressFailure>
														<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Success>
																</IfCondition>
															</ProcessMessage>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</UnstanceAction>
																<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Wait>
																<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</InstantCallback_empty>
															</Sequence>
														</Parallel>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Sequence>
												</Semaphore>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Move>
																<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Success>
																	</IfCondition>
																</ProcessMessage>
															</Parallel>
														</AnyDecorator>
													</SuppressFailure>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Sequence>
											</IfCondition>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Sequence>
									</Loop>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<MeleeDefenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<MeleeGuardAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<CombatFollowerDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<BattleAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</BattleAction>
															</CombatFollowerDecorator>
														</WeaponAutomationDecorator>
													</MeleeGuardAutomationDecorator>
												</MeleeDefenseAutomationDecorator>
											</MeleeOffenseAutomationDecorator>
										</IfGate>
									</Loop>
									<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GameContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</GameContext>
										</DistanceGate>
									</Loop>
								</Parallel>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantSendMessageToNPC>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</Child>
						<OnFail>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</InstantSendMessageToNPC>
							</Sequence>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest>
				<Parallel editorPosX="3820" editorPosY="-1790" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Else>
									<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Move>
											<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</IfCondition>
											</ProcessMessage>
										</Parallel>
									</AnyDecorator>
								</Else>
							</IsInsideArea>
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
										<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ReinitVariable>
										<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ReinitVariable>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</SoulIsAliveFilter>
											<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
											</Nodalyzer>
										</GraphSearch>
										<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Then>
											</IsInsideArea>
										</ForEach>
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</SoulIsAliveFilter>
											<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Child0>
													<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</RangeSorter>
												</Child0>
											</Nodalyzer>
										</GraphSearch>
										<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Then>
											</IsInsideArea>
										</ForEach>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</IfCondition>
									</Sequence>
								</While>
								<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</AreaPresenceGate>
								</AreaPresenceGate>
							</Parallel>
						</Sequence>
						<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Success>
					</Selector>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Move>
												<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</IfCondition>
												</ProcessMessage>
											</Parallel>
										</AnyDecorator>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</Semaphore>
							</AreaPresenceGate>
						</IfGate>
					</Loop>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ReinitVariable>
									<ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ReinitVariable>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SoulIsAliveFilter>
										<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child0>
												<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</RangeSorter>
											</Child0>
										</Nodalyzer>
									</GraphSearch>
									<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Then>
										</IsInsideArea>
									</ForEach>
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SoulIsAliveFilter>
										<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child0>
												<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</RangeSorter>
											</Child0>
										</Nodalyzer>
									</GraphSearch>
									<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Then>
										</IsInsideArea>
									</ForEach>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</IfCondition>
													<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ExactMove>
													</AnyDecorator>
													<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</IfCondition>
														</ProcessMessage>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</UnstanceAction>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
															<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</InstantCallback_empty>
														</Sequence>
													</Parallel>
													<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</Then>
													</IfElseCondition>
												</Sequence>
											</Semaphore>
										</Semaphore>
									</IfCondition>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</AreaPresenceGate>
						</IfGate>
					</Loop>
				</Parallel>
				<Parallel editorPosX="1420" editorPosY="-1820" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</IfCondition>
					</ProcessMessage>
				</Parallel>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="interrupt_openVisor" is_function="0">
		<Variables>
			<Variable name="hasVisor" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Function_crime_hasVisor npc="$this.id" hasVisor="$hasVisor" nodeLabel="21350778" />
					<AnyDecorator preset="bothHands_changeEquipment" enabled="$data">
						<IfElseCondition failOnCondition="false" condition="$hasVisor" saveVersion="2">
							<Then canSkip="1">
								<AnimationAction fragment="&apos;OpenVisor&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
							</Then>
							<Else canSkip="1">
								<WaitAction />
							</Else>
						</IfElseCondition>
					</AnyDecorator>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="bool" EventSet="">
			<Variables>
				<Variable name="hasVisor" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Function_crime_hasVisor hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_crime_hasVisor>
						<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AnimationAction>
								</Then>
								<Else>
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
								</Else>
							</IfElseCondition>
						</AnyDecorator>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="openVisor" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="interrupt_weaponSetup" is_function="0">
		<Variables>
			<Variable name="hand" type="enum:handType" values="" isPersistent="0" form="single" />
			<Variable name="ladder" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="shield" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="tagLadder" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="torch" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="torchItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="weaponToEquip" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;ladder&apos;" prune="true" negprune="unknown" Parent="" Child="$tagLadder" Data="" />
					</GraphSearch>
					<IfElseCondition failOnCondition="false" condition="$tagLadder == $__null" saveVersion="2">
						<Then canSkip="1">
							<Selector>
								<IfCondition failOnCondition="true" condition="$data == &apos;melee,torch&apos;">
									<UrgencyDecorator Urgency="Instant">
										<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
											</Search>
											<Exec canSkip="1">
												<HandContentElement hand="Left" item="$torch" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_torch" useDecision="true" enabled="true" saveVersion="2">
													<Search canSkip="1">
														<Selector>
															<Function_findItemOnSlot linkName="&apos;pickUpSlot&apos;" npc="$this.id" searchOrigin="$this.id" item="$torch" nodeLabel="70128437" />
															<GetItem InventoryHost="$this.id" ItemGUID="&apos;4cea28a0-0814-405a-bf24-4fd711f7eb63&apos;" ItemCategory="" FailIfNotFound="true" ItemOut="$torch" AmountOut="" />
															<CreateItem ItemGUID="&apos;4cea28a0-0814-405a-bf24-4fd711f7eb63&apos;" Amount="1" CreatedItem="$torchItem" Target="$this.id" NotifyUI="false" />
														</Selector>
													</Search>
													<Exec canSkip="1">
														<WaitAction />
													</Exec>
												</HandContentElement>
											</Exec>
										</HandContentElement>
									</UrgencyDecorator>
								</IfCondition>
								<IfCondition failOnCondition="true" condition="$data == &apos;melee&apos;">
									<Sequence>
										<GetWeaponsFromWeaponSet WeaponSet="Primary" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
										<IfElseCondition failOnCondition="false" condition="$leftHand == $__null" saveVersion="2">
											<Then canSkip="1">
												<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
													<Search canSkip="1">
														<Success />
													</Search>
													<Exec canSkip="1">
														<WaitAction />
													</Exec>
												</HandContentElement>
											</Then>
											<Else canSkip="1">
												<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_weapon" useDecision="true" enabled="true" saveVersion="2">
													<Search canSkip="1">
														<Success />
													</Search>
													<Exec canSkip="1">
														<HandContentElement hand="Left" item="$leftHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_shield" useDecision="true" enabled="true" saveVersion="2">
															<Search canSkip="1">
																<Success />
															</Search>
															<Exec canSkip="1">
																<WaitAction />
															</Exec>
														</HandContentElement>
													</Exec>
												</HandContentElement>
											</Else>
										</IfElseCondition>
									</Sequence>
								</IfCondition>
								<IfCondition failOnCondition="true" condition="$data == &apos;shield&apos;">
									<UrgencyDecorator Urgency="Instant">
										<HandContentElement hand="Left" item="$shield" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_shield" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<Selector>
													<Function_findItemOnSlot linkName="&apos;pickUpSlot&apos;" npc="$this.id" searchOrigin="$this.id" item="$shield" nodeLabel="25518881" />
													<Function_findItemOnSlot linkName="&apos;placeSlot&apos;" npc="$this.id" searchOrigin="$this.id" item="$shield" nodeLabel="50282546" />
												</Selector>
											</Search>
											<Exec canSkip="1">
												<WaitAction />
											</Exec>
										</HandContentElement>
									</UrgencyDecorator>
								</IfCondition>
								<IfCondition failOnCondition="true" condition="$data == &apos;ranged&apos;">
									<HandContentElement hand="$hand" item="$weaponToEquip" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_ranged" useDecision="true" enabled="true" saveVersion="2">
										<Search canSkip="1">
											<Function_getRangedWeapon hand="$hand" weaponToEquip="$weaponToEquip" nodeLabel="66356326" />
										</Search>
										<Exec canSkip="1">
											<WaitAction />
										</Exec>
									</HandContentElement>
								</IfCondition>
								<IfCondition failOnCondition="true" condition="$data == &apos;torch&apos;">
									<UrgencyDecorator Urgency="Instant">
										<Sequence>
											<Selector>
												<Function_findItemOnSlot linkName="&apos;pickUpSlot&apos;" npc="$this.id" searchOrigin="$this.id" item="$torch" nodeLabel="64665306" />
												<GetItem InventoryHost="$this.id" ItemGUID="&apos;4cea28a0-0814-405a-bf24-4fd711f7eb63&apos;" ItemCategory="" FailIfNotFound="true" ItemOut="$torch" AmountOut="" />
											</Selector>
											<HandContentElement hand="Left" item="$torch" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_torch" useDecision="true" enabled="true" saveVersion="2">
												<Search canSkip="1">
													<Success />
												</Search>
												<Exec canSkip="1">
													<WaitAction />
												</Exec>
											</HandContentElement>
										</Sequence>
									</UrgencyDecorator>
								</IfCondition>
								<IfCondition failOnCondition="true" condition="$data == &apos;halberd&apos;">
									<UrgencyDecorator Urgency="Instant">
										<HandContentElement hand="Right" item="$rightHand" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_halbert" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<GetWeaponsFromWeaponSet WeaponSet="Oversized" LeftHand="$leftHand" RightHand="$rightHand" UseTorchWhenAppropriate="true" />
											</Search>
											<Exec canSkip="1">
												<WaitAction />
											</Exec>
										</HandContentElement>
									</UrgencyDecorator>
								</IfCondition>
								<Success />
							</Selector>
						</Then>
						<Else canSkip="1">
							<UrgencyDecorator Urgency="Instant">
								<HandContentElement hand="Right" item="$ladder" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_ladder" useDecision="true" enabled="true" saveVersion="2">
									<Search canSkip="1">
										<Function_findItemOnSlot linkName="&apos;placeSlot&apos;" npc="$this.id" searchOrigin="$this.id" item="$ladder" nodeLabel="77806894" />
									</Search>
									<Exec canSkip="1">
										<WaitAction />
									</Exec>
								</HandContentElement>
							</UrgencyDecorator>
						</Else>
					</IfElseCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="stringData" EventSet="">
			<Variables>
				<Variable name="hand" comment="" />
				<Variable name="ladder" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="shield" comment="" />
				<Variable name="tagLadder" comment="" />
				<Variable name="torch" comment="" />
				<Variable name="torchItem" comment="" />
				<Variable name="weaponToEquip" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetWeaponsFromWeaponSet>
												</Search>
												<Exec>
													<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Search>
															<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_findItemOnSlot>
																<GetItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</GetItem>
																<CreateItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</CreateItem>
															</Selector>
														</Search>
														<Exec>
															<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</WaitAction>
														</Exec>
													</HandContentElement>
												</Exec>
											</HandContentElement>
										</UrgencyDecorator>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetWeaponsFromWeaponSet>
											<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Search>
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</Search>
														<Exec>
															<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</WaitAction>
														</Exec>
													</HandContentElement>
												</Then>
												<Else>
													<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Search>
															<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Success>
														</Search>
														<Exec>
															<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Search>
																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Success>
																</Search>
																<Exec>
																	<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</WaitAction>
																</Exec>
															</HandContentElement>
														</Exec>
													</HandContentElement>
												</Else>
											</IfElseCondition>
										</Sequence>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_findItemOnSlot>
														<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_findItemOnSlot>
													</Selector>
												</Search>
												<Exec>
													<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WaitAction>
												</Exec>
											</HandContentElement>
										</UrgencyDecorator>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Search>
												<Function_getRangedWeapon hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_getRangedWeapon>
											</Search>
											<Exec>
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
											</Exec>
										</HandContentElement>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_findItemOnSlot>
													<GetItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetItem>
												</Selector>
												<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Search>
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</Search>
													<Exec>
														<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</WaitAction>
													</Exec>
												</HandContentElement>
											</Sequence>
										</UrgencyDecorator>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</GetWeaponsFromWeaponSet>
												</Search>
												<Exec>
													<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</WaitAction>
												</Exec>
											</HandContentElement>
										</UrgencyDecorator>
									</IfCondition>
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</Selector>
							</Then>
							<Else>
								<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Search>
											<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_findItemOnSlot>
										</Search>
										<Exec>
											<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</WaitAction>
										</Exec>
									</HandContentElement>
								</UrgencyDecorator>
							</Else>
						</IfElseCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>