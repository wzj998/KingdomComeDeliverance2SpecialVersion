<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="use" is_function="0">
		<Variables>
			<Variable name="actualPosition" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="anotherCanClimb" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="canClimb" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="disableTrigger" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="helperInfo" type="helperInfo" values="" isPersistent="0" form="single" />
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
			<Variable name="impactArea" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ladder" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ladderHeight" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="ladderStartOri" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="ladderStartPos" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="params" type="pathFindingParams" values="usePaths(false)" isPersistent="0" form="single" />
			<Variable name="startPosition" type="vec3" values="" isPersistent="0" form="single" />
			<Variable name="waitTillMove" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;ladder&apos;" prune="true" negprune="unknown" Parent="" Child="$ladder" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$ladder" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;ladderHeight&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$ladderHeight" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;impactArea&apos;" prune="true" negprune="unknown" Parent="" Child="$impactArea" Data="" />
					</GraphSearch>
					<Selector>
						<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;ladder&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
						</GraphSearch>
						<Sequence>
							<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;leaderFirst&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</GraphSearch>
							<Parallel successMode="Any" failureMode="Any">
								<LinkGate from="$__object.id" to="$__object.id" tag="&apos;leaderFirst&apos;" amount="AtLeastOne" presence="NotThere" RunLogic="KeepRunning">
									<Success />
								</LinkGate>
								<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
							</Parallel>
						</Sequence>
						<Success />
					</Selector>
					<Parallel successMode="Any" failureMode="Any">
						<Sequence>
							<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;ladderClimbing&apos;">
								<Sequence>
									<Expression expressions="$canClimb = true" />
									<IfGate atomic="false" condition="$anotherCanClimb" RunLogic="KeepRunning">
										<Success />
									</IfGate>
								</Sequence>
							</Semaphore>
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
						<IfGate atomic="false" condition="$canClimb" RunLogic="KeepRunning">
							<AnyDecorator preset="crime_keepItems" enabled="true">
								<Sequence>
									<Selector>
										<Sequence>
											<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;ladderWait&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$waitTillMove" />
											</GraphSearch>
											<Wait duration="$waitTillMove" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
										<Success />
									</Selector>
									<Selector>
										<Sequence>
											<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<LinkTagFilter tag="&apos;leaderFirst&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
											</GraphSearch>
											<RemoveLink From="$__object.id" To="$__object.id" Tag="&apos;leaderFirst&apos;" LinkOpHandleMode="Success" />
										</Sequence>
										<Success />
									</Selector>
									<GetHelper smartObjectName="$ladder" helperName="&apos;down&apos;" categoryName="&apos;Gate&apos;" targetVar="$helperInfo" policy="Name" />
									<GetHelperData smartObjectName="$ladder" helperID="$helperInfo.id" positionTargetVar="$ladderStartPos" orientationTargetVar="" transformTargetVar="" fragmentTargetVar="" tagsTargetVar="" />
									<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$ladderStartPos" destinationSpecification2="" destinationSpecification3="" speed="FastRun" additionalParams="" pathFindingParams="$params" staminaPolicy="" pathInfo="" />
									<Expression expressions="$anotherCanClimb = true" />
									<AddLinkElement from="$ladder" to="$this.id" tag="&apos;ladderClimber&apos;" data="" enabled="true">
										<Sequence>
											<WaitAction />
											<Selector>
												<Sequence>
													<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
														<LinkTagFilter tag="&apos;battleLadder_pushLadder&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
													</GraphSearch>
													<ExecuteLua code="local ent = XGenAIModule.GetEntityByWUID(entity.this.id) &#10; &#10;ent.soul:DealDamage(110, 100, entity.this.id, false)" />
												</Sequence>
												<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
													<Child canSkip="1">
														<Sequence>
															<GetOnLadder Ladder="$ladder" />
															<GetSpatialInfo In="$this.id" Out="$startPosition" What="Position" />
															<Parallel successMode="Any" failureMode="Any">
																<Loop count="-1">
																	<Sequence>
																		<GetSpatialInfo In="$this.id" Out="$actualPosition" What="Position" />
																		<Switch>
																			<IfCondition failOnCondition="false" condition="$ladderHeight == &apos;225&apos; &amp; $actualPosition.z - $startPosition.z &gt; 0.25">
																				<Expression expressions="$disableTrigger = true" />
																			</IfCondition>
																			<IfCondition failOnCondition="false" condition="$ladderHeight == &apos;350&apos; &amp; $actualPosition.z - $startPosition.z &gt; 1.5">
																				<Expression expressions="$disableTrigger = true" />
																			</IfCondition>
																			<IfCondition failOnCondition="false" condition="$ladderHeight == &apos;575&apos; &amp; $actualPosition.z - $startPosition.z &gt; 3.75">
																				<Expression expressions="$disableTrigger = true" />
																			</IfCondition>
																			<IfCondition failOnCondition="false" condition="$ladderHeight == &apos;10&apos; &amp; $actualPosition.z - $startPosition.z &gt; 8">
																				<Expression expressions="$disableTrigger = true" />
																			</IfCondition>
																			<DefaultBranch>
																				<Success />
																			</DefaultBranch>
																		</Switch>
																		<IfCondition failOnCondition="false" condition="$disableTrigger">
																			<Sequence>
																				<SendAIConceptSignal_battleLadderClimber ladder="$__object.id" success="true" />
																				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																			</Sequence>
																		</IfCondition>
																		<Wait duration="&apos;250&apos;" timeType="GameTime" doFail="false" variation="" />
																	</Sequence>
																</Loop>
																<Sequence>
																	<ClimbLadder Speed="3.000000" />
																	<ActorStateCheck Who="$this.id" State="hit" FailWithSubtreeMissing="false" saveVersion="2">
																		<Then canSkip="1">
																			<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.MinorInjury">
																				<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
																			</IfCondition>
																		</Then>
																		<Else canSkip="1">
																			<Success />
																		</Else>
																	</ActorStateCheck>
																</Sequence>
																<Loop count="-1">
																	<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
																		<IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.MinorInjury">
																			<ExecuteLua code="local ent = XGenAIModule.GetEntityByWUID(data.this.id) &#10;ent.soul:DealDamage(200, 200, data.this.id, false)" />
																		</IfCondition>
																	</ProcessMessage>
																</Loop>
															</Parallel>
														</Sequence>
													</Child>
													<OnFail canSkip="1">
														<Sequence>
															<SendAIConceptSignal_battleLadderClimber ladder="$__object.id" success="false" />
															<ActorStateCheck Who="" State="dead" FailWithSubtreeMissing="false" saveVersion="2">
																<Then canSkip="1">
																	<ExecuteSoundTrigger entity="$this.id" triggerName="&apos;v_male_falling_scream3&apos;" stop="false" />
																</Then>
															</ActorStateCheck>
														</Sequence>
													</OnFail>
												</FuseBox>
											</Selector>
										</Sequence>
									</AddLinkElement>
								</Sequence>
							</AnyDecorator>
						</IfGate>
					</Parallel>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="actualPosition" comment="" />
				<Variable name="anotherCanClimb" comment="" />
				<Variable name="canClimb" comment="" />
				<Variable name="disableTrigger" comment="" />
				<Variable name="helperInfo" comment="" />
				<Variable name="hitReaction" comment="" />
				<Variable name="impactArea" comment="" />
				<Variable name="ladder" comment="" />
				<Variable name="ladderHeight" comment="" />
				<Variable name="ladderStartOri" comment="" />
				<Variable name="ladderStartPos" comment="" />
				<Variable name="params" comment="" />
				<Variable name="startPosition" comment="" />
				<Variable name="waitTillMove" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</LinkGate>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Parallel>
							</Sequence>
							<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Selector>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</IfGate>
									</Sequence>
								</Semaphore>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
							<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
												</GraphSearch>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Selector>
										<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</LinkTagFilter>
												</GraphSearch>
												<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</RemoveLink>
											</Sequence>
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</Selector>
										<GetHelper hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetHelper>
										<GetHelperData hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</GetHelperData>
										<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Move>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
												<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</LinkTagFilter>
														</GraphSearch>
														<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ExecuteLua>
													</Sequence>
													<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Child>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<GetOnLadder hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</GetOnLadder>
																<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</GetSpatialInfo>
																<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</GetSpatialInfo>
																			<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Expression>
																				</IfCondition>
																				<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Expression>
																				</IfCondition>
																				<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Expression>
																				</IfCondition>
																				<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Expression>
																				</IfCondition>
																				<DefaultBranch>
																					<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Success>
																				</DefaultBranch>
																			</Switch>
																			<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<SendAIConceptSignal_battleLadderClimber hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</SendAIConceptSignal_battleLadderClimber>
																					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Wait>
																				</Sequence>
																			</IfCondition>
																			<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Wait>
																		</Sequence>
																	</Loop>
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<ClimbLadder hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</ClimbLadder>
																		<ActorStateCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																			<OutputBreakpoints />
																			<Then>
																				<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Wait>
																				</IfCondition>
																			</Then>
																			<Else>
																				<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Success>
																			</Else>
																		</ActorStateCheck>
																	</Sequence>
																	<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</ExecuteLua>
																			</IfCondition>
																		</ProcessMessage>
																	</Loop>
																</Parallel>
															</Sequence>
														</Child>
														<OnFail>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<SendAIConceptSignal_battleLadderClimber hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</SendAIConceptSignal_battleLadderClimber>
																<ActorStateCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Then>
																		<ExecuteSoundTrigger hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</ExecuteSoundTrigger>
																	</Then>
																</ActorStateCheck>
															</Sequence>
														</OnFail>
													</FuseBox>
												</Selector>
											</Sequence>
										</AddLinkElement>
									</Sequence>
								</AnyDecorator>
							</IfGate>
						</Parallel>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="setupLadder" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="player_pushLadder" is_function="0">
		<Variables>
			<Variable name="climber" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="climbers" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="dropSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="halberdGuid" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="halbert" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="inventoryHalbert" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="ladder" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ladderEntity" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ladderHeight" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="ladderSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="left" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="particle" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="right" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="weaponDrawn" type="_int" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
					<Child canSkip="1">
						<Sequence>
							<GraphSearch Origin="$data" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;ladder&apos;" prune="true" negprune="unknown" Parent="" Child="$ladderEntity" Data="" />
							</GraphSearch>
							<GraphSearch Origin="$data" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;ladderSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$ladderSlot" Data="" />
							</GraphSearch>
							<GraphSearch Origin="$data" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;dropSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$dropSlot" Data="" />
							</GraphSearch>
							<GraphSearch Origin="$ladderEntity" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
								<LinkTagFilter tag="&apos;ladderHeight&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$ladderHeight" />
							</GraphSearch>
							<GetItemInSlot slot="$ladderSlot" useHomeItem="false" item="$ladder" />
							<IsWeaponDrawn who="$__player" WeaponSet="Oversized" saveVersion="2">
								<Then canSkip="1">
									<Sequence>
										<GetWeaponsFromWeaponSet WeaponSet="Oversized" LeftHand="$leftHand" RightHand="$halbert" UseTorchWhenAppropriate="true" />
										<GetItemProperty itemId="$halbert" property="Guid" result="$halberdGuid" />
										<Expression expressions="$weaponDrawn = 3" />
									</Sequence>
								</Then>
								<Else canSkip="1">
									<Sequence>
										<GraphSearch Origin="$this.id" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<ItemClassFilter ClassId="" Category="&apos;melee_weapon.halberd.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="$halbert" />
										</GraphSearch>
										<GetItemProperty itemId="$halbert" property="Guid" result="$halberdGuid" />
										<Expression expressions="$inventoryHalbert = true &#10;$weaponDrawn = 4" />
									</Sequence>
								</Else>
							</IsWeaponDrawn>
							<IsWeaponDrawn who="$__player" WeaponSet="Primary" saveVersion="2">
								<Then canSkip="1">
									<Expression expressions="$weaponDrawn = 1" />
								</Then>
								<Else canSkip="1">
									<Success />
								</Else>
							</IsWeaponDrawn>
							<IsWeaponDrawn who="$__player" WeaponSet="Secondary" saveVersion="2">
								<Then canSkip="1">
									<Expression expressions="$weaponDrawn = 2" />
								</Then>
								<Else canSkip="1">
									<Success />
								</Else>
							</IsWeaponDrawn>
						</Sequence>
					</Child>
					<OnFail canSkip="1">
						<InstantCallback_empty EventName="&apos;Fail&apos;" />
					</OnFail>
				</FuseBox>
			</OnInit>
			<Behavior canSkip="1">
				<UrgencyDecorator Urgency="Instant">
					<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
						<Child canSkip="1">
							<Sequence>
								<Selector>
									<Sequence>
										<GraphSearch Origin="$ladderEntity" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;ladderClimber&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
											<Nodalyzer Quantifiers="ForAll" Parent="" Child="$climbers" saveVersion="2" />
										</GraphSearch>
										<ForEach startIndex="0" step="1" array="$climbers" iterator="" value="$climber" break="">
											<Sequence>
												<DropFromLadder Target="$climber" />
												<ExecuteLua code="local ent = XGenAIModule.GetEntityByWUID(data.climber) &#10; &#10;ent.soul:DealDamage(200, 200, data.climber, false)" />
											</Sequence>
										</ForEach>
									</Sequence>
									<Success />
								</Selector>
								<HandCheck who="" LeftHand="$left" RightHand="$right" />
								<SetVisibility ItemWUID="$ladderEntity" Visibility="false" />
								<IfElseCondition failOnCondition="false" condition="$weaponDrawn == 3" saveVersion="2">
									<Then canSkip="1">
										<HandContentElement hand="Right" item="$halbert" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="battle_halbert" useDecision="true" enabled="true" saveVersion="2">
											<Search canSkip="1">
												<Success />
											</Search>
											<Exec canSkip="1">
												<Parallel successMode="Any" failureMode="Any">
													<AnimationAction fragment="&apos;GuardHlbrdPushAway&apos;" tags="$ladderHeight" eventReferenceObject="$data" alignObject="$data" slaveObject="" resourceOverride="" allowTorchForPlayer="false">
														<EventData_pickup Slot="$ladderSlot" name="&apos;placeSlot&apos;" />
														<EventData_place Slot="$dropSlot" name="&apos;dropSlot&apos;" />
													</AnimationAction>
													<Sequence>
														<SuppressFailure>
															<Sequence>
																<Wait duration="&apos;4500&apos;" timeType="GameTime" doFail="false" variation="" />
																<GraphSearch Origin="$data" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																	<LinkTagFilter tag="&apos;particle&apos;" prune="true" negprune="unknown" Parent="" Child="$particle" Data="" />
																</GraphSearch>
																<ExecuteSoundTrigger entity="$particle" triggerName="&apos;q_M11_gate_crash_open2&apos;" stop="false" />
																<ParticleEffectControl ParticleWuid="$particle" StartStopChoice="Start" />
															</Sequence>
														</SuppressFailure>
														<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
													</Sequence>
												</Parallel>
											</Exec>
										</HandContentElement>
									</Then>
									<Else canSkip="1">
										<Parallel successMode="Any" failureMode="Any">
											<AnimationAction fragment="&apos;GuardHlbrdPushAway_Player&apos;" tags="$ladderHeight" eventReferenceObject="$data" alignObject="$data" slaveObject="" resourceOverride="" allowTorchForPlayer="false">
												<EventData_spawnitem ItemClassId="$halberdGuid" name="&apos;halberd&apos;" />
												<EventData_pickup Slot="$ladderSlot" name="&apos;placeSlot&apos;" />
												<EventData_place Slot="$dropSlot" name="&apos;dropSlot&apos;" />
											</AnimationAction>
											<Sequence>
												<SuppressFailure>
													<Sequence>
														<Wait duration="&apos;4500&apos;" timeType="GameTime" doFail="false" variation="" />
														<GraphSearch Origin="$data" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
															<LinkTagFilter tag="&apos;particle&apos;" prune="true" negprune="unknown" Parent="" Child="$particle" Data="" />
														</GraphSearch>
														<ExecuteSoundTrigger entity="$particle" triggerName="&apos;q_M11_gate_crash_open2&apos;" stop="false" />
														<ParticleEffectControl ParticleWuid="$particle" StartStopChoice="Start" />
													</Sequence>
												</SuppressFailure>
												<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</Parallel>
									</Else>
								</IfElseCondition>
							</Sequence>
						</Child>
						<OnSuccess canSkip="1">
							<Sequence>
								<Switch>
									<IfCondition failOnCondition="false" condition="$weaponDrawn == 1">
										<DrawAction WeaponSet="Primary" fullBody="false" tags="" useSelectedWeaponSet="false" />
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$weaponDrawn == 2">
										<DrawAction WeaponSet="Secondary" fullBody="false" tags="" useSelectedWeaponSet="false" />
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$weaponDrawn == 3">
										<DrawAction WeaponSet="Oversized" fullBody="false" tags="" useSelectedWeaponSet="false" />
									</IfCondition>
									<DefaultBranch>
										<WaitAction />
									</DefaultBranch>
								</Switch>
								<InstantCallback_empty EventName="&apos;Success&apos;" />
							</Sequence>
						</OnSuccess>
						<OnFail canSkip="1">
							<Sequence>
								<WaitAction />
								<HandCheck who="" LeftHand="$leftHand" RightHand="$rightHand" />
								<Selector>
									<Sequence>
										<GraphSearch Origin="$dropSlot" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;SlotLink&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
										</GraphSearch>
										<InstantCallback_empty EventName="&apos;Success&apos;" />
									</Sequence>
									<Sequence>
										<SetVisibility ItemWUID="$ladderEntity" Visibility="true" />
										<InstantCallback_empty EventName="&apos;Fail&apos;" />
									</Sequence>
								</Selector>
							</Sequence>
						</OnFail>
					</FuseBox>
				</UrgencyDecorator>
			</Behavior>
		</Root>
		<ForestContainer>
			<Selector>
				<GraphSearch Origin="$ladderEntity" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;battleLadder_pushLadder&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
				</GraphSearch>
			</Selector>
		</ForestContainer>
		<EditorData Signature="wuidData" EventSet="resultNotificationAtomic">
			<Variables>
				<Variable name="climber" comment="" />
				<Variable name="climbers" comment="" />
				<Variable name="dropSlot" comment="" />
				<Variable name="halberdGuid" comment="" />
				<Variable name="halbert" comment="" />
				<Variable name="inventoryHalbert" comment="" />
				<Variable name="ladder" comment="" />
				<Variable name="ladderEntity" comment="" />
				<Variable name="ladderHeight" comment="" />
				<Variable name="ladderSlot" comment="" />
				<Variable name="left" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="particle" comment="" />
				<Variable name="right" comment="" />
				<Variable name="rightHand" comment="" />
				<Variable name="weaponDrawn" comment="" />
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</GraphSearch>
								<GetItemInSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</GetItemInSlot>
								<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetWeaponsFromWeaponSet>
											<GetItemProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetItemProperty>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Sequence>
									</Then>
									<Else>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ItemClassFilter>
											</GraphSearch>
											<GetItemProperty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</GetItemProperty>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Sequence>
									</Else>
								</IsWeaponDrawn>
								<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Then>
									<Else>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Else>
								</IsWeaponDrawn>
								<IsWeaponDrawn hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Then>
									<Else>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Else>
								</IsWeaponDrawn>
							</Sequence>
						</Child>
						<OnFail>
							<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</InstantCallback_empty>
						</OnFail>
					</FuseBox>
				</OnInit>
				<Behavior>
					<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
												<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
												</Nodalyzer>
											</GraphSearch>
											<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<DropFromLadder hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</DropFromLadder>
													<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ExecuteLua>
												</Sequence>
											</ForEach>
										</Sequence>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Selector>
									<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</HandCheck>
									<SetVisibility hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</SetVisibility>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Search>
													<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Success>
												</Search>
												<Exec>
													<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</EventData_pickup>
															<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</EventData_place>
														</AnimationAction>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Wait>
																	<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</LinkTagFilter>
																	</GraphSearch>
																	<ExecuteSoundTrigger hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</ExecuteSoundTrigger>
																	<ParticleEffectControl hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</ParticleEffectControl>
																</Sequence>
															</SuppressFailure>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
													</Parallel>
												</Exec>
											</HandContentElement>
										</Then>
										<Else>
											<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<EventData_spawnitem hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</EventData_spawnitem>
													<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</EventData_pickup>
													<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</EventData_place>
												</AnimationAction>
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
															<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</LinkTagFilter>
															</GraphSearch>
															<ExecuteSoundTrigger hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</ExecuteSoundTrigger>
															<ParticleEffectControl hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</ParticleEffectControl>
														</Sequence>
													</SuppressFailure>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</Parallel>
										</Else>
									</IfElseCondition>
								</Sequence>
							</Child>
							<OnSuccess>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</DrawAction>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</DrawAction>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<DrawAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</DrawAction>
										</IfCondition>
										<DefaultBranch>
											<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</WaitAction>
										</DefaultBranch>
									</Switch>
									<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</InstantCallback_empty>
								</Sequence>
							</OnSuccess>
							<OnFail>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
									<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</HandCheck>
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
											</GraphSearch>
											<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</InstantCallback_empty>
										</Sequence>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<SetVisibility hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</SetVisibility>
											<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</InstantCallback_empty>
										</Sequence>
									</Selector>
								</Sequence>
							</OnFail>
						</FuseBox>
					</UrgencyDecorator>
				</Behavior>
			</Root>
			<Forest>
				<Selector editorPosX="2050" editorPosY="-330" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</Selector>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="pushLadder" is_function="0">
		<Variables>
			<Variable name="dropSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="halberd" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ladder" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="ladderHeight" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="placeSlot" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="smartobject" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;ladderSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$placeSlot" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;dropSlot&apos;" prune="true" negprune="unknown" Parent="" Child="$dropSlot" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;ladder&apos;" prune="true" negprune="unknown" Parent="" Child="$ladder" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$ladder" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;ladderHeight&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="$ladderHeight" />
					</GraphSearch>
					<Expression expressions="$npc = this.id &#10;$smartobject = $__object.id" />
					<WaitAction />
					<EntityContext context="combat_disabledAsTarget" target="">
						<HandContentElement hand="Right" item="$halberd" allowAny="false" decisionLabel="battle_halbert" useDecision="true" saveVersion="2">
							<Search canSkip="1">
								<Function_findItemOnSlot linkName="&apos;halberd&apos;" npc="$npc" searchOrigin="$smartobject" item="$halberd" nodeLabel="45886508" />
							</Search>
							<Exec canSkip="1">
								<Sequence>
									<AnimationAction fragment="&apos;Quest_PushLadder&apos;" tags="$ladderHeight" eventReferenceObject="$__object.id" alignObject="$__object.id" slaveObject="" resourceOverride="">
										<EventData_pickup Slot="$placeSlot" name="&apos;placeSlot&apos;" />
										<EventData_place Slot="$dropSlot" name="&apos;dropSlot&apos;" />
									</AnimationAction>
									<Callback_empty EventName="&apos;OnFinished&apos;" />
								</Sequence>
							</Exec>
						</HandContentElement>
					</EntityContext>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="endNotification">
			<Variables>
				<Variable name="dropSlot" comment="" />
				<Variable name="halberd" comment="" />
				<Variable name="ladder" comment="" />
				<Variable name="ladderHeight" comment="" />
				<Variable name="npc" comment="" />
				<Variable name="placeSlot" comment="" />
				<Variable name="smartobject" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WaitAction>
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Search>
									<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Function_findItemOnSlot>
								</Search>
								<Exec>
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<OutputBreakpoints />
											<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</EventData_pickup>
											<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</EventData_place>
										</AnimationAction>
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
									</Sequence>
								</Exec>
							</HandContentElement>
						</EntityContext>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>