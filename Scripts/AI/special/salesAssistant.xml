<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="special_salesAssistant" is_function="0">
    <Variables>
      <Variable name="stopLuringArea" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;stopLuringArea&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
          <AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$stopLuringArea" />
        </GraphSearch>
      </OnInit>
      <Behavior canSkip="1">
        <Sequence>
          <UnstanceAction unstance="salesAssistant" locationObject="$__object.id" slaveObject="" />
          <Loop count="3">
            <Sequence>
              <IfElseCondition failOnCondition="false" condition="$stopLuringArea ~= $__null" saveVersion="2">
                <Then canSkip="1">
                  <IsInsideArea Origin="$__player" Area="$stopLuringArea" FailSubtMissing="false" saveVersion="2">
                    <Then canSkip="1">
                      <Success />
                    </Then>
                    <Else canSkip="1">
                      <Parallel successMode="Any" failureMode="Any">
                        <UnstanceElement unstance="salesAssistant" locationObject="$__object.id" slaveObject="">
                          <AnimationAction fragment="&apos;Quest_SalesAssistant_Lure&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" />
                        </UnstanceElement>
                        <Loop count="-1">
                          <Sequence>
                            <Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="&apos;PRODAVAC_ASISTENT&apos;" subtitlesDown="false" nodeLabel="68040408" />
                            <Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                          </Sequence>
                        </Loop>
                      </Parallel>
                    </Else>
                  </IsInsideArea>
                </Then>
                <Else canSkip="1">
                  <Parallel successMode="Any" failureMode="Any">
                    <UnstanceElement unstance="salesAssistant" locationObject="$__object.id" slaveObject="">
                      <AnimationAction fragment="&apos;Quest_SalesAssistant_Lure&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" />
                    </UnstanceElement>
                    <Loop count="-1">
                      <Sequence>
                        <Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="&apos;PRODAVAC_ASISTENT&apos;" subtitlesDown="false" nodeLabel="60851720" />
                        <Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                      </Sequence>
                    </Loop>
                  </Parallel>
                </Else>
              </IfElseCondition>
              <Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
            </Sequence>
          </Loop>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="stopLuringArea" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </AnyLinkFilter>
          </GraphSearch>
        </OnInit>
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <OutputBreakpoints />
            </UnstanceAction>
            <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                  <OutputBreakpoints />
                  <Then>
                    <IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                      <OutputBreakpoints />
                      <Then>
                        <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Success>
                      </Then>
                      <Else>
                        <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <OutputBreakpoints />
                            </AnimationAction>
                          </UnstanceElement>
                          <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Function_speech_schedulerMonolog>
                              <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Wait>
                            </Sequence>
                          </Loop>
                        </Parallel>
                      </Else>
                    </IsInsideArea>
                  </Then>
                  <Else>
                    <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <OutputBreakpoints />
                        </AnimationAction>
                      </UnstanceElement>
                      <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Function_speech_schedulerMonolog>
                          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Wait>
                        </Sequence>
                      </Loop>
                    </Parallel>
                  </Else>
                </IfElseCondition>
                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Wait>
              </Sequence>
            </Loop>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>