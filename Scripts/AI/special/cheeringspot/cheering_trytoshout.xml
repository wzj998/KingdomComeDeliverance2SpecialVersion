<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="special_cheeringSpot_cheering_tryToShout" is_function="1">
    <Variables>
      <Variable name="canShout" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="shoutingAllowedTimes_new" type="special:cheering:shoutingAllowedTimes" values="" isPersistent="0" form="single" />
      <Variable name="shoutingAllowedTimes_old" type="special:cheering:shoutingAllowedTimes" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="metarole" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="shoutingConfiguration" type="special:cheering:shoutingConfiguration" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="shoutingManager" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="shoutingType" type="enum:cheering_shoutingType" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
          <Child canSkip="1">
            <Sequence>
              <AtomicDecorator>
                <Sequence>
                  <Function_special_cheeringSpot_cheering_canShout shoutingConfiguration="$shoutingConfiguration" shoutingManager="$shoutingManager" shoutingType="$shoutingType" canShout="$canShout" shoutingAllowedTimes_new="$shoutingAllowedTimes_new" shoutingAllowedTimes_old="$shoutingAllowedTimes_old" nodeLabel="78982358" />
                  <IfElseCondition failOnCondition="false" condition="$canShout" saveVersion="2">
                    <Then canSkip="1">
                      <Sequence>
                        <AddLink From="$shoutingManager" To="$shoutingManager" Tag="&apos;cheering_shoutingAllowedTimes&apos;" Data="$shoutingAllowedTimes_new" LinkOpHandleMode="OverWrite" />
                        <AddLink From="$shoutingManager" To="$this.id" Tag="&apos;cheering_shoutingInProgress&apos;" Data="" LinkOpHandleMode="OverWrite" />
                      </Sequence>
                    </Then>
                    <Else canSkip="1">
                      <Fail />
                    </Else>
                  </IfElseCondition>
                </Sequence>
              </AtomicDecorator>
              <Selector>
                <Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="$metarole" subtitlesDown="false" nodeLabel="10469565" />
                <Sequence>
                  <AddLink From="$shoutingManager" To="$shoutingManager" Tag="&apos;cheering_shoutingAllowedTimes&apos;" Data="$shoutingAllowedTimes_old" LinkOpHandleMode="OverWrite" />
                  <Fail />
                </Sequence>
              </Selector>
            </Sequence>
          </Child>
          <OnSuccess canSkip="1">
            <RemoveLink From="$shoutingManager" To="$this.id" Tag="&apos;cheering_shoutingInProgress&apos;" LinkOpHandleMode="Success" />
          </OnSuccess>
        </FuseBox>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="canShout" comment="" />
        <Variable name="shoutingAllowedTimes_new" comment="" />
        <Variable name="shoutingAllowedTimes_old" comment="" />
        <Variable name="metarole" comment="" />
        <Variable name="shoutingConfiguration" comment="" />
        <Variable name="shoutingManager" comment="" />
        <Variable name="shoutingType" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Child>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Function_special_cheeringSpot_cheering_canShout hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Function_special_cheeringSpot_cheering_canShout>
                    <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                      <OutputBreakpoints />
                      <Then>
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </AddLink>
                          <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </AddLink>
                        </Sequence>
                      </Then>
                      <Else>
                        <Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Fail>
                      </Else>
                    </IfElseCondition>
                  </Sequence>
                </AtomicDecorator>
                <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Function_speech_schedulerMonolog>
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </AddLink>
                    <Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Fail>
                  </Sequence>
                </Selector>
              </Sequence>
            </Child>
            <OnSuccess>
              <RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </RemoveLink>
            </OnSuccess>
          </FuseBox>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>