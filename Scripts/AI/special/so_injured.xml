<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="use_injured_ground" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextPresetElement contextPreset="switch_unresponsive_spawnHitVolume" enabled="true">
					<UnstanceElement unstance="lyingInjured" locationObject="$__object.id" slaveObject="" enabled="true">
						<Sequence>
							<Selector>
								<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;healSync&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
								</GraphSearch>
								<WaitAction />
							</Selector>
							<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;5s&apos;" LockManagerType="Local" SemaphoreName="&apos;healSync_first&apos;" RunLogic="Halt">
								<LoopUntil until="Success" attemptCount="0">
									<Sequence>
										<JoinedUnstanceAction lockContext="$__object.id" lockName="&apos;healSync&apos;" lockCount="2" timeout="&apos;15s&apos;" ignoreOthersLeaving="false" unstance="heal_injured" locationObject="$__object.id" slaveObject="" />
										<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</LoopUntil>
							</Synchronize>
						</Sequence>
					</UnstanceElement>
				</EntityContextPresetElement>
			</Behavior>
		</Root>
		<ForestContainer>
			<JoinedUnstanceAction lockContext="$__object.id" lockName="&apos;quest_treating_synchro&apos;" lockCount="2" timeout="&apos;10s&apos;" ignoreOthersLeaving="false" unstance="Quest_SynchroSittingWounded" locationObject="$__object.id" slaveObject="" />
			<Sequence>
				<UnstanceAction unstance="lyingInjured" locationObject="$__object.id" slaveObject="" />
				<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
			</Sequence>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextPresetElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WaitAction>
								</Selector>
								<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</JoinedUnstanceAction>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</LoopUntil>
								</Synchronize>
							</Sequence>
						</UnstanceElement>
					</EntityContextPresetElement>
				</Behavior>
			</Root>
			<Forest>
				<JoinedUnstanceAction editorPosX="1340" editorPosY="690" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</JoinedUnstanceAction>
				<Sequence editorPosX="960" editorPosY="-310" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</UnstanceAction>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_sick" is_function="0">
		<Variables>
			<Variable name="animationFragment" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="animationTags" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="bed" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="helperId" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="helperName" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="target" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Expression expressions="$bed = $__resource.id" />
			</OnInit>
			<Behavior canSkip="1">
				<EntityContextPresetElement contextPreset="switch_unresponsive_spawnHitVolume" enabled="true">
					<Sequence>
						<IfCondition failOnCondition="false" condition="$bed == $__null">
							<Expression expressions="$bed = $__object.id" />
						</IfCondition>
						<StanceElement smartObject="$bed" stance="lying" allowAny="false" enabled="true">
							<EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
								<Sequence>
									<UnstanceAction unstance="beSick" locationObject="$bed" slaveObject="" />
									<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</EntityContextElement>
						</StanceElement>
					</Sequence>
				</EntityContextPresetElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="animationFragment" comment="" />
				<Variable name="animationTags" comment="" />
				<Variable name="bed" comment="" />
				<Variable name="helperId" comment="" />
				<Variable name="helperName" comment="" />
				<Variable name="target" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</OnInit>
				<Behavior>
					<EntityContextPresetElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</UnstanceAction>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</EntityContextElement>
							</StanceElement>
						</Sequence>
					</EntityContextPresetElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_sickRight" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_sickBack" is_function="0">
		<Variables>
			<Variable name="bed" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<LinkTagFilter tag="&apos;bed&apos;" prune="true" negprune="unknown" Parent="" Child="$bed" Data="" />
				</GraphSearch>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<DistanceCondition Origin="$this.id" ReferencePt="$bed" Low="1.000000" High="1.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
						<TeleportAction Position="$bed" EndInterruptOnActionStart="false" />
					</DistanceCondition>
					<Sequence>
						<UnstanceAction unstance="lyingSick_back" locationObject="$bed" slaveObject="" />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					</Sequence>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="bed" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</LinkTagFilter>
					</GraphSearch>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</TeleportAction>
						</DistanceCondition>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_wounded" is_function="0">
		<Variables>
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="unstance" type="_string" values="&apos;woundedLying&apos;" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Expression expressions="$smartObject = $__object.id" />
			</OnInit>
			<Behavior canSkip="1">
				<Function_wounded smartObject="$smartObject" unstance="$unstance" nodeLabel="43249766" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="smartObject" comment="" />
				<Variable name="unstance" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</OnInit>
				<Behavior>
					<Function_wounded hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_wounded>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_wounded_1" is_function="0">
		<Variables>
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="unstance" type="_string" values="&apos;woundedLying_1&apos;" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Expression expressions="$smartObject = $__object.id" />
			</OnInit>
			<Behavior canSkip="1">
				<Function_wounded smartObject="$smartObject" unstance="$unstance" nodeLabel="43181970" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="smartObject" comment="" />
				<Variable name="unstance" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</OnInit>
				<Behavior>
					<Function_wounded hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_wounded>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_wounded_2" is_function="0">
		<Variables>
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="unstance" type="_string" values="&apos;woundedLying_2&apos;" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Expression expressions="$smartObject = $__object.id" />
			</OnInit>
			<Behavior canSkip="1">
				<Function_wounded smartObject="$smartObject" unstance="$unstance" nodeLabel="18516038" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="smartObject" comment="" />
				<Variable name="unstance" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</OnInit>
				<Behavior>
					<Function_wounded hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_wounded>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_wounded_3" is_function="0">
		<Variables>
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="unstance" type="_string" values="&apos;woundedLying_3&apos;" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Expression expressions="$smartObject = $__object.id" />
			</OnInit>
			<Behavior canSkip="1">
				<Function_wounded smartObject="$smartObject" unstance="$unstance" nodeLabel="45805714" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="smartObject" comment="" />
				<Variable name="unstance" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</OnInit>
				<Behavior>
					<Function_wounded hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_wounded>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_wounded_4" is_function="0">
		<Variables>
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="unstance" type="_string" values="&apos;woundedLying_4&apos;" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Expression expressions="$smartObject = $__object.id" />
			</OnInit>
			<Behavior canSkip="1">
				<Function_wounded smartObject="$smartObject" unstance="$unstance" nodeLabel="70998072" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="smartObject" comment="" />
				<Variable name="unstance" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</OnInit>
				<Behavior>
					<Function_wounded hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_wounded>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_wounded_5" is_function="0">
		<Variables>
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="unstance" type="_string" values="&apos;woundedLying_5&apos;" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Expression expressions="$smartObject = $__object.id" />
			</OnInit>
			<Behavior canSkip="1">
				<Function_wounded smartObject="$smartObject" unstance="$unstance" nodeLabel="62509679" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="smartObject" comment="" />
				<Variable name="unstance" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</OnInit>
				<Behavior>
					<Function_wounded hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Function_wounded>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="wounded" is_function="1">
		<Variables />
		<Parameters>
			<Variable name="smartObject" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="unstance" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextPreset preset="switch_unresponsive_spawnHitVolume" target="">
					<Sequence>
						<DistanceCondition Origin="$this.id" ReferencePt="$smartObject" Low="1.000000" High="1.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
							<TeleportAction Position="$smartObject" EndInterruptOnActionStart="false" />
						</DistanceCondition>
						<UnstanceAction unstance="$unstance" locationObject="$smartObject" slaveObject="" />
						<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</EntityContextPreset>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="smartObject" comment="" />
				<Variable name="unstance" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</TeleportAction>
							</DistanceCondition>
							<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</UnstanceAction>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</EntityContextPreset>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_healLeft" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="healingLeft" locationObject="$__object.id" slaveObject="" />
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<AnimationAction fragment="&apos;HealingIn&apos;" tags="&apos;healingSideLeft&apos;" eventReferenceObject="$__object.id" alignObject="$__object.id" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
			<UnstanceElement unstance="healingLeft" locationObject="$__object.id" slaveObject="">
				<Sequence>
					<AnimationAction fragment="&apos;HealingAction&apos;" tags="&apos;healingSideLeft,healingPartForehead&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
					<AnimationAction fragment="&apos;HealingAction&apos;" tags="&apos;healingSideLeft,healingPartChest&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
				</Sequence>
			</UnstanceElement>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<AnimationAction editorPosX="770" editorPosY="340" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</AnimationAction>
				<UnstanceElement editorPosX="680" editorPosY="180" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AnimationAction>
						<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AnimationAction>
					</Sequence>
				</UnstanceElement>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_healRight" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<UnstanceElement unstance="healingRight" locationObject="$__object.id" slaveObject="">
					<Sequence>
						<AnimationAction fragment="&apos;HealingAction&apos;" tags="&apos;healingSideRight,healingPartForehead&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" />
						<AnimationAction fragment="&apos;HealingAction&apos;" tags="&apos;healingSideRight,healingPartChest&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" />
					</Sequence>
				</UnstanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<OutputBreakpoints />
							</AnimationAction>
							<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<OutputBreakpoints />
							</AnimationAction>
						</Sequence>
					</UnstanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_woundedSittting" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextPresetElement contextPreset="switch_unresponsive_spawnHitVolume" enabled="true">
					<StanceElement smartObject="$__resource.id" stance="sitting" allowAny="false" enabled="true">
						<Sequence>
							<UnstanceAction unstance="Sitting_shitty" locationObject="" slaveObject="" />
							<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</StanceElement>
				</EntityContextPresetElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextPresetElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</StanceElement>
					</EntityContextPresetElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_hunterInjury" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<DistanceCondition Origin="$this.id" ReferencePt="$__object.id" Low="1.000000" High="1.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
						<TeleportAction Position="$__object.id" EndInterruptOnActionStart="false" />
					</DistanceCondition>
					<UnstanceAction unstance="WoundedLying_Hunter" locationObject="$__object.id" slaveObject="" />
					<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</TeleportAction>
						</DistanceCondition>
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_treating_wounded" is_function="0">
		<Variables>
			<Variable name="treating" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContextPresetElement contextPreset="switch_unresponsive_spawnHitVolume" enabled="true">
					<EntityContext context="ForceForbidAutoTorch" target="">
						<StanceElement smartObject="$__object.id" stance="sitting" allowAny="false" enabled="true">
							<Sequence>
								<Selector>
									<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
										<LinkTagFilter tag="&apos;questTreating&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
									</GraphSearch>
									<WaitAction />
								</Selector>
								<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;5s&apos;" LockManagerType="Local" SemaphoreName="&apos;quest_treating&apos;" RunLogic="Halt">
									<LoopUntil until="Success" attemptCount="0">
										<Sequence>
											<JoinedUnstanceAction lockContext="$__object.id" lockName="&apos;quest_treating_synchro&apos;" lockCount="2" timeout="&apos;10s&apos;" ignoreOthersLeaving="false" unstance="Quest_SynchroSittingWounded" locationObject="$__object.id" slaveObject="" />
											<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
									</LoopUntil>
								</Synchronize>
							</Sequence>
						</StanceElement>
					</EntityContext>
				</EntityContextPresetElement>
			</Behavior>
		</Root>
		<ForestContainer>
			<UnstanceAction unstance="Quest_SittingWounded" locationObject="$__object.id" slaveObject="" />
			<UnstanceElement unstance="AlertedLookingAround" locationObject="$__object.id" slaveObject="" enabled="true" />
			<UnstanceAction unstance="Quest_SynchroSittingWounded" locationObject="" slaveObject="" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="treating" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContextPresetElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</LinkTagFilter>
										</GraphSearch>
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
									</Selector>
									<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</JoinedUnstanceAction>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</LoopUntil>
									</Synchronize>
								</Sequence>
							</StanceElement>
						</EntityContext>
					</EntityContextPresetElement>
				</Behavior>
			</Root>
			<Forest>
				<UnstanceAction editorPosX="1540" editorPosY="-330" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</UnstanceAction>
				<UnstanceElement editorPosX="1000" editorPosY="-260" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</UnstanceElement>
				<UnstanceAction editorPosX="1790" editorPosY="-160" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</UnstanceAction>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_treating_healer" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;5s&apos;" LockManagerType="Local" SemaphoreName="&apos;quest_treating&apos;" RunLogic="Halt">
					<EntityContext context="ForceForbidAutoTorch" target="">
						<AddLinkElement from="$__object.id" to="$this.id" tag="&apos;questTreating&apos;" data="">
							<Sequence>
								<JoinedUnstanceAction lockContext="$__object.id" lockName="&apos;quest_treating_synchro&apos;" lockCount="2" timeout="&apos;10s&apos;" ignoreOthersLeaving="false" unstance="Quest_SynchroTreatingSittingWounded" locationObject="$__object.id" slaveObject="" />
								<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</AddLinkElement>
					</EntityContext>
				</Synchronize>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</JoinedUnstanceAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</AddLinkElement>
						</EntityContext>
					</Synchronize>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_healLeft_bed" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<UnstanceAction unstance="healingBedLeft" locationObject="$__object.id" slaveObject="" />
					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<UnstanceElement unstance="healingBedLeft" locationObject="$__object.id" slaveObject="">
				<Sequence>
					<AnimationAction fragment="&apos;HealingBedAction&apos;" tags="&apos;healingSideLeft,healingPartForehead&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" />
					<AnimationAction fragment="&apos;HealingBedAction&apos;" tags="&apos;healingSideLeft,healingPartChest&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" />
				</Sequence>
			</UnstanceElement>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</UnstanceAction>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<UnstanceElement editorPosX="400" editorPosY="360" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AnimationAction>
						<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AnimationAction>
					</Sequence>
				</UnstanceElement>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_injured_bed" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$__resource.id" stance="lying" allowAny="false" enabled="true">
					<EntityContextPresetElement contextPreset="switch_unresponsive_spawnHitVolume" enabled="true">
						<Sequence>
							<UnstanceAction unstance="lyingInjuredBed" locationObject="" slaveObject="" />
							<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
					</EntityContextPresetElement>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextPresetElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</UnstanceAction>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</EntityContextPresetElement>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_givePotion_bed" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<JoinedAnimationAction requiresMovement="true" lockContext="$__object.id" lockName="&apos;sickPotion_bed&apos;" lockCount="2" timeout="&apos;15s&apos;" ignoreOthersLeaving="false" fragment="&apos;SickPotion_Bed&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</JoinedAnimationAction>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_givePotion_ground" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<JoinedAnimationAction requiresMovement="true" lockContext="$__object.id" lockName="&apos;sickPotion_bed&apos;" lockCount="2" timeout="&apos;15s&apos;" ignoreOthersLeaving="false" fragment="&apos;SickPotion_Ground&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</JoinedAnimationAction>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_takePotion_bed" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$__resource.id" stance="lying" allowAny="false">
					<SuppressFailure>
						<JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="&apos;sickPotion_bed&apos;" lockCount="2" timeout="&apos;15s&apos;" ignoreOthersLeaving="false" fragment="&apos;SickPotion_Bed&apos;" tags="&apos;lying&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
					</SuppressFailure>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</JoinedAnimationAction>
						</SuppressFailure>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_takePotion_ground" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<StanceElement smartObject="$__resource.id" stance="lying" allowAny="false">
					<SuppressFailure>
						<JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="&apos;sickPotion_bed&apos;" lockCount="2" timeout="&apos;15s&apos;" ignoreOthersLeaving="false" fragment="&apos;SickPotion_Ground&apos;" tags="&apos;lyingGroundRight&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
					</SuppressFailure>
				</StanceElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</JoinedAnimationAction>
						</SuppressFailure>
					</StanceElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_heal" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;5s&apos;" LockManagerType="Local" SemaphoreName="&apos;healSync_first&apos;" RunLogic="Halt">
					<EntityContext context="ForceForbidAutoTorch" target="">
						<AddLinkElement from="$__object.id" to="$this.id" tag="&apos;healSync&apos;" data="">
							<Sequence>
								<JoinedUnstanceAction lockContext="$__object.id" lockName="&apos;healSync&apos;" lockCount="2" timeout="&apos;15s&apos;" ignoreOthersLeaving="false" unstance="heal_healer" locationObject="$__object.id" slaveObject="" />
								<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</AddLinkElement>
					</EntityContext>
				</Synchronize>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</JoinedUnstanceAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</AddLinkElement>
						</EntityContext>
					</Synchronize>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_injured" is_function="0">
		<Variables>
			<Variable name="cantSkip" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="unstanceName" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ChangeBehaviorStateElement smartEntity="$__object.id" behavior="&apos;use_healing&apos;" state="Enabled" allowAnyState="false" enabled="true">
					<EntityContext context="ForceForbidAutoTorch" target="">
						<Sequence>
							<ExecuteLua code="local injuredEntity = XGenAIModule.GetEntityByWUID(data.__object.id) &#10; &#10;data.unstanceName = injuredEntity.unstanceName" />
							<IfElseCondition failOnCondition="false" condition="$unstanceName == &apos;sittingInjured&apos;" saveVersion="2">
								<Then canSkip="1">
									<EntityContextPresetElement contextPreset="crime_prettyGoodFriendsForever" enabled="true">
										<StanceElement smartObject="$__resource.id" stance="sitting" allowAny="false" enabled="true">
											<Sequence>
												<Selector>
													<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
														<LinkTagFilter tag="&apos;questTreating&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
													</GraphSearch>
													<WaitAction />
												</Selector>
												<Parallel successMode="Any" failureMode="Any">
													<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;quest_treating&apos;" RunLogic="Halt">
														<Sequence>
															<Expression expressions="$cantSkip = true" />
															<JoinedAnimationAction requiresMovement="true" lockContext="$__object.id" lockName="&apos;quest_treating_synchro&apos;" lockCount="2" timeout="&apos;10s&apos;" ignoreOthersLeaving="false" fragment="&apos;Quest_Treating_AllInOne&apos;" tags="&apos;sittingGround&apos;" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
														</Sequence>
													</Synchronize>
													<Sequence>
														<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
														<SuppressFailure>
															<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;RANENY_POVZDECHY&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="32125192" />
														</SuppressFailure>
														<IfGate atomic="false" condition="!$cantSkip" RunLogic="KeepRunning">
															<Success />
														</IfGate>
													</Sequence>
												</Parallel>
											</Sequence>
										</StanceElement>
									</EntityContextPresetElement>
								</Then>
								<Else canSkip="1">
									<EntityContextPresetElement contextPreset="switch_unresponsive_spawnHitVolume" enabled="true">
										<IfElseCondition failOnCondition="false" condition="$unstanceName == &apos;injured&apos;" saveVersion="2">
											<Then canSkip="1">
												<StanceElement smartObject="$__object.id" stance="lying" allowAny="false" enabled="true">
													<EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
														<Sequence>
															<Selector>
																<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																	<LinkTagFilter tag="&apos;healSync&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																</GraphSearch>
																<UnstanceAction unstance="$unstanceName" locationObject="$__object.id" slaveObject="" />
															</Selector>
															<SuppressFailure>
																<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;5s&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;healSync_first&apos;" RunLogic="Halt">
																	<UnstanceElement unstance="$unstanceName" locationObject="" slaveObject="" enabled="true">
																		<Sequence>
																			<JoinedUnstanceAction lockContext="$__object.id" lockName="&apos;healSync&apos;" lockCount="2" timeout="&apos;15s&apos;" ignoreOthersLeaving="false" unstance="heal_injured" locationObject="$__object.id" slaveObject="" />
																			<SuppressFailure>
																				<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;RANENY_POVZDECHY&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="90355022" />
																			</SuppressFailure>
																			<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
																		</Sequence>
																	</UnstanceElement>
																</Synchronize>
															</SuppressFailure>
														</Sequence>
													</EntityContextElement>
												</StanceElement>
											</Then>
											<Else canSkip="1">
												<IfElseCondition failOnCondition="false" condition="$unstanceName == &apos;lyingInjured_bedLow&apos;" saveVersion="2">
													<Then canSkip="1">
														<StanceElement smartObject="$__object.id" stance="lying" allowAny="false" enabled="true">
															<Sequence>
																<Selector>
																	<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																		<LinkTagFilter tag="&apos;healingSync&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																	</GraphSearch>
																	<UnstanceAction unstance="$unstanceName" locationObject="" slaveObject="" />
																</Selector>
																<Parallel successMode="Any" failureMode="Any">
																	<SuppressFailure>
																		<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;15s&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;healingSync&apos;" RunLogic="Halt">
																			<UnstanceElement unstance="$unstanceName" locationObject="" slaveObject="" enabled="true">
																				<SuppressFailure>
																					<JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="&apos;injuredPotion&apos;" lockCount="2" timeout="&apos;10s&apos;" ignoreOthersLeaving="false" fragment="&apos;HealingGroundPotion&apos;" tags="&apos;lyingGround&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
																				</SuppressFailure>
																			</UnstanceElement>
																		</Synchronize>
																	</SuppressFailure>
																	<Sequence>
																		<SuppressFailure>
																			<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;RANENY_POVZDECHY&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="84182530" />
																		</SuppressFailure>
																		<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																	</Sequence>
																</Parallel>
															</Sequence>
														</StanceElement>
													</Then>
													<Else canSkip="1">
														<StanceElement smartObject="$__resource.id" stance="lying" allowAny="false" enabled="true">
															<Sequence>
																<Selector>
																	<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																		<LinkTagFilter tag="&apos;healingSync&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
																	</GraphSearch>
																	<UnstanceAction unstance="$unstanceName" locationObject="" slaveObject="" />
																</Selector>
																<Parallel successMode="Any" failureMode="Any">
																	<SuppressFailure>
																		<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;15s&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;healingSync&apos;" RunLogic="Halt">
																			<UnstanceElement unstance="$unstanceName" locationObject="" slaveObject="" enabled="true">
																				<Sequence>
																					<SuppressFailure>
																						<JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="&apos;injuredPotion&apos;" lockCount="2" timeout="&apos;10s&apos;" ignoreOthersLeaving="false" fragment="&apos;HealingBedPotion&apos;" tags="&apos;lying&apos;" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
																					</SuppressFailure>
																					<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
																				</Sequence>
																			</UnstanceElement>
																		</Synchronize>
																	</SuppressFailure>
																	<Sequence>
																		<SuppressFailure>
																			<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;RANENY_POVZDECHY&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="84435725" />
																		</SuppressFailure>
																		<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																	</Sequence>
																</Parallel>
															</Sequence>
														</StanceElement>
													</Else>
												</IfElseCondition>
											</Else>
										</IfElseCondition>
									</EntityContextPresetElement>
								</Else>
							</IfElseCondition>
						</Sequence>
					</EntityContext>
				</ChangeBehaviorStateElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="cantSkip" comment="" />
				<Variable name="unstanceName" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ChangeBehaviorStateElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExecuteLua>
								<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<EntityContextPresetElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</LinkTagFilter>
														</GraphSearch>
														<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</WaitAction>
													</Selector>
													<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
																<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</JoinedAnimationAction>
															</Sequence>
														</Synchronize>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
															<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_schedulerMonolog>
															</SuppressFailure>
															<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Success>
															</IfGate>
														</Sequence>
													</Parallel>
												</Sequence>
											</StanceElement>
										</EntityContextPresetElement>
									</Then>
									<Else>
										<EntityContextPresetElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</LinkTagFilter>
																	</GraphSearch>
																	<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</UnstanceAction>
																</Selector>
																<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</JoinedUnstanceAction>
																				<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																					</Function_speech_schedulerMonolog>
																				</SuppressFailure>
																				<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Wait>
																			</Sequence>
																		</UnstanceElement>
																	</Synchronize>
																</SuppressFailure>
															</Sequence>
														</EntityContextElement>
													</StanceElement>
												</Then>
												<Else>
													<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</LinkTagFilter>
																		</GraphSearch>
																		<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</UnstanceAction>
																	</Selector>
																	<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</JoinedAnimationAction>
																					</SuppressFailure>
																				</UnstanceElement>
																			</Synchronize>
																		</SuppressFailure>
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Function_speech_schedulerMonolog>
																			</SuppressFailure>
																			<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Wait>
																		</Sequence>
																	</Parallel>
																</Sequence>
															</StanceElement>
														</Then>
														<Else>
															<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</LinkTagFilter>
																		</GraphSearch>
																		<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</UnstanceAction>
																	</Selector>
																	<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</JoinedAnimationAction>
																						</SuppressFailure>
																						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Wait>
																					</Sequence>
																				</UnstanceElement>
																			</Synchronize>
																		</SuppressFailure>
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Function_speech_schedulerMonolog>
																			</SuppressFailure>
																			<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Wait>
																		</Sequence>
																	</Parallel>
																</Sequence>
															</StanceElement>
														</Else>
													</IfElseCondition>
												</Else>
											</IfElseCondition>
										</EntityContextPresetElement>
									</Else>
								</IfElseCondition>
							</Sequence>
						</EntityContext>
					</ChangeBehaviorStateElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_healing" is_function="0">
		<Variables>
			<Variable name="unstanceName" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="healer_healing" target="">
					<EntityContext context="ForceForbidAutoTorch" target="">
						<EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
							<Sequence>
								<ExecuteLua code="local injuredEntity = XGenAIModule.GetEntityByWUID(data.__object.id) &#10; &#10;data.unstanceName = injuredEntity.unstanceName" />
								<IfElseCondition failOnCondition="false" condition="$unstanceName == &apos;sittingInjured&apos;" saveVersion="2">
									<Then canSkip="1">
										<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;5s&apos;" LockManagerType="Local" SemaphoreName="&apos;quest_treating&apos;" RunLogic="Halt">
											<AddLinkElement from="$__object.id" to="$this.id" tag="&apos;questTreating&apos;" data="" enabled="true">
												<Parallel successMode="Any" failureMode="Any">
													<JoinedAnimationAction requiresMovement="true" lockContext="$__object.id" lockName="&apos;quest_treating_synchro&apos;" lockCount="2" timeout="&apos;10s&apos;" ignoreOthersLeaving="false" fragment="&apos;Quest_Treating_AllInOne&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
													<Loop count="-1">
														<DistanceGate Origin="$this.id" ReferencePt="$__object.id" Low="1.000000" High="1.000000" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
															<Sequence>
																<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
																<SuppressFailure>
																	<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;OSETROVANI_RANENEHO&apos;" skipInLod="false" subtitlesDown="false" nodeLabel="13947992" />
																</SuppressFailure>
															</Sequence>
														</DistanceGate>
													</Loop>
												</Parallel>
											</AddLinkElement>
										</Synchronize>
									</Then>
									<Else canSkip="1">
										<IfElseCondition failOnCondition="false" condition="$unstanceName == &apos;injured&apos;" saveVersion="2">
											<Then canSkip="1">
												<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;5s&apos;" LockManagerType="Local" SemaphoreName="&apos;healSync_first&apos;" RunLogic="Halt">
													<EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
														<AddLinkElement from="$__object.id" to="$this.id" tag="&apos;healSync&apos;" data="" enabled="true">
															<Parallel successMode="Any" failureMode="Any">
																<Sequence>
																	<JoinedUnstanceAction lockContext="$__object.id" lockName="&apos;healSync&apos;" lockCount="2" timeout="&apos;15s&apos;" ignoreOthersLeaving="false" unstance="heal_healer" locationObject="$__object.id" slaveObject="" />
																	<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
																</Sequence>
																<Sequence>
																	<SuppressFailure>
																		<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;OSETROVANI_RANENEHO&apos;" skipInLod="false" subtitlesDown="false" nodeLabel="72554240" />
																	</SuppressFailure>
																	<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																</Sequence>
															</Parallel>
														</AddLinkElement>
													</EntityContextElement>
												</Synchronize>
											</Then>
											<Else canSkip="1">
												<IfElseCondition failOnCondition="false" condition="$unstanceName == &apos;lyingInjured_bedLow&apos;" saveVersion="2">
													<Then canSkip="1">
														<AddLinkElement from="$__object.id" to="$this.id" tag="&apos;healingSync&apos;" data="" enabled="true">
															<Sequence>
																<UnstanceAction unstance="healingLeft" locationObject="$__object.id" slaveObject="" />
																<Parallel successMode="Any" failureMode="Any">
																	<HasGenderCheck Gender="Female" SoulWUID="$this.id" FailSubtMissing="false" saveVersion="2">
																		<Then canSkip="1">
																			<EntityContextCheck context="healer_disablePotion" target="" saveVersion="2">
																				<Then canSkip="1">
																					<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
																				</Then>
																				<Else canSkip="1">
																					<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;15s&apos;" LockManagerType="Local" SemaphoreName="&apos;healingSync&apos;" RunLogic="Halt">
																						<UnstanceElement unstance="healingLeft" locationObject="$__object.id" slaveObject="" enabled="true">
																							<RandomGate opensWithChance="0.100000" saveVersion="2">
																								<Then canSkip="1">
																									<JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="&apos;injuredPotion&apos;" lockCount="2" timeout="&apos;10s&apos;" ignoreOthersLeaving="false" fragment="&apos;HealingGroundPotion&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
																								</Then>
																								<Else canSkip="1">
																									<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
																								</Else>
																							</RandomGate>
																						</UnstanceElement>
																					</Synchronize>
																				</Else>
																			</EntityContextCheck>
																		</Then>
																		<Else canSkip="1">
																			<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
																		</Else>
																	</HasGenderCheck>
																	<Sequence>
																		<SuppressFailure>
																			<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;OSETROVANI_RANENEHO&apos;" skipInLod="false" subtitlesDown="false" nodeLabel="16622437" />
																		</SuppressFailure>
																		<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																	</Sequence>
																</Parallel>
															</Sequence>
														</AddLinkElement>
													</Then>
													<Else canSkip="1">
														<AddLinkElement from="$__object.id" to="$this.id" tag="&apos;healingSync&apos;" data="" enabled="true">
															<Sequence>
																<UnstanceAction unstance="healingBedLeft" locationObject="$__object.id" slaveObject="" />
																<Parallel successMode="Any" failureMode="Any">
																	<HasGenderCheck Gender="Female" SoulWUID="$this.id" FailSubtMissing="false" saveVersion="2">
																		<Then canSkip="1">
																			<EntityContextCheck context="healer_disablePotion" target="" saveVersion="2">
																				<Then canSkip="1">
																					<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
																				</Then>
																				<Else canSkip="1">
																					<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;15s&apos;" LockManagerType="Local" SemaphoreName="&apos;healingSync&apos;" RunLogic="Halt">
																						<UnstanceElement unstance="healingBedLeft" locationObject="$__object.id" slaveObject="" enabled="true">
																							<RandomGate opensWithChance="0.100000" saveVersion="2">
																								<Then canSkip="1">
																									<JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="&apos;injuredPotion&apos;" lockCount="2" timeout="&apos;10s&apos;" ignoreOthersLeaving="false" fragment="&apos;HealingBedPotion&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
																								</Then>
																								<Else canSkip="1">
																									<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
																								</Else>
																							</RandomGate>
																						</UnstanceElement>
																					</Synchronize>
																				</Else>
																			</EntityContextCheck>
																		</Then>
																		<Else canSkip="1">
																			<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
																		</Else>
																	</HasGenderCheck>
																	<Sequence>
																		<SuppressFailure>
																			<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;OSETROVANI_RANENEHO&apos;" skipInLod="false" subtitlesDown="false" nodeLabel="68903221" />
																		</SuppressFailure>
																		<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
																	</Sequence>
																</Parallel>
															</Sequence>
														</AddLinkElement>
													</Else>
												</IfElseCondition>
											</Else>
										</IfElseCondition>
									</Else>
								</IfElseCondition>
							</Sequence>
						</EntityContextElement>
					</EntityContext>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer>
			<JoinedUnstanceAction lockContext="$__object.id" lockName="&apos;quest_treating_synchro&apos;" lockCount="2" timeout="&apos;10s&apos;" ignoreOthersLeaving="false" unstance="Quest_SynchroTreatingSittingWounded" locationObject="$__object.id" slaveObject="" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="unstanceName" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-370" editorPosY="-10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExecuteLua>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</JoinedAnimationAction>
														<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Wait>
																	<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Function_speech_schedulerMonolog>
																	</SuppressFailure>
																</Sequence>
															</DistanceGate>
														</Loop>
													</Parallel>
												</AddLinkElement>
											</Synchronize>
										</Then>
										<Else>
											<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
												<OutputBreakpoints />
												<Then>
													<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</JoinedUnstanceAction>
																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Wait>
																	</Sequence>
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Function_speech_schedulerMonolog>
																		</SuppressFailure>
																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Wait>
																	</Sequence>
																</Parallel>
															</AddLinkElement>
														</EntityContextElement>
													</Synchronize>
												</Then>
												<Else>
													<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</UnstanceAction>
																	<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																			<OutputBreakpoints />
																			<Then>
																				<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																					<Then>
																						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Wait>
																					</Then>
																					<Else>
																						<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																									<OutputBreakpoints />
																									<Then>
																										<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</JoinedAnimationAction>
																									</Then>
																									<Else>
																										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</Wait>
																									</Else>
																								</RandomGate>
																							</UnstanceElement>
																						</Synchronize>
																					</Else>
																				</EntityContextCheck>
																			</Then>
																			<Else>
																				<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Wait>
																			</Else>
																		</HasGenderCheck>
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Function_speech_schedulerMonolog>
																			</SuppressFailure>
																			<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Wait>
																		</Sequence>
																	</Parallel>
																</Sequence>
															</AddLinkElement>
														</Then>
														<Else>
															<AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</UnstanceAction>
																	<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																			<OutputBreakpoints />
																			<Then>
																				<EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																					<OutputBreakpoints />
																					<Then>
																						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																						</Wait>
																					</Then>
																					<Else>
																						<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																									<OutputBreakpoints />
																									<Then>
																										<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</JoinedAnimationAction>
																									</Then>
																									<Else>
																										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																											<OutputBreakpoints />
																										</Wait>
																									</Else>
																								</RandomGate>
																							</UnstanceElement>
																						</Synchronize>
																					</Else>
																				</EntityContextCheck>
																			</Then>
																			<Else>
																				<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Wait>
																			</Else>
																		</HasGenderCheck>
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</Function_speech_schedulerMonolog>
																			</SuppressFailure>
																			<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Wait>
																		</Sequence>
																	</Parallel>
																</Sequence>
															</AddLinkElement>
														</Else>
													</IfElseCondition>
												</Else>
											</IfElseCondition>
										</Else>
									</IfElseCondition>
								</Sequence>
							</EntityContextElement>
						</EntityContext>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest>
				<JoinedUnstanceAction editorPosX="2280" editorPosY="-530" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</JoinedUnstanceAction>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="use_lyingWounded" is_function="0">
		<Variables>
			<Variable name="unstanceName" type="_string" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<EntityContext context="ForceForbidAutoTorch" target="">
					<Sequence>
						<ExecuteLua code="local injuredEntity = XGenAIModule.GetEntityByWUID(data.__object.id) &#10; &#10;data.unstanceName = injuredEntity.unstanceName" />
						<IfElseCondition failOnCondition="false" condition="$unstanceName == &apos;Sitting_shitty&apos;" saveVersion="2">
							<Then canSkip="1">
								<StanceElement smartObject="$__resource.id" stance="sitting" allowAny="false" enabled="true">
									<Sequence>
										<UnstanceAction unstance="$unstanceName" locationObject="" slaveObject="" />
										<SuppressFailure>
											<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;RANENY_POVZDECHY&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="73578364" />
										</SuppressFailure>
										<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</StanceElement>
							</Then>
							<Else canSkip="1">
								<IfElseCondition failOnCondition="false" condition="$unstanceName == &apos;lyingInjured_bedHigh&apos;" saveVersion="2">
									<Then canSkip="1">
										<StanceElement smartObject="$__resource.id" stance="lying" allowAny="false" enabled="true">
											<Sequence>
												<UnstanceAction unstance="$unstanceName" locationObject="" slaveObject="" />
												<SuppressFailure>
													<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;RANENY_POVZDECHY&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="85768769" />
												</SuppressFailure>
												<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
											</Sequence>
										</StanceElement>
									</Then>
									<Else canSkip="1">
										<StanceElement smartObject="$__object.id" stance="lying" allowAny="false" enabled="true">
											<IfElseCondition failOnCondition="false" condition="$unstanceName == &apos;woundedLying_2_bedLow&apos;" saveVersion="2">
												<Then canSkip="1">
													<Sequence>
														<UnstanceAction unstance="$unstanceName" locationObject="" slaveObject="" />
														<SuppressFailure>
															<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;RANENY_POVZDECHY&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="28366176" />
														</SuppressFailure>
														<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
													</Sequence>
												</Then>
												<Else canSkip="1">
													<EntityContextPresetElement contextPreset="switch_unresponsive_spawnHitVolume" enabled="true">
														<IfElseCondition failOnCondition="false" condition="$unstanceName == &apos;lyingInjured_bedLow&apos;" saveVersion="2">
															<Then canSkip="1">
																<Sequence>
																	<WaitAction />
																	<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
																</Sequence>
															</Then>
															<Else canSkip="1">
																<Sequence>
																	<UnstanceAction unstance="$unstanceName" locationObject="" slaveObject="" />
																	<SuppressFailure>
																		<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;RANENY_POVZDECHY&apos;" skipInLod="true" subtitlesDown="false" nodeLabel="62880167" />
																	</SuppressFailure>
																	<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" />
																</Sequence>
															</Else>
														</IfElseCondition>
													</EntityContextPresetElement>
												</Else>
											</IfElseCondition>
										</StanceElement>
									</Else>
								</IfElseCondition>
							</Else>
						</IfElseCondition>
					</Sequence>
				</EntityContext>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="unstanceName" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ExecuteLua>
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</UnstanceAction>
											<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_schedulerMonolog>
											</SuppressFailure>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</StanceElement>
								</Then>
								<Else>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</UnstanceAction>
													<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Function_speech_schedulerMonolog>
													</SuppressFailure>
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
												</Sequence>
											</StanceElement>
										</Then>
										<Else>
											<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Then>
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</UnstanceAction>
															<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Function_speech_schedulerMonolog>
															</SuppressFailure>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
													</Then>
													<Else>
														<EntityContextPresetElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</WaitAction>
																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Wait>
																	</Sequence>
																</Then>
																<Else>
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</UnstanceAction>
																		<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Function_speech_schedulerMonolog>
																		</SuppressFailure>
																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Wait>
																	</Sequence>
																</Else>
															</IfElseCondition>
														</EntityContextPresetElement>
													</Else>
												</IfElseCondition>
											</StanceElement>
										</Else>
									</IfElseCondition>
								</Else>
							</IfElseCondition>
						</Sequence>
					</EntityContext>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>