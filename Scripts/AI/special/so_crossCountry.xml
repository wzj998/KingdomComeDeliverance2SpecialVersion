<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="onUpdate" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root editorPosY="20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Wait>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="showRunner_02_waitingAtFinishLine" is_function="0">
    <Variables>
      <Variable name="spot" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <EntityContext context="crossCountry_showrunner_waitingAtFinishLine" target="">
          <Sequence>
            <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
              <LinkTagFilter tag="&apos;showRunnerSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$spot" Data="" />
            </GraphSearch>
            <IsFastForwarded failOnCondition="false" saveVersion="2">
              <Then canSkip="1">
                <ExactMove directionType="AlignWithEntity" directionSpecification="$spot" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$spot" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
              </Then>
              <Else canSkip="1">
                <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$spot" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
              </Else>
            </IsFastForwarded>
            <Parallel successMode="Any" failureMode="Any">
              <Loop count="-1">
                <DistanceGate Origin="$this.id" ReferencePt="$__player" Low="15.000000" High="15.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
                  <ForceLook LookTarget="$__player" DisableVariations="false">
                    <Loop count="-1">
                      <Sequence>
                        <Turn target="$__player" align="false" />
                        <Wait duration="&apos;700ms&apos;" timeType="GameTime" doFail="false" variation="" />
                      </Sequence>
                    </Loop>
                  </ForceLook>
                </DistanceGate>
              </Loop>
              <Loop count="-1">
                <DistanceGate Origin="$this.id" ReferencePt="$__player" Low="15.000000" High="15.000000" Negation="true" OpenInMiddle="false" RunLogic="Halt">
                  <Sequence>
                    <ExactMove directionType="AlignWithEntity" directionSpecification="$spot" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$spot" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
                    <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
                  </Sequence>
                </DistanceGate>
              </Loop>
              <Wait duration="&apos;30s&apos;" timeType="GameTime" doFail="false" variation="" />
            </Parallel>
          </Sequence>
        </EntityContext>
      </Behavior>
    </Root>
    <ForestContainer>
      <DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="10.000000" High="10.000000" Negation="true" ValueOnMiddle="false" failOnCondition="false" />
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="spot" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </LinkTagFilter>
              </GraphSearch>
              <IsFastForwarded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </ExactMove>
                </Then>
                <Else>
                  <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Move>
                </Else>
              </IsFastForwarded>
              <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Turn>
                          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Wait>
                        </Sequence>
                      </Loop>
                    </ForceLook>
                  </DistanceGate>
                </Loop>
                <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </ExactMove>
                      <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Wait>
                    </Sequence>
                  </DistanceGate>
                </Loop>
                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Wait>
              </Parallel>
            </Sequence>
          </EntityContext>
        </Behavior>
      </Root>
      <Forest>
        <DistanceCondition editorPosX="1640" editorPosY="-200" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
        </DistanceCondition>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="contender_1_init" is_function="0">
    <Variables>
      <Variable name="cleanupPoint" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="linkTagName" type="_string" values="&apos;rideThroughStart_&apos;" isPersistent="0" form="single" />
      <Variable name="nextPoint" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="rideThroughEntryPoints" type="_wuid" values="" isPersistent="0" form="array" />
    </Variables>
    <Parameters>
      <Variable name="difficultyNumber" type="_int" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="startPos" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="trackNumber" type="_int" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <Selector>
            <Sequence>
              <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                <LinkTagFilter tag="&apos;CrossCountryNextPoint&apos;" prune="true" negprune="unknown" Parent="" Child="$cleanupPoint" Data="" />
              </GraphSearch>
              <RemoveLink From="$this.id" To="$cleanupPoint" Tag="&apos;CrossCountryNextPoint&apos;" LinkOpHandleMode="Error" />
            </Sequence>
            <Success />
          </Selector>
          <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;myCrossCountryHorse&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
          </GraphSearch>
          <StanceElement smartObject="$horse" stance="horse" allowAny="false">
            <TeleportAction Position="$startPos" />
          </StanceElement>
          <Sequence>
            <Concatenation OutString="$linkTagName" Pattern="&apos;track;$trackNumber;_difficulty;$difficultyNumber&apos;" />
            <GraphSearch Origin="$startPos" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
              <LinkTagFilter tag="$linkTagName" prune="true" negprune="unknown" Parent="" Child="$nextPoint" Data="" />
            </GraphSearch>
            <AddLink From="$this.id" To="$nextPoint" Tag="&apos;CrossCountryNextPoint&apos;" Data="" LinkOpHandleMode="Success" />
          </Sequence>
          <InstantCallback_empty EventName="&apos;OnFinished&apos;" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="crossCountryRiderInit" EventSet="endNotification">
      <Variables>
        <Variable name="cleanupPoint" comment="" />
        <Variable name="horse" comment="" />
        <Variable name="linkTagName" comment="" />
        <Variable name="nextPoint" comment="" />
        <Variable name="rideThroughEntryPoints" comment="" />
        <Variable name="difficultyNumber" comment="" />
        <Variable name="startPos" comment="" />
        <Variable name="trackNumber" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="cleanup if started mid-riding" breakpointFlags="0">
                <OutputBreakpoints />
                <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </LinkTagFilter>
                </GraphSearch>
                <RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </RemoveLink>
              </Sequence>
              <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Success>
            </Selector>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </TeleportAction>
            </StanceElement>
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Concatenation>
              <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </LinkTagFilter>
              </GraphSearch>
              <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </AddLink>
            </Sequence>
            <InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </InstantCallback_empty>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="contender_4_parkHorse" is_function="0">
    <Variables>
      <Variable name="dest" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;myCrossCountryHorse&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
          </GraphSearch>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;finishParking&apos;" prune="true" negprune="unknown" Parent="" Child="$dest" Data="" />
          </GraphSearch>
          <StanceElement smartObject="$horse" stance="horse" allowAny="false">
            <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="3.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$dest" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
          </StanceElement>
          <Callback_empty EventName="&apos;OnFinished&apos;" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer>
      <AnimationAction fragment="&apos;SaddleBondingCaress&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
      <Sequence>
        <AnimationAction fragment="&apos;SaddleBondingPat&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
        <Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
      </Sequence>
    </ForestContainer>
    <EditorData EventSet="endNotification">
      <Variables>
        <Variable name="dest" comment="" />
        <Variable name="horse" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Move>
            </StanceElement>
            <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Callback_empty>
          </Sequence>
        </Behavior>
      </Root>
      <Forest>
        <AnimationAction editorPosX="1060" editorPosY="270" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
        </AnimationAction>
        <Sequence editorPosX="1020" editorPosY="-110" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
          <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </AnimationAction>
          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Wait>
        </Sequence>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="contender_3_ride" is_function="0">
    <Variables>
      <Variable name="addParams" type="additionalMoveParams" values="destChangedThreshold(&apos;500ms&apos;)" isPersistent="0" form="single" />
      <Variable name="finalPoint" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="maxSpeedChance" type="_float" values="0.5" isPersistent="0" form="single" />
      <Variable name="nextPoint" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="playerClose" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="speed" type="_string" values="&apos;Dash&apos;" isPersistent="1" form="single" />
      <Variable name="successDistance" type="_float" values="10.0" isPersistent="0" form="single" />
      <Variable name="timeVariationKeepSpeed" type="_string" values="&apos;10s&apos;" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <EntityContext context="crime_disablePlayerHorseCollisionReaction" target="">
          <EntityContextPreset preset="crime_ignoreShooting" target="">
            <Sequence>
              <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                <LinkTagFilter tag="&apos;myCrossCountryHorse&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
              </GraphSearch>
              <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                <LinkTagFilter tag="&apos;CrossCountryNextPoint&apos;" prune="true" negprune="unknown" Parent="" Child="$nextPoint" Data="" />
              </GraphSearch>
              <StanceElement smartObject="$horse" stance="horse" allowAny="false" enabled="true">
                <Parallel successMode="Any" failureMode="Any">
                  <LoopUntil until="Fail" attemptCount="0">
                    <Sequence>
                      <Parallel successMode="Any" failureMode="Any">
                        <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="$successDistance" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$nextPoint" destinationSpecification2="" destinationSpecification3="" speed="$speed" additionalParams="$addParams" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
                        <Selector>
                          <Sequence>
                            <GraphSearch Origin="$nextPoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                              <AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
                            </GraphSearch>
                            <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                          </Sequence>
                          <EntityContext context="crossCountry_finishing" target="">
                            <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                          </EntityContext>
                        </Selector>
                      </Parallel>
                      <AtomicDecorator>
                        <Sequence>
                          <RemoveLink From="$this.id" To="$nextPoint" Tag="&apos;CrossCountryNextPoint&apos;" LinkOpHandleMode="Success" />
                          <GraphSearch Origin="$nextPoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                            <AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$nextPoint" />
                          </GraphSearch>
                          <AddLink From="$this.id" To="$nextPoint" Tag="&apos;CrossCountryNextPoint&apos;" Data="" LinkOpHandleMode="Success" />
                        </Sequence>
                      </AtomicDecorator>
                    </Sequence>
                  </LoopUntil>
                  <Loop count="-1">
                    <DistanceGate Origin="$this.id" ReferencePt="$__player" Low="50.000000" High="50.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
                      <Loop count="-1">
                        <Sequence>
                          <SendAIConceptSignal_crossCountryParticipationPing />
                          <Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                        </Sequence>
                      </Loop>
                    </DistanceGate>
                  </Loop>
                  <Loop count="-1">
                    <Sequence>
                      <Parallel successMode="Any" failureMode="Any">
                        <DistanceGate Origin="$this.id" ReferencePt="$__player" Low="10.000000" High="30.000000" Negation="false" OpenInMiddle="false" RunLogic="Halt">
                          <Expression expressions="$speed = &apos;Dash&apos;" />
                        </DistanceGate>
                        <Loop count="-1">
                          <Sequence>
                            <Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="$timeVariationKeepSpeed" skipInLOD="false" />
                            <AtomicDecorator>
                              <IfElseCondition failOnCondition="false" condition="$speed == &apos;Dash&apos;" saveVersion="2">
                                <Then canSkip="1">
                                  <Sequence>
                                    <Expression expressions="$speed = &apos;Sprint&apos;" />
                                    <ReinitVariable variable="$timeVariationKeepSpeed" />
                                  </Sequence>
                                </Then>
                                <Else canSkip="1">
                                  <Expression expressions="$speed = &apos;Dash&apos; &#10;$timeVariationKeepSpeed = &apos;20s&apos;" />
                                </Else>
                              </IfElseCondition>
                            </AtomicDecorator>
                          </Sequence>
                        </Loop>
                      </Parallel>
                      <Wait duration="&apos;8s&apos;" timeType="GameTime" doFail="false" variation="&apos;12s&apos;" skipInLOD="false" />
                    </Sequence>
                  </Loop>
                  <Loop count="-1">
                    <IfGate atomic="false" condition="$speed == &apos;Dash&apos;" RunLogic="Halt">
                      <Sequence>
                        <SuppressFailure>
                          <Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="&apos;NPC_POBIZI_KONE_KE_TRYSKU&apos;" subtitlesDown="false" nodeLabel="24813580" />
                        </SuppressFailure>
                        <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                      </Sequence>
                    </IfGate>
                  </Loop>
                </Parallel>
              </StanceElement>
              <Callback_empty EventName="&apos;OnFinished&apos;" />
            </Sequence>
          </EntityContextPreset>
        </EntityContext>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="endNotification">
      <Variables>
        <Variable name="addParams" comment="" />
        <Variable name="finalPoint" comment="" />
        <Variable name="horse" comment="" />
        <Variable name="maxSpeedChance" comment="" />
        <Variable name="nextPoint" comment="" />
        <Variable name="playerClose" comment="" />
        <Variable name="speed" comment="" />
        <Variable name="successDistance" comment="" />
        <Variable name="timeVariationKeepSpeed" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </LinkTagFilter>
                </GraphSearch>
                <GraphSearch hasInputBreakpoint="0" comment="find nextPoint" breakpointFlags="0">
                  <OutputBreakpoints />
                  <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </LinkTagFilter>
                </GraphSearch>
                <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <LoopUntil hasInputBreakpoint="0" comment="riding" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Move>
                          <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                                <AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </AnyLinkFilter>
                              </GraphSearch>
                              <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Wait>
                            </Sequence>
                            <EntityContext hasInputBreakpoint="0" comment="No next point, we are finishing" breakpointFlags="0">
                              <OutputBreakpoints />
                              <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Wait>
                            </EntityContext>
                          </Selector>
                        </Parallel>
                        <AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </RemoveLink>
                            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </AnyLinkFilter>
                            </GraphSearch>
                            <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </AddLink>
                          </Sequence>
                        </AtomicDecorator>
                      </Sequence>
                    </LoopUntil>
                    <Loop hasInputBreakpoint="0" comment="music pings if player close" breakpointFlags="0">
                      <OutputBreakpoints />
                      <DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <SendAIConceptSignal_crossCountryParticipationPing hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </SendAIConceptSignal_crossCountryParticipationPing>
                            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Wait>
                          </Sequence>
                        </Loop>
                      </DistanceGate>
                    </Loop>
                    <Loop hasInputBreakpoint="0" comment="speed control" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Expression>
                          </DistanceGate>
                          <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Wait>
                              <AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                                <IfElseCondition hasInputBreakpoint="0" comment="flip speed" breakpointFlags="0" saveVersion="2">
                                  <OutputBreakpoints />
                                  <Then>
                                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                      <OutputBreakpoints />
                                      <Expression hasInputBreakpoint="0" comment="slow down" breakpointFlags="0">
                                        <OutputBreakpoints />
                                      </Expression>
                                      <ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                        <OutputBreakpoints />
                                      </ReinitVariable>
                                    </Sequence>
                                  </Then>
                                  <Else>
                                    <Expression hasInputBreakpoint="0" comment="faster" breakpointFlags="0">
                                      <OutputBreakpoints />
                                    </Expression>
                                  </Else>
                                </IfElseCondition>
                              </AtomicDecorator>
                            </Sequence>
                          </Loop>
                        </Parallel>
                        <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Wait>
                      </Sequence>
                    </Loop>
                    <Loop hasInputBreakpoint="0" comment="Speeding bark" breakpointFlags="0">
                      <OutputBreakpoints />
                      <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Function_speech_schedulerMonolog>
                          </SuppressFailure>
                          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Wait>
                        </Sequence>
                      </IfGate>
                    </Loop>
                  </Parallel>
                </StanceElement>
                <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Callback_empty>
              </Sequence>
            </EntityContextPreset>
          </EntityContext>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="contender_2_waitOnStart" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Wait>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="contender_0_cleanup" is_function="0">
    <Variables>
      <Variable name="pos" type="vec3" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <StanceElement smartObject="" stance="standing" allowAny="false">
            <WaitAction />
          </StanceElement>
          <LoopUntil until="Success" attemptCount="0">
            <GetRandomPos StartPos="$this.id" PosExtentHor="10.000000" PosExtentVert="10.000000" MaxRange="15.000000" Precise="false" MaxIterantions="100" Target="$pos" navAgentType="Automatic" pathFindingParams="" />
          </LoopUntil>
          <TeleportAction Position="$pos" />
          <Callback_empty EventName="&apos;OnFinished&apos;" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="endNotification">
      <Variables>
        <Variable name="pos" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </WaitAction>
            </StanceElement>
            <LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <GetRandomPos hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </GetRandomPos>
            </LoopUntil>
            <TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </TeleportAction>
            <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Callback_empty>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="player_forceMount_onPlayerHorse" is_function="0">
    <Variables>
      <Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="data" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GetPlayerHorse HorseWuid="$horse" />
          <StanceElement smartObject="$horse" stance="horse" allowAny="false">
            <Sequence>
              <TeleportAction Position="$data" />
              <Callback_empty EventName="&apos;OnFinished&apos;" />
            </Sequence>
          </StanceElement>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="wuidData" EventSet="endNotification">
      <Variables>
        <Variable name="horse" comment="" />
        <Variable name="data" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-330" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GetPlayerHorse hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </GetPlayerHorse>
            <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <TeleportAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </TeleportAction>
                <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Callback_empty>
              </Sequence>
            </StanceElement>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="showRunner_01_start" is_function="0">
    <Variables>
      <Variable name="spot" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;showRunnerSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$spot" Data="" />
          </GraphSearch>
          <ExactMove directionType="AlignWithEntity" directionSpecification="$spot" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$spot" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
          <UnstanceAction unstance="konskeZavody_TournamentBlowhorn" locationObject="" slaveObject="" />
          <SuppressFailure>
            <Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="&apos;SHOWRUNNER_START_ZAVODU&apos;" subtitlesDown="false" nodeLabel="52417608" />
          </SuppressFailure>
          <Parallel successMode="All" failureMode="Any">
            <UrgencyDecorator Urgency="Slow">
              <WaitAction />
            </UrgencyDecorator>
            <Sequence>
              <Wait duration="&apos;1000ms&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
              <ExecuteSoundTrigger entity="$this.id" triggerName="&apos;f_ge_crosscountry_horn&apos;" stop="false" />
              <Callback_empty EventName="&apos;OnFinished&apos;" />
            </Sequence>
          </Parallel>
          <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer>
      <AnyDecorator preset="crime_keepStateAndItems" enabled="true" />
    </ForestContainer>
    <EditorData EventSet="endNotification">
      <Variables>
        <Variable name="spot" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </ExactMove>
            <UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </UnstanceAction>
            <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Function_speech_schedulerMonolog>
            </SuppressFailure>
            <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </WaitAction>
              </UrgencyDecorator>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Wait>
                <ExecuteSoundTrigger hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </ExecuteSoundTrigger>
                <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Callback_empty>
              </Sequence>
            </Parallel>
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
          </Sequence>
        </Behavior>
      </Root>
      <Forest>
        <AnyDecorator editorPosX="860" editorPosY="-80" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
        </AnyDecorator>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="showRunner_03_ancipatingEnd" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
          <Child canSkip="1">
            <SuppressFailure>
              <Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" metarole="&apos;SHOWRUNNER_KONEC_ZAVODU&apos;" subtitlesDown="false" nodeLabel="90088947" />
            </SuppressFailure>
          </Child>
          <OnSuccess canSkip="1">
            <Callback_empty EventName="&apos;OnFinished&apos;" />
          </OnSuccess>
        </FuseBox>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="endNotification">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Child>
              <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Function_speech_schedulerMonolog>
              </SuppressFailure>
            </Child>
            <OnSuccess>
              <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Callback_empty>
            </OnSuccess>
          </FuseBox>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="contender_5_returnHome" is_function="0">
    <Variables>
      <Variable name="dest" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;myCrossCountryHorse&apos;" prune="true" negprune="unknown" Parent="" Child="$horse" Data="" />
          </GraphSearch>
          <GraphSearch Origin="$horse" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;garagePlace&apos;" prune="true" negprune="unknown" Parent="" Child="$dest" Data="" />
          </GraphSearch>
          <StanceElement smartObject="$horse" stance="horse" allowAny="false">
            <Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="3.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$dest" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
          </StanceElement>
          <Callback_empty EventName="&apos;OnFinished&apos;" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="dest" comment="" />
        <Variable name="horse" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Move>
            </StanceElement>
            <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Callback_empty>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="notifyNearbySpectators" is_function="1">
    <Variables>
      <Variable name="foundNPC" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="foundNPCs" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="maxSpectatorsReached" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="nearbySpectators" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="spectatorIndex" type="_int" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="reactionType" type="enum:jizdniLukostrelba_spectatorsReactionType" values="$enum:jizdniLukostrelba_spectatorsReactionType.normalHit" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <CircularSpatialQuery Radius="30.000000" Center="$__player" ToFill="$foundNPCs" Precision="Exact" Filter="LivingHumanNPCsPlayerExcluded" />
          <ForEach startIndex="0" step="1" array="$foundNPCs" iterator="" value="$foundNPC" break="">
            <EntityContextCheck context="jizdniLukostrelba_spectator" target="$foundNPC" saveVersion="2">
              <Then canSkip="1">
                <PushToArray array="$nearbySpectators" value="$foundNPC" direction="Back" />
              </Then>
              <Else canSkip="1">
                <Success />
              </Else>
            </EntityContextCheck>
          </ForEach>
          <IfCondition failOnCondition="false" condition="#nearbySpectators &gt; 0">
            <Sequence>
              <ExecuteLua code="local playerPos = player:GetPos() &#10; &#10;local function sortingFunction(a, b) &#10;  local spectatorPosA = XGenAIModule.GetEntityByWUID(a):GetPos() &#10;  local spectatorPosB = XGenAIModule.GetEntityByWUID(b):GetPos() &#10;  return VectorUtils.DistanceSquared2D(playerPos, spectatorPosA) &lt; VectorUtils.DistanceSquared2D(playerPos, spectatorPosB) &#10;end &#10; &#10;-- lua&apos;s table index starts from 1, so shift the array to be sure that table.sort is not missing anything  &#10;table.insert(data.nearbySpectators, 0, nil) &#10;table.sort(data.nearbySpectators, sortingFunction) &#10;table.remove(data.nearbySpectators, 0)" />
              <ForEach startIndex="0" step="1" array="$nearbySpectators" iterator="$spectatorIndex" value="$foundNPC" break="$maxSpectatorsReached">
                <IfElseCondition failOnCondition="false" condition="$spectatorIndex &lt; 2" saveVersion="2">
                  <Then canSkip="1">
                    <InstantSendMessageToNPC target="$foundNPC" type="&apos;horseArcheryContest:reactToPlayer&apos;" values="reactionType($reactionType)" />
                  </Then>
                  <Else canSkip="1">
                    <Expression expressions="$maxSpectatorsReached = true" />
                  </Else>
                </IfElseCondition>
              </ForEach>
            </Sequence>
          </IfCondition>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="foundNPC" comment="" />
        <Variable name="foundNPCs" comment="" />
        <Variable name="maxSpectatorsReached" comment="" />
        <Variable name="nearbySpectators" comment="" />
        <Variable name="spectatorIndex" comment="" />
        <Variable name="reactionType" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <CircularSpatialQuery hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </CircularSpatialQuery>
            <ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </PushToArray>
                </Then>
                <Else>
                  <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Success>
                </Else>
              </EntityContextCheck>
            </ForEach>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </ExecuteLua>
                <ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </InstantSendMessageToNPC>
                    </Then>
                    <Else>
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                    </Else>
                  </IfElseCondition>
                </ForEach>
              </Sequence>
            </IfCondition>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="horseWait" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <WaitAction />
          <Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </WaitAction>
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>