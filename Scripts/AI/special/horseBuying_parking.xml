<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="onUpdate" is_function="0">
    <Variables>
      <Variable name="availableHorses" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="availableHorses_val" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="break" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="markedHorse" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="qso" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="availableHorses" comment="" />
        <Variable name="availableHorses_val" comment="" />
        <Variable name="break" comment="" />
        <Variable name="markedHorse" comment="" />
        <Variable name="qso" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Wait hasInputBreakpoint="0" comment="dont use this garbage tree" breakpointFlags="0">
            <OutputBreakpoints />
          </Wait>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="onEnter" is_function="0">
    <Variables>
      <Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="markedHorse" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="playerHorse" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="qso" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Success />
      </Behavior>
    </Root>
    <ForestContainer>
      <AtomicDecorator>
        <EntityContextCheck context="switch_isHorse" target="$__bodyInfo.id" saveVersion="2">
          <Then canSkip="1">
            <Sequence>
              <Expression expressions="$horse = $__bodyInfo.id" />
              <GetPlayerHorse HorseWuid="$playerHorse" />
              <IfElseCondition failOnCondition="false" condition="$horse ~= $playerHorse" saveVersion="2">
                <Then canSkip="1">
                  <Sequence>
                    <IsDeadCheck SoulWUID="$horse" FailSubtMissing="false" saveVersion="2">
                      <Then canSkip="1">
                        <Success />
                      </Then>
                      <Else canSkip="1">
                        <Sequence>
                          <Selector>
                            <GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                              <LinkTagFilter tag="&apos;QSO&apos;" prune="true" negprune="unknown" Parent="" Child="$qso" Data="" />
                            </GraphSearch>
                            <ErrorNode Message="&apos;[$this.name;] QSO not linked to horseBuying_parking&apos;" />
                          </Selector>
                          <Selector>
                            <GraphSearch Origin="$qso" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                              <LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;horseParking_marked_horse&apos;" prune="true" negprune="unknown" Parent="" Child="$markedHorse" Data="" />
                            </GraphSearch>
                            <Sequence>
                              <AddLink From="$qso" To="$horse" Tag="&apos;asset&apos;" Data="&apos;horseParking_marked_horse&apos;" LinkOpHandleMode="Success" />
                              <AddLink From="$this.id" To="$horse" Tag="&apos;horseParking_marked_horse&apos;" Data="" LinkOpHandleMode="Success" />
                              <Success />
                            </Sequence>
                          </Selector>
                          <AddLink From="$this.id" To="$horse" Tag="&apos;horseParking_horse&apos;" Data="" LinkOpHandleMode="Success" />
                        </Sequence>
                      </Else>
                    </IsDeadCheck>
                  </Sequence>
                </Then>
                <Else canSkip="1">
                  <Success />
                </Else>
              </IfElseCondition>
            </Sequence>
          </Then>
          <Else canSkip="1">
            <Success />
          </Else>
        </EntityContextCheck>
      </AtomicDecorator>
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="horse" comment="" />
        <Variable name="markedHorse" comment="" />
        <Variable name="playerHorse" comment="" />
        <Variable name="qso" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Success hasInputBreakpoint="0" comment="OLD" breakpointFlags="0">
            <OutputBreakpoints />
          </Success>
        </Behavior>
      </Root>
      <Forest>
        <AtomicDecorator editorPosX="490" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
          <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Then>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
                <GetPlayerHorse hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </GetPlayerHorse>
                <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                  <OutputBreakpoints />
                  <Then>
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                        <OutputBreakpoints />
                        <Then>
                          <Success hasInputBreakpoint="0" comment="Dead horse, don&apos;t care" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Success>
                        </Then>
                        <Else>
                          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                                <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </LinkTagFilter>
                              </GraphSearch>
                              <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </ErrorNode>
                            </Selector>
                            <Selector hasInputBreakpoint="0" comment="Only mark a horse if there&apos;s none marked yet" breakpointFlags="0">
                              <OutputBreakpoints />
                              <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                                <LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </LinkDataFilter>
                              </GraphSearch>
                              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                                <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </AddLink>
                                <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </AddLink>
                                <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </Success>
                              </Sequence>
                            </Selector>
                            <AddLink hasInputBreakpoint="0" comment="Link every viable horse that enters this area" breakpointFlags="0">
                              <OutputBreakpoints />
                            </AddLink>
                          </Sequence>
                        </Else>
                      </IsDeadCheck>
                    </Sequence>
                  </Then>
                  <Else>
                    <Success hasInputBreakpoint="0" comment="Player&apos;s horse, don&apos;t care" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Success>
                  </Else>
                </IfElseCondition>
              </Sequence>
            </Then>
            <Else>
              <Success hasInputBreakpoint="0" comment="Not a horse, don&apos;t care" breakpointFlags="0">
                <OutputBreakpoints />
              </Success>
            </Else>
          </EntityContextCheck>
        </AtomicDecorator>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="onExit" is_function="0">
    <Variables>
      <Variable name="horse" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="markedHorse" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="playerHorse" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="qso" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Success />
      </Behavior>
    </Root>
    <ForestContainer>
      <AtomicDecorator>
        <EntityContextCheck context="switch_isHorse" target="$__bodyInfo.id" saveVersion="2">
          <Then canSkip="1">
            <Sequence>
              <Expression expressions="$horse = $__bodyInfo.id" />
              <GetPlayerHorse HorseWuid="$playerHorse" />
              <IfElseCondition failOnCondition="false" condition="$horse ~= $playerHorse" saveVersion="2">
                <Then canSkip="1">
                  <Sequence>
                    <IsDeadCheck SoulWUID="$horse" FailSubtMissing="false" saveVersion="2">
                      <Then canSkip="1">
                        <Success />
                      </Then>
                      <Else canSkip="1">
                        <Sequence>
                          <Selector>
                            <GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                              <LinkTagFilter tag="&apos;QSO&apos;" prune="true" negprune="unknown" Parent="" Child="$qso" Data="" />
                            </GraphSearch>
                            <ErrorNode Message="&apos;[$this.name;] QSO not linked to horseBuying_parking&apos;" />
                          </Selector>
                          <Sequence>
                            <SuppressFailure>
                              <GraphSearch Origin="$qso" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                                <LinkDataFilter tag="&apos;asset&apos;" condition="$__link_asset == &apos;horseParking_marked_horse&apos;" prune="true" negprune="unknown" Parent="" Child="$markedHorse" Data="" />
                              </GraphSearch>
                            </SuppressFailure>
                            <IfElseCondition failOnCondition="false" condition="$horse == $markedHorse" saveVersion="2">
                              <Then canSkip="1">
                                <Sequence>
                                  <RemoveLink From="$qso" To="$horse" Tag="&apos;asset&apos;" LinkOpHandleMode="Error" />
                                  <RemoveLink From="$this.id" To="$horse" Tag="&apos;horseParking_marked_horse&apos;" LinkOpHandleMode="Error" />
                                  <Success />
                                </Sequence>
                              </Then>
                              <Else canSkip="1">
                                <Success />
                              </Else>
                            </IfElseCondition>
                            <RemoveLink From="$this.id" To="$horse" Tag="&apos;horseParking_horse&apos;" LinkOpHandleMode="Error" />
                          </Sequence>
                        </Sequence>
                      </Else>
                    </IsDeadCheck>
                  </Sequence>
                </Then>
                <Else canSkip="1">
                  <Success />
                </Else>
              </IfElseCondition>
            </Sequence>
          </Then>
          <Else canSkip="1">
            <Success />
          </Else>
        </EntityContextCheck>
      </AtomicDecorator>
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="horse" comment="" />
        <Variable name="markedHorse" comment="" />
        <Variable name="playerHorse" comment="" />
        <Variable name="qso" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="40" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Success hasInputBreakpoint="0" comment="OLD" breakpointFlags="0">
            <OutputBreakpoints />
          </Success>
        </Behavior>
      </Root>
      <Forest>
        <AtomicDecorator editorPosX="750" editorPosY="-10" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
          <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Then>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
                <GetPlayerHorse hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </GetPlayerHorse>
                <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                  <OutputBreakpoints />
                  <Then>
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                        <OutputBreakpoints />
                        <Then>
                          <Success hasInputBreakpoint="0" comment="Dead horse, don&apos;t care" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Success>
                        </Then>
                        <Else>
                          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                                <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </LinkTagFilter>
                              </GraphSearch>
                              <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </ErrorNode>
                            </Selector>
                            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                                <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                  <LinkDataFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                    <OutputBreakpoints />
                                  </LinkDataFilter>
                                </GraphSearch>
                              </SuppressFailure>
                              <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                                <OutputBreakpoints />
                                <Then>
                                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                    <OutputBreakpoints />
                                    <RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                      <OutputBreakpoints />
                                    </RemoveLink>
                                    <RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                      <OutputBreakpoints />
                                    </RemoveLink>
                                    <Success hasInputBreakpoint="0" comment="OLD" breakpointFlags="0">
                                      <OutputBreakpoints />
                                    </Success>
                                  </Sequence>
                                </Then>
                                <Else>
                                  <Success hasInputBreakpoint="0" comment="This horse isn&apos;t marked, don&apos;t care" breakpointFlags="0">
                                    <OutputBreakpoints />
                                  </Success>
                                </Else>
                              </IfElseCondition>
                              <RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </RemoveLink>
                            </Sequence>
                          </Sequence>
                        </Else>
                      </IsDeadCheck>
                    </Sequence>
                  </Then>
                  <Else>
                    <Success hasInputBreakpoint="0" comment="Player&apos;s horse, don&apos;t care" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Success>
                  </Else>
                </IfElseCondition>
              </Sequence>
            </Then>
            <Else>
              <Success hasInputBreakpoint="0" comment="Not a horse, don&apos;t care" breakpointFlags="0">
                <OutputBreakpoints />
              </Success>
            </Else>
          </EntityContextCheck>
        </AtomicDecorator>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>