<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="genericLooting_killedNPC_looter" is_function="0">
    <Variables>
      <Variable name="aborted" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="corpse" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="corpseBehaviorHolders" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="referenceDistance" type="_float" values="10.0" isPersistent="0" form="single" />
      <Variable name="referencePosition" type="vec3" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GetBehaviorHolders area="$__object.id" behaviors="&apos;genericLooting_killedNPC_corpse&apos;" targetVar="$corpseBehaviorHolders" />
          <Expression expressions="$corpse = $corpseBehaviorHolders[0]" />
          <GetSpatialInfo In="$corpse" Out="$referencePosition" What="Position" />
          <While doFail="false" propagateChildFail="false" condition="$referenceDistance &gt; 0.03">
            <Sequence>
              <Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="" />
              <MeasureDistance position1="$corpse" position2="$referencePosition" mode="ThreeDimensions" result="$referenceDistance" />
              <GetSpatialInfo In="$corpse" Out="$referencePosition" What="Position" />
            </Sequence>
          </While>
          <Parallel successMode="Any" failureMode="Any">
            <Sequence>
              <UnstanceAction unstance="LootAligned" locationObject="$corpse" slaveObject="" />
              <Wait duration="&apos;30s&apos;" timeType="GameTime" doFail="false" variation="" />
            </Sequence>
            <Sequence>
              <While doFail="false" propagateChildFail="false" condition="$referenceDistance &lt; 0.2">
                <Sequence>
                  <Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="" />
                  <MeasureDistance position1="$corpse" position2="$referencePosition" mode="ThreeDimensions" result="$referenceDistance" />
                </Sequence>
              </While>
              <Expression expressions="$aborted = true" />
            </Sequence>
            <Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;genericLooting_corpseAborting&apos;">
              <Expression expressions="$aborted = true" />
            </Semaphore>
          </Parallel>
          <IfCondition failOnCondition="false" condition="$aborted">
            <UrgencyDecorator Urgency="Slow">
              <WaitAction />
            </UrgencyDecorator>
          </IfCondition>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="aborted" comment="" />
        <Variable name="corpse" comment="" />
        <Variable name="corpseBehaviorHolders" comment="" />
        <Variable name="referenceDistance" comment="" />
        <Variable name="referencePosition" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GetBehaviorHolders hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </GetBehaviorHolders>
            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
            <GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </GetSpatialInfo>
            <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Wait>
                <MeasureDistance hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </MeasureDistance>
                <GetSpatialInfo hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </GetSpatialInfo>
              </Sequence>
            </While>
            <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </UnstanceAction>
                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Wait>
              </Sequence>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Wait>
                    <MeasureDistance hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </MeasureDistance>
                  </Sequence>
                </While>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Sequence>
              <Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </Semaphore>
            </Parallel>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </WaitAction>
              </UrgencyDecorator>
            </IfCondition>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>