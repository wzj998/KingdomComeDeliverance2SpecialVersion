<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="lieIdle" is_function="0">
    <Variables>
      <Variable name="type" type="_string" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="string" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <EntityContext context="combat_disabledAsTarget" target="">
          <EntityContext context="crime_ignoreCorpses" target="">
            <EntityContextPreset preset="switch_unresponsive" target="">
              <Sequence>
                <GetType WUID="$this.id" OutString="$type" ShowTrueIdentity="false" TreatPlayerAsNPC="true" />
                <IfElseCondition failOnCondition="false" condition="$type == &apos;NPC&apos;" saveVersion="2">
                  <Then canSkip="1">
                    <Parallel successMode="Any" failureMode="Any">
                      <Sequence>
                        <UnstanceAction unstance="Quest_UnderHorseIdle" locationObject="$__object.id" slaveObject="" />
                        <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
                      </Sequence>
                      <Loop count="-1">
                        <Sequence>
                          <SuppressFailure>
                            <Function_speech_schedulerMonolog alias="$string" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="" subtitlesDown="false" nodeLabel="47629681" />
                          </SuppressFailure>
                          <Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
                        </Sequence>
                      </Loop>
                    </Parallel>
                  </Then>
                  <Else canSkip="1">
                    <UnstanceAction unstance="Quest_LieDownHorseLoop" locationObject="$__object.id" slaveObject="" />
                  </Else>
                </IfElseCondition>
                <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
              </Sequence>
            </EntityContextPreset>
          </EntityContext>
        </EntityContext>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="string" EventSet="">
      <Variables>
        <Variable name="type" comment="" />
        <Variable name="string" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <GetType hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </GetType>
                  <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </UnstanceAction>
                          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Wait>
                        </Sequence>
                        <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Function_speech_schedulerMonolog>
                            </SuppressFailure>
                            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Wait>
                          </Sequence>
                        </Loop>
                      </Parallel>
                    </Then>
                    <Else>
                      <UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </UnstanceAction>
                    </Else>
                  </IfElseCondition>
                  <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Wait>
                </Sequence>
              </EntityContextPreset>
            </EntityContext>
          </EntityContext>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>