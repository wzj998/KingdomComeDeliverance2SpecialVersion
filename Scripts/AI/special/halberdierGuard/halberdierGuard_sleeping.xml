<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="special_halberdierGuard_halberdierGuard_sleeping" is_function="0">
    <Variables>
      <Variable name="hand_left" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="hand_right" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="onPosition" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="sleeping" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="wakeUpArea" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;wakeUpArea&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
          <AnyLinkFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="$wakeUpArea" />
        </GraphSearch>
      </OnInit>
      <Behavior canSkip="1">
        <HandContentElement hand="Right" item="$hand_right" allowAny="false" decisionLabel="guard_halberd" useDecision="true" saveVersion="2">
          <Search canSkip="1">
            <Sequence>
              <GetWeaponsFromWeaponSet WeaponSet="Oversized" LeftHand="$hand_left" RightHand="$hand_right" UseTorchWhenAppropriate="false" />
              <IfCondition failOnCondition="false" condition="$hand_right == $__null">
                <ErrorNode Message="&apos;The NPC $this.name trying to use halberdierGuard_sleeping prefab $__object.name doesnt have oversized weapon equipped!&apos;" />
              </IfCondition>
            </Sequence>
          </Search>
          <Exec canSkip="1">
            <Decision decisionLabel="halberdierGuard_sleeping_onPosition" variable="$onPosition" saveVersion="2">
              <Search canSkip="1">
                <Success />
              </Search>
              <Exec canSkip="1">
                <FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
                  <Child canSkip="1">
                    <Sequence>
                      <IfCondition failOnCondition="false" condition="!$onPosition">
                        <Sequence>
                          <ExactMove directionType="AlignWithEntity" directionSpecification="$__object.id" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$__object.id" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
                          <Expression expressions="$onPosition = true" />
                        </Sequence>
                      </IfCondition>
                      <IfElseCondition failOnCondition="false" condition="$wakeUpArea ~= $__null" saveVersion="2">
                        <Then canSkip="1">
                          <Decision decisionLabel="halberdierGuard_sleeping" variable="$sleeping" saveVersion="2">
                            <Search canSkip="1">
                              <Success />
                            </Search>
                            <Exec canSkip="1">
                              <Sequence>
                                <IsInsideArea Origin="$__player" Area="$wakeUpArea" FailSubtMissing="false" saveVersion="2">
                                  <Then canSkip="1">
                                    <Sequence>
                                      <UnstanceAction unstance="test_guard" locationObject="" slaveObject="" />
                                      <Expression expressions="$sleeping = false" />
                                    </Sequence>
                                  </Then>
                                  <Else canSkip="1">
                                    <Sequence>
                                      <UnstanceAction unstance="halberdierGuard_sleeping" locationObject="" slaveObject="" />
                                      <Expression expressions="$sleeping = true" />
                                    </Sequence>
                                  </Else>
                                </IsInsideArea>
                                <Parallel successMode="Any" failureMode="Any">
                                  <ContinuousSwitch>
                                    <IfCondition failOnCondition="false" condition="$sleeping">
                                      <AreaPresenceGate aiObjects="$__player" area="$wakeUpArea" amount="AtLeastOne" presence="Present" RunLogic="KeepRunning">
                                        <Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;halberdierGuard_endBehavior_semaphore&apos;">
                                          <Sequence>
                                            <UnstanceElement unstance="halberdierGuard_sleeping" locationObject="" slaveObject="">
                                              <AnimationAction fragment="&apos;PolearmFallToSleepOut&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" />
                                            </UnstanceElement>
                                            <Expression expressions="$sleeping = false" />
                                          </Sequence>
                                        </Semaphore>
                                      </AreaPresenceGate>
                                    </IfCondition>
                                    <IfCondition failOnCondition="false" condition="true">
                                      <AreaPresenceGate aiObjects="$__player" area="$wakeUpArea" amount="All" presence="NotThere" RunLogic="KeepRunning">
                                        <Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;halberdierGuard_endBehavior_semaphore&apos;">
                                          <Sequence>
                                            <UnstanceElement unstance="test_guard" locationObject="" slaveObject="">
                                              <AnimationAction fragment="&apos;PolearmFallToSleepIn&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" />
                                            </UnstanceElement>
                                            <Expression expressions="$sleeping = true" />
                                          </Sequence>
                                        </Semaphore>
                                      </AreaPresenceGate>
                                    </IfCondition>
                                  </ContinuousSwitch>
                                  <Sequence>
                                    <Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                                    <Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;halberdierGuard_endBehavior_semaphore&apos;">
                                      <Success />
                                    </Semaphore>
                                  </Sequence>
                                </Parallel>
                              </Sequence>
                            </Exec>
                          </Decision>
                        </Then>
                        <Else canSkip="1">
                          <Sequence>
                            <UnstanceAction unstance="halberdierGuard_sleeping" locationObject="" slaveObject="" />
                            <Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                          </Sequence>
                        </Else>
                      </IfElseCondition>
                    </Sequence>
                  </Child>
                  <OnFail canSkip="1">
                    <Expression expressions="$onPosition = false" />
                  </OnFail>
                </FuseBox>
              </Exec>
            </Decision>
          </Exec>
        </HandContentElement>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="hand_left" comment="" />
        <Variable name="hand_right" comment="" />
        <Variable name="onPosition" comment="" />
        <Variable name="sleeping" comment="" />
        <Variable name="wakeUpArea" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <AnyLinkFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </AnyLinkFilter>
          </GraphSearch>
        </OnInit>
        <Behavior>
          <HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Search>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </GetWeaponsFromWeaponSet>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </ErrorNode>
                </IfCondition>
              </Sequence>
            </Search>
            <Exec>
              <Decision hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Search>
                  <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Success>
                </Search>
                <Exec>
                  <FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Child>
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </ExactMove>
                            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Expression>
                          </Sequence>
                        </IfCondition>
                        <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                          <OutputBreakpoints />
                          <Then>
                            <Decision hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                              <OutputBreakpoints />
                              <Search>
                                <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                </Success>
                              </Search>
                              <Exec>
                                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                  <OutputBreakpoints />
                                  <IsInsideArea hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                                    <OutputBreakpoints />
                                    <Then>
                                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                        <OutputBreakpoints />
                                        <UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                          <OutputBreakpoints />
                                          <OutputBreakpoints />
                                        </UnstanceAction>
                                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                          <OutputBreakpoints />
                                        </Expression>
                                      </Sequence>
                                    </Then>
                                    <Else>
                                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                        <OutputBreakpoints />
                                        <UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                          <OutputBreakpoints />
                                          <OutputBreakpoints />
                                        </UnstanceAction>
                                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                          <OutputBreakpoints />
                                        </Expression>
                                      </Sequence>
                                    </Else>
                                  </IsInsideArea>
                                  <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                    <OutputBreakpoints />
                                    <ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                      <OutputBreakpoints />
                                      <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                        <OutputBreakpoints />
                                        <AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                          <OutputBreakpoints />
                                          <Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                            <OutputBreakpoints />
                                            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                              <OutputBreakpoints />
                                              <UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                                <OutputBreakpoints />
                                                <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                                  <OutputBreakpoints />
                                                  <OutputBreakpoints />
                                                </AnimationAction>
                                              </UnstanceElement>
                                              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                                <OutputBreakpoints />
                                              </Expression>
                                            </Sequence>
                                          </Semaphore>
                                        </AreaPresenceGate>
                                      </IfCondition>
                                      <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                        <OutputBreakpoints />
                                        <AreaPresenceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                          <OutputBreakpoints />
                                          <Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                            <OutputBreakpoints />
                                            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                              <OutputBreakpoints />
                                              <UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                                <OutputBreakpoints />
                                                <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                                  <OutputBreakpoints />
                                                  <OutputBreakpoints />
                                                </AnimationAction>
                                              </UnstanceElement>
                                              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                                <OutputBreakpoints />
                                              </Expression>
                                            </Sequence>
                                          </Semaphore>
                                        </AreaPresenceGate>
                                      </IfCondition>
                                    </ContinuousSwitch>
                                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                      <OutputBreakpoints />
                                      <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                        <OutputBreakpoints />
                                      </Wait>
                                      <Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                        <OutputBreakpoints />
                                        <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                          <OutputBreakpoints />
                                        </Success>
                                      </Semaphore>
                                    </Sequence>
                                  </Parallel>
                                </Sequence>
                              </Exec>
                            </Decision>
                          </Then>
                          <Else>
                            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                                <OutputBreakpoints />
                              </UnstanceAction>
                              <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Wait>
                            </Sequence>
                          </Else>
                        </IfElseCondition>
                      </Sequence>
                    </Child>
                    <OnFail>
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                    </OnFail>
                  </FuseBox>
                </Exec>
              </Decision>
            </Exec>
          </HandContentElement>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>