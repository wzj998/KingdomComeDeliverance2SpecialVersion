<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="special_hostageSituation_maleHoldsLooseFemale_hostage" is_function="0">
		<Variables>
			<Variable name="finished" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
			<Variable name="unresponsive" type="_bool" values="true" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="state" type="enum:hostageSituation_maleHoldsLooseFemale" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<SetExternalLock LockManagerType="Local" Locked="true" LockName="&apos;hostageSituation_kidnapper_aborting&apos;" />
					<SetExternalLock LockManagerType="Local" Locked="true" LockName="&apos;hostageSituation_hostage_aborting&apos;" />
					<SetExternalLock LockManagerType="Local" Locked="false" LockName="&apos;hostageSituation_overrideHitReactions&apos;" />
					<SetExternalLock LockManagerType="Local" Locked="false" LockName="&apos;hostageSituation_stateChangeQueued&apos;" />
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
						<Child canSkip="1">
							<EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
								<UrgencyDecorator Urgency="Slow">
									<Parallel successMode="Any" failureMode="Any">
										<ContinuousSwitch>
											<IfCondition failOnCondition="false" condition="$state == $enum:hostageSituation_maleHoldsLooseFemale.HoldHostage">
												<Selector>
													<Sequence>
														<JoinedUnstanceAction lockContext="$__object.id" lockName="&apos;HoldHostage&apos;" lockCount="2" timeout="&apos;10s&apos;" ignoreOthersLeaving="true" unstance="hostageSituation_maleHoldsFemale_hostage_holdHostage_tense" locationObject="$__object.id" slaveObject="" />
														<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;hostageSituation_kidnapper_aborting&apos;" RunLogic="KeepRunning">
															<Fail />
														</ExternalLock>
													</Sequence>
													<SetExternalLock LockManagerType="Local" Locked="false" LockName="&apos;hostageSituation_hostage_aborting&apos;" />
												</Selector>
											</IfCondition>
											<IfCondition failOnCondition="false" condition="$state == $enum:hostageSituation_maleHoldsLooseFemale.KidnapperReleasesHostage_BothToIdle | &#10;$state == $enum:hostageSituation_maleHoldsLooseFemale.KidnapperReleasesHostage_KidnapperToCombat | &#10;$state == $enum:hostageSituation_maleHoldsLooseFemale.KidnapperGetsHit_KidnapperToCombat_HostageToIdle | &#10;$state == $enum:hostageSituation_maleHoldsLooseFemale.KidnapperGetsHit_KidnapperDies_HostageToIdle">
												<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
													<Child canSkip="1">
														<Sequence>
															<SetExternalLock LockManagerType="Local" Locked="true" LockName="&apos;hostageSituation_overrideHitReactions&apos;" />
															<Expression expressions="$unresponsive = false" />
															<UrgencyDecorator Urgency="Instant">
																<UnstanceElement unstance="hostageSituation_maleHoldsFemale_hostage_holdHostage_tense" locationObject="$__object.id" slaveObject="" enabled="true">
																	<AnimationAction fragment="&apos;Quest_HostageSituation_HostageGoesToIdle&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
																</UnstanceElement>
															</UrgencyDecorator>
														</Sequence>
													</Child>
													<OnSuccess canSkip="1">
														<IfCondition failOnCondition="false" condition="$state == $enum:hostageSituation_maleHoldsLooseFemale.KidnapperReleasesHostage_BothToIdle | &#10;$state == $enum:hostageSituation_maleHoldsLooseFemale.KidnapperReleasesHostage_KidnapperToCombat | &#10;$state == $enum:hostageSituation_maleHoldsLooseFemale.KidnapperGetsHit_KidnapperToCombat_HostageToIdle | &#10;$state == $enum:hostageSituation_maleHoldsLooseFemale.KidnapperGetsHit_KidnapperDies_HostageToIdle">
															<Sequence>
																<Expression expressions="$finished = true" />
																<Callback_empty EventName="&apos;OnHostageReleased&apos;" />
															</Sequence>
														</IfCondition>
													</OnSuccess>
												</FuseBox>
											</IfCondition>
											<IfCondition failOnCondition="false" condition="$state == $enum:hostageSituation_maleHoldsLooseFemale.KidnapperKillsHostage_KidnapperToIdle | &#10;$state == $enum:hostageSituation_maleHoldsLooseFemale.KidnapperKillsHostage_KidnapperToCombat">
												<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
													<Child canSkip="1">
														<Parallel successMode="Any" failureMode="Any">
															<EntityContext context="deadBody_allowActorAnimsForDeadNPC" target="">
																<UnstanceElement unstance="hostageSituation_maleHoldsFemale_hostage_holdHostage_tense" locationObject="$__object.id" slaveObject="" enabled="true">
																	<JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="&apos;KidnapperKillsHostage&apos;" lockCount="2" timeout="&apos;500ms&apos;" ignoreOthersLeaving="true" fragment="&apos;Quest_HostageSituation_KidnapperKillsHostage_KidnapperToCombat&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;hostage&apos;" allowTorchForPlayer="false" />
																</UnstanceElement>
															</EntityContext>
															<Sequence>
																<Parallel successMode="Any" failureMode="Any">
																	<Wait duration="&apos;250ms&apos;" timeType="GameTime" doFail="false" variation="" />
																	<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;hostageSituation_kidnapper_aborting&apos;" RunLogic="KeepRunning">
																		<Fail />
																	</ExternalLock>
																</Parallel>
																<SetExternalLock LockManagerType="Local" Locked="true" LockName="&apos;hostageSituation_overrideHitReactions&apos;" />
																<SuppressFailure>
																	<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;hostageSituation_kidnapper_overridingHitReactions&apos;">
																		<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;hostageSituation_hostage_overridingHitReactions&apos;">
																			<AtomicDecorator>
																				<InstantExternalLock LockManagerType="Local" SemaphoreName="&apos;hostageSituation_stateChangeQueued&apos;" RunLogic="KeepRunning">
																					<Sequence>
																						<Expression expressions="$finished = true" />
																						<ExecuteLua code="entity.actor:AddBlood(1.0, &apos;torso&apos;) &#10;entity.soul:DealDamage(999, 999, entity.this.id, true)" />
																					</Sequence>
																				</InstantExternalLock>
																			</AtomicDecorator>
																		</Semaphore>
																	</Semaphore>
																</SuppressFailure>
																<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
															</Sequence>
														</Parallel>
													</Child>
													<OnSuccess canSkip="1">
														<IfElseCondition failOnCondition="false" condition="$finished" saveVersion="2">
															<Then canSkip="1">
																<Callback_empty EventName="&apos;OnHostageKilledByKidnapper&apos;" />
															</Then>
															<Else canSkip="1">
																<IfCondition failOnCondition="false" condition="$state == $enum:hostageSituation_maleHoldsLooseFemale.KidnapperKillsHostage_KidnapperToIdle | &#10;$state == $enum:hostageSituation_maleHoldsLooseFemale.KidnapperKillsHostage_KidnapperToCombat">
																	<Sequence>
																		<IsDeadCheck SoulWUID="" FailSubtMissing="false" saveVersion="2">
																			<Else canSkip="1">
																				<ActorStateCheck Who="" State="hit" FailWithSubtreeMissing="false" saveVersion="2">
																					<Else canSkip="1">
																						<UrgencyDecorator Urgency="Instant">
																							<WaitAction />
																						</UrgencyDecorator>
																					</Else>
																				</ActorStateCheck>
																			</Else>
																		</IsDeadCheck>
																		<SetExternalLock LockManagerType="Local" Locked="false" LockName="&apos;hostageSituation_hostage_aborting&apos;" />
																	</Sequence>
																</IfCondition>
															</Else>
														</IfElseCondition>
													</OnSuccess>
												</FuseBox>
											</IfCondition>
											<IfCondition failOnCondition="false" condition="$state == $enum:hostageSituation_maleHoldsLooseFemale.HostageGetsHit_HostageToIdle_KidnapperToCombat">
												<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
													<Child canSkip="1">
														<Sequence>
															<Expression expressions="$unresponsive = false" />
															<UrgencyDecorator Urgency="Instant">
																<UnstanceElement unstance="hostageSituation_maleHoldsFemale_hostage_holdHostage_tense" locationObject="$__object.id" slaveObject="" enabled="true">
																	<AnimationAction fragment="&apos;Quest_HostageSituation_HostageGetsHit_HostageToIdle&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
																</UnstanceElement>
															</UrgencyDecorator>
														</Sequence>
													</Child>
													<OnSuccess canSkip="1">
														<Sequence>
															<Expression expressions="$finished = true" />
															<Callback_empty EventName="&apos;OnHostageReleased&apos;" />
														</Sequence>
													</OnSuccess>
												</FuseBox>
											</IfCondition>
											<IfCondition failOnCondition="false" condition="$state == $enum:hostageSituation_maleHoldsLooseFemale.HostageGetsHit_HostageDies_KidnapperToCombat">
												<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
													<Child canSkip="1">
														<Sequence>
															<Expression expressions="$unresponsive = true" />
															<Parallel successMode="All" failureMode="Any">
																<EntityContext context="deadBody_allowActorAnimsForDeadNPC" target="">
																	<UrgencyDecorator Urgency="Instant">
																		<UnstanceElement unstance="hostageSituation_maleHoldsFemale_hostage_holdHostage_tense" locationObject="$__object.id" slaveObject="" enabled="true">
																			<AnimationAction fragment="&apos;Quest_HostageSituation_HostageGetsHit_HostageDies_KidnapperToCombat&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
																		</UnstanceElement>
																	</UrgencyDecorator>
																</EntityContext>
																<Sequence>
																	<Wait duration="&apos;100ms&apos;" timeType="GameTime" doFail="false" variation="" />
																	<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;hostageSituation_hostage_overridingHitReactions&apos;">
																		<ExecuteLua code="entity.soul:DealDamage(999, 999, player.this.id, true)" />
																	</Semaphore>
																</Sequence>
															</Parallel>
														</Sequence>
													</Child>
													<OnSuccess canSkip="1">
														<Sequence>
															<IsDeadCheck SoulWUID="" FailSubtMissing="false" saveVersion="2">
																<Else canSkip="1">
																	<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;hostageSituation_hostage_overridingHitReactions&apos;">
																		<ExecuteLua code="entity.soul:DealDamage(999, 999, player.this.id, false)" />
																	</Semaphore>
																</Else>
															</IsDeadCheck>
															<Expression expressions="$finished = true" />
															<Callback_empty EventName="&apos;OnHostageKilledByPlayer&apos;" />
														</Sequence>
													</OnSuccess>
												</FuseBox>
											</IfCondition>
											<IfCondition failOnCondition="false" condition="true">
												<SetExternalLock LockManagerType="Local" Locked="false" LockName="&apos;hostageSituation_hostage_aborting&apos;" />
											</IfCondition>
										</ContinuousSwitch>
										<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;hostageSituation_hostage_aborting&apos;" RunLogic="KeepRunning">
											<Fail />
										</ExternalLock>
									</Parallel>
								</UrgencyDecorator>
							</EntityContextElement>
						</Child>
						<OnFail canSkip="1">
							<IfCondition failOnCondition="false" condition="!$finished">
								<Sequence>
									<SetExternalLock LockManagerType="Local" Locked="false" LockName="&apos;hostageSituation_hostage_aborting&apos;" />
									<Callback_empty EventName="&apos;OnAborting&apos;" />
								</Sequence>
							</IfCondition>
						</OnFail>
					</FuseBox>
					<While doFail="false" propagateChildFail="false" condition="true">
						<IfGate atomic="false" condition="$unresponsive" RunLogic="Halt">
							<EntityContextPreset preset="switch_unresponsive" target="">
								<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
							</EntityContextPreset>
						</IfGate>
					</While>
					<Sequence>
						<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;hostageSituation_hostage_overridingHitReactions&apos;">
							<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;hostageSituation_overrideHitReactions&apos;" RunLogic="Halt">
								<DecoratorBuff BuffId="&apos;0f6bc79a-fc67-4aab-a797-4a9d4e4c2dc5&apos;" SoulWUID="">
									<EntityContext context="combat_actorSupressHitreactionAnimation" target="">
										<While doFail="false" propagateChildFail="false" condition="true">
											<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
												<InstantExternalLock LockManagerType="Local" SemaphoreName="&apos;hostageSituation_stateChangeQueued&apos;" RunLogic="KeepRunning">
													<IfCondition failOnCondition="false" condition="$hitReaction.hitType == $enum:HitReactionType.Bullet | &#10;$hitReaction.hitType == $enum:HitReactionType.Melee | &#10;$hitReaction.hitType == $enum:HitReactionType.Decoy">
														<Sequence>
															<SetExternalLock LockManagerType="Local" Locked="true" LockName="&apos;hostageSituation_stateChangeQueued&apos;" />
															<LuaGate code="return entity.soul:GetState(&apos;health&apos;) &gt; 50" saveVersion="2">
																<Then canSkip="1">
																	<InstantCallback_empty EventName="&apos;OnHostageGetsHit_Survives&apos;" />
																</Then>
																<Else canSkip="1">
																	<InstantCallback_empty EventName="&apos;OnHostageGetsHit_Dies&apos;" />
																</Else>
															</LuaGate>
															<SetExternalLock LockManagerType="Local" Locked="true" LockName="&apos;hostageSituation_overrideHitReactions&apos;" />
														</Sequence>
													</IfCondition>
												</InstantExternalLock>
											</ProcessMessage>
										</While>
									</EntityContext>
								</DecoratorBuff>
							</ExternalLock>
						</Semaphore>
						<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
					</Sequence>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="hostageSituation_maleHoldsLooseFemale_hostage" EventSet="hostageSituation_maleHoldsLooseFemale_hostage">
			<Variables>
				<Variable name="finished" comment="" />
				<Variable name="hitReaction" comment="" />
				<Variable name="unresponsive" comment="" />
				<Variable name="state" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SetExternalLock>
						<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SetExternalLock>
						<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SetExternalLock>
						<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</SetExternalLock>
					</Sequence>
				</OnInit>
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Child>
								<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</JoinedUnstanceAction>
															<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Fail>
															</ExternalLock>
														</Sequence>
														<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</SetExternalLock>
													</Selector>
												</IfCondition>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Child>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</SetExternalLock>
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
																<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</AnimationAction>
																	</UnstanceElement>
																</UrgencyDecorator>
															</Sequence>
														</Child>
														<OnSuccess>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																	<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Callback_empty>
																</Sequence>
															</IfCondition>
														</OnSuccess>
													</FuseBox>
												</IfCondition>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Child>
															<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</JoinedAnimationAction>
																	</UnstanceElement>
																</EntityContext>
																<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Wait>
																		<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Fail>
																		</ExternalLock>
																	</Parallel>
																	<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</SetExternalLock>
																	<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																					<InstantExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																						<OutputBreakpoints />
																						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																							<OutputBreakpoints />
																							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</Expression>
																							<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																							</ExecuteLua>
																						</Sequence>
																					</InstantExternalLock>
																				</AtomicDecorator>
																			</Semaphore>
																		</Semaphore>
																	</SuppressFailure>
																	<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Wait>
																</Sequence>
															</Parallel>
														</Child>
														<OnSuccess>
															<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Callback_empty>
																</Then>
																<Else>
																	<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																				<OutputBreakpoints />
																				<Else>
																					<ActorStateCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																						<OutputBreakpoints />
																						<Else>
																							<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																								<OutputBreakpoints />
																								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																									<OutputBreakpoints />
																								</WaitAction>
																							</UrgencyDecorator>
																						</Else>
																					</ActorStateCheck>
																				</Else>
																			</IsDeadCheck>
																			<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</SetExternalLock>
																		</Sequence>
																	</IfCondition>
																</Else>
															</IfElseCondition>
														</OnSuccess>
													</FuseBox>
												</IfCondition>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Child>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
																<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</AnimationAction>
																	</UnstanceElement>
																</UrgencyDecorator>
															</Sequence>
														</Child>
														<OnSuccess>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
																<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Callback_empty>
															</Sequence>
														</OnSuccess>
													</FuseBox>
												</IfCondition>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Child>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
																<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</AnimationAction>
																			</UnstanceElement>
																		</UrgencyDecorator>
																	</EntityContext>
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Wait>
																		<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</ExecuteLua>
																		</Semaphore>
																	</Sequence>
																</Parallel>
															</Sequence>
														</Child>
														<OnSuccess>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Else>
																		<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</ExecuteLua>
																		</Semaphore>
																	</Else>
																</IsDeadCheck>
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
																<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Callback_empty>
															</Sequence>
														</OnSuccess>
													</FuseBox>
												</IfCondition>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</SetExternalLock>
												</IfCondition>
											</ContinuousSwitch>
											<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Fail>
											</ExternalLock>
										</Parallel>
									</UrgencyDecorator>
								</EntityContextElement>
							</Child>
							<OnFail>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SetExternalLock>
										<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Callback_empty>
									</Sequence>
								</IfCondition>
							</OnFail>
						</FuseBox>
						<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</EntityContextPreset>
							</IfGate>
						</While>
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<DecoratorBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<InstantExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</SetExternalLock>
																<LuaGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Then>
																		<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</InstantCallback_empty>
																	</Then>
																	<Else>
																		<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</InstantCallback_empty>
																	</Else>
																</LuaGate>
																<SetExternalLock hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</SetExternalLock>
															</Sequence>
														</IfCondition>
													</InstantExternalLock>
												</ProcessMessage>
											</While>
										</EntityContext>
									</DecoratorBuff>
								</ExternalLock>
							</Semaphore>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Sequence>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>