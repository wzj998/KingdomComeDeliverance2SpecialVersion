<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="special_hostageSituation_hostage" is_function="0">
    <Variables>
      <Variable name="animationSet" type="special:hostageSituation:animationSet" values="" isPersistent="0" form="single" />
      <Variable name="currentUnstance" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="hitData" type="hitData" values="" isPersistent="0" form="single" />
      <Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="kidnapper" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="state" type="enum:hostageSituation" values="" isPersistent="0" form="single" requirementType="ConstReference" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <ExecuteLua code="local hostageSituationEntity = XGenAIModule.GetEntityByWUID(data.__object.id) &#10; &#10;data.animationSet = hostageSituationEntity:GetAnimationSet(false)" />
      </OnInit>
      <Behavior canSkip="1">
        <EntityContextPreset preset="switch_unresponsive" target="">
          <EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
            <Sequence>
              <JoinedUnstanceAction lockContext="$__object.id" lockName="&apos;HoldHostage_Tense&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" unstance="$animationSet.HoldHostage_Tense" locationObject="$__object.id" slaveObject="" />
              <Expression expressions="$currentUnstance = $animationSet.HoldHostage_Tense" />
              <UrgencyDecorator Urgency="Slow">
                <Parallel successMode="Any" failureMode="Any">
                  <ContinuousSwitch>
                    <IfCondition failOnCondition="false" condition="$state == $enum:hostageSituation.HoldHostage_Tense">
                      <Sequence>
                        <JoinedUnstanceAction lockContext="$__object.id" lockName="&apos;HoldHostage_Tense&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" unstance="$animationSet.HoldHostage_Tense" locationObject="$__object.id" slaveObject="" />
                        <Expression expressions="$currentUnstance = $animationSet.HoldHostage_Tense" />
                        <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
                      </Sequence>
                    </IfCondition>
                    <IfCondition failOnCondition="false" condition="$state == $enum:hostageSituation.HoldHostage_Calm">
                      <Sequence>
                        <JoinedUnstanceAction lockContext="$__object.id" lockName="&apos;HoldHostage_Calm&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" unstance="$animationSet.HoldHostage_Calm" locationObject="$__object.id" slaveObject="" />
                        <Expression expressions="$currentUnstance = $animationSet.HoldHostage_Calm" />
                        <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
                      </Sequence>
                    </IfCondition>
                    <IfCondition failOnCondition="false" condition="$state == $enum:hostageSituation.KidnapperReleasesHostage_BothToIdle">
                      <Sequence>
                        <UnstanceElement unstance="$currentUnstance" locationObject="$__object.id" slaveObject="" enabled="true">
                          <JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="&apos;KidnapperReleasesHostage_BothToIdle&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="$animationSet.KidnapperReleasesHostage_BothToIdle" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;hostage&apos;" allowTorchForPlayer="false" />
                        </UnstanceElement>
                        <Callback_empty EventName="&apos;OnFinished&apos;" />
                      </Sequence>
                    </IfCondition>
                    <IfCondition failOnCondition="false" condition="$state == $enum:hostageSituation.KidnapperReleasesHostage_HostageKillsKidnapper">
                      <Sequence>
                        <UnstanceElement unstance="$currentUnstance" locationObject="$__object.id" slaveObject="" enabled="true">
                          <JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="&apos;KidnapperReleasesHostage_HostageKillsKidnapper&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="$animationSet.KidnapperReleasesHostage_HostageKillsKidnapper" tags="" eventReferenceObject="$__object.id" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;hostage&apos;" allowTorchForPlayer="false" />
                        </UnstanceElement>
                        <Callback_empty EventName="&apos;OnFinished&apos;" />
                      </Sequence>
                    </IfCondition>
                    <IfCondition failOnCondition="false" condition="$state == $enum:hostageSituation.KidnapperKillsHostage_KidnapperToIdle">
                      <Sequence>
                        <SuppressFailure>
                          <UnstanceElement unstance="$currentUnstance" locationObject="$__object.id" slaveObject="" enabled="true">
                            <JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="&apos;KidnapperKillsHostage_KidnapperToIdle&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="$animationSet.KidnapperKillsHostage_KidnapperToIdle" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;hostage&apos;" allowTorchForPlayer="false" />
                          </UnstanceElement>
                        </SuppressFailure>
                        <KillNPC KillTarget="" Scream="false" />
                        <Callback_empty EventName="&apos;OnFinished&apos;" />
                      </Sequence>
                    </IfCondition>
                    <IfCondition failOnCondition="false" condition="$state == $enum:hostageSituation.KidnapperKillsHostage_KidnapperToCombat">
                      <Sequence>
                        <SuppressFailure>
                          <UnstanceElement unstance="$currentUnstance" locationObject="$__object.id" slaveObject="" enabled="true">
                            <JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="&apos;KidnapperKillsHostage_KidnapperToCombat&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="$animationSet.KidnapperKillsHostage_KidnapperToCombat" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;hostage&apos;" allowTorchForPlayer="false" />
                          </UnstanceElement>
                        </SuppressFailure>
                        <KillNPC KillTarget="" Scream="false" />
                        <Callback_empty EventName="&apos;OnFinished&apos;" />
                      </Sequence>
                    </IfCondition>
                    <IfCondition failOnCondition="false" condition="$state == $enum:hostageSituation.KidnapperGetsHit_KidnapperDies_HostageToGround">
                      <SuppressFailure>
                        <AnimationAction fragment="$animationSet.KidnapperGetsHit_KidnapperDies_HostageToGround" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;hostage&apos;" allowTorchForPlayer="false" />
                      </SuppressFailure>
                    </IfCondition>
                    <IfCondition failOnCondition="false" condition="$state == $enum:hostageSituation.KidnapperGetsHit_KidnapperToCombat_HostageToGround">
                      <SuppressFailure>
                        <UnstanceElement unstance="$currentUnstance" locationObject="$__object.id" slaveObject="" enabled="true">
                          <JoinedAnimationAction requiresMovement="false" lockContext="$__object.id" lockName="&apos;KidnapperGetsHit_KidnapperToCombat_HostageToGround&apos;" lockCount="2" timeout="&apos;-1&apos;" ignoreOthersLeaving="false" fragment="$animationSet.KidnapperGetsHit_KidnapperToCombat_HostageToGround" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;hostage&apos;" allowTorchForPlayer="false" />
                        </UnstanceElement>
                      </SuppressFailure>
                    </IfCondition>
                    <IfCondition failOnCondition="false" condition="true">
                      <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
                    </IfCondition>
                  </ContinuousSwitch>
                  <ActorStateBarrier Who="$kidnapper" ToState="dead" NegateTo="false" RunLogic="KeepRunning">
                    <IfCondition failOnCondition="false" condition="$state == $animationSet.HoldHostage_Tense | &#10;$state == $animationSet.HoldHostage_Calm">
                      <Sequence>
                        <Callback_empty EventName="&apos;OnKidnapperDeath&apos;" />
                        <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
                      </Sequence>
                    </IfCondition>
                  </ActorStateBarrier>
                  <Loop count="-1">
                    <ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitData" senderInfo="" inbox="&apos;hitData&apos;" condition="" answerVar="">
                      <IfCondition failOnCondition="false" condition="$hitData.isHeadshot">
                        <Sequence>
                          <Callback_empty EventName="&apos;OnDeath&apos;" />
                          <KillNPC KillTarget="$this.id" Scream="false" />
                        </Sequence>
                      </IfCondition>
                    </ProcessMessage>
                  </Loop>
                  <Loop count="-1">
                    <ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
                      <IfCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.Unpleasant">
                        <Callback_empty EventName="&apos;OnHitReaction&apos;" />
                      </IfCondition>
                    </ProcessMessage>
                  </Loop>
                </Parallel>
              </UrgencyDecorator>
            </Sequence>
          </EntityContextElement>
        </EntityContextPreset>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="hostageSituation_hostage" EventSet="hostageSituation_hostage">
      <Variables>
        <Variable name="animationSet" comment="" />
        <Variable name="currentUnstance" comment="" />
        <Variable name="hitData" comment="" />
        <Variable name="hitReaction" comment="" />
        <Variable name="kidnapper" comment="" />
        <Variable name="state" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </ExecuteLua>
        </OnInit>
        <Behavior>
          <EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </JoinedUnstanceAction>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
                <UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <IfCondition hasInputBreakpoint="0" comment="HoldHostage_Tense" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </JoinedUnstanceAction>
                          <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Expression>
                          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Wait>
                        </Sequence>
                      </IfCondition>
                      <IfCondition hasInputBreakpoint="0" comment="HoldHostage_Calm" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <JoinedUnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </JoinedUnstanceAction>
                          <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Expression>
                          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Wait>
                        </Sequence>
                      </IfCondition>
                      <IfCondition hasInputBreakpoint="0" comment="KidnapperReleasesHostage_BothToIdle" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </JoinedAnimationAction>
                          </UnstanceElement>
                          <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Callback_empty>
                        </Sequence>
                      </IfCondition>
                      <IfCondition hasInputBreakpoint="0" comment="KidnapperReleasesHostage_HostageKillsKidnapper" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </JoinedAnimationAction>
                          </UnstanceElement>
                          <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Callback_empty>
                        </Sequence>
                      </IfCondition>
                      <IfCondition hasInputBreakpoint="0" comment="KidnapperKillsHostage_KidnapperToIdle" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </JoinedAnimationAction>
                            </UnstanceElement>
                          </SuppressFailure>
                          <KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </KillNPC>
                          <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Callback_empty>
                        </Sequence>
                      </IfCondition>
                      <IfCondition hasInputBreakpoint="0" comment="KidnapperKillsHostage_KidnapperToCombat" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </JoinedAnimationAction>
                            </UnstanceElement>
                          </SuppressFailure>
                          <KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </KillNPC>
                          <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Callback_empty>
                        </Sequence>
                      </IfCondition>
                      <IfCondition hasInputBreakpoint="0" comment="KidnapperKillsHostage_KidnapperToCombat" breakpointFlags="0">
                        <OutputBreakpoints />
                        <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </AnimationAction>
                        </SuppressFailure>
                      </IfCondition>
                      <IfCondition hasInputBreakpoint="0" comment="KidnapperKillsHostage_KidnapperToCombat" breakpointFlags="0">
                        <OutputBreakpoints />
                        <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </JoinedAnimationAction>
                          </UnstanceElement>
                        </SuppressFailure>
                      </IfCondition>
                      <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Wait>
                      </IfCondition>
                    </ContinuousSwitch>
                    <ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Callback_empty>
                          <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Wait>
                        </Sequence>
                      </IfCondition>
                    </ActorStateBarrier>
                    <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Callback_empty>
                            <KillNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </KillNPC>
                          </Sequence>
                        </IfCondition>
                      </ProcessMessage>
                    </Loop>
                    <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Callback_empty>
                        </IfCondition>
                      </ProcessMessage>
                    </Loop>
                  </Parallel>
                </UrgencyDecorator>
              </Sequence>
            </EntityContextElement>
          </EntityContextPreset>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>