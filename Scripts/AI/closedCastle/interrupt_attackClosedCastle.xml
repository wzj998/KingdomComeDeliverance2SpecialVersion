<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="interrupt_closedCastle_attack" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="interrupt_attackClosedCastle" is_function="0">
		<Variables>
			<Variable name="actualFirepoint" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="actualFirepoint_new" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="areaOfInterest" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="battlement" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="canUseBattlement" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="done" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="firePoints" type="_wuid" values="" isPersistent="0" form="array" />
			<Variable name="firePoints_value" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hitReaction" type="hitReaction" values="" isPersistent="0" form="single" />
			<Variable name="shooter" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
					<Child canSkip="1">
						<EntityContext context="combat_forceRanged" target="$this.id">
							<Sequence>
								<GraphSearch Origin="$this.id" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;areaOfInterest,vykuchHrad&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;areaOfInterest&apos;" prune="true" negprune="unknown" Parent="" Child="$areaOfInterest" Data="" />
								</GraphSearch>
								<AtomicDecorator>
									<Sequence>
										<GraphSearch Origin="$this.id" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;firePoint,vykuchHrad&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;firePoint&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
											<Nodalyzer Quantifiers="ForAll" Parent="" Child="$firePoints" saveVersion="2">
												<Child0 canSkip="1">
													<RangeSorter point="$__player" SortOrder="Ascending" Source="Child" />
												</Child0>
											</Nodalyzer>
										</GraphSearch>
										<ForEach startIndex="0" step="1" array="$firePoints" iterator="" value="$firePoints_value" break="$done">
											<Selector>
												<GraphSearch Origin="$firePoints_value" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<LinkTagFilter tag="&apos;shooter&apos;" prune="true" negprune="unknown" Parent="" Child="$shooter" Data="" />
												</GraphSearch>
												<IfCondition failOnCondition="false" condition="$shooter == $__null">
													<Sequence>
														<AddLink From="$firePoints_value" To="$this.id" Tag="&apos;shooter&apos;" Data="" LinkOpHandleMode="Error" />
														<Expression expressions="$actualFirepoint = $firePoints_value &#10;$actualFirepoint_new = $firePoints_value &#10;$done = true" />
													</Sequence>
												</IfCondition>
											</Selector>
										</ForEach>
										<VarOperation varName="$firePoints" targetVarName="" operation="Reinit" argument="" />
										<Expression expressions="$done = false" />
									</Sequence>
								</AtomicDecorator>
								<Parallel successMode="Any" failureMode="Any">
									<IsInsideAreaWithLabelBarrier Who="$__player" Label="&apos;closedCastleArea&apos;" Negation="true" RunLogic="KeepRunning">
										<Success />
									</IsInsideAreaWithLabelBarrier>
									<Loop count="-1">
										<Sequence>
											<AnyDecorator preset="crime_keepItems" enabled="true">
												<Move stopWithinDistance="0.200000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$actualFirepoint" destinationSpecification2="" destinationSpecification3="" speed="Run" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
											</AnyDecorator>
											<Selector>
												<Sequence>
													<GraphSearch Origin="$actualFirepoint" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
														<LinkTagFilter tag="&apos;battlement&apos;" prune="true" negprune="unknown" Parent="" Child="$battlement" Data="" />
													</GraphSearch>
													<Expression expressions="$canUseBattlement = true" />
												</Sequence>
												<Expression expressions="$canUseBattlement = false" />
											</Selector>
											<Parallel successMode="Any" failureMode="Any">
												<IfElseCondition failOnCondition="false" condition="$canUseBattlement" saveVersion="2">
													<Then canSkip="1">
														<WeaponAutomationDecorator WeaponChange="none" active="true">
															<MeleeOffenseAutomationDecorator active="true">
																<MinigameElement minigameType="BattleArchery" minigameObject="$battlement" decisionLabel="battle_archery" useDecision="true" enabled="true" saveVersion="2">
																	<Search canSkip="1">
																		<Success />
																	</Search>
																	<Exec canSkip="1">
																		<CombatAction TargetNPC="$__player" RelationOverride="Hostile" />
																	</Exec>
																</MinigameElement>
															</MeleeOffenseAutomationDecorator>
														</WeaponAutomationDecorator>
													</Then>
													<Else canSkip="1">
														<WeaponAutomationDecorator WeaponChange="none" active="true">
															<MeleeOffenseAutomationDecorator active="true">
																<CombatAction TargetNPC="$__player" RelationOverride="Hostile" />
															</MeleeOffenseAutomationDecorator>
														</WeaponAutomationDecorator>
													</Else>
												</IfElseCondition>
												<IfGate atomic="false" condition="$actualFirepoint ~= $actualFirepoint_new" RunLogic="KeepRunning">
													<Success />
												</IfGate>
												<LoopUntil until="Success" attemptCount="0">
													<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$hitReaction" senderInfo="" inbox="&apos;hitReaction&apos;" condition="" answerVar="">
														<IfElseCondition failOnCondition="false" condition="$hitReaction.hitStrength &gt;= $enum:HitReactionStrength.Unpleasant" saveVersion="2">
															<Then canSkip="1">
																<Success />
															</Then>
															<Else canSkip="1">
																<Fail />
															</Else>
														</IfElseCondition>
													</ProcessMessage>
												</LoopUntil>
											</Parallel>
											<Expression expressions="$actualFirepoint = $actualFirepoint_new" />
										</Sequence>
									</Loop>
									<Loop count="-1">
										<Sequence>
											<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" />
											<AtomicDecorator>
												<Sequence>
													<GraphSearch Origin="$this.id" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;firePoint,vykuchHrad&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
														<LinkTagFilter tag="&apos;firePoint&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
														<Nodalyzer Quantifiers="ForAll" Parent="" Child="$firePoints" saveVersion="2">
															<Child0 canSkip="1">
																<RangeSorter point="$__player" SortOrder="Ascending" Source="Child" />
															</Child0>
														</Nodalyzer>
													</GraphSearch>
													<ForEach startIndex="0" step="1" array="$firePoints" iterator="" value="$firePoints_value" break="$done">
														<Sequence>
															<GraphSearch Origin="$firePoints_value" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
																<LinkTagFilter tag="&apos;shooter&apos;" prune="true" negprune="unknown" Parent="" Child="$shooter" Data="" />
															</GraphSearch>
															<IfCondition failOnCondition="false" condition="$shooter == $__null">
																<Sequence>
																	<RemoveLink From="$actualFirepoint" To="$this.id" Tag="&apos;shooter&apos;" LinkOpHandleMode="OverWrite" />
																	<AddLink From="$firePoints_value" To="$this.id" Tag="&apos;shooter&apos;" Data="" LinkOpHandleMode="OverWrite" />
																	<Expression expressions="$actualFirepoint_new = $firePoints_value &#10;$done = true" />
																</Sequence>
															</IfCondition>
															<IfCondition failOnCondition="false" condition="$shooter == $this.id">
																<Expression expressions="$done = true" />
															</IfCondition>
														</Sequence>
													</ForEach>
													<VarOperation varName="$firePoints" targetVarName="" operation="Reinit" argument="" />
													<Expression expressions="$done = false" />
												</Sequence>
											</AtomicDecorator>
										</Sequence>
									</Loop>
									<Loop count="-1">
										<Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;closedCastle_damage&apos;">
											<Sequence>
												<Wait duration="&apos;30s&apos;" timeType="GameTime" doFail="false" variation="&apos;15s&apos;" />
												<ExecuteLua code="q.en(&quot;dude&quot;).soul:DealDamage(10, 10, __null, true);" />
											</Sequence>
										</Semaphore>
									</Loop>
								</Parallel>
							</Sequence>
						</EntityContext>
					</Child>
					<OnFail canSkip="1">
						<RemoveLink From="$actualFirepoint" To="$this.id" Tag="&apos;shooter&apos;" LinkOpHandleMode="Success" />
					</OnFail>
				</FuseBox>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="attackClosedCastle" EventSet="">
			<Variables>
				<Variable name="actualFirepoint" comment="" />
				<Variable name="actualFirepoint_new" comment="" />
				<Variable name="areaOfInterest" comment="" />
				<Variable name="battlement" comment="" />
				<Variable name="canUseBattlement" comment="" />
				<Variable name="done" comment="" />
				<Variable name="firePoints" comment="" />
				<Variable name="firePoints_value" comment="" />
				<Variable name="hitReaction" comment="" />
				<Variable name="shooter" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Child>
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
												<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
													<Child0>
														<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</RangeSorter>
													</Child0>
												</Nodalyzer>
											</GraphSearch>
											<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</LinkTagFilter>
													</GraphSearch>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</AddLink>
															<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Expression>
														</Sequence>
													</IfCondition>
												</Selector>
											</ForEach>
											<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</VarOperation>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Sequence>
									</AtomicDecorator>
									<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IsInsideAreaWithLabelBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Success>
										</IsInsideAreaWithLabelBarrier>
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Move>
												</AnyDecorator>
												<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</LinkTagFilter>
														</GraphSearch>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Sequence>
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</Selector>
												<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Then>
															<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<MinigameElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																		<OutputBreakpoints />
																		<Search>
																			<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Success>
																		</Search>
																		<Exec>
																			<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</CombatAction>
																		</Exec>
																	</MinigameElement>
																</MeleeOffenseAutomationDecorator>
															</WeaponAutomationDecorator>
														</Then>
														<Else>
															<WeaponAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<MeleeOffenseAutomationDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<CombatAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</CombatAction>
																</MeleeOffenseAutomationDecorator>
															</WeaponAutomationDecorator>
														</Else>
													</IfElseCondition>
													<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Success>
													</IfGate>
													<LoopUntil hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Then>
																	<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Success>
																</Then>
																<Else>
																	<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Fail>
																</Else>
															</IfElseCondition>
														</ProcessMessage>
													</LoopUntil>
												</Parallel>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Sequence>
										</Loop>
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
												<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</LinkTagFilter>
															<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Child0>
																	<RangeSorter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</RangeSorter>
																</Child0>
															</Nodalyzer>
														</GraphSearch>
														<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</LinkTagFilter>
																</GraphSearch>
																<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</RemoveLink>
																		<AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</AddLink>
																		<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</Expression>
																	</Sequence>
																</IfCondition>
																<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Expression>
																</IfCondition>
															</Sequence>
														</ForEach>
														<VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</VarOperation>
														<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Expression>
													</Sequence>
												</AtomicDecorator>
											</Sequence>
										</Loop>
										<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Wait>
													<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ExecuteLua>
												</Sequence>
											</Semaphore>
										</Loop>
									</Parallel>
								</Sequence>
							</EntityContext>
						</Child>
						<OnFail>
							<RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</RemoveLink>
						</OnFail>
					</FuseBox>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>