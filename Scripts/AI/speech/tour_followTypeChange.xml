<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="speech_tour_followTypeChange" is_function="1">
    <Variables>
      <Variable name="context" type="_string" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="followType" type="enum:tour_followType" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="followTypeChange" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" />
      <Variable name="waitForFollowTypeChange" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <Switch>
            <IfCondition failOnCondition="false" condition="$followType == $enum:tour_followType.followableNpcCenter">
              <Expression expressions="$context = &apos;FollowableNPCCenter&apos;" />
            </IfCondition>
            <IfCondition failOnCondition="false" condition="$followType == $enum:tour_followType.followableNpcLeft">
              <Expression expressions="$context = &apos;FollowableNPCLeft&apos;" />
            </IfCondition>
            <IfCondition failOnCondition="false" condition="$followType == $enum:tour_followType.followableNpcRight">
              <Expression expressions="$context = &apos;FollowableNPCRight&apos;" />
            </IfCondition>
          </Switch>
          <EntityContext context="$context" target="">
            <Sequence>
              <Expression expressions="$followTypeChange = $waitForFollowTypeChange ~= true" />
              <IfGate atomic="false" condition="(!$followTypeChange &amp; &#10;!$waitForFollowTypeChange) | &#10;($followTypeChange &amp; &#10;$waitForFollowTypeChange)" RunLogic="KeepRunning">
                <Success />
              </IfGate>
            </Sequence>
          </EntityContext>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer>
      <Switch>
        <IfCondition failOnCondition="false" condition="$followType == $enum:tour_followType.followableNpcCenter">
          <EntityContext context="FollowableNPCCenter" target="">
            <Sequence>
              <Expression expressions="$followTypeChange = true" />
              <IfGate atomic="false" condition="!$followTypeChange" RunLogic="KeepRunning">
                <Success />
              </IfGate>
            </Sequence>
          </EntityContext>
        </IfCondition>
        <IfCondition failOnCondition="false" condition="$followType == $enum:tour_followType.followableNpcLeft">
          <EntityContext context="FollowableNPCLeft" target="">
            <Sequence>
              <Expression expressions="$followTypeChange = true" />
              <IfGate atomic="false" condition="!$followTypeChange" RunLogic="KeepRunning">
                <Success />
              </IfGate>
            </Sequence>
          </EntityContext>
        </IfCondition>
        <IfCondition failOnCondition="false" condition="$followType == $enum:tour_followType.followableNpcRight">
          <EntityContext context="FollowableNPCRight" target="">
            <Sequence>
              <Expression expressions="$followTypeChange = true" />
              <IfGate atomic="false" condition="!$followTypeChange" RunLogic="KeepRunning">
                <Success />
              </IfGate>
            </Sequence>
          </EntityContext>
        </IfCondition>
        <DefaultBranch>
          <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
        </DefaultBranch>
      </Switch>
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="context" comment="" />
        <Variable name="followType" comment="" />
        <Variable name="followTypeChange" comment="" />
        <Variable name="waitForFollowTypeChange" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="190" editorPosY="330" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </IfCondition>
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </IfCondition>
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </IfCondition>
            </Switch>
            <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
                <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Success>
                </IfGate>
              </Sequence>
            </EntityContext>
          </Sequence>
        </Behavior>
      </Root>
      <Forest>
        <Switch editorPosX="240" editorPosY="-540" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
          <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
                <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Success>
                </IfGate>
              </Sequence>
            </EntityContext>
          </IfCondition>
          <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
                <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Success>
                </IfGate>
              </Sequence>
            </EntityContext>
          </IfCondition>
          <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
                <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Success>
                </IfGate>
              </Sequence>
            </EntityContext>
          </IfCondition>
          <DefaultBranch>
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
          </DefaultBranch>
        </Switch>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>