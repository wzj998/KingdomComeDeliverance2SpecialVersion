<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="speech_tour_speech" is_function="1">
		<Variables>
			<Variable name="currentFollowType" type="enum:tour_followType" values="" isPersistent="0" form="single" />
			<Variable name="currentForceLookEnabled" type="enum:tour_forceLookEnabled" values="" isPersistent="0" form="single" />
			<Variable name="currentOnPlayerLeft_dialogProgression" type="enum:tour_onPlayerLeft_dialogProgression" values="" isPersistent="0" form="single" />
			<Variable name="followTypeChange" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="playerIsBackAfterLeaving" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="progressDialog" type="enum:tour_tourProgress" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="animationApproach" type="enum:animationApproach" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="dialogFinishedAndTagpointReachedLock" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="dialogInitiator" type="_wuid" values="$this.id" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="dialogParticipantsWithoutPlayer_progressDialog" type="enum:tour_tourProgress" values="$enum:tour_tourProgress.progress" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="dialogType" type="enum:tour_dialogType" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="followType" type="enum:tour_followType" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="followableSoul" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" optional="1" />
			<Variable name="forceLookEnabled" type="enum:tour_forceLookEnabled" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="leader" type="_wuid" values="$this.id" isPersistent="0" form="single" requirementType="In" />
			<Variable name="lookTargets" type="_wuid" values="" isPersistent="0" form="array" requirementType="ConstReference" optional="1" />
			<Variable name="lookers" type="_wuid" values="" isPersistent="0" form="array" requirementType="ConstReference" optional="1" />
			<Variable name="nextPhaseTrigger" type="enum:tour_nextPhaseTrigger" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="onPlayerLeft_dialogProgression" type="enum:tour_onPlayerLeft_dialogProgression" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="ConstReference" optional="1" />
			<Variable name="playerLeft_maxReactionDistance" type="_float" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="progressTour" type="enum:tour_tourProgress" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="startDialogOnTagpoint" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="subtitlesDown" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<While doFail="false" propagateChildFail="false" condition="true">
						<IfGate atomic="false" condition="$dialogInitiator == $this.id &amp; &#10;$dialogParticipantsWithoutPlayer_progressDialog == $enum:tour_tourProgress.progress &amp; &#10;$progressDialog ~= $enum:tour_tourProgress.none" RunLogic="Halt">
							<ContinuousSwitch>
								<IfCondition failOnCondition="false" condition="$dialogType == $enum:tour_dialogType.bark">
									<Function_speech_tour_speech_dialogInit alias="$alias" animationApproach="$animationApproach" dialogFinishedAndTagpointReachedLock="$dialogFinishedAndTagpointReachedLock" isBark="true" leader="$leader" nextPhaseTrigger="$nextPhaseTrigger" onPlayerLeft_dialogProgression="$onPlayerLeft_dialogProgression" participants="$participants" polylogPreset="$enum:dialogPreset.ingame" progressTour="$progressTour" startDialogOnTagpoint="$startDialogOnTagpoint" subtitlesDown="$subtitlesDown" playerIsBackAfterLeaving="$playerIsBackAfterLeaving" nodeLabel="30138059" />
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$dialogType == $enum:tour_dialogType.chat &amp; &#10;$progressDialog == $enum:tour_tourProgress.progress">
									<Function_speech_tour_speech_dialogInit alias="$alias" animationApproach="$animationApproach" dialogFinishedAndTagpointReachedLock="$dialogFinishedAndTagpointReachedLock" isBark="false" leader="$leader" nextPhaseTrigger="$nextPhaseTrigger" onPlayerLeft_dialogProgression="$onPlayerLeft_dialogProgression" participants="$participants" polylogPreset="$enum:dialogPreset.chat" progressTour="$progressTour" startDialogOnTagpoint="$startDialogOnTagpoint" subtitlesDown="$subtitlesDown" playerIsBackAfterLeaving="$playerIsBackAfterLeaving" nodeLabel="23342075" />
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$dialogType == $enum:tour_dialogType.ingameDialog &amp; &#10;$progressDialog == $enum:tour_tourProgress.progress">
									<Function_speech_tour_speech_dialogInit alias="$alias" animationApproach="$animationApproach" dialogFinishedAndTagpointReachedLock="$dialogFinishedAndTagpointReachedLock" isBark="false" leader="$leader" nextPhaseTrigger="$nextPhaseTrigger" onPlayerLeft_dialogProgression="$onPlayerLeft_dialogProgression" participants="$participants" polylogPreset="$enum:dialogPreset.ingame" progressTour="$progressTour" startDialogOnTagpoint="$startDialogOnTagpoint" subtitlesDown="$subtitlesDown" playerIsBackAfterLeaving="$playerIsBackAfterLeaving" nodeLabel="16329746" />
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$dialogType == $enum:tour_dialogType.none &amp; &#10;$progressDialog == $enum:tour_tourProgress.progress">
									<Sequence>
										<IfCondition failOnCondition="false" condition="$playerIsBackAfterLeaving">
											<Sequence>
												<Expression expressions="$playerIsBackAfterLeaving = false" />
												<SuppressFailure>
													<ForceLook LookTarget="$__player" DisableVariations="false">
														<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;TOUR_NPC_VOLA_NA_HRACE_CO_SE_VRATIL&apos;" skipInLod="false" subtitlesDown="false" nodeLabel="37499561" />
													</ForceLook>
												</SuppressFailure>
											</Sequence>
										</IfCondition>
										<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
									</Sequence>
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$dialogType ~= $enum:tour_dialogType.bark &amp; &#10;$progressDialog == $enum:tour_tourProgress.stop">
									<FuseBox StatusPropagation="Child" OneCleanup="true" saveVersion="2">
										<Child canSkip="1">
											<While doFail="false" propagateChildFail="false" condition="true">
												<DistanceGate Origin="$this.id" ReferencePt="$__player" Low="$playerLeft_maxReactionDistance" High="$playerLeft_maxReactionDistance" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
													<Sequence>
														<SuppressFailure>
															<ForceLook LookTarget="$__player" DisableVariations="false">
																<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;TOUR_NPC_VOLA_NA_HRACE_CO_ODESEL&apos;" skipInLod="false" subtitlesDown="true" nodeLabel="69202326" />
															</ForceLook>
														</SuppressFailure>
														<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="&apos;5s&apos;" />
													</Sequence>
												</DistanceGate>
											</While>
										</Child>
										<OnSuccess canSkip="1">
											<IfCondition failOnCondition="false" condition="$progressDialog == $enum:tour_tourProgress.progress">
												<Expression expressions="$playerIsBackAfterLeaving = true" />
											</IfCondition>
										</OnSuccess>
									</FuseBox>
								</IfCondition>
							</ContinuousSwitch>
						</IfGate>
					</While>
					<While doFail="false" propagateChildFail="false" condition="true">
						<Sequence>
							<Expression expressions="$currentOnPlayerLeft_dialogProgression = $onPlayerLeft_dialogProgression" />
							<IfGate atomic="false" condition="$currentOnPlayerLeft_dialogProgression == $onPlayerLeft_dialogProgression" RunLogic="Halt">
								<IfElseCondition failOnCondition="false" condition="$currentOnPlayerLeft_dialogProgression == $enum:tour_onPlayerLeft_dialogProgression.waitForPlayerStopDialog" saveVersion="2">
									<Then canSkip="1">
										<While doFail="false" propagateChildFail="false" condition="true">
											<IfGate atomic="false" condition="$progressDialog ~= $progressTour" RunLogic="KeepRunning">
												<Expression expressions="$progressDialog = $progressTour" />
											</IfGate>
										</While>
									</Then>
									<Else canSkip="1">
										<Sequence>
											<Expression expressions="$progressDialog = $enum:tour_tourProgress.progress" />
											<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
										</Sequence>
									</Else>
								</IfElseCondition>
							</IfGate>
						</Sequence>
					</While>
					<While doFail="false" propagateChildFail="false" condition="true">
						<IfGate atomic="false" condition="$followType ~= $enum:tour_followType.none &amp; &#10;($followableSoul == $this.id | &#10;($followableSoul == $__null &amp; &#10;$leader == $this.id))" RunLogic="Halt">
							<Parallel successMode="Any" failureMode="Any">
								<While doFail="false" propagateChildFail="false" condition="true">
									<Sequence>
										<Expression expressions="$currentFollowType = $followType" />
										<Function_speech_tour_followTypeChange followType="$currentFollowType" waitForFollowTypeChange="true" followTypeChange="$followTypeChange" nodeLabel="16990700" />
									</Sequence>
								</While>
								<While doFail="false" propagateChildFail="false" condition="true">
									<IfGate atomic="false" condition="$currentFollowType ~= $followType &amp; &#10;$currentFollowType ~= $enum:tour_followType.none" RunLogic="KeepRunning">
										<Function_speech_tour_followTypeChange followType="$followType" waitForFollowTypeChange="false" followTypeChange="$followTypeChange" nodeLabel="86459126" />
									</IfGate>
								</While>
							</Parallel>
						</IfGate>
					</While>
					<While doFail="false" propagateChildFail="false" condition="true">
						<Sequence>
							<Expression expressions="$currentForceLookEnabled = $forceLookEnabled" />
							<IfGate atomic="false" condition="$currentForceLookEnabled == $forceLookEnabled &amp; &#10;$forceLookEnabled ~= $enum:tour_forceLookEnabled.never" RunLogic="Halt">
								<IfElseCondition failOnCondition="false" condition="$currentForceLookEnabled == $enum:tour_forceLookEnabled.inDestination" saveVersion="2">
									<Then canSkip="1">
										<EntityContextBarrier context="tour_reachedTagpoint" target="$leader" Negation="false" RunLogic="Halt">
											<Function_speech_tour_forceLook lookTargets="$lookTargets" lookers="$lookers" nodeLabel="98904040" />
										</EntityContextBarrier>
									</Then>
									<Else canSkip="1">
										<Function_speech_tour_forceLook lookTargets="$lookTargets" lookers="$lookers" nodeLabel="64671950" />
									</Else>
								</IfElseCondition>
							</IfGate>
						</Sequence>
					</While>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="currentFollowType" comment="" />
				<Variable name="currentForceLookEnabled" comment="" />
				<Variable name="currentOnPlayerLeft_dialogProgression" comment="" />
				<Variable name="followTypeChange" comment="" />
				<Variable name="playerIsBackAfterLeaving" comment="" />
				<Variable name="progressDialog" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="animationApproach" comment="" />
				<Variable name="dialogFinishedAndTagpointReachedLock" comment="" />
				<Variable name="dialogInitiator" comment="" />
				<Variable name="dialogParticipantsWithoutPlayer_progressDialog" comment="" />
				<Variable name="dialogType" comment="" />
				<Variable name="followType" comment="" />
				<Variable name="followableSoul" comment="" />
				<Variable name="forceLookEnabled" comment="" />
				<Variable name="leader" comment="" />
				<Variable name="lookTargets" comment="" />
				<Variable name="lookers" comment="" />
				<Variable name="nextPhaseTrigger" comment="" />
				<Variable name="onPlayerLeft_dialogProgression" comment="" />
				<Variable name="participants" comment="" />
				<Variable name="playerLeft_maxReactionDistance" comment="" />
				<Variable name="progressTour" comment="" />
				<Variable name="startDialogOnTagpoint" comment="" />
				<Variable name="subtitlesDown" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-120" editorPosY="30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<While hasInputBreakpoint="0" comment="Dialog initialization" breakpointFlags="0">
							<OutputBreakpoints />
							<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" comment_box="This_child_is_executed_when_NPC_is_supposed_to_bark" comment_box_color="216,38,38,255" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_tour_speech_dialogInit hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_tour_speech_dialogInit>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" comment_box="This_child_is_executed_when_NPC_is_supposed_to_chat" comment_box_color="12,12,12,255" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_tour_speech_dialogInit hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_tour_speech_dialogInit>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" comment_box="This_child_is_executed_when_NPC_is_supposed_to_do_ingame_dialog." comment_box_color="12,127,216,255" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_tour_speech_dialogInit hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_tour_speech_dialogInit>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" comment_box="This_child_is_executed_when_NPC_is_not_supposed_to_say_anything_in_current_stage" comment_box_color="51,216,51,255" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Function_speech_schedulerMonolog>
														</ForceLook>
													</SuppressFailure>
												</Sequence>
											</IfCondition>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" comment_box="This_child_is_executed_when_NPC_is_supposed_to_wait_with_dialog_until_player_is_close_enough_again" comment_box_color="140,25,242,255" breakpointFlags="0">
										<OutputBreakpoints />
										<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Child>
												<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_speech_schedulerMonolog>
																</ForceLook>
															</SuppressFailure>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
													</DistanceGate>
												</While>
											</Child>
											<OnSuccess>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</IfCondition>
											</OnSuccess>
										</FuseBox>
									</IfCondition>
								</ContinuousSwitch>
							</IfGate>
						</While>
						<While hasInputBreakpoint="0" comment="Dialog progression control" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfElseCondition hasInputBreakpoint="0" comment="If distance between player and NPC should be checked" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</IfGate>
											</While>
										</Then>
										<Else>
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
												<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Wait>
											</Sequence>
										</Else>
									</IfElseCondition>
								</IfGate>
							</Sequence>
						</While>
						<While hasInputBreakpoint="0" comment="Follow control" breakpointFlags="0">
							<OutputBreakpoints />
							<IfGate hasInputBreakpoint="0" comment="Whether soul is supposed to be followed" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
											<Function_speech_tour_followTypeChange hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_tour_followTypeChange>
										</Sequence>
									</While>
									<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Function_speech_tour_followTypeChange hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_tour_followTypeChange>
										</IfGate>
									</While>
								</Parallel>
							</IfGate>
						</While>
						<While hasInputBreakpoint="0" comment="Look control" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
								<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Function_speech_tour_forceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Function_speech_tour_forceLook>
											</EntityContextBarrier>
										</Then>
										<Else>
											<Function_speech_tour_forceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_tour_forceLook>
										</Else>
									</IfElseCondition>
								</IfGate>
							</Sequence>
						</While>
					</Parallel>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>