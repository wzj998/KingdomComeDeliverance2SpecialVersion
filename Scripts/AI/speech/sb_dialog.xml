<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="monologRequest" is_function="0">
    <Variables>
      <Variable name="t_monologRequest_priorities" type="_int" values="" isPersistent="0" form="array" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Error" saveVersion="2">
      <Behavior canSkip="1">
        <Parallel successMode="Any" failureMode="Any">
          <Loop count="-1">
            <IncludeTree File="&apos;speech/sb_dialog.xml&apos;" Name="&apos;monologRequestRead&apos;" nodeLabel="10016806" />
          </Loop>
          <Loop count="-1">
            <IncludeTree File="&apos;speech/sb_dialog.xml&apos;" Name="&apos;monologRequestRead&apos;" nodeLabel="22475248" />
          </Loop>
        </Parallel>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="t_monologRequest_priorities" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-400" editorPosY="910" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </IncludeTree>
            </Loop>
            <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </IncludeTree>
            </Loop>
          </Parallel>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="monologRequestRead" is_function="0">
    <Variables>
      <Variable name="t_monolog_request" type="dialog:monologRequest" values="" isPersistent="0" form="single" />
      <Variable name="t_monolog_requestSender" type="senderInfo" values="" isPersistent="0" form="single" />
      <Variable name="t_monolog_request_answer" type="_bool" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$t_monolog_request" senderInfo="$t_monolog_requestSender" inbox="&apos;dialogMailbox&apos;" condition="" answerVar="$t_monolog_request_answer">
          <IfCondition failOnCondition="false" condition="$t_monolog_request.alias ~= &apos;&apos; | $t_monolog_request.metarole ~= &apos;&apos;">
            <IncludeTree File="&apos;speech/sb_dialog.xml&apos;" Name="&apos;monologRequestProcess&apos;" nodeLabel="10016806" />
          </IfCondition>
        </ProcessMessage>
      </Behavior>
    </Root>
    <ForestContainer>
      <Selector>
        <Sequence>
          <GraphSearch Origin="" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;bard&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
          </GraphSearch>
          <InstantSendMessageToNPC target="$this.id" type="&apos;string&apos;" values="$t_monolog_request.alias" />
        </Sequence>
        <Success />
      </Selector>
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="t_monolog_request" comment="" />
        <Variable name="t_monolog_requestSender" comment="" />
        <Variable name="t_monolog_request_answer" comment="" />
        <Variable name="t_monologRequest_priorities" comment="" />
      </Variables>
      <ForwardDeclarations>
        <Variable name="t_monologRequest_priorities" type="_int" values="" isPersistent="0" form="array" requirementType="ForwardDeclaration" />
      </ForwardDeclarations>
      <Root editorPosX="-100" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <IfCondition hasInputBreakpoint="0" comment="unspecified monologues unsupported" breakpointFlags="0">
              <OutputBreakpoints />
              <IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </IncludeTree>
            </IfCondition>
          </ProcessMessage>
        </Behavior>
      </Root>
      <Forest>
        <Selector editorPosX="640" editorPosY="-850" hasInputBreakpoint="0" comment="hack for bard prototype" breakpointFlags="0">
          <OutputBreakpoints />
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </InstantSendMessageToNPC>
          </Sequence>
          <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Success>
        </Selector>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="monologRequestProcess" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Error" saveVersion="2">
      <Behavior canSkip="1">
        <SuppressFailure>
          <IfElseCondition failOnCondition="false" condition="$t_monolog_request.canBeDelayed" saveVersion="2">
            <Then canSkip="1">
              <DialogGate Who="$this.id" Negation="true" EndDialogInRoot="false" WaitForTwins="false" Condition="InAny" RunLogic="KeepRunning">
                <IncludeTree File="&apos;speech/sb_dialog.xml&apos;" Name="&apos;monologRequestExecution&apos;" nodeLabel="24708576" />
              </DialogGate>
            </Then>
            <Else canSkip="1">
              <IncludeTree File="&apos;speech/sb_dialog.xml&apos;" Name="&apos;monologRequestExecution&apos;" nodeLabel="83646013" />
            </Else>
          </IfElseCondition>
        </SuppressFailure>
      </Behavior>
    </Root>
    <ForestContainer>
      <Parallel successMode="Any" failureMode="Any">
        <DetailBehaviorBarrier RunLogic="KeepRunning">
          <Sequence>
            <Expression expressions="$inDetail = true" />
            <IncludeTree File="&apos;speech/sb_dialog.xml&apos;" Name="&apos;monologRequestExecution&apos;" nodeLabel="83646013" />
          </Sequence>
        </DetailBehaviorBarrier>
        <Sequence>
          <Wait duration="&apos;250ms&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
          <IfCondition failOnCondition="false" condition="$inDetail">
            <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
          </IfCondition>
        </Sequence>
      </Parallel>
      <Sequence>
        <GetTime TimeType="GameTime" OutVar="$monologProcessStartTime" Delta="" />
        <DetailBehaviorBarrier RunLogic="KeepRunning">
          <IfElseCondition failOnCondition="false" condition="$t_monolog_request.canBeDelayed" saveVersion="2">
            <Then canSkip="1">
              <DialogGate Who="$this.id" Negation="true" EndDialogInRoot="false" WaitForTwins="false" Condition="InAny" RunLogic="KeepRunning">
                <IncludeTree File="&apos;speech/sb_dialog.xml&apos;" Name="&apos;monologRequestExecution&apos;" nodeLabel="79033328" />
              </DialogGate>
            </Then>
            <Else canSkip="1">
              <Sequence>
                <GetTime TimeType="GameTime" OutVar="$monologProcessDetailTime" Delta="" />
                <IfCondition failOnCondition="false" condition="$monologProcessStartTime + 1000 &gt; $monologProcessDetailTime">
                  <IncludeTree File="&apos;speech/sb_dialog.xml&apos;" Name="&apos;monologRequestExecution&apos;" nodeLabel="55834134" />
                </IfCondition>
              </Sequence>
            </Else>
          </IfElseCondition>
        </DetailBehaviorBarrier>
      </Sequence>
      <SuppressFailure>
        <IfElseCondition failOnCondition="false" condition="$t_monolog_request.canBeDelayed" saveVersion="2">
          <Then canSkip="1">
            <DetailBehaviorBarrier RunLogic="KeepRunning">
              <DialogGate Who="$this.id" Negation="true" EndDialogInRoot="false" WaitForTwins="false" Condition="InAny" RunLogic="KeepRunning">
                <IncludeTree File="&apos;speech/sb_dialog.xml&apos;" Name="&apos;monologRequestExecution&apos;" nodeLabel="93102060" />
              </DialogGate>
            </DetailBehaviorBarrier>
          </Then>
          <Else canSkip="1">
            <Sequence>
              <GetTime TimeType="GameTime" OutVar="$monologProcessStartTime" Delta="" />
              <DetailBehaviorBarrier RunLogic="KeepRunning">
                <GetTime TimeType="GameTime" OutVar="$monologProcessDetailTime" Delta="" />
              </DetailBehaviorBarrier>
              <IfCondition failOnCondition="false" condition="$monologProcessStartTime + 1000 &gt; $monologProcessDetailTime">
                <IncludeTree File="&apos;speech/sb_dialog.xml&apos;" Name="&apos;monologRequestExecution&apos;" nodeLabel="55388860" />
              </IfCondition>
            </Sequence>
          </Else>
        </IfElseCondition>
      </SuppressFailure>
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="t_monolog_request" comment="" />
      </Variables>
      <ForwardDeclarations>
        <Variable name="t_monolog_request" type="dialog:monologRequest" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
      </ForwardDeclarations>
      <Root editorPosX="-580" editorPosY="910" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <DialogGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </IncludeTree>
                </DialogGate>
              </Then>
              <Else>
                <IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </IncludeTree>
              </Else>
            </IfElseCondition>
          </SuppressFailure>
        </Behavior>
      </Root>
      <Forest>
        <Parallel editorPosX="10" editorPosY="1710" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
          <DetailBehaviorBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Expression>
              <IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </IncludeTree>
            </Sequence>
          </DetailBehaviorBarrier>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Wait>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Wait>
            </IfCondition>
          </Sequence>
        </Parallel>
        <Sequence editorPosX="1300" editorPosY="1650" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
          <GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </GetTime>
          <DetailBehaviorBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Then>
                <DialogGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </IncludeTree>
                </DialogGate>
              </Then>
              <Else>
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </GetTime>
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </IncludeTree>
                  </IfCondition>
                </Sequence>
              </Else>
            </IfElseCondition>
          </DetailBehaviorBarrier>
        </Sequence>
        <SuppressFailure editorPosX="1304" editorPosY="2194" hasInputBreakpoint="0" comment="" breakpointFlags="0">
          <OutputBreakpoints />
          <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Then>
              <DetailBehaviorBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <DialogGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </IncludeTree>
                </DialogGate>
              </DetailBehaviorBarrier>
            </Then>
            <Else>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </GetTime>
                <DetailBehaviorBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <GetTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </GetTime>
                </DetailBehaviorBarrier>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </IncludeTree>
                </IfCondition>
              </Sequence>
            </Else>
          </IfElseCondition>
        </SuppressFailure>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="monologRequestExecution" is_function="0">
    <Variables>
      <Variable name="dramaticBarkSpread" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="t_context" type="_float" values="" isPersistent="0" form="associative" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Expected" saveVersion="2">
      <Behavior canSkip="1">
        <FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
          <Child canSkip="1">
            <Sequence>
              <IfCondition failOnCondition="false" condition="$t_monolog_request.contextAsText ~= &apos;&apos;">
                <ExecuteLua code="for key, value in string.gmatch(data.t_monolog_request.contextAsText, &quot;([^;=]+)=([^;=]+)&quot;) do &#10;  data.t_context[key] = value &#10;end" />
              </IfCondition>
              <Parallel successMode="Any" failureMode="Any">
                <IfElseCondition failOnCondition="false" condition="$t_monolog_request.metarole ~= &apos;&apos;" saveVersion="2">
                  <Then canSkip="1">
                    <LogToLabel Name="&apos;Metarole&apos;" Wuid="" Message="&apos;$t_monolog_request.metarole;&apos;">
                      <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
                    </LogToLabel>
                  </Then>
                  <Else canSkip="1">
                    <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
                  </Else>
                </IfElseCondition>
                <IfElseCondition failOnCondition="true" condition="$t_monolog_request.lookAtId==$__null" saveVersion="2">
                  <Then canSkip="1">
                    <DoMonologue DecisionId="" DecisionAlias="$t_monolog_request.alias" Metaroles="$t_monolog_request.metarole" SoulId="" ForceSubtitles="$t_monolog_request.forceSubtitles" AllowMutedSouls="false" SkipInLOD="true" AnimationOverride="UserControlled" ContextVariables="$t_context" />
                  </Then>
                  <Else canSkip="1">
                    <ForceLook LookTarget="$t_monolog_request.lookAtId" DisableVariations="true">
                      <DoMonologue DecisionId="" DecisionAlias="$t_monolog_request.alias" Metaroles="$t_monolog_request.metarole" SoulId="" ForceSubtitles="$t_monolog_request.forceSubtitles" AllowMutedSouls="false" SkipInLOD="true" AnimationOverride="UserControlled" ContextVariables="$t_context" />
                    </ForceLook>
                  </Else>
                </IfElseCondition>
                <IfGate atomic="false" condition="$t_monolog_request.isDramaticBark" RunLogic="KeepRunning">
                  <Sequence>
                    <Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" />
                    <AtomicDecorator>
                      <IfCondition failOnCondition="false" condition="!$dramaticBarkSpread">
                        <Sequence>
                          <Function_crime_spreadDramaticBark nodeLabel="51444623" />
                          <Expression expressions="$dramaticBarkSpread = true" />
                        </Sequence>
                      </IfCondition>
                    </AtomicDecorator>
                    <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
                  </Sequence>
                </IfGate>
              </Parallel>
              <IfCondition failOnCondition="false" condition="$t_monolog_request.isDramaticBark">
                <AtomicDecorator>
                  <IfCondition failOnCondition="false" condition="!$dramaticBarkSpread">
                    <Sequence>
                      <Function_crime_spreadDramaticBark nodeLabel="42310134" />
                      <Expression expressions="$dramaticBarkSpread = true" />
                    </Sequence>
                  </IfCondition>
                </AtomicDecorator>
              </IfCondition>
            </Sequence>
          </Child>
          <OnSuccess canSkip="1">
            <IfCondition failOnCondition="false" condition="$t_monolog_request.sendAnswer==true">
              <InstantSendMessageToNPC target="$t_monolog_requestSender.id" type="&apos;dialog:onComplete&apos;" values="state(true)" />
            </IfCondition>
          </OnSuccess>
        </FuseBox>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="dramaticBarkSpread" comment="" />
        <Variable name="t_context" comment="" />
        <Variable name="t_monolog_request" comment="" />
        <Variable name="t_monolog_requestSender" comment="" />
        <Variable name="t_monolog_request_answer" comment="" />
      </Variables>
      <ForwardDeclarations>
        <Variable name="t_monolog_request" type="dialog:monologRequest" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
        <Variable name="t_monolog_requestSender" type="senderInfo" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
        <Variable name="t_monolog_request_answer" type="_bool" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
      </ForwardDeclarations>
      <Root editorPosX="200" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <FuseBox hasInputBreakpoint="0" comment="DoMonolog may fail (even from valid reasons) - in which case the onComplete callback is not sent" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Child>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <ExecuteLua hasInputBreakpoint="0" comment="HACK - ideally we should be able to send associative arrays as parts of AI custom types" breakpointFlags="0">
                    <OutputBreakpoints />
                  </ExecuteLua>
                </IfCondition>
                <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <LogToLabel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Wait>
                      </LogToLabel>
                    </Then>
                    <Else>
                      <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Wait>
                    </Else>
                  </IfElseCondition>
                  <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <DoMonologue hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </DoMonologue>
                    </Then>
                    <Else>
                      <ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <DoMonologue hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </DoMonologue>
                      </ForceLook>
                    </Else>
                  </IfElseCondition>
                  <IfGate hasInputBreakpoint="0" comment="For dramatic monologues longer than 2 seconds" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Wait>
                      <AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Function_crime_spreadDramaticBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Function_crime_spreadDramaticBark>
                            <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </Expression>
                          </Sequence>
                        </IfCondition>
                      </AtomicDecorator>
                      <Wait hasInputBreakpoint="0" comment="this tree just spreads the dramatic bark info - it shoudnt close the parallel" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Wait>
                    </Sequence>
                  </IfGate>
                </Parallel>
                <IfCondition hasInputBreakpoint="0" comment="For dramatic monologues shorter than 2 seconds" breakpointFlags="0">
                  <OutputBreakpoints />
                  <AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Function_crime_spreadDramaticBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Function_crime_spreadDramaticBark>
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                      </Sequence>
                    </IfCondition>
                  </AtomicDecorator>
                </IfCondition>
              </Sequence>
            </Child>
            <OnSuccess>
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </InstantSendMessageToNPC>
              </IfCondition>
            </OnSuccess>
          </FuseBox>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>