<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="speech_tour_speech_dialogStart" is_function="1">
    <Variables />
    <Parameters>
      <Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="animationApproach" type="enum:animationApproach" values="" isPersistent="0" form="single" requirementType="ConstReference" />
      <Variable name="onPlayerLeft_dialogProgression" type="enum:tour_onPlayerLeft_dialogProgression" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
      <Variable name="polylogPreset" type="enum:dialogPreset" values="$enum:dialogPreset.ingame" isPersistent="0" form="single" requirementType="In" />
      <Variable name="progressTour" type="enum:tour_tourProgress" values="" isPersistent="0" form="single" requirementType="ConstReference" />
      <Variable name="restartingDialogAfterInterrupt" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <LinkGate from="$participants" to="$this.id" tag="&apos;tour_interruptedDialog&apos;" amount="All" presence="NotThere" RunLogic="Halt">
          <FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
            <Child canSkip="1">
              <SuppressFailure>
                <Switch>
                  <IfCondition failOnCondition="false" condition="$onPlayerLeft_dialogProgression == $enum:tour_onPlayerLeft_dialogProgression.waitForPlayerSkipDialog">
                    <IfGate atomic="false" condition="$progressTour == $enum:tour_tourProgress.progress" RunLogic="KeepRunning">
                      <Function_speech_polylogInitiator alias="$alias" animationApproach="$animationApproach" context="$__null" customParameters="$__null" metarole="" participants="$participants" participantsMetaroles="" preset="$polylogPreset" nodeLabel="14000037" />
                    </IfGate>
                  </IfCondition>
                  <IfCondition failOnCondition="false" condition="$onPlayerLeft_dialogProgression == $enum:tour_onPlayerLeft_dialogProgression.waitForPlayerStopDialog">
                    <Function_speech_polylogInitiator alias="$alias" animationApproach="$animationApproach" context="$__null" customParameters="$__null" metarole="" participants="$participants" participantsMetaroles="" preset="$polylogPreset" nodeLabel="34234538" />
                  </IfCondition>
                  <IfCondition failOnCondition="false" condition="$onPlayerLeft_dialogProgression == $enum:tour_onPlayerLeft_dialogProgression.startDialog">
                    <Function_speech_polylogInitiator alias="$alias" animationApproach="$animationApproach" context="$__null" customParameters="$__null" metarole="" participants="$participants" participantsMetaroles="" preset="$polylogPreset" nodeLabel="57335536" />
                  </IfCondition>
                </Switch>
              </SuppressFailure>
            </Child>
            <OnFail canSkip="1">
              <Expression expressions="$restartingDialogAfterInterrupt = true" />
            </OnFail>
          </FuseBox>
        </LinkGate>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="alias" comment="" />
        <Variable name="animationApproach" comment="" />
        <Variable name="onPlayerLeft_dialogProgression" comment="" />
        <Variable name="participants" comment="" />
        <Variable name="polylogPreset" comment="" />
        <Variable name="progressTour" comment="" />
        <Variable name="restartingDialogAfterInterrupt" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <LinkGate hasInputBreakpoint="0" comment="If any dialog participant starts to bark during the dialog" breakpointFlags="0">
            <OutputBreakpoints />
            <FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
              <Child>
                <SuppressFailure hasInputBreakpoint="0" comment="Polylog can fail if it is no longer valid. It is halted if any of dialog participants barks." breakpointFlags="0">
                  <OutputBreakpoints />
                  <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <IfCondition hasInputBreakpoint="0" comment="Distance check only before dialog starts" breakpointFlags="0">
                      <OutputBreakpoints />
                      <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Function_speech_polylogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Function_speech_polylogInitiator>
                      </IfGate>
                    </IfCondition>
                    <IfCondition hasInputBreakpoint="0" comment="Distance check is in parallel" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Function_speech_polylogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Function_speech_polylogInitiator>
                    </IfCondition>
                    <IfCondition hasInputBreakpoint="0" comment="No check for distance" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Function_speech_polylogInitiator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Function_speech_polylogInitiator>
                    </IfCondition>
                  </Switch>
                </SuppressFailure>
              </Child>
              <OnFail>
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
              </OnFail>
            </FuseBox>
          </LinkGate>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>