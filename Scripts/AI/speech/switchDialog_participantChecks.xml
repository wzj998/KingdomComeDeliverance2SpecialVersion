<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="speech_switchDialog_participantChecks" is_function="1">
    <Variables>
      <Variable name="scheduledPriority" type="_int" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="participantChecksPassed" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" />
      <Variable name="switchDialog" type="speech:switchDialog" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <IfElseCondition failOnCondition="false" condition="$switchDialog.context ~= &apos;-&apos; &amp; $switchDialog.context ~= &apos;&apos;" saveVersion="2">
          <Then canSkip="1">
            <Loop count="-1">
              <EntityContextBarrier context="$switchDialog.context" target="$this.id" Negation="false" RunLogic="Halt">
                <FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
                  <Child canSkip="1">
                    <Sequence>
                      <Expression expressions="$participantChecksPassed = true" />
                      <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                    </Sequence>
                  </Child>
                  <OnFail canSkip="1">
                    <Expression expressions="$participantChecksPassed = false" />
                  </OnFail>
                </FuseBox>
              </EntityContextBarrier>
            </Loop>
          </Then>
          <Else canSkip="1">
            <IfElseCondition failOnCondition="false" condition="$switchDialog.maxScheduledPriority &gt;= 0" saveVersion="2">
              <Then canSkip="1">
                <Loop count="-1">
                  <Sequence>
                    <GetScheduledPriority Priority="$scheduledPriority" />
                    <IfElseCondition failOnCondition="false" condition="$switchDialog.maxScheduledPriority &gt;= $scheduledPriority" saveVersion="2">
                      <Then canSkip="1">
                        <Expression expressions="$participantChecksPassed = true" />
                      </Then>
                      <Else canSkip="1">
                        <Expression expressions="$participantChecksPassed = false" />
                      </Else>
                    </IfElseCondition>
                    <Wait duration="&apos;500&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                  </Sequence>
                </Loop>
              </Then>
              <Else canSkip="1">
                <ErrorNode Message="&apos;Either context or maximum scheduler priority needs to be provided&apos;" />
              </Else>
            </IfElseCondition>
          </Else>
        </IfElseCondition>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="scheduledPriority" comment="" />
        <Variable name="participantChecksPassed" comment="" />
        <Variable name="switchDialog" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-40" editorPosY="20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Then>
              <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Child>
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                        <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Wait>
                      </Sequence>
                    </Child>
                    <OnFail>
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                    </OnFail>
                  </FuseBox>
                </EntityContextBarrier>
              </Loop>
            </Then>
            <Else>
              <IfElseCondition hasInputBreakpoint="0" comment="$switchDialog.maximumSchedulerPriority &gt; 0" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <GetScheduledPriority hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </GetScheduledPriority>
                      <IfElseCondition hasInputBreakpoint="0" comment="$scheduledPriority &lt;= $switchDialog.playerDistance" breakpointFlags="0" saveVersion="2">
                        <OutputBreakpoints />
                        <Then>
                          <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Expression>
                        </Then>
                        <Else>
                          <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Expression>
                        </Else>
                      </IfElseCondition>
                      <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Wait>
                    </Sequence>
                  </Loop>
                </Then>
                <Else>
                  <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </ErrorNode>
                </Else>
              </IfElseCondition>
            </Else>
          </IfElseCondition>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>