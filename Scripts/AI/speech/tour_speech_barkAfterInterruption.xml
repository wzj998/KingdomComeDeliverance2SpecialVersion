<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="speech_tour_speech_barkAfterInterruption" is_function="1">
		<Variables />
		<Parameters>
			<Variable name="playerIsBackAfterLeaving" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" />
			<Variable name="restartingDialogAfterInterrupt" type="_bool" values="" isPersistent="0" form="single" requirementType="Reference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<SuppressFailure>
					<Switch>
						<IfCondition failOnCondition="false" condition="$playerIsBackAfterLeaving">
							<Sequence>
								<Expression expressions="$playerIsBackAfterLeaving = false" />
								<ForceLook LookTarget="$__player" DisableVariations="false">
									<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;TOUR_NPC_VOLA_NA_HRACE_CO_SE_VRATIL&apos;" skipInLod="false" subtitlesDown="true" nodeLabel="23688766" />
								</ForceLook>
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$restartingDialogAfterInterrupt">
							<Sequence>
								<Expression expressions="$restartingDialogAfterInterrupt = false" />
								<ForceLook LookTarget="$__player" DisableVariations="false">
									<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;TOUR_NPC_ZKOUSI_PO_INTERRUPTU_ZNOVU_MLUVIT&apos;" skipInLod="false" subtitlesDown="true" nodeLabel="69254301" />
								</ForceLook>
							</Sequence>
						</IfCondition>
						<DefaultBranch>
							<Success />
						</DefaultBranch>
					</Switch>
				</SuppressFailure>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="playerIsBackAfterLeaving" comment="" />
				<Variable name="restartingDialogAfterInterrupt" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_schedulerMonolog>
									</ForceLook>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
									<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_schedulerMonolog>
									</ForceLook>
								</Sequence>
							</IfCondition>
							<DefaultBranch>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</DefaultBranch>
						</Switch>
					</SuppressFailure>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>