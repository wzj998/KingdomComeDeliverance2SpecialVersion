<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="speech_createLock" is_function="1">
    <Variables />
    <Parameters>
      <Variable name="alias" type="_string" values="-" isPersistent="0" form="single" requirementType="In" />
      <Variable name="initiator" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="lockName" type="_string" values="" isPersistent="0" form="single" requirementType="Out" />
      <Variable name="metarole" type="_string" values="-" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <IfElseCondition failOnCondition="false" condition="$alias == &apos;-&apos; | $alias == &apos;&apos;" saveVersion="2">
          <Then canSkip="1">
            <IfElseCondition failOnCondition="false" condition="$metarole == &apos;-&apos; | $metarole == &apos;&apos;" saveVersion="2">
              <Then canSkip="1">
                <ErrorNode Message="&apos;both alias and metarole missing&apos;" />
              </Then>
              <Else canSkip="1">
                <Concatenation OutString="$lockName" Pattern="&apos;$initiator;_$metarole&apos;" />
              </Else>
            </IfElseCondition>
          </Then>
          <Else canSkip="1">
            <Concatenation OutString="$lockName" Pattern="&apos;$initiator;_$alias&apos;" />
          </Else>
        </IfElseCondition>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="alias" comment="" />
        <Variable name="initiator" comment="" />
        <Variable name="lockName" comment="" />
        <Variable name="metarole" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Then>
              <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                <OutputBreakpoints />
                <Then>
                  <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </ErrorNode>
                </Then>
                <Else>
                  <Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Concatenation>
                </Else>
              </IfElseCondition>
            </Then>
            <Else>
              <Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Concatenation>
            </Else>
          </IfElseCondition>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>