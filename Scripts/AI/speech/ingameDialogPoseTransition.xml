<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="speech_ingameDialogPoseTransition" is_function="1">
    <Variables>
      <Variable name="hand_left" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="hand_right" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="startAction" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="transition_lockName" type="_string" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="speech_lockName" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="transition_type" type="enum:speech_ingameDialogPoseTransition_type" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <Concatenation OutString="$transition_lockName" Pattern="&apos;ingameDialogPoseTransition_$speech_lockName&apos;" />
      </OnInit>
      <Behavior canSkip="1">
        <Sequence>
          <HandCheck who="$this.id" LeftHand="$hand_left" RightHand="$hand_right" />
          <IfCondition failOnCondition="false" condition="$hand_left == $__null &amp; $hand_right == $__null">
            <Parallel successMode="Any" failureMode="Any">
              <Sequence>
                <IsFastForwarded failOnCondition="false" saveVersion="2">
                  <Then canSkip="1">
                    <Expression expressions="$startAction = true" />
                  </Then>
                  <Else canSkip="1">
                    <IfElseCondition failOnCondition="false" condition="$speech_lockName == &apos;&apos;" saveVersion="2">
                      <Then canSkip="1">
                        <Expression expressions="$startAction = true" />
                      </Then>
                      <Else canSkip="1">
                        <Semaphore SemaphoreCount="1" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Global" SemaphoreName="&apos;$transition_lockName&apos;">
                          <Sequence>
                            <Expression expressions="$startAction = true" />
                            <Wait duration="&apos;200ms&apos;" timeType="GameTime" doFail="false" variation="&apos;400ms&apos;" skipInLOD="false" />
                          </Sequence>
                        </Semaphore>
                      </Else>
                    </IfElseCondition>
                  </Else>
                </IsFastForwarded>
                <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
              </Sequence>
              <IfGate atomic="false" condition="$startAction" RunLogic="KeepRunning">
                <Switch>
                  <IfCondition failOnCondition="false" condition="$transition_type == $enum:speech_ingameDialogPoseTransition_type.intoDialogPose">
                    <UrgencyDecorator Urgency="Slow">
                      <StanceCheck soul="$this.id" stance="sitting" smartObject="" negate="false" failOnCondition="false" saveVersion="2">
                        <Then canSkip="1">
                          <UnstanceAction unstance="ingameDialogPose_sitting" locationObject="" slaveObject="" />
                        </Then>
                        <Else canSkip="1">
                          <UnstanceAction unstance="ingameDialogPose" locationObject="" slaveObject="" />
                        </Else>
                      </StanceCheck>
                    </UrgencyDecorator>
                  </IfCondition>
                  <IfCondition failOnCondition="false" condition="$transition_type == $enum:speech_ingameDialogPoseTransition_type.outOfDialogPose">
                    <StanceElement smartObject="" stance="standing" allowAny="true" enabled="true">
                      <UrgencyDecorator Urgency="Slow">
                        <WaitAction />
                      </UrgencyDecorator>
                    </StanceElement>
                  </IfCondition>
                </Switch>
              </IfGate>
            </Parallel>
          </IfCondition>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer>
      <StanceCheck soul="$this.id" stance="sitting" smartObject="" negate="false" failOnCondition="false" saveVersion="2">
        <Then canSkip="1">
          <StanceElement smartObject="" stance="sitting" allowAny="true" enabled="true">
            <UrgencyDecorator Urgency="Slow">
              <WaitAction />
            </UrgencyDecorator>
          </StanceElement>
        </Then>
      </StanceCheck>
    </ForestContainer>
    <EditorData EventSet="">
      <Variables>
        <Variable name="hand_left" comment="" />
        <Variable name="hand_right" comment="" />
        <Variable name="startAction" comment="" />
        <Variable name="transition_lockName" comment="" />
        <Variable name="speech_lockName" comment="" />
        <Variable name="transition_type" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-80" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </Concatenation>
        </OnInit>
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </HandCheck>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IsFastForwarded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                    </Then>
                    <Else>
                      <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                        <OutputBreakpoints />
                        <Then>
                          <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Expression>
                        </Then>
                        <Else>
                          <Semaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                              <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Expression>
                              <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                <OutputBreakpoints />
                              </Wait>
                            </Sequence>
                          </Semaphore>
                        </Else>
                      </IfElseCondition>
                    </Else>
                  </IsFastForwarded>
                  <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Wait>
                </Sequence>
                <IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <StanceCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                          <OutputBreakpoints />
                          <Then>
                            <UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </UnstanceAction>
                          </Then>
                          <Else>
                            <UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </UnstanceAction>
                          </Else>
                        </StanceCheck>
                      </UrgencyDecorator>
                    </IfCondition>
                    <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </WaitAction>
                        </UrgencyDecorator>
                      </StanceElement>
                    </IfCondition>
                  </Switch>
                </IfGate>
              </Parallel>
            </IfCondition>
          </Sequence>
        </Behavior>
      </Root>
      <Forest>
        <StanceCheck editorPosX="2690" editorPosY="290" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
          <OutputBreakpoints />
          <Then>
            <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <UrgencyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </WaitAction>
              </UrgencyDecorator>
            </StanceElement>
          </Then>
        </StanceCheck>
      </Forest>
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>