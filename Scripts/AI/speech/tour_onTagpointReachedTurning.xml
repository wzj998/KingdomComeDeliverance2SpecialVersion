<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="speech_tour_onTagpointReachedTurning" is_function="1">
    <Variables />
    <Parameters>
      <Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="movementSpeed" type="enum:movementSpeed" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="onTagpointReached_turnOnPlayer" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="playerLeft_maxReactionDistance" type="_float" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="successDistanceMove" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="turningCooldown" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="turningCooldownVariation" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <StanceCheck soul="$this.id" stance="standing" smartObject="" negate="false" failOnCondition="false" saveVersion="2">
          <Then canSkip="1">
            <Sequence>
              <DistanceCondition Origin="$this.id" ReferencePt="$destination" Low="0.500000" High="0.500000" Negation="true" ValueOnMiddle="false" failOnCondition="false">
                <IfElseCondition failOnCondition="false" condition="$successDistanceMove" saveVersion="2">
                  <Then canSkip="1">
                    <DistanceCondition Origin="$this.id" ReferencePt="$__player" Low="$playerLeft_maxReactionDistance" High="$playerLeft_maxReactionDistance" Negation="false" ValueOnMiddle="false" failOnCondition="true">
                      <ExactMove directionType="FromVariable" directionSpecification="$__player" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="$movementSpeed" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
                    </DistanceCondition>
                  </Then>
                  <Else canSkip="1">
                    <ExactMove directionType="AlignWithEntity" directionSpecification="$destination" animationTriggerDist="0.150000" precise="true" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="$movementSpeed" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
                  </Else>
                </IfElseCondition>
              </DistanceCondition>
              <EntityContext context="tour_reachedTagpoint" target="">
                <While doFail="false" propagateChildFail="false" condition="true">
                  <DistanceGate Origin="$this.id" ReferencePt="$__player" Low="$playerLeft_maxReactionDistance" High="$playerLeft_maxReactionDistance" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
                    <Sequence>
                      <Turn target="$__player" align="false" />
                      <Wait duration="$turningCooldown" timeType="GameTime" doFail="false" variation="$turningCooldownVariation" skipInLOD="false" />
                    </Sequence>
                  </DistanceGate>
                </While>
              </EntityContext>
            </Sequence>
          </Then>
          <Else canSkip="1">
            <Success />
          </Else>
        </StanceCheck>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="destination" comment="" />
        <Variable name="movementSpeed" comment="" />
        <Variable name="onTagpointReached_turnOnPlayer" comment="" />
        <Variable name="playerLeft_maxReactionDistance" comment="" />
        <Variable name="successDistanceMove" comment="" />
        <Variable name="turningCooldown" comment="" />
        <Variable name="turningCooldownVariation" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <StanceCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Then>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                    <OutputBreakpoints />
                    <Then>
                      <DistanceCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </ExactMove>
                      </DistanceCondition>
                    </Then>
                    <Else>
                      <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </ExactMove>
                    </Else>
                  </IfElseCondition>
                </DistanceCondition>
                <EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <DistanceGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Turn>
                        <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Wait>
                      </Sequence>
                    </DistanceGate>
                  </While>
                </EntityContext>
              </Sequence>
            </Then>
            <Else>
              <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Success>
            </Else>
          </StanceCheck>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>