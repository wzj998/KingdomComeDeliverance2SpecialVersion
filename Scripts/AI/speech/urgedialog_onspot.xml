<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="urgeDialog_onSpot" is_function="0">
    <Variables>
      <Variable name="phase" type="_int" values="1" isPersistent="1" form="single" />
      <Variable name="seenEntity" type="perceptionInfo" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="movementType" type="enum:movementType" values="$enum:movementType.TurnBody" isPersistent="0" form="single" requirementType="In" />
      <Variable name="playerFleeDistanceBeforeReaction" type="_int" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="secondsAfterUrgeBeforeReaction" type="_int" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="urgeAlias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="urgeIsChat" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Parallel successMode="Any" failureMode="Any">
          <AddRecognitionThreshold Perceptor="$this.id" Threshold="0.010000">
            <While doFail="false" propagateChildFail="false" condition="true">
              <ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$seenEntity" senderInfo="" inbox="&apos;perceptionInfo&apos;" condition="" answerVar="">
                <IfCondition failOnCondition="false" condition="$seenEntity.perceptible == $__player">
                  <Sequence>
                    <Expression expressions="$phase = 2" />
                    <Callback_empty EventName="&apos;OnSeen&apos;" />
                  </Sequence>
                </IfCondition>
              </ProcessMessage>
            </While>
          </AddRecognitionThreshold>
          <ContinuousSwitch>
            <IfCondition failOnCondition="false" condition="$phase == 1">
              <Sequence>
                <ExactMove directionType="AlignWithEntity" directionSpecification="$destination" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$destination" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
                <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
              </Sequence>
            </IfCondition>
            <IfCondition failOnCondition="false" condition="$phase ==2">
              <Sequence>
                <Function_urgeDialog drawWeaponIfPlayerDoes="false" movementType="$movementType" playerFleeDistanceBeforeReaction="$playerFleeDistanceBeforeReaction" secondsAfterUrgeBeforeReaction="$secondsAfterUrgeBeforeReaction" urgeAliasOrMetarole="$urgeAlias" urgeIsChat="$urgeIsChat" useMetarole="false" waveAtPlayer="false" nodeLabel="59640787" />
                <Expression expressions="$phase = 1" />
              </Sequence>
            </IfCondition>
            <IfCondition failOnCondition="false" condition="false">
              <Callback_empty EventName="&apos;OnFail&apos;" />
            </IfCondition>
            <IfCondition failOnCondition="false" condition="false">
              <Callback_empty EventName="&apos;OnPlayerFlee&apos;" />
            </IfCondition>
            <IfCondition failOnCondition="false" condition="false">
              <Callback_empty EventName="&apos;OnPlayerWeaponDraw&apos;" />
            </IfCondition>
            <IfCondition failOnCondition="false" condition="false">
              <Callback_empty EventName="&apos;OnTimeout&apos;" />
            </IfCondition>
          </ContinuousSwitch>
        </Parallel>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="urgeDialog_onSpot" EventSet="urgeDialog_onSpot">
      <Variables>
        <Variable name="phase" comment="" />
        <Variable name="seenEntity" comment="" />
        <Variable name="destination" comment="" />
        <Variable name="movementType" comment="" />
        <Variable name="playerFleeDistanceBeforeReaction" comment="" />
        <Variable name="secondsAfterUrgeBeforeReaction" comment="" />
        <Variable name="urgeAlias" comment="" />
        <Variable name="urgeIsChat" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <AddRecognitionThreshold hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <While hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Expression>
                      <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Callback_empty>
                    </Sequence>
                  </IfCondition>
                </ProcessMessage>
              </While>
            </AddRecognitionThreshold>
            <ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </ExactMove>
                  <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Wait>
                </Sequence>
              </IfCondition>
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Function_urgeDialog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Function_urgeDialog>
                  <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                  </Expression>
                </Sequence>
              </IfCondition>
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Callback_empty>
              </IfCondition>
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Callback_empty>
              </IfCondition>
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Callback_empty>
              </IfCondition>
              <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Callback_empty>
              </IfCondition>
            </ContinuousSwitch>
          </Parallel>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>