<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="speech_tour_advanced" is_function="0">
		<Variables>
			<Variable name="dialogFinishedAndTagpointReachedLock" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="leftHandElement" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="leftHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="playerLeft_maxReactionDistance" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="progressTour" type="enum:tour_tourProgress" values="" isPersistent="1" form="single" />
			<Variable name="rightHandElement" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="rightHandItem" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="useLight" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="weaponSet" type="enum:weaponSet" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="animationApproach" type="enum:animationApproach" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="context" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="destination" type="_wuid" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="dialogInitiator" type="_wuid" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="dialogType" type="enum:tour_dialogType" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="finalTagpoint" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" optional="1" />
			<Variable name="followFormationParams" type="followFormationParams" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="followType" type="enum:tour_followType" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="followableSoul" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" optional="1" />
			<Variable name="followableSoulPreferedPosition" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="forceLookEnabled" type="enum:tour_forceLookEnabled" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="formationName" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="formationType" type="enum:formationType" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="greyOutE" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="horseUsageElement" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="lookTargets" type="_wuid" values="" isPersistent="0" form="array" requirementType="ConstReference" optional="1" />
			<Variable name="lookers" type="_wuid" values="" isPersistent="0" form="array" requirementType="ConstReference" optional="1" />
			<Variable name="maxPlayerDistance" type="_float" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="movementSpeed" type="enum:movementSpeed" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="nextPhaseTrigger" type="enum:tour_nextPhaseTrigger" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="onPlayerLeft_dialogProgression" type="enum:tour_onPlayerLeft_dialogProgression" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="onPlayerLeft_wait" type="enum:tour_onPlayerLeft_wait" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="onPlayerLeft_waitMode" type="enum:tour_onPlayerLeft_waitMode" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="onPlayerLeft_wait_distanceMeasurement_npc" type="_wuid" values="" isPersistent="0" form="single" requirementType="ConstReference" optional="1" />
			<Variable name="onTagpointReached_turnOnPlayer" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="ConstReference" optional="1" />
			<Variable name="pathOffset" type="_float" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="startDialogOnTagpoint" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="subtitlesDown" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="successDistance" type="_float" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="successDistanceMove" type="_bool" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="tour_hand" type="enum:tour_handType" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="tour_weaponSet" type="enum:tour_weaponSet" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="turningCooldown" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="turningCooldownVariation" type="_string" values="" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="useLightMode" type="enum:tour_handContentElementMode" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="useWeaponMode" type="enum:tour_handContentElementMode" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Sequence>
					<Concatenation OutString="$dialogFinishedAndTagpointReachedLock" Pattern="&apos;dialogFinishedAndTagpointReachedLock_$followFormationParams.formation.leader&apos;" />
					<Expression expressions="$playerLeft_maxReactionDistance = $maxPlayerDistance + 15" />
				</Sequence>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<Switch>
						<IfCondition failOnCondition="false" condition="$formationType == $enum:formationType.KeepDistance">
							<Expression expressions="$followFormationParams.formation.policy = $enum:formationMode.KeepDistance" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$formationType == $enum:formationType.MoveHistory">
							<Expression expressions="$followFormationParams.formation.policy = $enum:formationMode.MoveHistory" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$formationType == $enum:formationType.KeepShape">
							<Expression expressions="$followFormationParams.formation.policy = $enum:formationMode.KeepShape" />
						</IfCondition>
						<DefaultBranch>
							<Expression expressions="$followFormationParams.formation.policy = $enum:formationMode.Relaxed" />
						</DefaultBranch>
					</Switch>
					<EntityContextPreset preset="crime_tourParticipant" target="">
						<EntityContext context="tour_participatingInTour" target="">
							<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
								<Child canSkip="1">
									<Parallel successMode="Any" failureMode="Any">
										<Sequence>
											<IfCondition failOnCondition="false" condition="($followFormationParams.formation.leader == $this.id &amp; &#10;$useWeaponMode == $enum:tour_handContentElementMode.leader | &#10;$useWeaponMode == $enum:tour_handContentElementMode.all) &amp; &#10;$tour_weaponSet ~= $enum:tour_weaponSet.none">
												<Sequence>
													<Switch>
														<IfCondition failOnCondition="false" condition="$tour_weaponSet == $enum:tour_weaponSet.oversized">
															<Expression expressions="$weaponSet = $enum:weaponSet.oversized" />
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$tour_weaponSet == $enum:tour_weaponSet.secondary">
															<Expression expressions="$weaponSet = $enum:weaponSet.secondary" />
														</IfCondition>
														<DefaultBranch>
															<Expression expressions="$weaponSet = $enum:weaponSet.primary" />
														</DefaultBranch>
													</Switch>
													<Switch>
														<IfCondition failOnCondition="false" condition="$tour_hand == $enum:tour_handType.both">
															<Expression expressions="$leftHandElement = true &#10;$rightHandElement = true" />
														</IfCondition>
														<IfCondition failOnCondition="false" condition="$tour_hand == $enum:tour_handType.right">
															<Expression expressions="$rightHandElement = true" />
														</IfCondition>
														<DefaultBranch>
															<Expression expressions="$leftHandElement = true" />
														</DefaultBranch>
													</Switch>
												</Sequence>
											</IfCondition>
											<IfCondition failOnCondition="false" condition="$useLightMode == $enum:tour_handContentElementMode.all | &#10;($useLightMode == $enum:tour_handContentElementMode.leader &amp; &#10;$followFormationParams.formation.leader == $this.id)">
												<Expression expressions="$leftHandElement = true  &#10;$useLight = true" />
											</IfCondition>
											<Selector>
												<HandContentElement hand="Right" item="$rightHandItem" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="tour_rightHandItem" useDecision="true" enabled="$rightHandElement" saveVersion="2">
													<Search canSkip="1">
														<Sequence>
															<GetWeaponsFromWeaponSet WeaponSet="$weaponSet" LeftHand="$leftHandItem" RightHand="$rightHandItem" UseTorchWhenAppropriate="false" />
															<IfCondition failOnCondition="false" condition="$rightHandItem == $__null">
																<Fail />
															</IfCondition>
														</Sequence>
													</Search>
													<Exec canSkip="1">
														<HandContentElement hand="Left" item="$leftHandItem" allowAny="false" allowHomeSlotAutoReturn="false" decisionLabel="tour_leftHandItem" useDecision="true" enabled="$leftHandElement" saveVersion="2">
															<Search canSkip="1">
																<Sequence>
																	<Selector>
																		<IfCondition failOnCondition="true" condition="$useLight">
																			<GetLightSourceItem Item="$leftHandItem" />
																		</IfCondition>
																		<IfCondition failOnCondition="true" condition="$tour_hand == $enum:tour_handType.left | &#10;$tour_hand == $enum:tour_handType.both">
																			<GetWeaponsFromWeaponSet WeaponSet="$weaponSet" LeftHand="$leftHandItem" RightHand="$rightHandItem" UseTorchWhenAppropriate="false" />
																		</IfCondition>
																	</Selector>
																	<IfCondition failOnCondition="false" condition="$leftHandItem == $__null">
																		<Fail />
																	</IfCondition>
																</Sequence>
															</Search>
															<Exec canSkip="1">
																<Function_speech_tour_formationHorseDesicion alias="$alias" context="$context" destination="$destination" dialogFinishedAndTagpointReachedLock="$dialogFinishedAndTagpointReachedLock" finalTagpoint="$finalTagpoint" followFormationParams="$followFormationParams" followableSoul="$followableSoul" followableSoulPreferedPosition="$followableSoulPreferedPosition" formationName="$formationName" horseUsageElement="$horseUsageElement" maxPlayerDistance="$maxPlayerDistance" movementSpeed="$movementSpeed" nextPhaseTrigger="$nextPhaseTrigger" onPlayerLeft_wait="$onPlayerLeft_wait" onPlayerLeft_waitMode="$onPlayerLeft_waitMode" onTagpointReached_turnOnPlayer="$onTagpointReached_turnOnPlayer" pathOffset="$pathOffset" playerLeft_maxReactionDistance="$playerLeft_maxReactionDistance" progressTour="$progressTour" successDistance="$successDistance" successDistanceMove="$successDistanceMove" turningCooldown="$turningCooldown" turningCooldownVariation="$turningCooldownVariation" nodeLabel="76012179" />
															</Exec>
														</HandContentElement>
													</Exec>
												</HandContentElement>
												<Function_speech_tour_formationHorseDesicion alias="$alias" context="$context" destination="$destination" dialogFinishedAndTagpointReachedLock="$dialogFinishedAndTagpointReachedLock" finalTagpoint="$finalTagpoint" followFormationParams="$followFormationParams" followableSoul="$followableSoul" followableSoulPreferedPosition="$followableSoulPreferedPosition" formationName="$formationName" horseUsageElement="$horseUsageElement" maxPlayerDistance="$maxPlayerDistance" movementSpeed="$movementSpeed" nextPhaseTrigger="$nextPhaseTrigger" onPlayerLeft_wait="$onPlayerLeft_wait" onPlayerLeft_waitMode="$onPlayerLeft_waitMode" onTagpointReached_turnOnPlayer="$onTagpointReached_turnOnPlayer" pathOffset="$pathOffset" playerLeft_maxReactionDistance="$playerLeft_maxReactionDistance" progressTour="$progressTour" successDistance="$successDistance" successDistanceMove="$successDistanceMove" turningCooldown="$turningCooldown" turningCooldownVariation="$turningCooldownVariation" nodeLabel="87232095" />
											</Selector>
										</Sequence>
										<Function_speech_tour_speechInFormation alias="$alias" animationApproach="$animationApproach" dialogFinishedAndTagpointReachedLock="$dialogFinishedAndTagpointReachedLock" dialogInitiator="$dialogInitiator" dialogType="$dialogType" followType="$followType" followableSoul="$followableSoul" forceLookEnabled="$forceLookEnabled" leader="$followFormationParams.formation.leader" lookTargets="$lookTargets" lookers="$lookers" nextPhaseTrigger="$nextPhaseTrigger" onPlayerLeft_dialogProgression="$onPlayerLeft_dialogProgression" participants="$participants" playerLeft_maxReactionDistance="$playerLeft_maxReactionDistance" progressTour="$progressTour" startDialogOnTagpoint="$startDialogOnTagpoint" subtitlesDown="$subtitlesDown" nodeLabel="76962716" />
										<Function_speech_tour_playerLeftCheck dialogInitiator="$dialogInitiator" distanceMeasurement_npc="$onPlayerLeft_wait_distanceMeasurement_npc" leader="$followFormationParams.formation.leader" maxPlayerDistance="$maxPlayerDistance" progressTour="$progressTour" nodeLabel="37887128" />
										<IfGate atomic="false" condition="$followFormationParams.formation.leader == $this.id" RunLogic="KeepRunning">
											<While doFail="false" propagateChildFail="false" condition="true">
												<Synchronize SemaphoreCount="3" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$dialogFinishedAndTagpointReachedLock&apos;" RunLogic="KeepRunning">
													<IfCondition failOnCondition="false" condition="$finalTagpoint ~= $destination">
														<Callback_empty EventName="&apos;OnDialogFinishedAndTagpointReached&apos;" />
													</IfCondition>
												</Synchronize>
											</While>
										</IfGate>
										<While doFail="false" propagateChildFail="false" condition="true">
											<IfGate atomic="false" condition="$greyOutE" RunLogic="Halt">
												<EntityContext context="speech_greyOutE" target="">
													<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
												</EntityContext>
											</IfGate>
										</While>
									</Parallel>
								</Child>
								<OnSuccess canSkip="1">
									<IfCondition failOnCondition="false" condition="$followFormationParams.formation.leader == $this.id">
										<Callback_empty EventName="&apos;OnSuccess&apos;" />
									</IfCondition>
								</OnSuccess>
								<OnFail canSkip="1">
									<IfCondition failOnCondition="false" condition="$followFormationParams.formation.leader == $this.id">
										<Callback_empty EventName="&apos;OnFail&apos;" />
									</IfCondition>
								</OnFail>
							</FuseBox>
						</EntityContext>
					</EntityContextPreset>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="tour_advanced" EventSet="tour">
			<Variables>
				<Variable name="dialogFinishedAndTagpointReachedLock" comment="" />
				<Variable name="leftHandElement" comment="" />
				<Variable name="leftHandItem" comment="" />
				<Variable name="playerLeft_maxReactionDistance" comment="" />
				<Variable name="progressTour" comment="" />
				<Variable name="rightHandElement" comment="" />
				<Variable name="rightHandItem" comment="" />
				<Variable name="useLight" comment="" />
				<Variable name="weaponSet" comment="" />
				<Variable name="alias" comment="" />
				<Variable name="animationApproach" comment="" />
				<Variable name="context" comment="" />
				<Variable name="destination" comment="" />
				<Variable name="dialogInitiator" comment="" />
				<Variable name="dialogType" comment="" />
				<Variable name="finalTagpoint" comment="" />
				<Variable name="followFormationParams" comment="" />
				<Variable name="followType" comment="" />
				<Variable name="followableSoul" comment="" />
				<Variable name="followableSoulPreferedPosition" comment="" />
				<Variable name="forceLookEnabled" comment="" />
				<Variable name="formationName" comment="" />
				<Variable name="formationType" comment="" />
				<Variable name="greyOutE" comment="" />
				<Variable name="horseUsageElement" comment="" />
				<Variable name="lookTargets" comment="" />
				<Variable name="lookers" comment="" />
				<Variable name="maxPlayerDistance" comment="" />
				<Variable name="movementSpeed" comment="" />
				<Variable name="nextPhaseTrigger" comment="" />
				<Variable name="onPlayerLeft_dialogProgression" comment="" />
				<Variable name="onPlayerLeft_wait" comment="" />
				<Variable name="onPlayerLeft_waitMode" comment="" />
				<Variable name="onPlayerLeft_wait_distanceMeasurement_npc" comment="" />
				<Variable name="onTagpointReached_turnOnPlayer" comment="" />
				<Variable name="participants" comment="" />
				<Variable name="pathOffset" comment="" />
				<Variable name="startDialogOnTagpoint" comment="" />
				<Variable name="subtitlesDown" comment="" />
				<Variable name="successDistance" comment="" />
				<Variable name="successDistanceMove" comment="" />
				<Variable name="tour_hand" comment="" />
				<Variable name="tour_weaponSet" comment="" />
				<Variable name="turningCooldown" comment="" />
				<Variable name="turningCooldownVariation" comment="" />
				<Variable name="useLightMode" comment="" />
				<Variable name="useWeaponMode" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Concatenation>
						<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
					</Sequence>
				</OnInit>
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</IfCondition>
							<DefaultBranch>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</DefaultBranch>
						</Switch>
						<EntityContextPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<FuseBox hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Child>
										<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IfCondition hasInputBreakpoint="0" comment="Whether weapon should be used" breakpointFlags="0">
													<OutputBreakpoints />
													<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Switch hasInputBreakpoint="0" comment="Which weapon set to use" breakpointFlags="0">
															<OutputBreakpoints />
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<DefaultBranch>
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</DefaultBranch>
														</Switch>
														<Switch hasInputBreakpoint="0" comment="Which hand to use" breakpointFlags="0">
															<OutputBreakpoints />
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</IfCondition>
															<DefaultBranch>
																<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</Expression>
															</DefaultBranch>
														</Switch>
													</Sequence>
												</IfCondition>
												<IfCondition hasInputBreakpoint="0" comment="Whether light should be used" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
												</IfCondition>
												<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
														<Search>
															<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																</GetWeaponsFromWeaponSet>
																<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																	<OutputBreakpoints />
																	<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Fail>
																</IfCondition>
															</Sequence>
														</Search>
														<Exec>
															<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																<OutputBreakpoints />
																<Search>
																	<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																		<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<GetLightSourceItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</GetLightSourceItem>
																			</IfCondition>
																			<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																				<GetWeaponsFromWeaponSet hasInputBreakpoint="0" comment="" breakpointFlags="0">
																					<OutputBreakpoints />
																				</GetWeaponsFromWeaponSet>
																			</IfCondition>
																		</Selector>
																		<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																			<Fail hasInputBreakpoint="0" comment="" breakpointFlags="0">
																				<OutputBreakpoints />
																			</Fail>
																		</IfCondition>
																	</Sequence>
																</Search>
																<Exec>
																	<Function_speech_tour_formationHorseDesicion hasInputBreakpoint="0" comment="" breakpointFlags="0">
																		<OutputBreakpoints />
																	</Function_speech_tour_formationHorseDesicion>
																</Exec>
															</HandContentElement>
														</Exec>
													</HandContentElement>
													<Function_speech_tour_formationHorseDesicion hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Function_speech_tour_formationHorseDesicion>
												</Selector>
											</Sequence>
											<Function_speech_tour_speechInFormation hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_tour_speechInFormation>
											<Function_speech_tour_playerLeftCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Function_speech_tour_playerLeftCheck>
											<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Callback_empty>
														</IfCondition>
													</Synchronize>
												</While>
											</IfGate>
											<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</Wait>
													</EntityContext>
												</IfGate>
											</While>
										</Parallel>
									</Child>
									<OnSuccess>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Callback_empty>
										</IfCondition>
									</OnSuccess>
									<OnFail>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Callback_empty>
										</IfCondition>
									</OnFail>
								</FuseBox>
							</EntityContext>
						</EntityContextPreset>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>