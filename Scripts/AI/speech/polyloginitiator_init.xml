<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="speech_polylogInitiator_init" is_function="1">
    <Variables>
      <Variable name="keyOut" type="_int" values="" isPersistent="0" form="single" />
      <Variable name="participant" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="participantMetaroles" type="soulToMetaroles" values="" isPersistent="0" form="single" />
      <Variable name="soulToMetaroles" type="soulToMetaroles" values="" isPersistent="0" form="single" />
      <Variable name="thisToMetaroles" type="soulToMetaroles" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="metarole" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
      <Variable name="participantsMetaroles" type="soulToMetaroles" values="" isPersistent="0" form="array" requirementType="In" />
      <Variable name="soulsToMetaroles" type="soulToMetaroles" values="" isPersistent="0" form="array" requirementType="Out" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <Selector>
            <FindInArray array="$participants" keyOut="$keyOut" condition="$__value == $this.id" />
            <PushToArray array="$participants" value="$this.id" direction="Back" />
          </Selector>
          <Expression expressions="$thisToMetaroles.soul = $this.id &#10;$thisToMetaroles.metaroles = $metarole" />
          <PushToArray array="$participantsMetaroles" value="$thisToMetaroles" direction="Back" />
          <ForEach startIndex="0" step="1" array="$participants" iterator="" value="$participant" break="">
            <Sequence>
              <Expression expressions="$soulToMetaroles.soul = $participant" />
              <ForEach startIndex="0" step="1" array="$participantsMetaroles" iterator="" value="$participantMetaroles" break="">
                <IfCondition failOnCondition="false" condition="$participantMetaroles.soul == $participant">
                  <Expression expressions="$soulToMetaroles.metaroles = $participantMetaroles.metaroles" />
                </IfCondition>
              </ForEach>
              <IfElseCondition failOnCondition="false" condition="$soulToMetaroles.soul == $this.id" saveVersion="2">
                <Then canSkip="1">
                  <PushToArray array="$soulsToMetaroles" value="$soulToMetaroles" direction="Front" />
                </Then>
                <Else canSkip="1">
                  <PushToArray array="$soulsToMetaroles" value="$soulToMetaroles" direction="Back" />
                </Else>
              </IfElseCondition>
              <ReinitVariable variable="$soulToMetaroles" />
            </Sequence>
          </ForEach>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="keyOut" comment="" />
        <Variable name="participant" comment="" />
        <Variable name="participantMetaroles" comment="" />
        <Variable name="soulToMetaroles" comment="" />
        <Variable name="thisToMetaroles" comment="" />
        <Variable name="metarole" comment="" />
        <Variable name="participants" comment="" />
        <Variable name="participantsMetaroles" comment="" />
        <Variable name="soulsToMetaroles" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <FindInArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </FindInArray>
              <PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </PushToArray>
            </Selector>
            <Expression hasInputBreakpoint="0" comment="just adding metarole, and initiator wuid to the participants" breakpointFlags="0">
              <OutputBreakpoints />
            </Expression>
            <PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </PushToArray>
            <ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
                <ForEach hasInputBreakpoint="0" comment="If there are metaroles specified, copy them." breakpointFlags="0">
                  <OutputBreakpoints />
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                  </IfCondition>
                </ForEach>
                <IfElseCondition hasInputBreakpoint="0" comment="INITIATOR HAS TO BE THE FIRST SOUL IN THE ARRAY!!!" breakpointFlags="0" saveVersion="2">
                  <OutputBreakpoints />
                  <Then>
                    <PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </PushToArray>
                  </Then>
                  <Else>
                    <PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </PushToArray>
                  </Else>
                </IfElseCondition>
                <ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </ReinitVariable>
              </Sequence>
            </ForEach>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>