<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="speech_polylogInitiator" is_function="1">
    <Variables>
      <Variable name="dialogParameters" type="dialog:parameters:initiator" values="" isPersistent="0" form="single" />
      <Variable name="soulsToMetaroles" type="soulToMetaroles" values="" isPersistent="0" form="array" />
    </Variables>
    <Parameters>
      <Variable name="alias" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="animationApproach" type="enum:animationApproach" values="$enum:animationApproach.dontPlayDialogAnimations" isPersistent="0" form="single" requirementType="In" />
      <Variable name="context" type="_float" values="" isPersistent="0" form="associative" requirementType="In" optional="1" />
      <Variable name="customParameters" type="dialog:parameters:initiator" values="" isPersistent="0" form="single" requirementType="In" optional="1" />
      <Variable name="metarole" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="participants" type="_wuid" values="" isPersistent="0" form="array" requirementType="ConstReference" />
      <Variable name="participantsMetaroles" type="soulToMetaroles" values="" isPersistent="0" form="array" requirementType="In" optional="1" />
      <Variable name="preset" type="enum:dialogPreset" values="$enum:dialogPreset.ingame" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <IfElseCondition failOnCondition="false" condition="$alias ~= &apos;&apos; | $metarole ~= &apos;&apos;" saveVersion="2">
          <Then canSkip="1">
            <Sequence>
              <Function_speech_polylogInitiator_init metarole="$metarole" participants="$participants" participantsMetaroles="$participantsMetaroles" soulsToMetaroles="$soulsToMetaroles" nodeLabel="95296872" />
              <IfElseCondition failOnCondition="false" condition="$preset == $enum:dialogPreset.ignored" saveVersion="2">
                <Then canSkip="1">
                  <Expression expressions="$dialogParameters = $customParameters" />
                </Then>
                <Else canSkip="1">
                  <Function_speech_getParametersFromPreset preset="$preset" dialogParameters="$dialogParameters" nodeLabel="35954400" />
                </Else>
              </IfElseCondition>
              <Expression expressions="$dialogParameters.alias = $alias" />
              <Function_speech_getAnimationSetting animationApproach="$animationApproach" participants="$participants" animationState="$dialogParameters.defaultAnimState" nodeLabel="10858323" />
              <IfCondition failOnCondition="false" condition="$preset == $enum:dialogPreset.fader &amp; $dialogParameters.putDownCarriedBody">
                <SuppressFailure>
                  <InstantSendMessageToNPC target="$__player" type="&apos;placeBody&apos;" values="" />
                </SuppressFailure>
              </IfCondition>
              <Function_speech_dialogInitiator_inner dialogContext="$context" dialogParameters="$dialogParameters" soulsToMetaroles="$soulsToMetaroles" nodeLabel="61021951" />
            </Sequence>
          </Then>
          <Else canSkip="1">
            <ErrorNode Message="&apos;No alias or metarole provided. Dialog has to be specified by one of them.&apos;" />
          </Else>
        </IfElseCondition>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="dialogParameters" comment="" />
        <Variable name="soulsToMetaroles" comment="" />
        <Variable name="alias" comment="" />
        <Variable name="animationApproach" comment="" />
        <Variable name="context" comment="" />
        <Variable name="customParameters" comment="" />
        <Variable name="metarole" comment="" />
        <Variable name="participants" comment="" />
        <Variable name="participantsMetaroles" comment="" />
        <Variable name="preset" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
            <OutputBreakpoints />
            <Then>
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Function_speech_polylogInitiator_init hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Function_speech_polylogInitiator_init>
                <IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                  <OutputBreakpoints />
                  <Then>
                    <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Expression>
                  </Then>
                  <Else>
                    <Function_speech_getParametersFromPreset hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Function_speech_getParametersFromPreset>
                  </Else>
                </IfElseCondition>
                <Expression hasInputBreakpoint="0" comment="just adding alias to the parameters" breakpointFlags="0">
                  <OutputBreakpoints />
                </Expression>
                <Function_speech_getAnimationSetting hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Function_speech_getAnimationSetting>
                <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <InstantSendMessageToNPC hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </InstantSendMessageToNPC>
                  </SuppressFailure>
                </IfCondition>
                <Function_speech_dialogInitiator_inner hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Function_speech_dialogInitiator_inner>
              </Sequence>
            </Then>
            <Else>
              <ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </ErrorNode>
            </Else>
          </IfElseCondition>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>