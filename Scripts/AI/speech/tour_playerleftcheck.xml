<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="speech_tour_playerLeftCheck" is_function="1">
		<Variables>
			<Variable name="distanceMeasurement_currentNpc" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="dialogInitiator" type="_wuid" values="$this.id" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="distanceMeasurement_npc" type="_wuid" values="$this.id" isPersistent="0" form="single" requirementType="ConstReference" />
			<Variable name="leader" type="_wuid" values="$this.id" isPersistent="0" form="single" requirementType="In" />
			<Variable name="maxPlayerDistance" type="_float" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="progressTour" type="enum:tour_tourProgress" values="" isPersistent="0" form="single" requirementType="Reference" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Loop count="-1">
					<Sequence>
						<IfElseCondition failOnCondition="false" condition="$distanceMeasurement_npc == $__null" saveVersion="2">
							<Then canSkip="1">
								<Expression expressions="$distanceMeasurement_currentNpc = $dialogInitiator" />
							</Then>
							<Else canSkip="1">
								<Expression expressions="$distanceMeasurement_currentNpc = $distanceMeasurement_npc" />
							</Else>
						</IfElseCondition>
						<Parallel successMode="Any" failureMode="Any">
							<ContinuousSwitch>
								<IfCondition failOnCondition="false" condition="$progressTour ~= $enum:tour_tourProgress.progress">
									<DistanceGate Origin="$__player" ReferencePt="$distanceMeasurement_currentNpc" Low="$maxPlayerDistance" High="$maxPlayerDistance" Negation="false" OpenInMiddle="false" RunLogic="KeepRunning">
										<AtomicDecorator>
											<Sequence>
												<Expression expressions="$progressTour = $enum:tour_tourProgress.progress" />
												<IfCondition failOnCondition="false" condition="$leader == $this.id">
													<InstantCallback_empty EventName="&apos;OnTourStarted&apos;" />
												</IfCondition>
											</Sequence>
										</AtomicDecorator>
									</DistanceGate>
								</IfCondition>
								<IfCondition failOnCondition="false" condition="$progressTour == $enum:tour_tourProgress.progress">
									<DistanceGate Origin="$__player" ReferencePt="$distanceMeasurement_currentNpc" Low="$maxPlayerDistance" High="$maxPlayerDistance" Negation="true" OpenInMiddle="false" RunLogic="KeepRunning">
										<AtomicDecorator>
											<Sequence>
												<Expression expressions="$progressTour = $enum:tour_tourProgress.stop" />
												<IfCondition failOnCondition="false" condition="$leader == $this.id">
													<InstantCallback_empty EventName="&apos;OnTourStopped&apos;" />
												</IfCondition>
											</Sequence>
										</AtomicDecorator>
									</DistanceGate>
								</IfCondition>
							</ContinuousSwitch>
							<IfGate atomic="false" condition="$distanceMeasurement_currentNpc ~= $distanceMeasurement_npc &amp; &#10;$distanceMeasurement_currentNpc ~= $dialogInitiator" RunLogic="KeepRunning">
								<Success />
							</IfGate>
						</Parallel>
					</Sequence>
				</Loop>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="distanceMeasurement_currentNpc" comment="" />
				<Variable name="dialogInitiator" comment="" />
				<Variable name="distanceMeasurement_npc" comment="" />
				<Variable name="leader" comment="" />
				<Variable name="maxPlayerDistance" comment="" />
				<Variable name="progressTour" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-320" editorPosY="70" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Then>
								<Else>
									<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Else>
							</IfElseCondition>
							<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ContinuousSwitch hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<DistanceGate hasInputBreakpoint="0" comment="Checking whether player is close" breakpointFlags="0">
											<OutputBreakpoints />
											<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</InstantCallback_empty>
													</IfCondition>
												</Sequence>
											</AtomicDecorator>
										</DistanceGate>
									</IfCondition>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<DistanceGate hasInputBreakpoint="0" comment="Checking whether player is far" breakpointFlags="0">
											<OutputBreakpoints />
											<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</Expression>
													<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<InstantCallback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</InstantCallback_empty>
													</IfCondition>
												</Sequence>
											</AtomicDecorator>
										</DistanceGate>
									</IfCondition>
								</ContinuousSwitch>
								<IfGate hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</IfGate>
							</Parallel>
						</Sequence>
					</Loop>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>