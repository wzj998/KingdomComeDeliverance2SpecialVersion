<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="getNpcPolylogSettings" is_function="1">
		<Variables>
			<Variable name="foundMyPlace" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="index" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="npc" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="amIInitiator" type="_bool" values="" isPersistent="0" form="single" requirementType="Out" optional="1" />
			<Variable name="haveWeaponDrawn" type="_bool" values="" isPersistent="0" form="array" requirementType="In" optional="1" />
			<Variable name="myPlace" type="_wuid" values="" isPersistent="0" form="single" requirementType="Out" />
			<Variable name="npcs" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="places" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" optional="1" />
			<Variable name="shouldIHaveWeaponDrawn" type="_bool" values="" isPersistent="0" form="single" requirementType="Out" optional="1" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<IfCondition failOnCondition="false" condition="#places &gt; 0">
						<For startIndex="0" endIndex="-1" step="1" array="$npcs" iterator="$index" value="$npc" break="$foundMyPlace">
							<IfCondition failOnCondition="false" condition="$this.id == $npc">
								<Sequence>
									<Expression expressions="$myPlace = $places[$index] &#10;$foundMyPlace  = true" />
									<IfCondition failOnCondition="false" condition="#haveWeaponDrawn &gt; 0">
										<Expression expressions="$shouldIHaveWeaponDrawn = $haveWeaponDrawn[$index]" />
									</IfCondition>
								</Sequence>
							</IfCondition>
						</For>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$index == 0">
						<Expression expressions="$amIInitiator = true" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$myPlace == $__null &#10;&amp; &#10;#places &gt; 0">
						<ErrorNode Message="&apos;npc polylog bad input: Some places provided, but not for every participant&apos;" />
					</IfCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<IfElseCondition failOnCondition="false" condition="#places == 1" saveVersion="2">
				<Then canSkip="1">
					<Sequence>
						<GraphSearch Origin="$places[0]" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;teleport&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							<Nodalyzer Quantifiers="ForAll" Parent="" Child="$cutsceneTeleportPlaces" saveVersion="2" />
						</GraphSearch>
						<For startIndex="0" endIndex="-1" step="1" array="$cutsceneTeleportPlaces" iterator="$index" value="$cutsceneTeleportPlace" break="$foundMyPlace">
							<Sequence>
								<GraphSearch Origin="$cutsceneTeleportPlace" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
									<LinkTagFilter tag="&apos;setting&apos;" prune="true" negprune="unknown" Parent="" Child="$npc" Data="" />
								</GraphSearch>
								<IfCondition failOnCondition="false" condition="$npc == $this.id">
									<Expression expressions="$myPlace = $cutsceneTeleportPlace &#10;$foundMyPlace = true" />
								</IfCondition>
							</Sequence>
						</For>
					</Sequence>
				</Then>
			</IfElseCondition>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="foundMyPlace" comment="" />
				<Variable name="index" comment="" />
				<Variable name="npc" comment="" />
				<Variable name="amIInitiator" comment="" />
				<Variable name="haveWeaponDrawn" comment="" />
				<Variable name="myPlace" comment="" />
				<Variable name="npcs" comment="" />
				<Variable name="places" comment="" />
				<Variable name="shouldIHaveWeaponDrawn" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-40" editorPosY="50" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<For hasInputBreakpoint="0" comment="We are using a provided array of tagpoints" breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</IfCondition>
									</Sequence>
								</IfCondition>
							</For>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ErrorNode>
						</IfCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<IfElseCondition editorPosX="740" editorPosY="-540" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Then>
						<Sequence hasInputBreakpoint="0" comment="We are using a cutsceneTeleport links to find tagpoints" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
								<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
								</Nodalyzer>
							</GraphSearch>
							<For hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</LinkTagFilter>
									</GraphSearch>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</IfCondition>
								</Sequence>
							</For>
						</Sequence>
					</Then>
				</IfElseCondition>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>