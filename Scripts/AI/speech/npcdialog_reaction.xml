<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="npcDialog_reaction" is_function="0">
    <Variables>
      <Variable name="lockName" type="_string" values="" isPersistent="0" form="single" />
      <Variable name="myStance" type="enum:stanceCategory" values="" isPersistent="0" form="single" />
      <Variable name="stanceObject" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="awareOfIncomingNpc" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="incomingNpc" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
      <Variable name="keepStance" type="_bool" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <Concatenation OutString="$lockName" Pattern="&apos;npcdialog_movetonpc;$incomingNpc&apos;" />
          <Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;$lockName&apos;" RunLogic="Halt">
            <Sequence>
              <Selector>
                <IfCondition failOnCondition="true" condition="$keepStance">
                  <Success />
                </IfCondition>
                <IfCondition failOnCondition="true" condition="$awareOfIncomingNpc == true">
                  <Sequence>
                    <GetStance Npc="$this.id" Stance="$myStance" StanceObject="$stanceObject" />
                    <IfCondition failOnCondition="true" condition="$myStance == $enum:stanceCategory.sitting">
                      <Success />
                    </IfCondition>
                  </Sequence>
                </IfCondition>
                <StanceElement smartObject="" stance="standing" allowAny="false" enabled="true">
                  <Sequence>
                    <WaitAction />
                    <Turn target="$incomingNpc" align="false" />
                  </Sequence>
                </StanceElement>
              </Selector>
              <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
            </Sequence>
          </Synchronize>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="npcDialog_reaction" EventSet="">
      <Variables>
        <Variable name="lockName" comment="" />
        <Variable name="myStance" comment="" />
        <Variable name="stanceObject" comment="" />
        <Variable name="awareOfIncomingNpc" comment="" />
        <Variable name="incomingNpc" comment="" />
        <Variable name="keepStance" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Concatenation hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </Concatenation>
            <Synchronize hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Success>
                  </IfCondition>
                  <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <GetStance hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </GetStance>
                      <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Success>
                      </IfCondition>
                    </Sequence>
                  </IfCondition>
                  <StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </WaitAction>
                      <Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </Turn>
                    </Sequence>
                  </StanceElement>
                </Selector>
                <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                </Wait>
              </Sequence>
            </Synchronize>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>