<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="onUpdate" is_function="0">
    <Variables>
      <Variable name="addToArray" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="availableFighters" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="countAvailableFighters" type="_int" values="" isPersistent="0" form="single" />
      <Variable name="dynamicCSHolder" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="fighter" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="fighters" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="info" type="trainingGroundsFightersInfo" values="" isPersistent="0" form="single" />
      <Variable name="playerPosition" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="postFightCS" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="priorityMember" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="random" type="_int" values="" isPersistent="0" form="single" />
      <Variable name="selectedFighter" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="selectedFighters" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="tagPointToLink" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="tagPoints" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="tagPoints_value" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="teleportPosition" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="watcherPoints" type="_wuid" values="" isPersistent="0" form="array" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;postFightCS&apos;" prune="true" negprune="unknown" Parent="" Child="$postFightCS" Data="" />
          </GraphSearch>
          <GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;trainerPosition&apos;" prune="true" negprune="unknown" Parent="" Child="$teleportPosition" Data="" />
          </GraphSearch>
          <GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;playerPosition&apos;" prune="true" negprune="unknown" Parent="" Child="$playerPosition" Data="" />
          </GraphSearch>
          <GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
            <LinkTagFilter tag="&apos;dynamicCSHolder&apos;" prune="true" negprune="unknown" Parent="" Child="$dynamicCSHolder" Data="" />
          </GraphSearch>
          <Loop count="-1">
            <ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$info" senderInfo="" inbox="&apos;trainingGrounds_fighters&apos;" condition="" answerVar="">
              <AtomicDecorator>
                <Sequence>
                  <Sequence>
                    <ReinitVariable variable="$priorityMember" />
                    <ReinitVariable variable="$fighters" />
                    <GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                      <LinkTagFilter tag="&apos;priorityMember&apos;" prune="true" negprune="unknown" Parent="" Child="$priorityMember" Data="" />
                    </GraphSearch>
                    <GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                      <LinkTagFilter tag="&apos;potentionalFighter&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
                      <Nodalyzer Quantifiers="ForAll" Parent="" Child="$fighters" saveVersion="2" />
                    </GraphSearch>
                  </Sequence>
                  <VarOperation varName="$watcherPoints" targetVarName="" operation="Reinit" argument="" />
                  <GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                    <LinkTagFilter tag="&apos;watcherPoint&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
                    <Nodalyzer Quantifiers="ForAll" Parent="" Child="$watcherPoints" saveVersion="2" />
                  </GraphSearch>
                  <VarOperation varName="$availableFighters" targetVarName="" operation="Reinit" argument="" />
                  <GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                    <LinkTagFilter tag="&apos;teleportTagPoint&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
                    <Nodalyzer Quantifiers="ForAll" Parent="" Child="$tagPoints" saveVersion="2" />
                  </GraphSearch>
                  <For startIndex="0" endIndex="-1" step="1" array="$fighters" iterator="" value="$fighter" break="">
                    <Sequence>
                      <SuppressFailure>
                        <RemoveLink From="$this.id" To="$fighter" Tag="&apos;asset&apos;" LinkOpHandleMode="OverWrite" />
                      </SuppressFailure>
                      <SuppressFailure>
                        <RemoveLink From="$dynamicCSHolder" To="$fighter" Tag="&apos;fastForward&apos;" LinkOpHandleMode="OverWrite" />
                      </SuppressFailure>
                      <For startIndex="0" endIndex="-1" step="1" array="$tagPoints" iterator="" value="$tagPoints_value" break="">
                        <SuppressFailure>
                          <RemoveLink From="$tagPoints_value" To="$fighter" Tag="&apos;setting&apos;" LinkOpHandleMode="OverWrite" />
                        </SuppressFailure>
                      </For>
                      <For startIndex="0" endIndex="-1" step="1" array="$watcherPoints" iterator="" value="$tagPoints_value" break="">
                        <SuppressFailure>
                          <RemoveLink From="$tagPoints_value" To="$fighter" Tag="&apos;setting&apos;" LinkOpHandleMode="OverWrite" />
                        </SuppressFailure>
                      </For>
                      <IsUnconsciousCheck SoulWUID="$fighter" FailSubtMissing="false" saveVersion="2">
                        <Else canSkip="1">
                          <IsDeadCheck SoulWUID="$fighter" FailSubtMissing="false" saveVersion="2">
                            <Else canSkip="1">
                              <EntityContextCheck context="crime_interrupt" target="" saveVersion="2">
                                <Else canSkip="1">
                                  <PushToArray array="$availableFighters" value="$fighter" direction="Back" />
                                </Else>
                              </EntityContextCheck>
                            </Else>
                          </IsDeadCheck>
                        </Else>
                      </IsUnconsciousCheck>
                    </Sequence>
                  </For>
                  <Sequence>
                    <For startIndex="0" endIndex="-1" step="1" array="$tagPoints" iterator="" value="$tagPoints_value" break="">
                      <SuppressFailure>
                        <RemoveLink From="$tagPoints_value" To="$priorityMember" Tag="&apos;setting&apos;" LinkOpHandleMode="OverWrite" />
                      </SuppressFailure>
                    </For>
                    <PopFromArray array="$tagPoints" valueOut="$tagPointToLink" direction="Back" />
                    <AddLink From="$this.id" To="$priorityMember" Tag="&apos;asset&apos;" Data="&apos;fightersPool&apos;" LinkOpHandleMode="OverWrite" />
                    <AddLink From="$tagPointToLink" To="$priorityMember" Tag="&apos;setting&apos;" Data="" LinkOpHandleMode="OverWrite" />
                    <AddLink From="$dynamicCSHolder" To="$priorityMember" Tag="&apos;fastForward&apos;" Data="" LinkOpHandleMode="OverWrite" />
                  </Sequence>
                  <Loop count="$info.fightersCount">
                    <Sequence>
                      <Expression expressions="$countAvailableFighters = #availableFighters - 1" />
                      <GenerateRandomInteger lowerBoundary="0" upperBoundary="$countAvailableFighters" result="$random" />
                      <AddLink From="$this.id" To="$availableFighters[$random]" Tag="&apos;asset&apos;" Data="&apos;fightersPool&apos;" LinkOpHandleMode="OverWrite" />
                      <Sequence>
                        <PopFromArray array="$tagPoints" valueOut="$tagPointToLink" direction="Back" />
                        <AddLink From="$tagPointToLink" To="$availableFighters[$random]" Tag="&apos;setting&apos;" Data="" LinkOpHandleMode="OverWrite" />
                        <AddLink From="$dynamicCSHolder" To="$availableFighters[$random]" Tag="&apos;fastForward&apos;" Data="" LinkOpHandleMode="OverWrite" />
                      </Sequence>
                      <Sequence>
                        <PopFromArray array="$watcherPoints" valueOut="$tagPointToLink" direction="Back" />
                        <AddLink From="$tagPointToLink" To="$availableFighters[$random]" Tag="&apos;setting&apos;" Data="" LinkOpHandleMode="OverWrite" />
                      </Sequence>
                      <EraseFromArray array="$availableFighters" condition="$__key == $random" />
                    </Sequence>
                  </Loop>
                  <SendAIConceptSignal_trainingGrounds_readyToTeleport ready="false" />
                </Sequence>
              </AtomicDecorator>
            </ProcessMessage>
          </Loop>
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="addToArray" comment="" />
        <Variable name="availableFighters" comment="" />
        <Variable name="countAvailableFighters" comment="" />
        <Variable name="dynamicCSHolder" comment="" />
        <Variable name="fighter" comment="" />
        <Variable name="fighters" comment="" />
        <Variable name="info" comment="" />
        <Variable name="playerPosition" comment="" />
        <Variable name="postFightCS" comment="" />
        <Variable name="priorityMember" comment="" />
        <Variable name="random" comment="" />
        <Variable name="selectedFighter" comment="" />
        <Variable name="selectedFighters" comment="" />
        <Variable name="tagPointToLink" comment="" />
        <Variable name="tagPoints" comment="" />
        <Variable name="tagPoints_value" comment="" />
        <Variable name="teleportPosition" comment="" />
        <Variable name="watcherPoints" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </LinkTagFilter>
            </GraphSearch>
            <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </ReinitVariable>
                      <ReinitVariable hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </ReinitVariable>
                      <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </LinkTagFilter>
                      </GraphSearch>
                      <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </LinkTagFilter>
                        <Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                          <OutputBreakpoints />
                        </Nodalyzer>
                      </GraphSearch>
                    </Sequence>
                    <VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </VarOperation>
                    <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </LinkTagFilter>
                      <Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                        <OutputBreakpoints />
                      </Nodalyzer>
                    </GraphSearch>
                    <VarOperation hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </VarOperation>
                    <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </LinkTagFilter>
                      <Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                        <OutputBreakpoints />
                      </Nodalyzer>
                    </GraphSearch>
                    <For hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </RemoveLink>
                        </SuppressFailure>
                        <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </RemoveLink>
                        </SuppressFailure>
                        <For hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </RemoveLink>
                          </SuppressFailure>
                        </For>
                        <For hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                            <RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                              <OutputBreakpoints />
                            </RemoveLink>
                          </SuppressFailure>
                        </For>
                        <IsUnconsciousCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                          <OutputBreakpoints />
                          <Else>
                            <IsDeadCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                              <OutputBreakpoints />
                              <Else>
                                <EntityContextCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                                  <OutputBreakpoints />
                                  <Else>
                                    <PushToArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
                                      <OutputBreakpoints />
                                    </PushToArray>
                                  </Else>
                                </EntityContextCheck>
                              </Else>
                            </IsDeadCheck>
                          </Else>
                        </IsUnconsciousCheck>
                      </Sequence>
                    </For>
                    <Sequence hasInputBreakpoint="0" comment="priority member" breakpointFlags="0">
                      <OutputBreakpoints />
                      <For hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <RemoveLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </RemoveLink>
                        </SuppressFailure>
                      </For>
                      <PopFromArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </PopFromArray>
                      <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </AddLink>
                      <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </AddLink>
                      <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </AddLink>
                    </Sequence>
                    <Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                        <GenerateRandomInteger hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </GenerateRandomInteger>
                        <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </AddLink>
                        <Sequence hasInputBreakpoint="0" comment="teleport pred fightem" breakpointFlags="0">
                          <OutputBreakpoints />
                          <PopFromArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </PopFromArray>
                          <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </AddLink>
                          <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </AddLink>
                        </Sequence>
                        <Sequence hasInputBreakpoint="0" comment="teleport po fightu" breakpointFlags="0">
                          <OutputBreakpoints />
                          <PopFromArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </PopFromArray>
                          <AddLink hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </AddLink>
                        </Sequence>
                        <EraseFromArray hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </EraseFromArray>
                      </Sequence>
                    </Loop>
                    <SendAIConceptSignal_trainingGrounds_readyToTeleport hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </SendAIConceptSignal_trainingGrounds_readyToTeleport>
                  </Sequence>
                </AtomicDecorator>
              </ProcessMessage>
            </Loop>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>