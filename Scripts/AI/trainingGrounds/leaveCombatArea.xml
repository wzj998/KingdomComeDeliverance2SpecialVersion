<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="leaveCombatArea" is_function="1">
    <Variables>
      <Variable name="break" type="_bool" values="" isPersistent="0" form="single" />
      <Variable name="info" type="trainingGroundsFightersInfo" values="" isPersistent="0" form="single" />
      <Variable name="isOccupied" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="pointToRun" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="watcherPoints" type="_wuid" values="" isPersistent="0" form="array" />
      <Variable name="watcherPoints_value" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <AddBuffElement Buff="&apos;360e7fef-1051-446a-b133-7f5970af00f7&apos;">
          <Sequence>
            <Function_crime_crimeBark canBeDelayed="false" dialogContext="" dramaticBark="false" lookAt="$__player" metarole="&apos;TRAININGGROUNDS_SURRENDER&apos;" priority="$enum:crime_barkPriority.important" nodeLabel="31163900" />
            <Parallel successMode="Any" failureMode="Any">
              <AnyDecorator preset="crime_keepStateAndItems">
                <Sequence>
                  <GraphSearch Origin="$this.id" Borders="" depth="2" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;trainingGroundsSO,watcherPoint&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                    <LinkTagFilter tag="&apos;watcherPoint&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
                    <Nodalyzer Quantifiers="ForAll" Parent="" Child="$watcherPoints" saveVersion="2" />
                  </GraphSearch>
                  <ForEach startIndex="0" step="1" array="$watcherPoints" iterator="" value="$watcherPoints_value" break="$break">
                    <Sequence>
                      <Expression expressions="$isOccupied = $__null" />
                      <GraphSearch Origin="$watcherPoints_value" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;trainingGrounds_occupied&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="false" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
                        <LinkTagFilter tag="&apos;trainingGrounds_occupied&apos;" prune="true" negprune="unknown" Parent="" Child="$isOccupied" Data="" />
                      </GraphSearch>
                      <IfCondition failOnCondition="false" condition="$isOccupied == $__null">
                        <Expression expressions="$pointToRun = $watcherPoints_value &#10;$break = true" />
                      </IfCondition>
                    </Sequence>
                  </ForEach>
                  <AddLinkElement from="$pointToRun" to="$this.id" tag="&apos;trainingGrounds_occupied&apos;" data="">
                    <Sequence>
                      <ExactMove directionType="AlignWithEntity" directionSpecification="$pointToRun" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="false" destinationSpecification="$pointToRun" destinationSpecification2="" destinationSpecification3="" speed="FastRun" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" AnimationToPlay="" AnimationContext="" />
                      <Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
                    </Sequence>
                  </AddLinkElement>
                </Sequence>
              </AnyDecorator>
              <ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$info" senderInfo="" inbox="&apos;trainingGrounds_fighters&apos;" condition="" answerVar="">
                <Sequence>
                  <Success />
                </Sequence>
              </ProcessMessage>
            </Parallel>
          </Sequence>
        </AddBuffElement>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="empty" EventSet="">
      <Variables>
        <Variable name="break" comment="" />
        <Variable name="info" comment="" />
        <Variable name="isOccupied" comment="" />
        <Variable name="pointToRun" comment="" />
        <Variable name="watcherPoints" comment="" />
        <Variable name="watcherPoints_value" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-900" editorPosY="30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <AddBuffElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <Function_crime_crimeBark hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Function_crime_crimeBark>
              <Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
                <AnyDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                      </LinkTagFilter>
                      <Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
                        <OutputBreakpoints />
                      </Nodalyzer>
                    </GraphSearch>
                    <ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Expression>
                        <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </LinkTagFilter>
                        </GraphSearch>
                        <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                          <Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
                            <OutputBreakpoints />
                          </Expression>
                        </IfCondition>
                      </Sequence>
                    </ForEach>
                    <AddLinkElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                      <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                        <OutputBreakpoints />
                        <ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </ExactMove>
                        <Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
                          <OutputBreakpoints />
                        </Wait>
                      </Sequence>
                    </AddLinkElement>
                  </Sequence>
                </AnyDecorator>
                <ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
                  <OutputBreakpoints />
                  <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
                    <OutputBreakpoints />
                    <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                      <OutputBreakpoints />
                    </Success>
                  </Sequence>
                </ProcessMessage>
              </Parallel>
            </Sequence>
          </AddBuffElement>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>