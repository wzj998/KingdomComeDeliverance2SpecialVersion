<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="use" is_function="0">
		<Variables>
			<Variable name="animation" type="_string" values="" isPersistent="0" form="single" />
			<Variable name="animations" type="_string" values="" isPersistent="0" form="array" />
			<Variable name="seenResult" type="_float" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<HasGenderCheck Gender="Male" SoulWUID="$this.id" FailSubtMissing="false" saveVersion="2">
						<Then canSkip="1">
							<Expression expressions="$animations[0] = &apos;tournamentCrowd_standing_1&apos; &#10;$animations[1] = &apos;tournamentCrowd_standing_2&apos; &#10;$animations[2] = &apos;tournamentCrowd_standing_3&apos; &#10;$animations[3] = &apos;tournamentCrowd_standing_4&apos; &#10;$animations[4] = &apos;tournamentCrowd_standing_5&apos;" />
						</Then>
						<Else canSkip="1">
							<Expression expressions="$animations[0] = &apos;tournamentCrowd_standing_1&apos; &#10;$animations[1] = &apos;tournamentCrowd_standing_2&apos;" />
						</Else>
					</HasGenderCheck>
					<RandomItem Array="$animations" Result="$animation" Clamp="-1" />
					<IsFastForwarded failOnCondition="false" saveVersion="2">
						<Then canSkip="1">
							<Sequence>
								<ExactMove directionType="AlignWithEntity" directionSpecification="$__object.id" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$__object.id" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
								<Wait duration="&apos;200ms&apos;" timeType="GameTime" doFail="false" variation="&apos;100ms&apos;" />
							</Sequence>
						</Then>
						<Else canSkip="1">
							<Sequence>
								<CalculateLookDotProduct npc="$this.id" position="$__player" result="$seenResult" />
								<IfCondition failOnCondition="false" condition="$seenResult &lt; 0.7">
									<ExactMove directionType="FromVariable" directionSpecification="$__player" animationTriggerDist="0.150000" precise="false" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$__object.id" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
								</IfCondition>
							</Sequence>
						</Else>
					</IsFastForwarded>
					<Parallel successMode="Any" failureMode="Any">
						<Sequence>
							<EntityContextBarrier context="behavior_cheering_wait" target="" Negation="true" RunLogic="Halt">
								<EntityContextElement context="speech_readyForSwitchDialog" enabled="true">
									<EntityContextElement context="fistfights_cheering" enabled="true">
										<ForceLook LookTarget="$__player" DisableVariations="true">
											<Sequence>
												<UnstanceAction unstance="$animation" locationObject="" slaveObject="" />
												<Loop count="-1">
													<Sequence>
														<UnstanceElement unstance="$animation" locationObject="" slaveObject="" enabled="true">
															<RandomGate opensWithChance="0.500000" saveVersion="2">
																<Then canSkip="1">
																	<AnimationAction fragment="&apos;TournamentCrowdHappy&apos;" tags="$animation" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
																</Then>
																<Else canSkip="1">
																	<AnimationAction fragment="&apos;TournamentCrowdSad&apos;" tags="$animation" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
																</Else>
															</RandomGate>
														</UnstanceElement>
														<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="&apos;3s&apos;" />
													</Sequence>
												</Loop>
											</Sequence>
										</ForceLook>
									</EntityContextElement>
								</EntityContextElement>
							</EntityContextBarrier>
							<WaitAction />
						</Sequence>
						<Sequence>
							<Wait duration="&apos;0s&apos;" timeType="GameTime" doFail="false" variation="&apos;20s&apos;" />
							<SuppressFailure>
								<InstantSemaphore SemaphoreCount="2" LockManagerType="Local" SemaphoreName="&apos;cheeringSpot&apos;">
									<Function_speech_schedulerMonolog alias="" animationApproach="$enum:animationApproach.dontPlayDialogAnimations" context="" lookAtId="" metarole="&apos;CHEERING_SPOT_BARK&apos;" skipInLod="false" subtitlesDown="false" nodeLabel="52802187" />
								</InstantSemaphore>
							</SuppressFailure>
							<Wait duration="&apos;-1&apos;" timeType="GameTime" doFail="false" variation="" />
						</Sequence>
						<Wait duration="&apos;20s&apos;" timeType="GameTime" doFail="false" variation="&apos;5s&apos;" />
					</Parallel>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<IfGate atomic="false" condition="$seenResult &gt; 0" RunLogic="Halt" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="animation" comment="" />
				<Variable name="animations" comment="" />
				<Variable name="seenResult" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<HasGenderCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Then>
							<Else>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Else>
						</HasGenderCheck>
						<RandomItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</RandomItem>
						<IsFastForwarded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExactMove>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Then>
							<Else>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<CalculateLookDotProduct hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</CalculateLookDotProduct>
									<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<ExactMove hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ExactMove>
									</IfCondition>
								</Sequence>
							</Else>
						</IsFastForwarded>
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContextBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</UnstanceAction>
													<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
															<UnstanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
																<RandomGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
																	<OutputBreakpoints />
																	<Then>
																		<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</AnimationAction>
																	</Then>
																	<Else>
																		<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
																			<OutputBreakpoints />
																		</AnimationAction>
																	</Else>
																</RandomGate>
															</UnstanceElement>
															<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
																<OutputBreakpoints />
															</Wait>
														</Sequence>
													</Loop>
												</Sequence>
											</ForceLook>
										</EntityContextElement>
									</EntityContextElement>
								</EntityContextBarrier>
								<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</WaitAction>
							</Sequence>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
								<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<InstantSemaphore hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_speech_schedulerMonolog>
									</InstantSemaphore>
								</SuppressFailure>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
							<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Wait>
						</Parallel>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<IfGate editorPosX="1540" editorPosY="-350" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</IfGate>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>