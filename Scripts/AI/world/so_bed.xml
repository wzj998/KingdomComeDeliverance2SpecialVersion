<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="use" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<EntityContextCheck context="crime_sleeping" target="" saveVersion="2">
						<Then canSkip="1">
							<StanceCheck soul="$this.id" stance="lying" smartObject="$__object.id" negate="true" failOnCondition="false" saveVersion="2">
								<Then canSkip="1">
									<IsFastForwarded failOnCondition="false" saveVersion="2">
										<Else canSkip="1">
											<WaitAction />
										</Else>
									</IsFastForwarded>
								</Then>
								<Else canSkip="1">
									<Success />
								</Else>
							</StanceCheck>
						</Then>
					</EntityContextCheck>
					<StanceElement smartObject="$__object.id" stance="lying" allowAny="false" enabled="true">
						<AddBuffElement Buff="&apos;cbbedb16-8ab8-4583-b740-a0e8a2521d95&apos;" enabled="true">
							<EntityContextPresetElement contextPreset="sleeping" enabled="true">
								<Sequence>
									<WaitAction />
									<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
								</Sequence>
							</EntityContextPresetElement>
						</AddBuffElement>
					</StanceElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="-10" editorPosY="-40" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<EntityContextCheck hasInputBreakpoint="0" comment="KCD2-441302" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<StanceCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<IsFastForwarded hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Else>
												<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WaitAction>
											</Else>
										</IsFastForwarded>
									</Then>
									<Else>
										<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Success>
									</Else>
								</StanceCheck>
							</Then>
						</EntityContextCheck>
						<StanceElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AddBuffElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<EntityContextPresetElement hasInputBreakpoint="0" comment="NPCs refuse to talk while asleep" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</WaitAction>
										<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Wait>
									</Sequence>
								</EntityContextPresetElement>
							</AddBuffElement>
						</StanceElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="usedByPlayer" is_function="0">
		<Variables>
			<Variable name="awareness" type="switch:awareness" values="" isPersistent="0" form="single" />
			<Variable name="playerOnBed" type="_bool" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Move stopWithinDistance="2.000000" stopDistanceVariation="0.100000" rayCasteFlee="false" successDistance="0.000000" changeNPCState="true" fastForwardIncludesMove="true" destinationSpecification="$__object.id" destinationSpecification2="" destinationSpecification3="" speed="Walk" additionalParams="" pathFindingParams="" staminaPolicy="" pathInfo="" />
					<Turn target="$__object.id" align="false" />
					<AtomicDecorator>
						<Sequence>
							<StanceCheck soul="$__player" stance="lying" smartObject="$__object.id" negate="false" failOnCondition="false" saveVersion="2">
								<Then canSkip="1">
									<Expression expressions="$playerOnBed = true" />
								</Then>
								<Else canSkip="1">
									<StanceCheck soul="$__player" stance="sitting" smartObject="$__object.id" negate="false" failOnCondition="false" saveVersion="2">
										<Then canSkip="1">
											<Expression expressions="$playerOnBed = true" />
										</Then>
									</StanceCheck>
								</Else>
							</StanceCheck>
							<IfCondition failOnCondition="false" condition="$playerOnBed">
								<Sequence>
									<Expression expressions="$awareness.perceptible = $__player" />
									<Function_switch_handleAwareness awareness="$awareness" nodeLabel="92638204" />
								</Sequence>
							</IfCondition>
						</Sequence>
					</AtomicDecorator>
					<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="awareness" comment="" />
				<Variable name="playerOnBed" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="10" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Move hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Move>
						<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Turn>
						<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<StanceCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Then>
									<Else>
										<StanceCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Then>
										</StanceCheck>
									</Else>
								</StanceCheck>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
										<Function_switch_handleAwareness hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Function_switch_handleAwareness>
									</Sequence>
								</IfCondition>
							</Sequence>
						</AtomicDecorator>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>