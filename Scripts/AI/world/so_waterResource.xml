<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="drink" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnimationAction fragment="&apos;HousekeeperDrinkWaterSpruit&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</AnimationAction>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="getWater" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2" />
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="launder" is_function="0">
		<Variables>
			<Variable name="item" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="laundrySmacker" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="setAssideSlot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<CategoryFilter categories="&apos;laundrySmacker&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
						<Nodalyzer Quantifiers="Exists" Parent="" Child="$laundrySmacker" saveVersion="2" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<CategoryFilter categories="&apos;laundryBasketAssideSlot&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
						<Nodalyzer Quantifiers="Exists" Parent="" Child="$setAssideSlot" saveVersion="2" />
					</GraphSearch>
					<HandContentElement hand="Right" item="$item" allowAny="false" decisionLabel="housekeeper_laundry_basket" useDecision="true" enabled="true" saveVersion="2">
						<Search canSkip="1">
							<ErrorNode Message="&apos;trying to use search in launder HCE&apos;" />
						</Search>
						<Exec canSkip="1">
							<EntityContext context="situation_suppressGossipParticipation" target="">
								<EntityContextElement context="situation_suppressGossipParticipation" enabled="true">
									<Sequence>
										<UnstanceAction unstance="housekeeper_laundry" locationObject="$__object.id" slaveObject="" />
										<Wait duration="&apos;15s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
									</Sequence>
								</EntityContextElement>
							</EntityContext>
						</Exec>
					</HandContentElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="item" comment="" />
				<Variable name="laundrySmacker" comment="" />
				<Variable name="setAssideSlot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<CategoryFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</CategoryFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<CategoryFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</CategoryFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ErrorNode>
							</Search>
							<Exec>
								<EntityContext hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<EntityContextElement hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</UnstanceAction>
											<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Wait>
										</Sequence>
									</EntityContextElement>
								</EntityContext>
							</Exec>
						</HandContentElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="washFace" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnimationAction fragment="&apos;WashFace&apos;" tags="&apos;washFaceStream&apos;" eventReferenceObject="" alignObject="$__object.id" alignHelper="-2" context="" keepContext="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<OutputBreakpoints />
					</AnimationAction>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="takeWater" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Success />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Success>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="getWaterSpruit" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnimationAction fragment="&apos;CampGetWaterSpruit&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" alignHelper="-2" context="" keepContext="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="-10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<OutputBreakpoints />
					</AnimationAction>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="drinkSpruit" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnimationAction fragment="&apos;CampDrinkSpruit&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" alignHelper="-2" context="" keepContext="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<OutputBreakpoints />
					</AnimationAction>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="campWashFace" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnimationAction fragment="&apos;WashFace&apos;" tags="&apos;washFaceStream&apos;" eventReferenceObject="" alignObject="$__object.id" alignHelper="-2" context="" keepContext="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<OutputBreakpoints />
					</AnimationAction>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="onUpdate" is_function="0">
		<Variables>
			<Variable name="onInteractionMessage" type="interactionModule:onInteraction" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<While doFail="false" propagateChildFail="false" condition="true">
					<ProcessMessage Atomic="true" timeout="&apos;-1&apos;" timeType="GameTime" variable="$onInteractionMessage" senderInfo="" inbox="&apos;interactionModule&apos;" condition="" answerVar="">
						<IfElseCondition failOnCondition="false" condition="$onInteractionMessage.isHoldAction" saveVersion="2">
							<Then canSkip="1">
								<AddInterrupt Target="$__player" Host="$this.id" Behavior="&apos;washSoap_player&apos;" Priority="200" IgnorePriorityOnPreviousInterrupt="false" urgency="Instant" Aliveness="Alive" Privileged="false" FastForward="false" />
							</Then>
							<Else canSkip="1">
								<AddInterrupt Target="$__player" Host="$this.id" Behavior="&apos;washFace_player&apos;" Priority="200" IgnorePriorityOnPreviousInterrupt="false" urgency="Instant" Aliveness="Alive" Privileged="false" FastForward="false" />
							</Else>
						</IfElseCondition>
					</ProcessMessage>
				</While>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="onInteractionMessage" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Then>
									<AddInterrupt hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AddInterrupt>
								</Then>
								<Else>
									<AddInterrupt hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</AddInterrupt>
								</Else>
							</IfElseCondition>
						</ProcessMessage>
					</While>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="washFace_player" is_function="0">
		<Variables>
			<Variable name="cleanAmount" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="gloves" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hasFrejir" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="helmet" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<LuaWrapper onEnter="player.player:OnEnterInteractive(); &#10;Game.AddSaveLock(&apos;waterTub&apos;, &apos;@ui_cant_save_other&apos;);" onExit="player.player:OnEndInteractive(); &#10;Game.RemoveSaveLock(&apos;waterTub&apos;);">
					<Sequence>
						<AtomicDecorator>
							<Sequence>
								<SuppressFailure>
									<Sequence>
										<Selector>
											<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;inventory&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<ItemClassFilter ClassId="" Category="&apos;armor.Gloves.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
												<ItemParamFilter Param="Equip" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
												<Nodalyzer Quantifiers="Exists" Parent="" Child="$gloves" saveVersion="2" />
											</GraphSearch>
											<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;inventory&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<ItemClassFilter ClassId="" Category="&apos;armor.Gauntlets.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
												<ItemParamFilter Param="Equip" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
												<Nodalyzer Quantifiers="Exists" Parent="" Child="$gloves" saveVersion="2" />
											</GraphSearch>
										</Selector>
										<IfCondition failOnCondition="false" condition="$gloves ~= $__null">
											<UnEquipItem Target="$this.id" item="$gloves" />
										</IfCondition>
										<HandCheck who="" LeftHand="$leftHand" RightHand="$rightHand" />
									</Sequence>
								</SuppressFailure>
								<SuppressFailure>
									<Sequence>
										<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;inventory&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<ItemClassFilter ClassId="" Category="&apos;armor.BascinetVisor.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
											<ItemParamFilter Param="Equip" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
											<Nodalyzer Quantifiers="Exists" Parent="" Child="$helmet" saveVersion="2" />
										</GraphSearch>
										<IfCondition failOnCondition="false" condition="$helmet ~= $__null">
											<UnEquipItem Target="$this.id" item="$helmet" />
										</IfCondition>
									</Sequence>
								</SuppressFailure>
								<HasPerk SoulWUID="" Perk="&apos;9bf2f471-79e7-43d1-97a4-8bf238c5ddfd&apos;" Value="$hasFrejir" UsePerk="false" />
								<IfElseCondition failOnCondition="false" condition="$hasFrejir" saveVersion="2">
									<Then canSkip="1">
										<Expression expressions="$cleanAmount = 1" />
									</Then>
									<Else canSkip="1">
										<Expression expressions="$cleanAmount = 0.8" />
									</Else>
								</IfElseCondition>
							</Sequence>
						</AtomicDecorator>
						<ActorStateBarrier Who="" ToState="actorAnim" NegateTo="false" RunLogic="KeepRunning">
							<Sequence>
								<Wait duration="&apos;3000ms&apos;" timeType="GameTime" doFail="false" variation="" />
								<AtomicDecorator>
									<Sequence>
										<IfCondition failOnCondition="false" condition="$gloves ~= $__null">
											<EquipItem item="$gloves" Target="$this.id" />
										</IfCondition>
										<WashEquipped Target="" UseSoap="false" MaxWashing="0.300000" MaxCleaning="$cleanAmount" AllOutfits="false" />
										<IfCondition failOnCondition="false" condition="$__playerDog ~= $__null">
											<WashEquipped Target="$__playerDog" UseSoap="false" MaxWashing="1.000000" MaxCleaning="1.000000" AllOutfits="false" />
										</IfCondition>
										<IfCondition failOnCondition="false" condition="$gloves ~= $__null">
											<UnEquipItem Target="$this.id" item="$gloves" />
										</IfCondition>
									</Sequence>
								</AtomicDecorator>
							</Sequence>
						</ActorStateBarrier>
						<ActorStateBarrier Who="" ToState="actorAnim" NegateTo="true" RunLogic="KeepRunning">
							<AtomicDecorator>
								<Sequence>
									<IfCondition failOnCondition="false" condition="$gloves ~= $__null">
										<EquipItem item="$gloves" Target="$this.id" />
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$helmet ~= $__null">
										<EquipItem item="$helmet" Target="$this.id" />
									</IfCondition>
									<RemoveBuffs SoulWUID="" BuffGUID="&apos;1aa6a7cc-4cee-4b73-8080-562bebc21443&apos;" BuffTagId="-1" />
									<RemoveBuffs SoulWUID="" BuffGUID="&apos;b0b520e9-a85f-4698-ad8c-e46ea32d7d65&apos;" BuffTagId="-1" />
									<RemoveBuffs SoulWUID="" BuffGUID="&apos;a047a33e-4715-41c1-977f-1a5f454e30e7&apos;" BuffTagId="-1" />
									<RemoveBuffs SoulWUID="" BuffGUID="&apos;714a027c-b5d4-4816-a1d3-f89764997bde&apos;" BuffTagId="-1" />
									<RemoveBuffs SoulWUID="" BuffGUID="&apos;b6ab81fb-5c59-47ac-8ca1-a4f9a97f1828&apos;" BuffTagId="-1" />
									<RemoveBuffs SoulWUID="" BuffGUID="&apos;5d07a436-c01f-4062-b5c4-0c3ec3c8185d&apos;" BuffTagId="-1" />
									<RemoveBuffs SoulWUID="" BuffGUID="&apos;caf16a25-b138-46bf-b7d3-63f8b2e9bb91&apos;" BuffTagId="-1" />
									<RemoveBuffs SoulWUID="" BuffGUID="&apos;43cd3832-7a94-45e2-95f9-a8632fc861b8&apos;" BuffTagId="-1" />
									<RemoveBuffs SoulWUID="" BuffGUID="&apos;3190c8ba-5aa2-4825-9e96-03387983f9cd&apos;" BuffTagId="-1" />
									<ExecuteLua code="Game.SendInfoText(&apos;@waterPier_wash_text&apos;,false)" />
									<SendAIConceptSignal_waterTub_playerWashNotification />
								</Sequence>
							</AtomicDecorator>
						</ActorStateBarrier>
					</Sequence>
				</LuaWrapper>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="cleanAmount" comment="" />
				<Variable name="gloves" comment="" />
				<Variable name="hasFrejir" comment="" />
				<Variable name="helmet" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="10" editorPosY="-20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<LuaWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ItemClassFilter>
													<ItemParamFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ItemParamFilter>
													<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
													</Nodalyzer>
												</GraphSearch>
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ItemClassFilter>
													<ItemParamFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ItemParamFilter>
													<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
													</Nodalyzer>
												</GraphSearch>
											</Selector>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UnEquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</UnEquipItem>
											</IfCondition>
											<HandCheck hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</HandCheck>
										</Sequence>
									</SuppressFailure>
									<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ItemClassFilter>
												<ItemParamFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ItemParamFilter>
												<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
												</Nodalyzer>
											</GraphSearch>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UnEquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</UnEquipItem>
											</IfCondition>
										</Sequence>
									</SuppressFailure>
									<HasPerk hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</HasPerk>
									<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Then>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Then>
										<Else>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Else>
									</IfElseCondition>
								</Sequence>
							</AtomicDecorator>
							<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<EquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</EquipItem>
											</IfCondition>
											<WashEquipped hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</WashEquipped>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<WashEquipped hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WashEquipped>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UnEquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</UnEquipItem>
											</IfCondition>
										</Sequence>
									</AtomicDecorator>
								</Sequence>
							</ActorStateBarrier>
							<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<EquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</EquipItem>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<EquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</EquipItem>
										</IfCondition>
										<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RemoveBuffs>
										<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RemoveBuffs>
										<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RemoveBuffs>
										<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RemoveBuffs>
										<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RemoveBuffs>
										<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RemoveBuffs>
										<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RemoveBuffs>
										<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RemoveBuffs>
										<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RemoveBuffs>
										<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</ExecuteLua>
										<SendAIConceptSignal_waterTub_playerWashNotification hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SendAIConceptSignal_waterTub_playerWashNotification>
									</Sequence>
								</AtomicDecorator>
							</ActorStateBarrier>
						</Sequence>
					</LuaWrapper>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="washSoap_player" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<WashingMinigame />
			</Behavior>
		</Root>
		<ForestContainer>
			<AnimationAction fragment="&apos;PickingHerbs&apos;" tags="" eventReferenceObject="" alignObject="" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="-20" editorPosY="80" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<WashingMinigame hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</WashingMinigame>
				</Behavior>
			</Root>
			<Forest>
				<AnimationAction editorPosX="410" editorPosY="80" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</AnimationAction>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="launderStone" is_function="0">
		<Variables>
			<Variable name="item" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="laundrySmacker" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="setAssideSlot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<CategoryFilter categories="&apos;laundrySmacker&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
						<Nodalyzer Quantifiers="Exists" Parent="" Child="$laundrySmacker" saveVersion="2" />
					</GraphSearch>
					<GraphSearch Origin="$__object.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<CategoryFilter categories="&apos;laundryBasketAssideSlot&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
						<Nodalyzer Quantifiers="Exists" Parent="" Child="$setAssideSlot" saveVersion="2" />
					</GraphSearch>
					<Function_findItemOnSlot linkName="&apos;laundryBasket&apos;" npc="$this.id" searchOrigin="$__object.id" item="$item" nodeLabel="36137655" />
					<HandContentElement hand="Right" item="$item" allowAny="false" decisionLabel="Label1" useDecision="true" saveVersion="2">
						<Search canSkip="1">
							<Success />
						</Search>
						<Exec canSkip="1">
							<Sequence>
								<UnstanceAction unstance="housekeeper_laundry_stone" locationObject="$__object.id" slaveObject="" />
								<Wait duration="&apos;10s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
							</Sequence>
						</Exec>
					</HandContentElement>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="item" comment="" />
				<Variable name="laundrySmacker" comment="" />
				<Variable name="setAssideSlot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<CategoryFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</CategoryFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<CategoryFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</CategoryFilter>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
						<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Function_findItemOnSlot>
						<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Search>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Search>
							<Exec>
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<OutputBreakpoints />
									</UnstanceAction>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Exec>
						</HandContentElement>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>