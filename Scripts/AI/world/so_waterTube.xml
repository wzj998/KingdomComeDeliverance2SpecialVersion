<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="onUpdate" is_function="0">
		<Variables>
			<Variable name="onInteractionMessage" type="interactionModule:onInteraction" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<While doFail="false" propagateChildFail="false" condition="true">
					<ProcessMessage Atomic="false" timeout="&apos;-1&apos;" timeType="GameTime" variable="$onInteractionMessage" senderInfo="" inbox="&apos;interactionModule&apos;" condition="" answerVar="">
						<AddInterrupt Target="$__player" Host="$this.id" Behavior="&apos;washFace_player&apos;" Priority="200" IgnorePriorityOnPreviousInterrupt="false" urgency="Instant" Aliveness="Alive" Privileged="false" FastForward="false" />
					</ProcessMessage>
				</While>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="onInteractionMessage" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="140" editorPosY="30" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<While hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ProcessMessage hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<AddInterrupt hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</AddInterrupt>
						</ProcessMessage>
					</While>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="washFace_player" is_function="0">
		<Variables>
			<Variable name="cleanAmount" type="_float" values="" isPersistent="0" form="single" />
			<Variable name="gloves" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="hasFrejir" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="helmet" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="leftHand" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="rightHand" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<LuaWrapper onEnter="player.player:OnEnterInteractive(); &#10;Game.AddSaveLock(&apos;waterTub&apos;, &apos;@ui_cant_save_other&apos;);" onExit="player.player:OnEndInteractive(); &#10;Game.RemoveSaveLock(&apos;waterTub&apos;);">
					<Sequence>
						<ActorStateBarrier Who="" ToState="idle" NegateTo="false" RunLogic="KeepRunning">
							<AtomicDecorator>
								<Sequence>
									<SuppressFailure>
										<Sequence>
											<Selector>
												<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;inventory&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<ItemClassFilter ClassId="" Category="&apos;armor.Gloves.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemParamFilter Param="Equip" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<Nodalyzer Quantifiers="Exists" Parent="" Child="$gloves" saveVersion="2" />
												</GraphSearch>
												<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;inventory&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
													<ItemClassFilter ClassId="" Category="&apos;armor.Gauntlets.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<ItemParamFilter Param="Equip" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
													<Nodalyzer Quantifiers="Exists" Parent="" Child="$gloves" saveVersion="2" />
												</GraphSearch>
											</Selector>
											<IfCondition failOnCondition="false" condition="$gloves ~= $__null">
												<UnEquipItem Target="$this.id" item="$gloves" />
											</IfCondition>
										</Sequence>
									</SuppressFailure>
									<SuppressFailure>
										<Sequence>
											<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;inventory&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
												<ItemClassFilter ClassId="" Category="&apos;armor.BascinetVisor.*&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
												<ItemParamFilter Param="Equip" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
												<Nodalyzer Quantifiers="Exists" Parent="" Child="$helmet" saveVersion="2" />
											</GraphSearch>
											<IfCondition failOnCondition="false" condition="$helmet ~= $__null">
												<UnEquipItem Target="$this.id" item="$helmet" />
											</IfCondition>
										</Sequence>
									</SuppressFailure>
									<HasPerk SoulWUID="" Perk="&apos;9bf2f471-79e7-43d1-97a4-8bf238c5ddfd&apos;" Value="$hasFrejir" UsePerk="false" />
									<IfElseCondition failOnCondition="false" condition="$hasFrejir" saveVersion="2">
										<Then canSkip="1">
											<Expression expressions="$cleanAmount = 1" />
										</Then>
										<Else canSkip="1">
											<Expression expressions="$cleanAmount = 0.8" />
										</Else>
									</IfElseCondition>
								</Sequence>
							</AtomicDecorator>
						</ActorStateBarrier>
						<ActorStateBarrier Who="" ToState="actorAnim" NegateTo="false" RunLogic="KeepRunning">
							<Sequence>
								<Wait duration="&apos;3300ms&apos;" timeType="GameTime" doFail="false" variation="" />
								<AtomicDecorator>
									<Sequence>
										<IfCondition failOnCondition="false" condition="$gloves ~= $__null">
											<EquipItem item="$gloves" Target="$this.id" />
										</IfCondition>
										<IfCondition failOnCondition="false" condition="$helmet ~= $__null">
											<EquipItem item="$helmet" Target="$this.id" />
										</IfCondition>
										<WashEquipped Target="" UseSoap="false" MaxWashing="0.300000" MaxCleaning="$cleanAmount" AllOutfits="false" />
										<IfCondition failOnCondition="false" condition="$__playerDog ~= $__null">
											<WashEquipped Target="$__playerDog" UseSoap="false" MaxWashing="1.000000" MaxCleaning="1.000000" AllOutfits="false" />
										</IfCondition>
										<IfCondition failOnCondition="false" condition="$helmet ~= $__null">
											<UnEquipItem Target="$this.id" item="$helmet" />
										</IfCondition>
										<IfCondition failOnCondition="false" condition="$gloves ~= $__null">
											<UnEquipItem Target="$this.id" item="$gloves" />
										</IfCondition>
									</Sequence>
								</AtomicDecorator>
							</Sequence>
						</ActorStateBarrier>
						<ActorStateBarrier Who="" ToState="actorAnim" NegateTo="true" RunLogic="KeepRunning">
							<AtomicDecorator>
								<Sequence>
									<IfCondition failOnCondition="false" condition="$gloves ~= $__null">
										<EquipItem item="$gloves" Target="$this.id" />
									</IfCondition>
									<IfCondition failOnCondition="false" condition="$helmet ~= $__null">
										<EquipItem item="$helmet" Target="$this.id" />
									</IfCondition>
									<RemoveBuffs SoulWUID="" BuffGUID="&apos;1aa6a7cc-4cee-4b73-8080-562bebc21443&apos;" BuffTagId="-1" />
									<RemoveBuffs SoulWUID="" BuffGUID="&apos;b0b520e9-a85f-4698-ad8c-e46ea32d7d65&apos;" BuffTagId="-1" />
									<RemoveBuffs SoulWUID="" BuffGUID="&apos;a047a33e-4715-41c1-977f-1a5f454e30e7&apos;" BuffTagId="-1" />
									<RemoveBuffs SoulWUID="" BuffGUID="&apos;714a027c-b5d4-4816-a1d3-f89764997bde&apos;" BuffTagId="-1" />
									<RemoveBuffs SoulWUID="" BuffGUID="&apos;b6ab81fb-5c59-47ac-8ca1-a4f9a97f1828&apos;" BuffTagId="-1" />
									<RemoveBuffs SoulWUID="" BuffGUID="&apos;5d07a436-c01f-4062-b5c4-0c3ec3c8185d&apos;" BuffTagId="-1" />
									<RemoveBuffs SoulWUID="" BuffGUID="&apos;caf16a25-b138-46bf-b7d3-63f8b2e9bb91&apos;" BuffTagId="-1" />
									<RemoveBuffs SoulWUID="" BuffGUID="&apos;43cd3832-7a94-45e2-95f9-a8632fc861b8&apos;" BuffTagId="-1" />
									<RemoveBuffs SoulWUID="" BuffGUID="&apos;3190c8ba-5aa2-4825-9e96-03387983f9cd&apos;" BuffTagId="-1" />
									<IfElseCondition failOnCondition="false" condition="$hasFrejir" saveVersion="2">
										<Then canSkip="1">
											<ExecuteLua code="Game.SendInfoText(&apos;@notifikac_oplach_ses_UZGJ&apos;,false)" />
										</Then>
										<Else canSkip="1">
											<ExecuteLua code="Game.SendInfoText(&apos;@notifikac_oplachl_ses_jak_G7fE&apos;,false)" />
										</Else>
									</IfElseCondition>
									<SendAIConceptSignal_waterTub_playerWashNotification />
								</Sequence>
							</AtomicDecorator>
						</ActorStateBarrier>
					</Sequence>
				</LuaWrapper>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="cleanAmount" comment="" />
				<Variable name="gloves" comment="" />
				<Variable name="hasFrejir" comment="" />
				<Variable name="helmet" comment="" />
				<Variable name="leftHand" comment="" />
				<Variable name="rightHand" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<LuaWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<Selector hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemParamFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemParamFilter>
														<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
														</Nodalyzer>
													</GraphSearch>
													<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
														<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemClassFilter>
														<ItemParamFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
															<OutputBreakpoints />
														</ItemParamFilter>
														<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
															<OutputBreakpoints />
														</Nodalyzer>
													</GraphSearch>
												</Selector>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<UnEquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</UnEquipItem>
												</IfCondition>
											</Sequence>
										</SuppressFailure>
										<SuppressFailure hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<ItemClassFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ItemClassFilter>
													<ItemParamFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</ItemParamFilter>
													<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
														<OutputBreakpoints />
													</Nodalyzer>
												</GraphSearch>
												<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
													<UnEquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
														<OutputBreakpoints />
													</UnEquipItem>
												</IfCondition>
											</Sequence>
										</SuppressFailure>
										<HasPerk hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</HasPerk>
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Then>
											<Else>
												<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</Expression>
											</Else>
										</IfElseCondition>
									</Sequence>
								</AtomicDecorator>
							</ActorStateBarrier>
							<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<EquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</EquipItem>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<EquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</EquipItem>
											</IfCondition>
											<WashEquipped hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</WashEquipped>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<WashEquipped hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</WashEquipped>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UnEquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</UnEquipItem>
											</IfCondition>
											<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<UnEquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</UnEquipItem>
											</IfCondition>
										</Sequence>
									</AtomicDecorator>
								</Sequence>
							</ActorStateBarrier>
							<ActorStateBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AtomicDecorator hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<EquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</EquipItem>
										</IfCondition>
										<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<EquipItem hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</EquipItem>
										</IfCondition>
										<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RemoveBuffs>
										<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RemoveBuffs>
										<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RemoveBuffs>
										<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RemoveBuffs>
										<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RemoveBuffs>
										<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RemoveBuffs>
										<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RemoveBuffs>
										<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RemoveBuffs>
										<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</RemoveBuffs>
										<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ExecuteLua>
											</Then>
											<Else>
												<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</ExecuteLua>
											</Else>
										</IfElseCondition>
										<SendAIConceptSignal_waterTub_playerWashNotification hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</SendAIConceptSignal_waterTub_playerWashNotification>
									</Sequence>
								</AtomicDecorator>
							</ActorStateBarrier>
						</Sequence>
					</LuaWrapper>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="drink" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnimationAction fragment="&apos;HousekeeperDrinkWaterTub&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</AnimationAction>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="getWater" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnimationAction fragment="&apos;FarmerGetWater&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" alignHelper="-2" context="" keepContext="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<OutputBreakpoints />
					</AnimationAction>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="washFace" is_function="0">
		<Variables>
			<Variable name="helperId" type="_int" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<UnstanceAction unstance="housekeeper_faceWash" locationObject="$__object.id" slaveObject="" />
			</Behavior>
		</Root>
		<ForestContainer>
			<HasGenderCheck Gender="Male" SoulWUID="$this.id" FailSubtMissing="false" saveVersion="2">
				<Else canSkip="1">
					<AnimationAction fragment="&apos;WashFace&apos;" tags="&apos;washFaceTub&apos;" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
				</Else>
			</HasGenderCheck>
			<Sequence>
				<Wait duration="&apos;2s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
			</Sequence>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="helperId" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</UnstanceAction>
				</Behavior>
			</Root>
			<Forest>
				<HasGenderCheck editorPosX="-50" editorPosY="-340" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Else>
						<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</AnimationAction>
					</Else>
				</HasGenderCheck>
				<Sequence editorPosX="120" editorPosY="160" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Wait>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="campDrink" is_function="0">
		<Variables>
			<Variable name="helperId" type="_int" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnimationAction fragment="&apos;CampDrinkWatertube&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="helperId" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</AnimationAction>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="refillWatertube" is_function="0">
		<Variables>
			<Variable name="animObject" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="isWell" type="_bool" values="false" isPersistent="0" form="single" />
			<Variable name="item" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="setAssideSlot" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<ExecuteLua code="local soEntity = XGenAIModule.GetEntityByWUID(data.__resource.id); &#10;local source = EntityUtils.GetScriptProperty(soEntity,&apos;source&apos;); &#10;data.isWell = source == &quot;well&quot;;" />
			</OnInit>
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$item" allowAny="false" decisionLabel="housekeeper_refillWatertube_bucket" useDecision="true" enabled="true" saveVersion="2">
					<Search canSkip="1">
						<ErrorNode Message="&apos;trying to use search in refillWatertube HCE&apos;" />
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<LuaGate code="--Dump(soEntity.Properties.sWH_AI_EntityCategory); &#10;return EntityUtils.GetEntityCategory(XGenAIModule.GetEntityByWUID(data.__resource.id)) == &apos;well&apos;" saveVersion="2">
								<Then canSkip="1">
									<Sequence>
										<GraphSearch Origin="$__resource.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;slot&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
											<Nodalyzer Quantifiers="Exists" Parent="" Child="$setAssideSlot" saveVersion="2" />
										</GraphSearch>
										<GraphSearch Origin="$__resource.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
											<LinkTagFilter tag="&apos;animObject&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
											<Nodalyzer Quantifiers="Exists" Parent="" Child="$animObject" saveVersion="2" />
										</GraphSearch>
										<AnimationAction fragment="&apos;Well&apos;" tags="&apos;well&apos;" eventReferenceObject="" alignObject="$__resource.id" slaveObject="$animObject" resourceOverride="" allowTorchForPlayer="false">
											<EventData_place Slot="$setAssideSlot" name="&apos;placeBucket&apos;" />
											<EventData_pickup Slot="$setAssideSlot" name="&apos;pickupBucket&apos;" />
											<EventData_phaseitem Slot="$setAssideSlot" name="&apos;phaseBucket&apos;" />
										</AnimationAction>
									</Sequence>
								</Then>
								<Else canSkip="1">
									<LuaGate code="return EntityUtils.GetEntityCategory(XGenAIModule.GetEntityByWUID(data.__resource.id)) == &apos;watertube&apos;" saveVersion="2">
										<Then canSkip="1">
											<AnimationAction fragment="&apos;HousekeeperWaterFromTube&apos;" tags="" eventReferenceObject="" alignObject="$__resource.id" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
										</Then>
										<Else canSkip="1">
											<UnstanceAction unstance="housekeeper_bucketFillWaterResource" locationObject="$__resource.id" slaveObject="" />
										</Else>
									</LuaGate>
								</Else>
							</LuaGate>
							<AnimationAction fragment="&apos;BucketPour&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="" allowTorchForPlayer="false" />
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="animObject" comment="" />
				<Variable name="isWell" comment="" />
				<Variable name="item" comment="" />
				<Variable name="setAssideSlot" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-330" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</ExecuteLua>
				</OnInit>
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<ErrorNode hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</ErrorNode>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LuaGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
									<OutputBreakpoints />
									<Then>
										<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
												<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
												</Nodalyzer>
											</GraphSearch>
											<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</LinkTagFilter>
												<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
													<OutputBreakpoints />
												</Nodalyzer>
											</GraphSearch>
											<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
												<EventData_place hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</EventData_place>
												<EventData_pickup hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</EventData_pickup>
												<EventData_phaseitem hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</EventData_phaseitem>
											</AnimationAction>
										</Sequence>
									</Then>
									<Else>
										<LuaGate hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
											<OutputBreakpoints />
											<Then>
												<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</AnimationAction>
											</Then>
											<Else>
												<UnstanceAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
													<OutputBreakpoints />
												</UnstanceAction>
											</Else>
										</LuaGate>
									</Else>
								</LuaGate>
								<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</AnimationAction>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="refillWatertube_waterResource" is_function="0">
		<Variables>
			<Variable name="item" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<HandContentElement hand="Right" item="$item" allowAny="false" decisionLabel="Label1" saveVersion="2">
					<Search canSkip="1">
						<Function_findItemOnSlot linkName="&apos;bucket&apos;" npc="$this.id" searchOrigin="$__object.id" item="$item" nodeLabel="53648825" />
					</Search>
					<Exec canSkip="1">
						<Sequence>
							<AnimationAction fragment="" tags="" eventReferenceObject="" alignObject="$__resource.id" />
							<AnimationAction fragment="" tags="" eventReferenceObject="" alignObject="$__resource.id" />
						</Sequence>
					</Exec>
				</HandContentElement>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="item" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<HandContentElement hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
						<Search>
							<Function_findItemOnSlot hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_findItemOnSlot>
						</Search>
						<Exec>
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<OutputBreakpoints />
								</AnimationAction>
								<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<OutputBreakpoints />
								</AnimationAction>
							</Sequence>
						</Exec>
					</HandContentElement>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="dogDrink" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnimationAction fragment="&apos;WaterTubDrinking&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<OutputBreakpoints />
					</AnimationAction>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="WaterTubDrinking" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<AnimationAction fragment="&apos;WaterTubDrinking&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<OutputBreakpoints />
					</AnimationAction>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>