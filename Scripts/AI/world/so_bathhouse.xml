<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
	<BehaviorTree name="Barber_onChair" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<LuaWrapper onEnter="Contexts.SetNonpersistentOption(entity, &apos;availableToGreet&apos;, &apos;barber&apos;)" onExit="Contexts.ClearOption(entity, &apos;availableToGreet&apos;, &apos;barber&apos;)">
					<Parallel successMode="Any" failureMode="Any">
						<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;timeChanged&apos;" RunLogic="KeepRunning">
							<Success />
						</ExternalLock>
						<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Intellect" SemaphoreName="&apos;CompoundWorkUnavailable&apos;" RunLogic="KeepRunning">
							<Success />
						</Synchronize>
						<ExternalLock atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;NewClient&apos;" RunLogic="KeepRunning">
							<Sequence>
								<Wait duration="&apos;500ms&apos;" timeType="GameTime" doFail="false" variation="&apos;2s&apos;" skipInLOD="false" />
								<SetExternalLock LockManagerType="Local" Locked="true" LockName="&apos;NewClient&apos;" />
							</Sequence>
						</ExternalLock>
					</Parallel>
				</LuaWrapper>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData>
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="-190" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<LuaWrapper editorPosX="40" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Parallel editorPosX="293" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ExternalLock editorPosX="495" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Success editorPosX="778" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</ExternalLock>
							<Synchronize editorPosX="495" editorPosY="165" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Success editorPosX="778" editorPosY="165" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Synchronize>
							<ExternalLock editorPosX="495" editorPosY="369" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence editorPosX="778" editorPosY="369" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Wait editorPosX="912" editorPosY="369" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
									<SetExternalLock editorPosX="912" editorPosY="495" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</SetExternalLock>
								</Sequence>
							</ExternalLock>
						</Parallel>
					</LuaWrapper>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="Barber_goSit" is_function="0">
		<Variables>
			<Variable name="t_nextBehavior" type="nextBehavior" values="" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Expression expressions="$t_nextBehavior.id=$__area.id,&#10;$t_nextBehavior.name=&apos;Barber_onChair&apos;" />
			</OnInit>
			<Behavior canSkip="1">
				<Selector>
					<InstantExternalLock LockManagerType="Local" SemaphoreName="&apos;NewClient&apos;" RunLogic="KeepRunning">
						<Success />
					</InstantExternalLock>
					<CallBehavior Target="$t_chosenWorkplace" BehaviorName="&apos;use&apos;" stopAfterFirstFound="true" ignoreDropUnloading="false" nodeLabel="97947937" />
				</Selector>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData>
			<Variables>
				<Variable name="t_nextBehavior" comment="" />
			</Variables>
			<ForwardDeclarations>
				<Variable name="t_chosenWorkplace" type="wuid" values="" form="single" />
			</ForwardDeclarations>
			<Root editorPosX="0" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Expression editorPosX="230" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</OnInit>
				<Behavior>
					<Selector editorPosX="230" editorPosY="92" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<InstantExternalLock editorPosX="364" editorPosY="92" isCollapsed="0" hasInputBreakpoint="0" comment="Cancel sitting if new client is already coming" breakpointFlags="0">
							<OutputBreakpoints />
							<Success editorPosX="647" editorPosY="92" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</InstantExternalLock>
						<CallBehavior editorPosX="364" editorPosY="190" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</CallBehavior>
					</Selector>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="serveCustomer" is_function="0">
		<Variables>
			<Variable name="bath" type="wuid" values="" form="single" />
			<Variable name="chosenService" type="_int" values="-1" isPersistent="1" form="single" />
			<Variable name="p_phase" type="_int" values="" isPersistent="1" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Error" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GraphSearch Origin="$chosenWorkplace" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false">
						<LinkTagFilter tag="&apos;usedSO&apos;" prune="true" negprune="unknown" Parent="" Child="$bath" Data="" />
					</GraphSearch>
					<IfCondition failOnCondition="false" condition="$p_phase&lt;1000">
						<Sequence>
							<CallBehavior Target="$bath" BehaviorName="&apos;spa_checkTemperature&apos;" stopAfterFirstFound="true" nodeLabel="54209168" />
							<Expression expressions="$p_phase=1000" />
						</Sequence>
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$chosenService&lt;0">
						<Expression expressions="$chosenService=1" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$p_phase&lt;2000">
						<Sequence>
							<Selector InitStyle="Sequential">
								<IfCondition failOnCondition="true" condition="$chosenService==0">
									<CallBehavior Target="$__area.id" BehaviorName="&apos;serveCustomer_addHerbs&apos;" stopAfterFirstFound="true" nodeLabel="63725540" />
								</IfCondition>
								<IfCondition failOnCondition="true" condition="$chosenService==1">
									<CallBehavior Target="$__area.id" BehaviorName="&apos;serveCustomer_refillWater&apos;" stopAfterFirstFound="true" nodeLabel="63725540" />
								</IfCondition>
								<CallBehavior Target="$__area.id" BehaviorName="&apos;serveCustomer_wash&apos;" stopAfterFirstFound="true" nodeLabel="63725540" />
							</Selector>
							<Expression expressions="$p_phase=2000" />
						</Sequence>
					</IfCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<NumericalOperation In1VariableName="0" In2VariableName="2" In3VariableName="" OutVariableName="$chosenService" Operation="randRange" />
		</ForestContainer>
		<EditorData>
			<Variables>
				<Variable name="bath" comment="" />
				<Variable name="chosenService" comment="" />
				<Variable name="p_phase" comment="" />
			</Variables>
			<ForwardDeclarations>
				<Variable name="t_chosenWorkplace" type="wuid" values="" form="single" />
			</ForwardDeclarations>
			<Root editorPosX="0" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence editorPosX="230" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch editorPosX="490" editorPosY="-300" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter editorPosX="840" editorPosY="-300" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<IfCondition editorPosX="490" editorPosY="10" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence editorPosX="710" editorPosY="10" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<CallBehavior editorPosX="840" editorPosY="10" isCollapsed="0" hasInputBreakpoint="0" comment="Just a single animation" breakpointFlags="0">
									<OutputBreakpoints />
								</CallBehavior>
								<Expression editorPosX="840" editorPosY="100" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
						</IfCondition>
						<IfCondition editorPosX="490" editorPosY="210" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Expression editorPosX="993" editorPosY="257" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Expression>
						</IfCondition>
						<IfCondition editorPosX="490" editorPosY="400" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence editorPosX="710" editorPosY="400" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Selector editorPosX="830" editorPosY="400" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IfCondition editorPosX="1030" editorPosY="400" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<CallBehavior editorPosX="1260" editorPosY="400" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</CallBehavior>
									</IfCondition>
									<IfCondition editorPosX="1030" editorPosY="490" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<CallBehavior editorPosX="1260" editorPosY="490" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</CallBehavior>
									</IfCondition>
									<CallBehavior editorPosX="1260" editorPosY="580" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</CallBehavior>
								</Selector>
								<Expression editorPosX="840" editorPosY="670" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Sequence>
						</IfCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<NumericalOperation editorPosX="710" editorPosY="210" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</NumericalOperation>
			</Forest>
			<Comments>
				<Comment text="t_chosenWorkplace_=_NPC" posX="-40" posY="-40" width="300" height="128" resizeBorderWidth="300" resizeBorderHeight="100" color="0.65,0.65,0.65" author="martin.labut" />
			</Comments>
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="serveCustomer_addHerbs" is_function="0">
		<Variables>
			<Variable name="bath" type="wuid" values="" isPersistent="1" form="single" />
			<Variable name="customer" type="wuid" values="" isPersistent="1" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Expected" saveVersion="2">
			<OnInit canSkip="1">
				<IfCondition failOnCondition="false" condition="$customer==$__null">
					<Sequence>
						<GraphSearch Origin="$t_compoundWorkplace" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;usedSO&apos;" prune="true" negprune="unknown" Parent="" Child="$bath" Data="" />
						</GraphSearch>
						<GraphSearch Origin="$bath" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="&apos;SOuser&apos;" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;SOuser&apos;" prune="true" negprune="unknown" Parent="" Child="$customer" Data="" />
						</GraphSearch>
					</Sequence>
				</IfCondition>
			</OnInit>
			<Behavior canSkip="1">
				<Parallel successMode="Any" failureMode="Any">
					<Synchronize SemaphoreCount="2" InsideTimerValue="&apos;-1&apos;" InvalidateOnExpire="false" atomic="false" OutsideQueuePosVariable="" InsidePosVariable="" TimerType="GameTime" OutsideTimerValue="&apos;-1&apos;" LockManagerType="Local" SemaphoreName="&apos;CompoundWorkUnavailable&apos;" RunLogic="KeepRunning">
						<Success />
					</Synchronize>
					<Sequence>
						<CallBehavior Target="$t_chosenWorkplace" BehaviorName="&apos;takeHerbs&apos;" stopAfterFirstFound="true" ignoreDropUnloading="false" nodeLabel="36422872" />
						<CallBehavior Target="$bath" BehaviorName="&apos;spa_addHerbs&apos;" stopAfterFirstFound="true" ignoreDropUnloading="false" nodeLabel="36422872" />
					</Sequence>
				</Parallel>
			</Behavior>
		</Root>
		<ForestContainer>
			<GraphSearch Origin="$__area.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
				<CategoryFilter categories="&apos;herbs&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
				<HasBehaviorFilter FilterChoice="Requestable" BehaviorList="&apos;takeHerbs&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
				<Nodalyzer Quantifiers="Exists" Parent="" Child="$herbs" saveVersion="2" />
			</GraphSearch>
		</ForestContainer>
		<EditorData>
			<Variables>
				<Variable name="bath" comment="" />
				<Variable name="customer" comment="" />
			</Variables>
			<ForwardDeclarations>
				<Variable name="t_chosenWorkplace" type="wuid" values="" form="single" />
				<Variable name="t_compoundWorkplace" type="wuid" values="" form="single" />
			</ForwardDeclarations>
			<Root editorPosX="-160" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<IfCondition editorPosX="56" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence editorPosX="279" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch editorPosX="413" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter editorPosX="760" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<GraphSearch editorPosX="413" editorPosY="271" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter editorPosX="760" editorPosY="271" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
						</Sequence>
					</IfCondition>
				</OnInit>
				<Behavior>
					<Parallel editorPosX="56" editorPosY="542" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Synchronize editorPosX="258" editorPosY="542" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Success editorPosX="541" editorPosY="542" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Success>
						</Synchronize>
						<Sequence editorPosX="258" editorPosY="747" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<CallBehavior editorPosX="392" editorPosY="747" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</CallBehavior>
							<CallBehavior editorPosX="392" editorPosY="871" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</CallBehavior>
						</Sequence>
					</Parallel>
				</Behavior>
			</Root>
			<Forest>
				<GraphSearch editorPosX="680" editorPosY="-450" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<CategoryFilter editorPosX="1030" editorPosY="-570" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</CategoryFilter>
					<HasBehaviorFilter editorPosX="1030" editorPosY="-440" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</HasBehaviorFilter>
					<Nodalyzer editorPosX="1030" editorPosY="-300" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
						<OutputBreakpoints />
					</Nodalyzer>
				</GraphSearch>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="serveCustomer_refillWater" is_function="0">
		<Variables>
			<Variable name="animWuid" type="wuid" values="" form="single" />
			<Variable name="bath" type="wuid" values="" isPersistent="1" form="single" />
			<Variable name="customer" type="wuid" values="" isPersistent="1" form="single" />
			<Variable name="hand" type="wuid" values="" form="single" />
			<Variable name="p_phase" type="_int" values="" isPersistent="1" form="single" />
			<Variable name="t_nextBehavior" type="nextBehavior" values="" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Error" saveVersion="2">
			<OnInit canSkip="1">
				<IfCondition failOnCondition="false" condition="$customer==$__null">
					<Sequence>
						<GraphSearch Origin="$t_compoundWorkplace" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;usedSO&apos;" prune="true" negprune="unknown" Parent="" Child="$bath" Data="" />
						</GraphSearch>
						<GraphSearch Origin="$bath" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="&apos;SOuser&apos;" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;SOuser&apos;" prune="true" negprune="unknown" Parent="" Child="$customer" Data="" />
						</GraphSearch>
					</Sequence>
				</IfCondition>
			</OnInit>
			<Behavior canSkip="1">
				<Sequence>
					<Expression expressions="$t_nextBehavior.id=$bath,&#10;$t_nextBehavior.name=&apos;spa_refillWater&apos;" />
					<CallBehavior Target="$t_chosenWorkplace" BehaviorName="&apos;useItem&apos;" stopAfterFirstFound="true" ignoreDropUnloading="false" nodeLabel="97478875" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<GraphSearch Origin="$chosenWorkplace" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true" />
			<LinkTagFilter tag="&apos;usedSO&apos;" prune="true" negprune="unknown" Parent="" Child="$bath" Data="" />
			<CallBehavior Target="$bath" BehaviorName="&apos;spa_checkTemperature&apos;" stopAfterFirstFound="true" ignoreDropUnloading="false" nodeLabel="54209168" />
			<IfCondition failOnCondition="false" condition="$steinSlot==$__null">
				<GraphSearch Origin="$__area.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
					<CategoryFilter categories="&apos;waterStein&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
					<HasBehaviorFilter FilterChoice="Requestable" BehaviorList="&apos;takeStein&apos;" Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
					<Nodalyzer Quantifiers="Exists" Parent="" Child="$steinSlot" saveVersion="2" />
				</GraphSearch>
			</IfCondition>
			<FuseBox StatusPropagation="Child" OneCleanup="false" saveVersion="2">
				<Child canSkip="1">
					<Sequence>
						<GraphSearch Origin="$t_compoundWorkplace" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
							<LinkTagFilter tag="&apos;usedSO&apos;" prune="true" negprune="unknown" Parent="" Child="$bath" Data="" />
						</GraphSearch>
						<IfCondition failOnCondition="false" condition="$p_phase&lt;1000">
							<Parallel successMode="Any" failureMode="Any">
								<Sequence>
									<CallBehavior Target="$t_chosenWorkplace" BehaviorName="&apos;takeStein&apos;" stopAfterFirstFound="true" ignoreDropUnloading="false" nodeLabel="44363863" />
									<Expression expressions="$p_phase=1000" />
								</Sequence>
							</Parallel>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$p_phase&lt;2000">
							<SuppressFailure>
								<Sequence>
									<CallBehavior Target="$bath" BehaviorName="&apos;spa_refillWater&apos;" stopAfterFirstFound="true" ignoreDropUnloading="false" nodeLabel="71273910" />
									<Expression expressions="$p_phase=2000" />
								</Sequence>
							</SuppressFailure>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$p_phase&lt;3000">
							<Sequence>
								<CallBehavior Target="$t_chosenWorkplace" BehaviorName="&apos;placeStein&apos;" stopAfterFirstFound="true" ignoreDropUnloading="false" nodeLabel="44363863" />
								<Expression expressions="$p_phase=2000" />
							</Sequence>
						</IfCondition>
					</Sequence>
				</Child>
				<OnFail canSkip="1">
					<IfCondition failOnCondition="false" condition="$b_daycycleHaltContext.speed==$enum:daycycleHaltSpeed.instant">
						<Sequence>
							<HandCheck who="" LeftHand="" RightHand="$hand" />
							<IfCondition failOnCondition="false" condition="$hand~=$__null">
								<CallBehavior Target="$t_chosenWorkplace" BehaviorName="&apos;returnStein&apos;" stopAfterFirstFound="true" ignoreDropUnloading="false" nodeLabel="37002715" />
							</IfCondition>
						</Sequence>
					</IfCondition>
				</OnFail>
			</FuseBox>
		</ForestContainer>
		<EditorData>
			<Variables>
				<Variable name="animWuid" comment="old" />
				<Variable name="bath" comment="" />
				<Variable name="customer" comment="" />
				<Variable name="hand" comment="old" />
				<Variable name="p_phase" comment="old" />
				<Variable name="t_nextBehavior" comment="" />
			</Variables>
			<ForwardDeclarations>
				<Variable name="t_chosenWorkplace" type="wuid" values="" form="single" />
				<Variable name="t_compoundWorkplace" type="wuid" values="" form="single" />
			</ForwardDeclarations>
			<Root editorPosX="-820" editorPosY="1480" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<IfCondition editorPosX="-603" editorPosY="1480" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Sequence editorPosX="-380" editorPosY="1480" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch editorPosX="-246" editorPosY="1480" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter editorPosX="100" editorPosY="1480" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<GraphSearch editorPosX="-246" editorPosY="1751" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter editorPosX="100" editorPosY="1751" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
						</Sequence>
					</IfCondition>
				</OnInit>
				<Behavior>
					<Sequence editorPosX="-603" editorPosY="2022" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Expression editorPosX="-469" editorPosY="2022" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Expression>
						<CallBehavior editorPosX="-469" editorPosY="2114" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</CallBehavior>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<GraphSearch editorPosX="-260" editorPosY="-700" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</GraphSearch>
				<LinkTagFilter editorPosX="90" editorPosY="-700" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</LinkTagFilter>
				<CallBehavior editorPosX="90" editorPosY="-390" isCollapsed="0" hasInputBreakpoint="0" comment="Just a single animation" breakpointFlags="0">
					<OutputBreakpoints />
				</CallBehavior>
				<IfCondition editorPosX="350" editorPosY="-580" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<GraphSearch editorPosX="570" editorPosY="-580" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<CategoryFilter editorPosX="920" editorPosY="-690" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</CategoryFilter>
						<HasBehaviorFilter editorPosX="920" editorPosY="-560" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</HasBehaviorFilter>
						<Nodalyzer editorPosX="920" editorPosY="-420" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
						</Nodalyzer>
					</GraphSearch>
				</IfCondition>
				<FuseBox editorPosX="-510" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Child>
						<Sequence editorPosX="-250" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<GraphSearch editorPosX="-120" editorPosY="-190" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<LinkTagFilter editorPosX="220" editorPosY="-190" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</LinkTagFilter>
							</GraphSearch>
							<IfCondition editorPosX="-120" editorPosY="140" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Parallel editorPosX="100" editorPosY="140" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence editorPosX="290" editorPosY="140" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<CallBehavior editorPosX="640" editorPosY="140" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</CallBehavior>
										<Expression editorPosX="420" editorPosY="230" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Sequence>
								</Parallel>
							</IfCondition>
							<IfCondition editorPosX="-130" editorPosY="460" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<SuppressFailure editorPosX="100" editorPosY="460" isCollapsed="0" hasInputBreakpoint="0" comment="Run return stein even if action failed" breakpointFlags="0">
									<OutputBreakpoints />
									<Sequence editorPosX="510" editorPosY="460" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
										<CallBehavior editorPosX="640" editorPosY="460" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</CallBehavior>
										<Expression editorPosX="640" editorPosY="550" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
											<OutputBreakpoints />
										</Expression>
									</Sequence>
								</SuppressFailure>
							</IfCondition>
							<IfCondition editorPosX="-130" editorPosY="700" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence editorPosX="510" editorPosY="700" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<CallBehavior editorPosX="640" editorPosY="700" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</CallBehavior>
									<Expression editorPosX="640" editorPosY="790" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Expression>
								</Sequence>
							</IfCondition>
						</Sequence>
					</Child>
					<OnFail>
						<IfCondition editorPosX="-130" editorPosY="950" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence editorPosX="90" editorPosY="950" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<HandCheck editorPosX="220" editorPosY="920" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</HandCheck>
								<IfCondition editorPosX="220" editorPosY="1010" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<CallBehavior editorPosX="430" editorPosY="1010" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</CallBehavior>
								</IfCondition>
							</Sequence>
						</IfCondition>
					</OnFail>
				</FuseBox>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="Customer_goGetHealed" is_function="0">
		<Variables name="t_nextBehavior">
			<Variable name="t_nextBehavior" type="nextBehavior" values="" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<OnInit canSkip="1">
				<Expression expressions="$t_nextBehavior.id=$__area.id,&#10;$t_nextBehavior.name=&apos;Customer_beeingHealed&apos;" />
			</OnInit>
			<Behavior canSkip="1">
				<CallBehavior Target="$t_chosenWorkplace" BehaviorName="&apos;use&apos;" stopAfterFirstFound="true" nodeLabel="97947937" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData>
			<Variables name="t_nextBehavior">
				<Variable name="t_nextBehavior" comment="" />
			</Variables>
			<ForwardDeclarations name="t_chosenWorkplace">
				<Variable name="t_chosenWorkplace" type="wuid" values="" form="single" />
			</ForwardDeclarations>
			<Root editorPosX="0" editorPosY="0" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<OnInit>
					<Expression editorPosX="230" editorPosY="-70" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Expression>
				</OnInit>
				<Behavior>
					<CallBehavior editorPosX="230" editorPosY="20" isCollapsed="0" hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</CallBehavior>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="serviceClean" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<WashEquipped Target="" UseSoap="false" MaxWashing="0.000000" MaxCleaning="1.000000" />
					<RemoveBuffs SoulWUID="" BuffGUID="&apos;1aa6a7cc-4cee-4b73-8080-562bebc21443&apos;" BuffTagId="-1" />
					<RemoveBuffs SoulWUID="" BuffGUID="&apos;b0b520e9-a85f-4698-ad8c-e46ea32d7d65&apos;" BuffTagId="-1" />
					<RemoveBuffs SoulWUID="" BuffGUID="&apos;5d07a436-c01f-4062-b5c4-0c3ec3c8185d&apos;" BuffTagId="-1" />
					<ExecuteSoundTrigger entity="$__player" triggerName="&apos;cow_moo&apos;" stop="false" />
					<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<ExecuteSoundTrigger entity="$__player" triggerName="&apos;special_baths_oneshot&apos;" stop="false" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root editorPosX="-10" editorPosY="-50" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<WashEquipped hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WashEquipped>
						<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</RemoveBuffs>
						<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</RemoveBuffs>
						<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</RemoveBuffs>
						<ExecuteSoundTrigger hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExecuteSoundTrigger>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<ExecuteSoundTrigger editorPosX="760" editorPosY="-80" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</ExecuteSoundTrigger>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="serviceCure" is_function="0">
		<Variables>
			<Variable name="playSexSounds" type="_bool" values="false" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<IncludeTree File="&apos;world/so_bathhouse.xml&apos;" Name="&apos;serviceDoCure&apos;" nodeLabel="60804615" />
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="playSexSounds" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</IncludeTree>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="serviceDoCure" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExecuteSoundTrigger entity="$__player" triggerName="&apos;special_baths_skiptime&apos;" stop="false" />
					<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					<IfCondition failOnCondition="false" condition="$playSexSounds">
						<Sequence>
							<ExecuteSoundTrigger entity="$__player" triggerName="&apos;q_M05_doubravka_sex&apos;" stop="false" />
							<Wait duration="&apos;5s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Sequence>
					</IfCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<LuaGate code="return Calendar.IsWorldTimePaused()" saveVersion="2">
				<Then canSkip="1">
					<IfElseCondition failOnCondition="false" condition="$playSexSounds" saveVersion="2">
						<Then canSkip="1">
							<Success />
						</Then>
						<Else canSkip="1">
							<Wait duration="&apos;4s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
						</Else>
					</IfElseCondition>
				</Then>
				<Else canSkip="1">
					<DecoratorBuff BuffId="&apos;1c13fe26-3766-4f50-829f-080bb9d543b8&apos;" SoulWUID="$__player">
						<SkipTime duration="$waitTime" skipTimeType="Bath" />
					</DecoratorBuff>
				</Else>
			</LuaGate>
			<ExecuteSoundTrigger entity="$__player" triggerName="&apos;cow_moo&apos;" stop="false" />
			<ExecuteSoundTrigger entity="$__player" triggerName="&apos;cow_moo&apos;" stop="false" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="playSexSounds" comment="" />
			</Variables>
			<ForwardDeclarations>
				<Variable name="playSexSounds" type="_bool" values="" isPersistent="0" form="single" requirementType="ForwardDeclaration" />
			</ForwardDeclarations>
			<Root editorPosX="-120" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExecuteSoundTrigger hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExecuteSoundTrigger>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<ExecuteSoundTrigger hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</ExecuteSoundTrigger>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Sequence>
						</IfCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<LuaGate editorPosX="600" editorPosY="480" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
					<OutputBreakpoints />
					<Then>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</Then>
							<Else>
								<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Wait>
							</Else>
						</IfElseCondition>
					</Then>
					<Else>
						<DecoratorBuff hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<SkipTime hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</SkipTime>
						</DecoratorBuff>
					</Else>
				</LuaGate>
				<ExecuteSoundTrigger editorPosX="280" editorPosY="-400" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</ExecuteSoundTrigger>
				<ExecuteSoundTrigger editorPosX="970" editorPosY="-190" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</ExecuteSoundTrigger>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="serviceLove" is_function="0">
		<Variables>
			<Variable name="playSexSounds" type="_bool" values="true" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExecuteLua code="Statistics.Increment(&apos;WenchesInBathsHired&apos;, 1)" />
					<WashEquipped UseSoap="false" MaxWashing="0.000000" MaxCleaning="1.000000" />
					<IncludeTree File="&apos;world/so_bathhouse.xml&apos;" Name="&apos;serviceDoCure&apos;" nodeLabel="13580238" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<Sequence>
				<Sequence>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;privateBathPlayerSpot&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;privateBathPlayerSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$t_setTransform.target" Data="" />
					</GraphSearch>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;prostitute&apos;" prune="true" negprune="unknown" Parent="" Child="$girl" Data="" />
						<NegationOp Results="true" Advance="true" EndOp="true" saveVersion="2">
							<Child0 canSkip="1">
								<LinkTagFilter tag="&apos;prostituteNotAvailable&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
							</Child0>
						</NegationOp>
						<Nodalyzer Quantifiers="Exists" Parent="" Child="$girl" saveVersion="2" />
					</GraphSearch>
					<GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="&apos;privateBathGirlSpot&apos;" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
						<LinkTagFilter tag="&apos;privateBathGirlSpot&apos;" prune="true" negprune="unknown" Parent="" Child="$girlDestination" Data="" />
					</GraphSearch>
				</Sequence>
				<LuaWrapper onEnter="local girlEnt = XGenAIModule.GetEntityByWUID(data.girl); &#10;local merchant = XGenAIModule.GetEntityByWUID(data.serviceMerchant.id); &#10; &#10;Contexts.SetNonpersistentOption(merchant, &apos;suppressTrespassReactions&apos;, &apos;BathhouseServiceLove&apos;); &#10;Contexts.SetNonpersistentOption(girlEnt, &apos;suppressTrespassReactions&apos;, &apos;BathhouseServiceLove&apos;);" onExit="local girlEnt = XGenAIModule.GetEntityByWUID(data.girl); &#10;local merchant = XGenAIModule.GetEntityByWUID(data.serviceMerchant.id); &#10; &#10;Contexts.ClearOption(merchant, &apos;suppressTrespassReactions&apos;, &apos;BathhouseServiceLove&apos;); &#10;Contexts.ClearOption(girlEnt, &apos;suppressTrespassReactions&apos;, &apos;BathhouseServiceLove&apos;);" />
				<Callback_empty EventName="&apos;OnFinished&apos;" />
			</Sequence>
		</ForestContainer>
		<EditorData EventSet="">
			<Variables>
				<Variable name="playSexSounds" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="-500" editorPosY="10" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExecuteLua>
						<WashEquipped hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WashEquipped>
						<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</IncludeTree>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<Sequence editorPosX="-280" editorPosY="-670" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
							<NegationOp hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Child0>
									<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</LinkTagFilter>
								</Child0>
							</NegationOp>
							<Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
							</Nodalyzer>
						</GraphSearch>
						<GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</LinkTagFilter>
						</GraphSearch>
					</Sequence>
					<LuaWrapper hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</LuaWrapper>
					<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
					</Callback_empty>
				</Sequence>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="serviceBarberHaircut" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExecuteSoundTrigger entity="$__player" triggerName="&apos;cow_moo&apos;" stop="false" />
					<ExecuteLua code="Barbershop.barber:TryHair(Barbershop.chosenHairGUID) &#10; &#10;Barbershop.barber:Commit() &#10; &#10;Barbershop.Cleanup()" />
					<Wait duration="&apos;3500ms&apos;" timeType="GameTime" doFail="false" variation="" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<ExecuteSoundTrigger entity="$__player" triggerName="&apos;special_scissors&apos;" stop="false" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExecuteSoundTrigger hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExecuteSoundTrigger>
						<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExecuteLua>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<ExecuteSoundTrigger editorPosX="570" editorPosY="-110" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</ExecuteSoundTrigger>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="serviceBarberBeard" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<ExecuteSoundTrigger entity="$__player" triggerName="&apos;cow_moo&apos;" stop="false" />
					<ExecuteLua code="Barbershop.barber:TryBeard(Barbershop.chosenBeardGUID) &#10; &#10;Barbershop.barber:Commit() &#10; &#10;Barbershop.Cleanup()" />
					<Wait duration="&apos;3500ms&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<ExecuteSoundTrigger entity="$__player" triggerName="&apos;special_scissors&apos;" stop="false" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<ExecuteSoundTrigger hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExecuteSoundTrigger>
						<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExecuteLua>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<ExecuteSoundTrigger editorPosX="570" editorPosY="-110" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</ExecuteSoundTrigger>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="serviceCureClean" is_function="0">
		<Variables>
			<Variable name="playSexSounds" type="_bool" values="false" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<WashEquipped Target="" UseSoap="false" MaxWashing="0.500000" MaxCleaning="1.000000" />
					<IncludeTree File="&apos;world/so_bathhouse.xml&apos;" Name="&apos;serviceDoCure&apos;" nodeLabel="43400425" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="playSexSounds" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="20" editorPosY="40" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<WashEquipped hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WashEquipped>
						<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</IncludeTree>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="BarberTryBeforePay" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="serviceID" type="_int" values="" isPersistent="0" form="single" requirementType="In" />
			<Variable name="serviceType" type="enum:bathhouse_barberTry" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<DialogFaderBarrier>
						<Switch>
							<IfCondition failOnCondition="false" condition="$serviceType == $enum:bathhouse_barberTry.tryChosenHair">
								<ExecuteLua code="Barbershop.ChooseHair(data.serviceID);  &#10;Barbershop.barber:TryHair(Barbershop.chosenHairGUID);" />
							</IfCondition>
							<IfCondition failOnCondition="false" condition="$serviceType == $enum:bathhouse_barberTry.tryChosenBeard">
								<ExecuteLua code="Barbershop.ChooseBeard(data.serviceID);  &#10;Barbershop.barber:TryBeard(Barbershop.chosenBeardGUID);" />
							</IfCondition>
							<IfCondition failOnCondition="false" condition="$serviceType == $enum:bathhouse_barberTry.revert">
								<ExecuteLua code="Barbershop.barber:Revert()" />
							</IfCondition>
							<DefaultBranch>
								<Success />
							</DefaultBranch>
						</Switch>
					</DialogFaderBarrier>
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="barber" EventSet="endNotification">
			<Variables>
				<Variable name="serviceID" comment="" />
				<Variable name="serviceType" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root editorPosX="200" editorPosY="-20" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<DialogFaderBarrier hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExecuteLua>
								</IfCondition>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExecuteLua>
								</IfCondition>
								<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<ExecuteLua hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</ExecuteLua>
								</IfCondition>
								<DefaultBranch>
									<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Success>
								</DefaultBranch>
							</Switch>
						</DialogFaderBarrier>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="serviceCleanInstant" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<WashEquipped Target="" UseSoap="false" MaxWashing="0.500000" MaxCleaning="1.000000" />
					<ExecuteSoundTrigger entity="$__player" triggerName="&apos;cow_moo&apos;" stop="false" />
					<Wait duration="&apos;3s&apos;" timeType="GameTime" doFail="false" variation="" skipInLOD="false" />
					<Callback_empty EventName="&apos;OnFinished&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer>
			<ExecuteSoundTrigger entity="$__player" triggerName="&apos;special_baths_oneshot&apos;" stop="false" />
		</ForestContainer>
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<WashEquipped hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</WashEquipped>
						<ExecuteSoundTrigger hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</ExecuteSoundTrigger>
						<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Wait>
						<Callback_empty hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_empty>
					</Sequence>
				</Behavior>
			</Root>
			<Forest>
				<ExecuteSoundTrigger editorPosX="691" editorPosY="124" hasInputBreakpoint="0" comment="" breakpointFlags="0">
					<OutputBreakpoints />
				</ExecuteSoundTrigger>
			</Forest>
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="runService" is_function="0">
		<Variables>
			<Variable name="break" type="_bool" values="" isPersistent="0" form="single" />
			<Variable name="index" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="maid" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="maidsCount" type="_int" values="" isPersistent="0" form="single" />
			<Variable name="playerHorse" type="_wuid" values="" isPersistent="0" form="single" />
			<Variable name="randomMaid" type="_int" values="" isPersistent="0" form="single" />
		</Variables>
		<Parameters>
			<Variable name="maids" type="_wuid" values="" isPersistent="0" form="array" requirementType="In" />
			<Variable name="stateEnum" type="enum:bathhouse_serviceType" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<Switch>
						<IfCondition failOnCondition="false" condition="$stateEnum == $enum:bathhouse_serviceType.Clean">
							<Sequence>
								<IncludeTree File="&apos;world/so_bathhouse.xml&apos;" Name="&apos;serviceCleanHorseAndDog&apos;" nodeLabel="90434058" />
								<WashEquipped Target="" UseSoap="false" MaxWashing="1.000000" MaxCleaning="1.000000" AllOutfits="false" />
								<IncludeTree File="&apos;world/so_bathhouse.xml&apos;" Name="&apos;RemoveParfume&apos;" nodeLabel="50725850" />
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$stateEnum == $enum:bathhouse_serviceType.CureClean">
							<Sequence>
								<IncludeTree File="&apos;world/so_bathhouse.xml&apos;" Name="&apos;serviceCleanHorseAndDog&apos;" nodeLabel="96601823" />
								<WashEquipped Target="" UseSoap="false" MaxWashing="1.000000" MaxCleaning="1.000000" AllOutfits="false" />
								<IncludeTree File="&apos;world/so_bathhouse.xml&apos;" Name="&apos;RemoveParfume&apos;" nodeLabel="48210376" />
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$stateEnum == $enum:bathhouse_serviceType.CleanHorse">
							<Sequence>
								<IncludeTree File="&apos;world/so_bathhouse.xml&apos;" Name="&apos;serviceCleanHorseAndDog&apos;" nodeLabel="17290123" />
								<IncludeTree File="&apos;world/so_bathhouse.xml&apos;" Name="&apos;RemoveParfume&apos;" nodeLabel="30138286" />
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$stateEnum == $enum:bathhouse_serviceType.Love | $stateEnum == $enum:bathhouse_serviceType.Love_censored">
							<Sequence>
								<IncludeTree File="&apos;world/so_bathhouse.xml&apos;" Name="&apos;serviceCleanHorseAndDog&apos;" nodeLabel="73690765" />
								<WashEquipped Target="" UseSoap="false" MaxWashing="1.000000" MaxCleaning="1.000000" AllOutfits="false" />
								<IncludeTree File="&apos;world/so_bathhouse.xml&apos;" Name="&apos;RemoveParfume&apos;" nodeLabel="18958972" />
							</Sequence>
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$stateEnum == $enum:bathhouse_serviceType.BarberHaircut">
							<IncludeTree File="&apos;world/so_bathhouse.xml&apos;" Name="&apos;serviceBarberHaircut&apos;" nodeLabel="46970341" />
						</IfCondition>
						<IfCondition failOnCondition="false" condition="$stateEnum == $enum:bathhouse_serviceType.BarberBeard">
							<IncludeTree File="&apos;world/so_bathhouse.xml&apos;" Name="&apos;serviceBarberBeard&apos;" nodeLabel="28823353" />
						</IfCondition>
						<DefaultBranch>
							<Success />
						</DefaultBranch>
					</Switch>
					<IfElseCondition failOnCondition="false" condition="#maids &gt; 0" saveVersion="2">
						<Then canSkip="1">
							<Expression expressions="$maidsCount = #maids - 1" />
						</Then>
						<Else canSkip="1">
							<Expression expressions="$maidsCount = 0" />
						</Else>
					</IfElseCondition>
					<GenerateRandomInteger lowerBoundary="0" upperBoundary="$maidsCount" result="$randomMaid" />
					<ForEach startIndex="$randomMaid" step="1" array="$maids" iterator="$index" value="$maid" break="$break">
						<ActorStateCheck Who="$maid" State="dead" FailWithSubtreeMissing="false" saveVersion="2">
							<Else canSkip="1">
								<ActorStateCheck Who="$maid" State="unconscious" FailWithSubtreeMissing="false" saveVersion="2">
									<Else canSkip="1">
										<Expression expressions="$break = true" />
									</Else>
								</ActorStateCheck>
							</Else>
						</ActorStateCheck>
					</ForEach>
					<Callback_bathhouse_maid SelectedMaidIndex="$index" EventName="&apos;SelectedMaidIndex&apos;" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData Signature="bathhouse" EventSet="bathhouse_maid">
			<Variables>
				<Variable name="break" comment="" />
				<Variable name="index" comment="" />
				<Variable name="maid" comment="" />
				<Variable name="maidsCount" comment="" />
				<Variable name="playerHorse" comment="" />
				<Variable name="randomMaid" comment="" />
				<Variable name="maids" comment="" />
				<Variable name="stateEnum" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</IncludeTree>
									<WashEquipped hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WashEquipped>
									<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</IncludeTree>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</IncludeTree>
									<WashEquipped hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WashEquipped>
									<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</IncludeTree>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</IncludeTree>
									<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</IncludeTree>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</IncludeTree>
									<WashEquipped hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</WashEquipped>
									<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</IncludeTree>
								</Sequence>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</IncludeTree>
							</IfCondition>
							<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<IncludeTree hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</IncludeTree>
							</IfCondition>
							<DefaultBranch>
								<Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Success>
							</DefaultBranch>
						</Switch>
						<IfElseCondition hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
							<OutputBreakpoints />
							<Then>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Then>
							<Else>
								<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
								</Expression>
							</Else>
						</IfElseCondition>
						<GenerateRandomInteger hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GenerateRandomInteger>
						<ForEach hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<ActorStateCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
								<OutputBreakpoints />
								<Else>
									<ActorStateCheck hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
										<OutputBreakpoints />
										<Else>
											<Expression hasInputBreakpoint="0" comment="" breakpointFlags="0">
												<OutputBreakpoints />
											</Expression>
										</Else>
									</ActorStateCheck>
								</Else>
							</ActorStateCheck>
						</ForEach>
						<Callback_bathhouse_maid hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</Callback_bathhouse_maid>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="serviceCleanHorseAndDog" is_function="0">
		<Variables>
			<Variable name="playerHorse" type="_wuid" values="" isPersistent="0" form="single" />
		</Variables>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<GetPlayerHorse HorseWuid="$playerHorse" />
					<IfCondition failOnCondition="false" condition="$playerHorse ~= $__null">
						<WashEquipped Target="$playerHorse" UseSoap="false" MaxWashing="1.000000" MaxCleaning="1.000000" />
					</IfCondition>
					<IfCondition failOnCondition="false" condition="$__playerDog ~= $__null">
						<WashEquipped Target="$__playerDog" UseSoap="false" MaxWashing="1.000000" MaxCleaning="1.000000" />
					</IfCondition>
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="playerHorse" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<GetPlayerHorse hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</GetPlayerHorse>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WashEquipped hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WashEquipped>
						</IfCondition>
						<IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<WashEquipped hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</WashEquipped>
						</IfCondition>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="barkAfterService" is_function="0">
		<Variables />
		<Parameters>
			<Variable name="data" type="_string" values="" isPersistent="0" form="single" requirementType="In" />
		</Parameters>
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<ForceLook LookTarget="$__player" DisableVariations="false">
					<Parallel successMode="Any" failureMode="Any">
						<Function_speech_schedulerMonolog alias="$data" animationApproach="$enum:animationApproach.ingameDialogPoseAndAnimations" context="" lookAtId="$__player" metarole="" skipInLod="false" subtitlesDown="false" nodeLabel="12095962" />
						<Loop count="-1">
							<Sequence>
								<Turn target="$__player" align="false" />
								<Wait duration="&apos;1s&apos;" timeType="GameTime" doFail="false" variation="&apos;1s&apos;" />
							</Sequence>
						</Loop>
					</Parallel>
				</ForceLook>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables>
				<Variable name="data" comment="" />
			</Variables>
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<ForceLook hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<Parallel hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
							<Function_speech_schedulerMonolog hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
							</Function_speech_schedulerMonolog>
							<Loop hasInputBreakpoint="0" comment="" breakpointFlags="0">
								<OutputBreakpoints />
								<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
									<OutputBreakpoints />
									<Turn hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Turn>
									<Wait hasInputBreakpoint="0" comment="" breakpointFlags="0">
										<OutputBreakpoints />
									</Wait>
								</Sequence>
							</Loop>
						</Parallel>
					</ForceLook>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
	<BehaviorTree name="RemoveParfume" is_function="0">
		<Variables />
		<Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
			<Behavior canSkip="1">
				<Sequence>
					<RemoveBuffs SoulWUID="" BuffGUID="&apos;1aa6a7cc-4cee-4b73-8080-562bebc21443&apos;" BuffTagId="-1" />
					<RemoveBuffs SoulWUID="" BuffGUID="&apos;b0b520e9-a85f-4698-ad8c-e46ea32d7d65&apos;" BuffTagId="-1" />
					<RemoveBuffs SoulWUID="" BuffGUID="&apos;a047a33e-4715-41c1-977f-1a5f454e30e7&apos;" BuffTagId="-1" />
					<RemoveBuffs SoulWUID="" BuffGUID="&apos;714a027c-b5d4-4816-a1d3-f89764997bde&apos;" BuffTagId="-1" />
					<RemoveBuffs SoulWUID="" BuffGUID="&apos;b6ab81fb-5c59-47ac-8ca1-a4f9a97f1828&apos;" BuffTagId="-1" />
					<RemoveBuffs SoulWUID="" BuffGUID="&apos;5d07a436-c01f-4062-b5c4-0c3ec3c8185d&apos;" BuffTagId="-1" />
					<RemoveBuffs SoulWUID="" BuffGUID="&apos;caf16a25-b138-46bf-b7d3-63f8b2e9bb91&apos;" BuffTagId="-1" />
					<RemoveBuffs SoulWUID="" BuffGUID="&apos;43cd3832-7a94-45e2-95f9-a8632fc861b8&apos;" BuffTagId="-1" />
					<RemoveBuffs SoulWUID="" BuffGUID="&apos;3190c8ba-5aa2-4825-9e96-03387983f9cd&apos;" BuffTagId="-1" />
				</Sequence>
			</Behavior>
		</Root>
		<ForestContainer />
		<EditorData EventSet="">
			<Variables />
			<ForwardDeclarations />
			<Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
				<OutputBreakpoints />
				<Behavior>
					<Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
						<OutputBreakpoints />
						<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</RemoveBuffs>
						<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</RemoveBuffs>
						<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</RemoveBuffs>
						<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</RemoveBuffs>
						<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</RemoveBuffs>
						<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</RemoveBuffs>
						<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</RemoveBuffs>
						<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</RemoveBuffs>
						<RemoveBuffs hasInputBreakpoint="0" comment="" breakpointFlags="0">
							<OutputBreakpoints />
						</RemoveBuffs>
					</Sequence>
				</Behavior>
			</Root>
			<Forest />
			<Comments />
		</EditorData>
	</BehaviorTree>
</BehaviorTrees>