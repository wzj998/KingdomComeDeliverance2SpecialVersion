<?xml version="1.0" encoding="us-ascii"?>
<BehaviorTrees>
  <BehaviorTree name="dogCarees" is_function="0">
    <Variables />
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <WaitAction />
          <JoinedAnimationAction requiresMovement="true" lockContext="$__object.id" lockName="&apos;HousekeeperDogCarees&apos;" lockCount="2" timeout="&apos;20s&apos;" ignoreOthersLeaving="false" fragment="&apos;HousekeeperDogCarees&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;housekeeper&apos;" allowTorchForPlayer="false" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables />
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <WaitAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </WaitAction>
            <JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </JoinedAnimationAction>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="dogCarees_dog" is_function="0">
    <Variables />
    <Parameters>
      <Variable name="targetObject" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <JoinedAnimationAction requiresMovement="true" lockContext="$targetObject" lockName="&apos;HousekeeperDogCarees&apos;" lockCount="2" timeout="&apos;20s&apos;" ignoreOthersLeaving="false" fragment="&apos;HousekeeperDogCarees&apos;" tags="" eventReferenceObject="" alignObject="$targetObject" slaveObject="" resourceOverride="&apos;dog&apos;" allowTorchForPlayer="false" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="dogCare_carees_dog" EventSet="">
      <Variables>
        <Variable name="targetObject" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </JoinedAnimationAction>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="dogFeed" is_function="0">
    <Variables>
      <Variable name="foodPoint" type="_wuid" values="" isPersistent="0" form="single" />
      <Variable name="item" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <Sequence>
          <AnimationAction fragment="&apos;HousekeeperFeedingDogCall&apos;" tags="" eventReferenceObject="" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;housekeeper&apos;" allowTorchForPlayer="false" />
          <JoinedAnimationAction requiresMovement="true" lockContext="$__object.id" lockName="&apos;HousekeeperDogFeed&apos;" lockCount="2" timeout="&apos;20s&apos;" ignoreOthersLeaving="false" fragment="&apos;HousekeeperFeedingDog&apos;" tags="" eventReferenceObject="$__object.id" alignObject="$__object.id" slaveObject="" resourceOverride="&apos;housekeeper&apos;" allowTorchForPlayer="false" />
        </Sequence>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="foodPoint" comment="" />
        <Variable name="item" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root editorPosX="-50" editorPosY="40" hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <Sequence hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <AnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </AnimationAction>
            <JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </JoinedAnimationAction>
          </Sequence>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="dogFeed_dog" is_function="0">
    <Variables>
      <Variable name="foodPoint" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Parameters>
      <Variable name="targetObject" type="_wuid" values="" isPersistent="0" form="single" requirementType="In" />
    </Parameters>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <Behavior canSkip="1">
        <JoinedAnimationAction requiresMovement="true" lockContext="$targetObject" lockName="&apos;HousekeeperDogFeed&apos;" lockCount="2" timeout="&apos;20s&apos;" ignoreOthersLeaving="false" fragment="&apos;HousekeeperFeedingDog&apos;" tags="" eventReferenceObject="" alignObject="$targetObject" slaveObject="" resourceOverride="&apos;dog&apos;" allowTorchForPlayer="false" />
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData Signature="dogCare_feed_dog" EventSet="">
      <Variables>
        <Variable name="foodPoint" comment="" />
        <Variable name="targetObject" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <Behavior>
          <JoinedAnimationAction hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
          </JoinedAnimationAction>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
  <BehaviorTree name="onRequest" is_function="0">
    <Variables>
      <Variable name="selectedDog" type="_wuid" values="" isPersistent="0" form="single" />
    </Variables>
    <Root OneTimeOnly="false" FailState="Recoverable" saveVersion="2">
      <OnInit canSkip="1">
        <GraphSearch Origin="$this.id" Borders="" depth="1" selection="true" SearchPattern="Depth" EdgePruning="&apos;parent,inventory&apos;" AllowedEdges="" SubGraph="" AllowSubtraph="false" includeOrigin="false" excludeOrigin="false" failOnEmpty="true" SetOperationChoice="Intersection|And" errorOnEmpty="false" shortCircuit="false" skipTraversed="true">
          <LinkTagFilter tag="&apos;dogCare_slave&apos;" prune="true" negprune="unknown" Parent="" Child="" Data="" />
          <SoulIsAliveFilter Source="Child" prune="true" negprune="unknown" Parent="" Child="" />
          <Nodalyzer Quantifiers="Exists" Parent="" Child="$selectedDog" saveVersion="2" />
        </GraphSearch>
      </OnInit>
      <Behavior canSkip="1">
        <Switch>
          <IfCondition failOnCondition="false" condition="$__behaviorName == &apos;dogCarees&apos;">
            <AddInterrupt_dogCare_carees_dog targetObject="$this.id" Target="$selectedDog" Host="$this.id" Behavior="&apos;dogCarees_dog&apos;" Priority="5" IgnorePriorityOnPreviousInterrupt="false" urgency="Default" Aliveness="Alive" Privileged="false" FastForward="false" />
          </IfCondition>
          <IfCondition failOnCondition="false" condition="$__behaviorName == &apos;dogFeed&apos;">
            <AddInterrupt_dogCare_feed_dog targetObject="$this.id" Target="$selectedDog" Host="$this.id" Behavior="&apos;dogFeed_dog&apos;" Priority="5" IgnorePriorityOnPreviousInterrupt="false" urgency="Default" Aliveness="Alive" Privileged="false" FastForward="false" />
          </IfCondition>
          <DefaultBranch>
            <Success />
          </DefaultBranch>
        </Switch>
      </Behavior>
    </Root>
    <ForestContainer />
    <EditorData EventSet="">
      <Variables>
        <Variable name="selectedDog" comment="" />
      </Variables>
      <ForwardDeclarations />
      <Root hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
        <OutputBreakpoints />
        <OnInit>
          <GraphSearch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <LinkTagFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </LinkTagFilter>
            <SoulIsAliveFilter hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
            </SoulIsAliveFilter>
            <Nodalyzer hasInputBreakpoint="0" comment="" breakpointFlags="0" saveVersion="2">
              <OutputBreakpoints />
            </Nodalyzer>
          </GraphSearch>
        </OnInit>
        <Behavior>
          <Switch hasInputBreakpoint="0" comment="" breakpointFlags="0">
            <OutputBreakpoints />
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <AddInterrupt_dogCare_carees_dog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </AddInterrupt_dogCare_carees_dog>
            </IfCondition>
            <IfCondition hasInputBreakpoint="0" comment="" breakpointFlags="0">
              <OutputBreakpoints />
              <AddInterrupt_dogCare_feed_dog hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </AddInterrupt_dogCare_feed_dog>
            </IfCondition>
            <DefaultBranch>
              <Success hasInputBreakpoint="0" comment="" breakpointFlags="0">
                <OutputBreakpoints />
              </Success>
            </DefaultBranch>
          </Switch>
        </Behavior>
      </Root>
      <Forest />
      <Comments />
    </EditorData>
  </BehaviorTree>
</BehaviorTrees>