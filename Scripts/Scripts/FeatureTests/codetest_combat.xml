<?xml version="1.0" encoding="us-ascii"?>
<FeatureTester xmlns="http://www.warhorsestudios.cz/tests">
  <Settings />
  <Tests setName="startAll">
    <FeatureTest name="synchInit" description="cekani na playera" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <SetLocalPlayerLookAtEntity duration="4" entityName="attacker2" bone="" />
      <Wait duration="10" />
      <ResetCCCPointHitCounters />
      <WaitUntilPlayerIsAlive who="localPlayer" timeout="20" />
    </FeatureTest>
    <FeatureTest name="attackIdle_sword_longLightCenter" description="Center sword_long Light attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_sword_longHeavyHead" description="Head sword_long Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_sword_longHeavyTopLeft" description="TopLeft sword_long Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_sword_longHeavyTopRight" description="TopRight sword_long Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_sword_longHeavyLowLeft" description="LowLeft sword_long Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_sword_longHeavyLowRight" description="LowRight sword_long Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_shortswordLightCenter" description="Center shortsword Light attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_shortswordHeavyHead" description="Head shortsword Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_shortswordHeavyTopLeft" description="TopLeft shortsword Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_shortswordHeavyTopRight" description="TopRight shortsword Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_shortswordHeavyLowLeft" description="LowLeft shortsword Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_shortswordHeavyLowRight" description="LowRight shortsword Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_axe_onehandLightCenter" description="Center axe_onehand Light attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_axe_onehandHeavyHead" description="Head axe_onehand Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_axe_onehandHeavyTopLeft" description="TopLeft axe_onehand Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_axe_onehandHeavyTopRight" description="TopRight axe_onehand Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_axe_onehandHeavyLowLeft" description="LowLeft axe_onehand Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_axe_onehandHeavyLowRight" description="LowRight axe_onehand Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_maceLightCenter" description="Center mace Light attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_maceHeavyHead" description="Head mace Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_maceHeavyTopLeft" description="TopLeft mace Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_maceHeavyTopRight" description="TopRight mace Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_maceHeavyLowLeft" description="LowLeft mace Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_maceHeavyLowRight" description="LowRight mace Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_sword_longShieldLightCenter" description="Center sword_long with shield Light attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_sword_longShieldHeavyHead" description="Head sword_long with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_sword_longShieldHeavyTopLeft" description="TopLeft sword_long with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_sword_longShieldHeavyTopRight" description="TopRight sword_long with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_sword_longShieldHeavyLowLeft" description="LowLeft sword_long with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_sword_longShieldHeavyLowRight" description="LowRight sword_long with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_shortswordShieldLightCenter" description="Center shortsword with shield Light attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_shortswordShieldHeavyHead" description="Head shortsword with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_shortswordShieldHeavyTopLeft" description="TopLeft shortsword with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_shortswordShieldHeavyTopRight" description="TopRight shortsword with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_shortswordShieldHeavyLowLeft" description="LowLeft shortsword with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_shortswordShieldHeavyLowRight" description="LowRight shortsword with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_axe_onehandShieldLightCenter" description="Center axe_onehand with shield Light attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_axe_onehandShieldHeavyHead" description="Head axe_onehand with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_axe_onehandShieldHeavyTopLeft" description="TopLeft axe_onehand with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_axe_onehandShieldHeavyTopRight" description="TopRight axe_onehand with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_axe_onehandShieldHeavyLowLeft" description="LowLeft axe_onehand with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_axe_onehandShieldHeavyLowRight" description="LowRight axe_onehand with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_maceShieldLightCenter" description="Center mace with shield Light attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_maceShieldHeavyHead" description="Head mace with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_maceShieldHeavyTopLeft" description="TopLeft mace with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_maceShieldHeavyTopRight" description="TopRight mace with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_maceShieldHeavyLowLeft" description="LowLeft mace with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attackIdle_maceShieldHeavyLowRight" description="LowRight mace with shield Heavy attack on NPC in IDLE" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;hit_me2&quot;).this.id,&quot;string&quot;,&quot;hitMe&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="HIT" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="13" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longLightCenterDefend_sword_long" description="Center sword_long Light attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longLightHeadDefend_sword_long" description="Head sword_long Light attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyHeadDefend_sword_long" description="Head sword_long Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyTopLeftDefend_sword_long" description="TopLeft sword_long Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyTopRightDefend_sword_long" description="TopRight sword_long Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyLowLeftDefend_sword_long" description="LowLeft sword_long Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyLowRightDefend_sword_long" description="LowRight sword_long Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longLightCenterDefend_shortsword" description="Center sword_long Light attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longLightHeadDefend_shortsword" description="Head sword_long Light attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyHeadDefend_shortsword" description="Head sword_long Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyTopLeftDefend_shortsword" description="TopLeft sword_long Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyTopRightDefend_shortsword" description="TopRight sword_long Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyLowLeftDefend_shortsword" description="LowLeft sword_long Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyLowRightDefend_shortsword" description="LowRight sword_long Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longLightCenterDefend_axe_onehand" description="Center sword_long Light attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longLightHeadDefend_axe_onehand" description="Head sword_long Light attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyHeadDefend_axe_onehand" description="Head sword_long Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyTopLeftDefend_axe_onehand" description="TopLeft sword_long Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyTopRightDefend_axe_onehand" description="TopRight sword_long Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyLowLeftDefend_axe_onehand" description="LowLeft sword_long Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyLowRightDefend_axe_onehand" description="LowRight sword_long Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longLightCenterDefend_mace" description="Center sword_long Light attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longLightHeadDefend_mace" description="Head sword_long Light attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyHeadDefend_mace" description="Head sword_long Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyTopLeftDefend_mace" description="TopLeft sword_long Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyTopRightDefend_mace" description="TopRight sword_long Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyLowLeftDefend_mace" description="LowLeft sword_long Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyLowRightDefend_mace" description="LowRight sword_long Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordLightCenterDefend_sword_long" description="Center shortsword Light attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordLightHeadDefend_sword_long" description="Head shortsword Light attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyHeadDefend_sword_long" description="Head shortsword Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyTopLeftDefend_sword_long" description="TopLeft shortsword Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyTopRightDefend_sword_long" description="TopRight shortsword Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyLowLeftDefend_sword_long" description="LowLeft shortsword Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyLowRightDefend_sword_long" description="LowRight shortsword Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordLightCenterDefend_shortsword" description="Center shortsword Light attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordLightHeadDefend_shortsword" description="Head shortsword Light attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyHeadDefend_shortsword" description="Head shortsword Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyTopLeftDefend_shortsword" description="TopLeft shortsword Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyTopRightDefend_shortsword" description="TopRight shortsword Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyLowLeftDefend_shortsword" description="LowLeft shortsword Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyLowRightDefend_shortsword" description="LowRight shortsword Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordLightCenterDefend_axe_onehand" description="Center shortsword Light attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordLightHeadDefend_axe_onehand" description="Head shortsword Light attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyHeadDefend_axe_onehand" description="Head shortsword Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyTopLeftDefend_axe_onehand" description="TopLeft shortsword Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyTopRightDefend_axe_onehand" description="TopRight shortsword Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyLowLeftDefend_axe_onehand" description="LowLeft shortsword Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyLowRightDefend_axe_onehand" description="LowRight shortsword Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordLightCenterDefend_mace" description="Center shortsword Light attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordLightHeadDefend_mace" description="Head shortsword Light attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyHeadDefend_mace" description="Head shortsword Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyTopLeftDefend_mace" description="TopLeft shortsword Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyTopRightDefend_mace" description="TopRight shortsword Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyLowLeftDefend_mace" description="LowLeft shortsword Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyLowRightDefend_mace" description="LowRight shortsword Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandLightCenterDefend_sword_long" description="Center axe_onehand Light attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandLightHeadDefend_sword_long" description="Head axe_onehand Light attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyHeadDefend_sword_long" description="Head axe_onehand Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyTopLeftDefend_sword_long" description="TopLeft axe_onehand Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyTopRightDefend_sword_long" description="TopRight axe_onehand Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyLowLeftDefend_sword_long" description="LowLeft axe_onehand Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyLowRightDefend_sword_long" description="LowRight axe_onehand Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandLightCenterDefend_shortsword" description="Center axe_onehand Light attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandLightHeadDefend_shortsword" description="Head axe_onehand Light attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyHeadDefend_shortsword" description="Head axe_onehand Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyTopLeftDefend_shortsword" description="TopLeft axe_onehand Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyTopRightDefend_shortsword" description="TopRight axe_onehand Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyLowLeftDefend_shortsword" description="LowLeft axe_onehand Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyLowRightDefend_shortsword" description="LowRight axe_onehand Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandLightCenterDefend_axe_onehand" description="Center axe_onehand Light attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandLightHeadDefend_axe_onehand" description="Head axe_onehand Light attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyHeadDefend_axe_onehand" description="Head axe_onehand Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyTopLeftDefend_axe_onehand" description="TopLeft axe_onehand Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyTopRightDefend_axe_onehand" description="TopRight axe_onehand Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyLowLeftDefend_axe_onehand" description="LowLeft axe_onehand Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyLowRightDefend_axe_onehand" description="LowRight axe_onehand Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandLightCenterDefend_mace" description="Center axe_onehand Light attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandLightHeadDefend_mace" description="Head axe_onehand Light attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyHeadDefend_mace" description="Head axe_onehand Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyTopLeftDefend_mace" description="TopLeft axe_onehand Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyTopRightDefend_mace" description="TopRight axe_onehand Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyLowLeftDefend_mace" description="LowLeft axe_onehand Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyLowRightDefend_mace" description="LowRight axe_onehand Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceLightCenterDefend_sword_long" description="Center mace Light attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceLightHeadDefend_sword_long" description="Head mace Light attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyHeadDefend_sword_long" description="Head mace Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyTopLeftDefend_sword_long" description="TopLeft mace Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyTopRightDefend_sword_long" description="TopRight mace Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyLowLeftDefend_sword_long" description="LowLeft mace Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyLowRightDefend_sword_long" description="LowRight mace Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceLightCenterDefend_shortsword" description="Center mace Light attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceLightHeadDefend_shortsword" description="Head mace Light attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyHeadDefend_shortsword" description="Head mace Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyTopLeftDefend_shortsword" description="TopLeft mace Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyTopRightDefend_shortsword" description="TopRight mace Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyLowLeftDefend_shortsword" description="LowLeft mace Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyLowRightDefend_shortsword" description="LowRight mace Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceLightCenterDefend_axe_onehand" description="Center mace Light attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceLightHeadDefend_axe_onehand" description="Head mace Light attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyHeadDefend_axe_onehand" description="Head mace Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyTopLeftDefend_axe_onehand" description="TopLeft mace Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyTopRightDefend_axe_onehand" description="TopRight mace Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyLowLeftDefend_axe_onehand" description="LowLeft mace Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyLowRightDefend_axe_onehand" description="LowRight mace Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceLightCenterDefend_mace" description="Center mace Light attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceLightHeadDefend_mace" description="Head mace Light attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyHeadDefend_mace" description="Head mace Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyTopLeftDefend_mace" description="TopLeft mace Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyTopRightDefend_mace" description="TopRight mace Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyLowLeftDefend_mace" description="LowLeft mace Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyLowRightDefend_mace" description="LowRight mace Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longLightCenterDefend_sword_longShield" description="Center sword_long Light attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longLightHeadDefend_sword_longShield" description="Head sword_long Light attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyHeadDefend_sword_longShield" description="Head sword_long Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyTopLeftDefend_sword_longShield" description="TopLeft sword_long Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyTopRightDefend_sword_longShield" description="TopRight sword_long Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyLowLeftDefend_sword_longShield" description="LowLeft sword_long Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyLowRightDefend_sword_longShield" description="LowRight sword_long Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longLightCenterDefend_shortswordShield" description="Center sword_long Light attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longLightHeadDefend_shortswordShield" description="Head sword_long Light attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyHeadDefend_shortswordShield" description="Head sword_long Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyTopLeftDefend_shortswordShield" description="TopLeft sword_long Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyTopRightDefend_shortswordShield" description="TopRight sword_long Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyLowLeftDefend_shortswordShield" description="LowLeft sword_long Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyLowRightDefend_shortswordShield" description="LowRight sword_long Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longLightCenterDefend_axe_onehandShield" description="Center sword_long Light attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longLightHeadDefend_axe_onehandShield" description="Head sword_long Light attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyHeadDefend_axe_onehandShield" description="Head sword_long Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyTopLeftDefend_axe_onehandShield" description="TopLeft sword_long Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyTopRightDefend_axe_onehandShield" description="TopRight sword_long Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyLowLeftDefend_axe_onehandShield" description="LowLeft sword_long Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyLowRightDefend_axe_onehandShield" description="LowRight sword_long Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longLightCenterDefend_maceShield" description="Center sword_long Light attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longLightHeadDefend_maceShield" description="Head sword_long Light attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyHeadDefend_maceShield" description="Head sword_long Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyTopLeftDefend_maceShield" description="TopLeft sword_long Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyTopRightDefend_maceShield" description="TopRight sword_long Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyLowLeftDefend_maceShield" description="LowLeft sword_long Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longHeavyLowRightDefend_maceShield" description="LowRight sword_long Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordLightCenterDefend_sword_longShield" description="Center shortsword Light attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordLightHeadDefend_sword_longShield" description="Head shortsword Light attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyHeadDefend_sword_longShield" description="Head shortsword Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyTopLeftDefend_sword_longShield" description="TopLeft shortsword Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyTopRightDefend_sword_longShield" description="TopRight shortsword Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyLowLeftDefend_sword_longShield" description="LowLeft shortsword Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyLowRightDefend_sword_longShield" description="LowRight shortsword Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordLightCenterDefend_shortswordShield" description="Center shortsword Light attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordLightHeadDefend_shortswordShield" description="Head shortsword Light attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyHeadDefend_shortswordShield" description="Head shortsword Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyTopLeftDefend_shortswordShield" description="TopLeft shortsword Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyTopRightDefend_shortswordShield" description="TopRight shortsword Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyLowLeftDefend_shortswordShield" description="LowLeft shortsword Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyLowRightDefend_shortswordShield" description="LowRight shortsword Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordLightCenterDefend_axe_onehandShield" description="Center shortsword Light attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordLightHeadDefend_axe_onehandShield" description="Head shortsword Light attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyHeadDefend_axe_onehandShield" description="Head shortsword Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyTopLeftDefend_axe_onehandShield" description="TopLeft shortsword Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyTopRightDefend_axe_onehandShield" description="TopRight shortsword Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyLowLeftDefend_axe_onehandShield" description="LowLeft shortsword Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyLowRightDefend_axe_onehandShield" description="LowRight shortsword Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordLightCenterDefend_maceShield" description="Center shortsword Light attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordLightHeadDefend_maceShield" description="Head shortsword Light attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyHeadDefend_maceShield" description="Head shortsword Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyTopLeftDefend_maceShield" description="TopLeft shortsword Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyTopRightDefend_maceShield" description="TopRight shortsword Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyLowLeftDefend_maceShield" description="LowLeft shortsword Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordHeavyLowRightDefend_maceShield" description="LowRight shortsword Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandLightCenterDefend_sword_longShield" description="Center axe_onehand Light attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandLightHeadDefend_sword_longShield" description="Head axe_onehand Light attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyHeadDefend_sword_longShield" description="Head axe_onehand Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyTopLeftDefend_sword_longShield" description="TopLeft axe_onehand Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyTopRightDefend_sword_longShield" description="TopRight axe_onehand Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyLowLeftDefend_sword_longShield" description="LowLeft axe_onehand Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyLowRightDefend_sword_longShield" description="LowRight axe_onehand Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandLightCenterDefend_shortswordShield" description="Center axe_onehand Light attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandLightHeadDefend_shortswordShield" description="Head axe_onehand Light attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyHeadDefend_shortswordShield" description="Head axe_onehand Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyTopLeftDefend_shortswordShield" description="TopLeft axe_onehand Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyTopRightDefend_shortswordShield" description="TopRight axe_onehand Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyLowLeftDefend_shortswordShield" description="LowLeft axe_onehand Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyLowRightDefend_shortswordShield" description="LowRight axe_onehand Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandLightCenterDefend_axe_onehandShield" description="Center axe_onehand Light attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandLightHeadDefend_axe_onehandShield" description="Head axe_onehand Light attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyHeadDefend_axe_onehandShield" description="Head axe_onehand Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyTopLeftDefend_axe_onehandShield" description="TopLeft axe_onehand Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyTopRightDefend_axe_onehandShield" description="TopRight axe_onehand Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyLowLeftDefend_axe_onehandShield" description="LowLeft axe_onehand Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyLowRightDefend_axe_onehandShield" description="LowRight axe_onehand Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandLightCenterDefend_maceShield" description="Center axe_onehand Light attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandLightHeadDefend_maceShield" description="Head axe_onehand Light attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyHeadDefend_maceShield" description="Head axe_onehand Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyTopLeftDefend_maceShield" description="TopLeft axe_onehand Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyTopRightDefend_maceShield" description="TopRight axe_onehand Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyLowLeftDefend_maceShield" description="LowLeft axe_onehand Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandHeavyLowRightDefend_maceShield" description="LowRight axe_onehand Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceLightCenterDefend_sword_longShield" description="Center mace Light attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceLightHeadDefend_sword_longShield" description="Head mace Light attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyHeadDefend_sword_longShield" description="Head mace Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyTopLeftDefend_sword_longShield" description="TopLeft mace Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyTopRightDefend_sword_longShield" description="TopRight mace Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyLowLeftDefend_sword_longShield" description="LowLeft mace Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyLowRightDefend_sword_longShield" description="LowRight mace Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceLightCenterDefend_shortswordShield" description="Center mace Light attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceLightHeadDefend_shortswordShield" description="Head mace Light attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyHeadDefend_shortswordShield" description="Head mace Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyTopLeftDefend_shortswordShield" description="TopLeft mace Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyTopRightDefend_shortswordShield" description="TopRight mace Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyLowLeftDefend_shortswordShield" description="LowLeft mace Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyLowRightDefend_shortswordShield" description="LowRight mace Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceLightCenterDefend_axe_onehandShield" description="Center mace Light attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceLightHeadDefend_axe_onehandShield" description="Head mace Light attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyHeadDefend_axe_onehandShield" description="Head mace Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyTopLeftDefend_axe_onehandShield" description="TopLeft mace Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyTopRightDefend_axe_onehandShield" description="TopRight mace Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyLowLeftDefend_axe_onehandShield" description="LowLeft mace Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyLowRightDefend_axe_onehandShield" description="LowRight mace Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceLightCenterDefend_maceShield" description="Center mace Light attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceLightHeadDefend_maceShield" description="Head mace Light attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyHeadDefend_maceShield" description="Head mace Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyTopLeftDefend_maceShield" description="TopLeft mace Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyTopRightDefend_maceShield" description="TopRight mace Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyLowLeftDefend_maceShield" description="LowLeft mace Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceHeavyLowRightDefend_maceShield" description="LowRight mace Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldLightCenterDefend_sword_long" description="Center sword_long with shield Light attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldLightHeadDefend_sword_long" description="Head sword_long with shield Light attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyHeadDefend_sword_long" description="Head sword_long with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyTopLeftDefend_sword_long" description="TopLeft sword_long with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyTopRightDefend_sword_long" description="TopRight sword_long with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyLowLeftDefend_sword_long" description="LowLeft sword_long with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyLowRightDefend_sword_long" description="LowRight sword_long with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldLightCenterDefend_shortsword" description="Center sword_long with shield Light attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldLightHeadDefend_shortsword" description="Head sword_long with shield Light attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyHeadDefend_shortsword" description="Head sword_long with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyTopLeftDefend_shortsword" description="TopLeft sword_long with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyTopRightDefend_shortsword" description="TopRight sword_long with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyLowLeftDefend_shortsword" description="LowLeft sword_long with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyLowRightDefend_shortsword" description="LowRight sword_long with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldLightCenterDefend_axe_onehand" description="Center sword_long with shield Light attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldLightHeadDefend_axe_onehand" description="Head sword_long with shield Light attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyHeadDefend_axe_onehand" description="Head sword_long with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyTopLeftDefend_axe_onehand" description="TopLeft sword_long with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyTopRightDefend_axe_onehand" description="TopRight sword_long with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyLowLeftDefend_axe_onehand" description="LowLeft sword_long with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyLowRightDefend_axe_onehand" description="LowRight sword_long with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldLightCenterDefend_mace" description="Center sword_long with shield Light attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldLightHeadDefend_mace" description="Head sword_long with shield Light attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyHeadDefend_mace" description="Head sword_long with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyTopLeftDefend_mace" description="TopLeft sword_long with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyTopRightDefend_mace" description="TopRight sword_long with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyLowLeftDefend_mace" description="LowLeft sword_long with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyLowRightDefend_mace" description="LowRight sword_long with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldLightCenterDefend_sword_long" description="Center shortsword with shield Light attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldLightHeadDefend_sword_long" description="Head shortsword with shield Light attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyHeadDefend_sword_long" description="Head shortsword with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyTopLeftDefend_sword_long" description="TopLeft shortsword with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyTopRightDefend_sword_long" description="TopRight shortsword with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyLowLeftDefend_sword_long" description="LowLeft shortsword with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyLowRightDefend_sword_long" description="LowRight shortsword with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldLightCenterDefend_shortsword" description="Center shortsword with shield Light attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldLightHeadDefend_shortsword" description="Head shortsword with shield Light attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyHeadDefend_shortsword" description="Head shortsword with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyTopLeftDefend_shortsword" description="TopLeft shortsword with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyTopRightDefend_shortsword" description="TopRight shortsword with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyLowLeftDefend_shortsword" description="LowLeft shortsword with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyLowRightDefend_shortsword" description="LowRight shortsword with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldLightCenterDefend_axe_onehand" description="Center shortsword with shield Light attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldLightHeadDefend_axe_onehand" description="Head shortsword with shield Light attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyHeadDefend_axe_onehand" description="Head shortsword with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyTopLeftDefend_axe_onehand" description="TopLeft shortsword with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyTopRightDefend_axe_onehand" description="TopRight shortsword with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyLowLeftDefend_axe_onehand" description="LowLeft shortsword with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyLowRightDefend_axe_onehand" description="LowRight shortsword with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldLightCenterDefend_mace" description="Center shortsword with shield Light attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldLightHeadDefend_mace" description="Head shortsword with shield Light attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyHeadDefend_mace" description="Head shortsword with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyTopLeftDefend_mace" description="TopLeft shortsword with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyTopRightDefend_mace" description="TopRight shortsword with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyLowLeftDefend_mace" description="LowLeft shortsword with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyLowRightDefend_mace" description="LowRight shortsword with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldLightCenterDefend_sword_long" description="Center axe_onehand with shield Light attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldLightHeadDefend_sword_long" description="Head axe_onehand with shield Light attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyHeadDefend_sword_long" description="Head axe_onehand with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyTopLeftDefend_sword_long" description="TopLeft axe_onehand with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyTopRightDefend_sword_long" description="TopRight axe_onehand with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyLowLeftDefend_sword_long" description="LowLeft axe_onehand with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyLowRightDefend_sword_long" description="LowRight axe_onehand with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldLightCenterDefend_shortsword" description="Center axe_onehand with shield Light attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldLightHeadDefend_shortsword" description="Head axe_onehand with shield Light attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyHeadDefend_shortsword" description="Head axe_onehand with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyTopLeftDefend_shortsword" description="TopLeft axe_onehand with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyTopRightDefend_shortsword" description="TopRight axe_onehand with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyLowLeftDefend_shortsword" description="LowLeft axe_onehand with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyLowRightDefend_shortsword" description="LowRight axe_onehand with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldLightCenterDefend_axe_onehand" description="Center axe_onehand with shield Light attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldLightHeadDefend_axe_onehand" description="Head axe_onehand with shield Light attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyHeadDefend_axe_onehand" description="Head axe_onehand with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyTopLeftDefend_axe_onehand" description="TopLeft axe_onehand with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyTopRightDefend_axe_onehand" description="TopRight axe_onehand with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyLowLeftDefend_axe_onehand" description="LowLeft axe_onehand with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyLowRightDefend_axe_onehand" description="LowRight axe_onehand with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldLightCenterDefend_mace" description="Center axe_onehand with shield Light attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldLightHeadDefend_mace" description="Head axe_onehand with shield Light attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyHeadDefend_mace" description="Head axe_onehand with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyTopLeftDefend_mace" description="TopLeft axe_onehand with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyTopRightDefend_mace" description="TopRight axe_onehand with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyLowLeftDefend_mace" description="LowLeft axe_onehand with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyLowRightDefend_mace" description="LowRight axe_onehand with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldLightCenterDefend_sword_long" description="Center mace with shield Light attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldLightHeadDefend_sword_long" description="Head mace with shield Light attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyHeadDefend_sword_long" description="Head mace with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyTopLeftDefend_sword_long" description="TopLeft mace with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyTopRightDefend_sword_long" description="TopRight mace with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyLowLeftDefend_sword_long" description="LowLeft mace with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyLowRightDefend_sword_long" description="LowRight mace with shield Heavy attack on sword_long" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldLightCenterDefend_shortsword" description="Center mace with shield Light attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldLightHeadDefend_shortsword" description="Head mace with shield Light attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyHeadDefend_shortsword" description="Head mace with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyTopLeftDefend_shortsword" description="TopLeft mace with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyTopRightDefend_shortsword" description="TopRight mace with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyLowLeftDefend_shortsword" description="LowLeft mace with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyLowRightDefend_shortsword" description="LowRight mace with shield Heavy attack on shortsword" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldLightCenterDefend_axe_onehand" description="Center mace with shield Light attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldLightHeadDefend_axe_onehand" description="Head mace with shield Light attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyHeadDefend_axe_onehand" description="Head mace with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyTopLeftDefend_axe_onehand" description="TopLeft mace with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyTopRightDefend_axe_onehand" description="TopRight mace with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyLowLeftDefend_axe_onehand" description="LowLeft mace with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyLowRightDefend_axe_onehand" description="LowRight mace with shield Heavy attack on axe_onehand" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldLightCenterDefend_mace" description="Center mace with shield Light attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldLightHeadDefend_mace" description="Head mace with shield Light attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyHeadDefend_mace" description="Head mace with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyTopLeftDefend_mace" description="TopLeft mace with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyTopRightDefend_mace" description="TopRight mace with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyLowLeftDefend_mace" description="LowLeft mace with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyLowRightDefend_mace" description="LowRight mace with shield Heavy attack on mace" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, false)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldLightCenterDefend_sword_longShield" description="Center sword_long with shield Light attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldLightHeadDefend_sword_longShield" description="Head sword_long with shield Light attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyHeadDefend_sword_longShield" description="Head sword_long with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyTopLeftDefend_sword_longShield" description="TopLeft sword_long with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyTopRightDefend_sword_longShield" description="TopRight sword_long with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyLowLeftDefend_sword_longShield" description="LowLeft sword_long with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyLowRightDefend_sword_longShield" description="LowRight sword_long with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldLightCenterDefend_shortswordShield" description="Center sword_long with shield Light attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldLightHeadDefend_shortswordShield" description="Head sword_long with shield Light attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyHeadDefend_shortswordShield" description="Head sword_long with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyTopLeftDefend_shortswordShield" description="TopLeft sword_long with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyTopRightDefend_shortswordShield" description="TopRight sword_long with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyLowLeftDefend_shortswordShield" description="LowLeft sword_long with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyLowRightDefend_shortswordShield" description="LowRight sword_long with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldLightCenterDefend_axe_onehandShield" description="Center sword_long with shield Light attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldLightHeadDefend_axe_onehandShield" description="Head sword_long with shield Light attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyHeadDefend_axe_onehandShield" description="Head sword_long with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyTopLeftDefend_axe_onehandShield" description="TopLeft sword_long with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyTopRightDefend_axe_onehandShield" description="TopRight sword_long with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyLowLeftDefend_axe_onehandShield" description="LowLeft sword_long with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyLowRightDefend_axe_onehandShield" description="LowRight sword_long with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldLightCenterDefend_maceShield" description="Center sword_long with shield Light attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldLightHeadDefend_maceShield" description="Head sword_long with shield Light attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyHeadDefend_maceShield" description="Head sword_long with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyTopLeftDefend_maceShield" description="TopLeft sword_long with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyTopRightDefend_maceShield" description="TopRight sword_long with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyLowLeftDefend_maceShield" description="LowLeft sword_long with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldHeavyLowRightDefend_maceShield" description="LowRight sword_long with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldLightCenterDefend_sword_longShield" description="Center shortsword with shield Light attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldLightHeadDefend_sword_longShield" description="Head shortsword with shield Light attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyHeadDefend_sword_longShield" description="Head shortsword with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyTopLeftDefend_sword_longShield" description="TopLeft shortsword with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyTopRightDefend_sword_longShield" description="TopRight shortsword with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyLowLeftDefend_sword_longShield" description="LowLeft shortsword with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyLowRightDefend_sword_longShield" description="LowRight shortsword with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldLightCenterDefend_shortswordShield" description="Center shortsword with shield Light attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldLightHeadDefend_shortswordShield" description="Head shortsword with shield Light attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyHeadDefend_shortswordShield" description="Head shortsword with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyTopLeftDefend_shortswordShield" description="TopLeft shortsword with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyTopRightDefend_shortswordShield" description="TopRight shortsword with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyLowLeftDefend_shortswordShield" description="LowLeft shortsword with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyLowRightDefend_shortswordShield" description="LowRight shortsword with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldLightCenterDefend_axe_onehandShield" description="Center shortsword with shield Light attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldLightHeadDefend_axe_onehandShield" description="Head shortsword with shield Light attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyHeadDefend_axe_onehandShield" description="Head shortsword with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyTopLeftDefend_axe_onehandShield" description="TopLeft shortsword with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyTopRightDefend_axe_onehandShield" description="TopRight shortsword with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyLowLeftDefend_axe_onehandShield" description="LowLeft shortsword with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyLowRightDefend_axe_onehandShield" description="LowRight shortsword with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldLightCenterDefend_maceShield" description="Center shortsword with shield Light attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldLightHeadDefend_maceShield" description="Head shortsword with shield Light attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyHeadDefend_maceShield" description="Head shortsword with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyTopLeftDefend_maceShield" description="TopLeft shortsword with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyTopRightDefend_maceShield" description="TopRight shortsword with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyLowLeftDefend_maceShield" description="LowLeft shortsword with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldHeavyLowRightDefend_maceShield" description="LowRight shortsword with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldLightCenterDefend_sword_longShield" description="Center axe_onehand with shield Light attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldLightHeadDefend_sword_longShield" description="Head axe_onehand with shield Light attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyHeadDefend_sword_longShield" description="Head axe_onehand with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyTopLeftDefend_sword_longShield" description="TopLeft axe_onehand with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyTopRightDefend_sword_longShield" description="TopRight axe_onehand with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyLowLeftDefend_sword_longShield" description="LowLeft axe_onehand with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyLowRightDefend_sword_longShield" description="LowRight axe_onehand with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldLightCenterDefend_shortswordShield" description="Center axe_onehand with shield Light attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldLightHeadDefend_shortswordShield" description="Head axe_onehand with shield Light attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyHeadDefend_shortswordShield" description="Head axe_onehand with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyTopLeftDefend_shortswordShield" description="TopLeft axe_onehand with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyTopRightDefend_shortswordShield" description="TopRight axe_onehand with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyLowLeftDefend_shortswordShield" description="LowLeft axe_onehand with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyLowRightDefend_shortswordShield" description="LowRight axe_onehand with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldLightCenterDefend_axe_onehandShield" description="Center axe_onehand with shield Light attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldLightHeadDefend_axe_onehandShield" description="Head axe_onehand with shield Light attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyHeadDefend_axe_onehandShield" description="Head axe_onehand with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyTopLeftDefend_axe_onehandShield" description="TopLeft axe_onehand with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyTopRightDefend_axe_onehandShield" description="TopRight axe_onehand with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyLowLeftDefend_axe_onehandShield" description="LowLeft axe_onehand with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyLowRightDefend_axe_onehandShield" description="LowRight axe_onehand with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldLightCenterDefend_maceShield" description="Center axe_onehand with shield Light attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldLightHeadDefend_maceShield" description="Head axe_onehand with shield Light attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyHeadDefend_maceShield" description="Head axe_onehand with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyTopLeftDefend_maceShield" description="TopLeft axe_onehand with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyTopRightDefend_maceShield" description="TopRight axe_onehand with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyLowLeftDefend_maceShield" description="LowLeft axe_onehand with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldHeavyLowRightDefend_maceShield" description="LowRight axe_onehand with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldLightCenterDefend_sword_longShield" description="Center mace with shield Light attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldLightHeadDefend_sword_longShield" description="Head mace with shield Light attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyHeadDefend_sword_longShield" description="Head mace with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyTopLeftDefend_sword_longShield" description="TopLeft mace with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyTopRightDefend_sword_longShield" description="TopRight mace with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyLowLeftDefend_sword_longShield" description="LowLeft mace with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyLowRightDefend_sword_longShield" description="LowRight mace with shield Heavy attack on sword_long with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(sword_long, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldLightCenterDefend_shortswordShield" description="Center mace with shield Light attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldLightHeadDefend_shortswordShield" description="Head mace with shield Light attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyHeadDefend_shortswordShield" description="Head mace with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyTopLeftDefend_shortswordShield" description="TopLeft mace with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyTopRightDefend_shortswordShield" description="TopRight mace with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyLowLeftDefend_shortswordShield" description="LowLeft mace with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyLowRightDefend_shortswordShield" description="LowRight mace with shield Heavy attack on shortsword with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(shortsword, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldLightCenterDefend_axe_onehandShield" description="Center mace with shield Light attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldLightHeadDefend_axe_onehandShield" description="Head mace with shield Light attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyHeadDefend_axe_onehandShield" description="Head mace with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyTopLeftDefend_axe_onehandShield" description="TopLeft mace with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyTopRightDefend_axe_onehandShield" description="TopRight mace with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyLowLeftDefend_axe_onehandShield" description="LowLeft mace with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyLowRightDefend_axe_onehandShield" description="LowRight mace with shield Heavy attack on axe_onehand with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(axe_onehand, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldLightCenterDefend_maceShield" description="Center mace with shield Light attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Center) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldLightHeadDefend_maceShield" description="Head mace with shield Light attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Light) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyHeadDefend_maceShield" description="Head mace with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.Head) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyTopLeftDefend_maceShield" description="TopLeft mace with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyTopRightDefend_maceShield" description="TopRight mace with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.TopRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyLowLeftDefend_maceShield" description="LowLeft mace with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowLeft) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldHeavyLowRightDefend_maceShield" description="LowRight mace with shield Heavy attack on mace with shield" enabled="true">
      <DoConsoleCommand command="log_spamdelay 1" />
      <Wait duration="1" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;string&quot;,&quot;attack&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;string&quot;,&quot;defend&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;attackParams&quot;,&quot;(&quot; .. tostring(enum_CombatAttackTypes.Heavy) ..&quot;, &quot; .. tostring(enum_CombatZones.LowRight) .. &quot;)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;attacker2&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <DoConsoleCommand command="#XGenAIModule.SendMessageToEntity(System.GetEntityByName(&quot;defender&quot;).this.id,&quot;useWeapon&quot;,&quot;(mace, true)&quot;);" />
      <SetResponseToHittingCCCPoint checkpointName="attack_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="defend_OK" response="expectedNext" />
      <SetResponseToHittingCCCPoint checkpointName="attack_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defend_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHealthCheck_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendHitType_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockFailed_FAIL" response="failTest" />
      <SetResponseToHittingCCCPoint checkpointName="defendBlockTimeout_FAIL" response="failTest" />
      <WaitUntilHitAllExpectedCCCPoints timeout="18" />
    </FeatureTest>
  </Tests>
  <Tests setName="testGroups">
    <FeatureTest name="attackIdle_sword_long" description="sword_long  various attacks on NPC in IDLE" enabled="true" maxTime="91">
      <RunFeatureTest testName="attackIdle_sword_longLightCenter" />
      <RunFeatureTest testName="attackIdle_sword_longHeavyHead" />
      <RunFeatureTest testName="attackIdle_sword_longHeavyTopLeft" />
      <RunFeatureTest testName="attackIdle_sword_longHeavyTopRight" />
      <RunFeatureTest testName="attackIdle_sword_longHeavyLowLeft" />
      <RunFeatureTest testName="attackIdle_sword_longHeavyLowRight" />
    </FeatureTest>
    <FeatureTest name="attackIdle_shortsword" description="shortsword  various attacks on NPC in IDLE" enabled="true" maxTime="91">
      <RunFeatureTest testName="attackIdle_shortswordLightCenter" />
      <RunFeatureTest testName="attackIdle_shortswordHeavyHead" />
      <RunFeatureTest testName="attackIdle_shortswordHeavyTopLeft" />
      <RunFeatureTest testName="attackIdle_shortswordHeavyTopRight" />
      <RunFeatureTest testName="attackIdle_shortswordHeavyLowLeft" />
      <RunFeatureTest testName="attackIdle_shortswordHeavyLowRight" />
    </FeatureTest>
    <FeatureTest name="attackIdle_axe_onehand" description="axe_onehand  various attacks on NPC in IDLE" enabled="true" maxTime="91">
      <RunFeatureTest testName="attackIdle_axe_onehandLightCenter" />
      <RunFeatureTest testName="attackIdle_axe_onehandHeavyHead" />
      <RunFeatureTest testName="attackIdle_axe_onehandHeavyTopLeft" />
      <RunFeatureTest testName="attackIdle_axe_onehandHeavyTopRight" />
      <RunFeatureTest testName="attackIdle_axe_onehandHeavyLowLeft" />
      <RunFeatureTest testName="attackIdle_axe_onehandHeavyLowRight" />
    </FeatureTest>
    <FeatureTest name="attackIdle_mace" description="mace  various attacks on NPC in IDLE" enabled="true" maxTime="91">
      <RunFeatureTest testName="attackIdle_maceLightCenter" />
      <RunFeatureTest testName="attackIdle_maceHeavyHead" />
      <RunFeatureTest testName="attackIdle_maceHeavyTopLeft" />
      <RunFeatureTest testName="attackIdle_maceHeavyTopRight" />
      <RunFeatureTest testName="attackIdle_maceHeavyLowLeft" />
      <RunFeatureTest testName="attackIdle_maceHeavyLowRight" />
    </FeatureTest>
    <FeatureTest name="attackIdle_sword_longShield" description="sword_long Shield various attacks on NPC in IDLE" enabled="true" maxTime="91">
      <RunFeatureTest testName="attackIdle_sword_longShieldLightCenter" />
      <RunFeatureTest testName="attackIdle_sword_longShieldHeavyHead" />
      <RunFeatureTest testName="attackIdle_sword_longShieldHeavyTopLeft" />
      <RunFeatureTest testName="attackIdle_sword_longShieldHeavyTopRight" />
      <RunFeatureTest testName="attackIdle_sword_longShieldHeavyLowLeft" />
      <RunFeatureTest testName="attackIdle_sword_longShieldHeavyLowRight" />
    </FeatureTest>
    <FeatureTest name="attackIdle_shortswordShield" description="shortsword Shield various attacks on NPC in IDLE" enabled="true" maxTime="91">
      <RunFeatureTest testName="attackIdle_shortswordShieldLightCenter" />
      <RunFeatureTest testName="attackIdle_shortswordShieldHeavyHead" />
      <RunFeatureTest testName="attackIdle_shortswordShieldHeavyTopLeft" />
      <RunFeatureTest testName="attackIdle_shortswordShieldHeavyTopRight" />
      <RunFeatureTest testName="attackIdle_shortswordShieldHeavyLowLeft" />
      <RunFeatureTest testName="attackIdle_shortswordShieldHeavyLowRight" />
    </FeatureTest>
    <FeatureTest name="attackIdle_axe_onehandShield" description="axe_onehand Shield various attacks on NPC in IDLE" enabled="true" maxTime="91">
      <RunFeatureTest testName="attackIdle_axe_onehandShieldLightCenter" />
      <RunFeatureTest testName="attackIdle_axe_onehandShieldHeavyHead" />
      <RunFeatureTest testName="attackIdle_axe_onehandShieldHeavyTopLeft" />
      <RunFeatureTest testName="attackIdle_axe_onehandShieldHeavyTopRight" />
      <RunFeatureTest testName="attackIdle_axe_onehandShieldHeavyLowLeft" />
      <RunFeatureTest testName="attackIdle_axe_onehandShieldHeavyLowRight" />
    </FeatureTest>
    <FeatureTest name="attackIdle_maceShield" description="mace Shield various attacks on NPC in IDLE" enabled="true" maxTime="91">
      <RunFeatureTest testName="attackIdle_maceShieldLightCenter" />
      <RunFeatureTest testName="attackIdle_maceShieldHeavyHead" />
      <RunFeatureTest testName="attackIdle_maceShieldHeavyTopLeft" />
      <RunFeatureTest testName="attackIdle_maceShieldHeavyTopRight" />
      <RunFeatureTest testName="attackIdle_maceShieldHeavyLowLeft" />
      <RunFeatureTest testName="attackIdle_maceShieldHeavyLowRight" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longDefend_sword_long" description="sword_long with shield various attacks on sword_long " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_sword_longLightCenterDefend_sword_long" />
      <RunFeatureTest testName="attack_sword_longLightHeadDefend_sword_long" />
      <RunFeatureTest testName="attack_sword_longHeavyHeadDefend_sword_long" />
      <RunFeatureTest testName="attack_sword_longHeavyTopLeftDefend_sword_long" />
      <RunFeatureTest testName="attack_sword_longHeavyTopRightDefend_sword_long" />
      <RunFeatureTest testName="attack_sword_longHeavyLowLeftDefend_sword_long" />
      <RunFeatureTest testName="attack_sword_longHeavyLowRightDefend_sword_long" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longDefend_shortsword" description="sword_long with shield various attacks on shortsword " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_sword_longLightCenterDefend_shortsword" />
      <RunFeatureTest testName="attack_sword_longLightHeadDefend_shortsword" />
      <RunFeatureTest testName="attack_sword_longHeavyHeadDefend_shortsword" />
      <RunFeatureTest testName="attack_sword_longHeavyTopLeftDefend_shortsword" />
      <RunFeatureTest testName="attack_sword_longHeavyTopRightDefend_shortsword" />
      <RunFeatureTest testName="attack_sword_longHeavyLowLeftDefend_shortsword" />
      <RunFeatureTest testName="attack_sword_longHeavyLowRightDefend_shortsword" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longDefend_axe_onehand" description="sword_long with shield various attacks on axe_onehand " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_sword_longLightCenterDefend_axe_onehand" />
      <RunFeatureTest testName="attack_sword_longLightHeadDefend_axe_onehand" />
      <RunFeatureTest testName="attack_sword_longHeavyHeadDefend_axe_onehand" />
      <RunFeatureTest testName="attack_sword_longHeavyTopLeftDefend_axe_onehand" />
      <RunFeatureTest testName="attack_sword_longHeavyTopRightDefend_axe_onehand" />
      <RunFeatureTest testName="attack_sword_longHeavyLowLeftDefend_axe_onehand" />
      <RunFeatureTest testName="attack_sword_longHeavyLowRightDefend_axe_onehand" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longDefend_mace" description="sword_long with shield various attacks on mace " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_sword_longLightCenterDefend_mace" />
      <RunFeatureTest testName="attack_sword_longLightHeadDefend_mace" />
      <RunFeatureTest testName="attack_sword_longHeavyHeadDefend_mace" />
      <RunFeatureTest testName="attack_sword_longHeavyTopLeftDefend_mace" />
      <RunFeatureTest testName="attack_sword_longHeavyTopRightDefend_mace" />
      <RunFeatureTest testName="attack_sword_longHeavyLowLeftDefend_mace" />
      <RunFeatureTest testName="attack_sword_longHeavyLowRightDefend_mace" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordDefend_sword_long" description="shortsword with shield various attacks on sword_long " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_shortswordLightCenterDefend_sword_long" />
      <RunFeatureTest testName="attack_shortswordLightHeadDefend_sword_long" />
      <RunFeatureTest testName="attack_shortswordHeavyHeadDefend_sword_long" />
      <RunFeatureTest testName="attack_shortswordHeavyTopLeftDefend_sword_long" />
      <RunFeatureTest testName="attack_shortswordHeavyTopRightDefend_sword_long" />
      <RunFeatureTest testName="attack_shortswordHeavyLowLeftDefend_sword_long" />
      <RunFeatureTest testName="attack_shortswordHeavyLowRightDefend_sword_long" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordDefend_shortsword" description="shortsword with shield various attacks on shortsword " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_shortswordLightCenterDefend_shortsword" />
      <RunFeatureTest testName="attack_shortswordLightHeadDefend_shortsword" />
      <RunFeatureTest testName="attack_shortswordHeavyHeadDefend_shortsword" />
      <RunFeatureTest testName="attack_shortswordHeavyTopLeftDefend_shortsword" />
      <RunFeatureTest testName="attack_shortswordHeavyTopRightDefend_shortsword" />
      <RunFeatureTest testName="attack_shortswordHeavyLowLeftDefend_shortsword" />
      <RunFeatureTest testName="attack_shortswordHeavyLowRightDefend_shortsword" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordDefend_axe_onehand" description="shortsword with shield various attacks on axe_onehand " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_shortswordLightCenterDefend_axe_onehand" />
      <RunFeatureTest testName="attack_shortswordLightHeadDefend_axe_onehand" />
      <RunFeatureTest testName="attack_shortswordHeavyHeadDefend_axe_onehand" />
      <RunFeatureTest testName="attack_shortswordHeavyTopLeftDefend_axe_onehand" />
      <RunFeatureTest testName="attack_shortswordHeavyTopRightDefend_axe_onehand" />
      <RunFeatureTest testName="attack_shortswordHeavyLowLeftDefend_axe_onehand" />
      <RunFeatureTest testName="attack_shortswordHeavyLowRightDefend_axe_onehand" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordDefend_mace" description="shortsword with shield various attacks on mace " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_shortswordLightCenterDefend_mace" />
      <RunFeatureTest testName="attack_shortswordLightHeadDefend_mace" />
      <RunFeatureTest testName="attack_shortswordHeavyHeadDefend_mace" />
      <RunFeatureTest testName="attack_shortswordHeavyTopLeftDefend_mace" />
      <RunFeatureTest testName="attack_shortswordHeavyTopRightDefend_mace" />
      <RunFeatureTest testName="attack_shortswordHeavyLowLeftDefend_mace" />
      <RunFeatureTest testName="attack_shortswordHeavyLowRightDefend_mace" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandDefend_sword_long" description="axe_onehand with shield various attacks on sword_long " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_axe_onehandLightCenterDefend_sword_long" />
      <RunFeatureTest testName="attack_axe_onehandLightHeadDefend_sword_long" />
      <RunFeatureTest testName="attack_axe_onehandHeavyHeadDefend_sword_long" />
      <RunFeatureTest testName="attack_axe_onehandHeavyTopLeftDefend_sword_long" />
      <RunFeatureTest testName="attack_axe_onehandHeavyTopRightDefend_sword_long" />
      <RunFeatureTest testName="attack_axe_onehandHeavyLowLeftDefend_sword_long" />
      <RunFeatureTest testName="attack_axe_onehandHeavyLowRightDefend_sword_long" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandDefend_shortsword" description="axe_onehand with shield various attacks on shortsword " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_axe_onehandLightCenterDefend_shortsword" />
      <RunFeatureTest testName="attack_axe_onehandLightHeadDefend_shortsword" />
      <RunFeatureTest testName="attack_axe_onehandHeavyHeadDefend_shortsword" />
      <RunFeatureTest testName="attack_axe_onehandHeavyTopLeftDefend_shortsword" />
      <RunFeatureTest testName="attack_axe_onehandHeavyTopRightDefend_shortsword" />
      <RunFeatureTest testName="attack_axe_onehandHeavyLowLeftDefend_shortsword" />
      <RunFeatureTest testName="attack_axe_onehandHeavyLowRightDefend_shortsword" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandDefend_axe_onehand" description="axe_onehand with shield various attacks on axe_onehand " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_axe_onehandLightCenterDefend_axe_onehand" />
      <RunFeatureTest testName="attack_axe_onehandLightHeadDefend_axe_onehand" />
      <RunFeatureTest testName="attack_axe_onehandHeavyHeadDefend_axe_onehand" />
      <RunFeatureTest testName="attack_axe_onehandHeavyTopLeftDefend_axe_onehand" />
      <RunFeatureTest testName="attack_axe_onehandHeavyTopRightDefend_axe_onehand" />
      <RunFeatureTest testName="attack_axe_onehandHeavyLowLeftDefend_axe_onehand" />
      <RunFeatureTest testName="attack_axe_onehandHeavyLowRightDefend_axe_onehand" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandDefend_mace" description="axe_onehand with shield various attacks on mace " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_axe_onehandLightCenterDefend_mace" />
      <RunFeatureTest testName="attack_axe_onehandLightHeadDefend_mace" />
      <RunFeatureTest testName="attack_axe_onehandHeavyHeadDefend_mace" />
      <RunFeatureTest testName="attack_axe_onehandHeavyTopLeftDefend_mace" />
      <RunFeatureTest testName="attack_axe_onehandHeavyTopRightDefend_mace" />
      <RunFeatureTest testName="attack_axe_onehandHeavyLowLeftDefend_mace" />
      <RunFeatureTest testName="attack_axe_onehandHeavyLowRightDefend_mace" />
    </FeatureTest>
    <FeatureTest name="attack_maceDefend_sword_long" description="mace with shield various attacks on sword_long " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_maceLightCenterDefend_sword_long" />
      <RunFeatureTest testName="attack_maceLightHeadDefend_sword_long" />
      <RunFeatureTest testName="attack_maceHeavyHeadDefend_sword_long" />
      <RunFeatureTest testName="attack_maceHeavyTopLeftDefend_sword_long" />
      <RunFeatureTest testName="attack_maceHeavyTopRightDefend_sword_long" />
      <RunFeatureTest testName="attack_maceHeavyLowLeftDefend_sword_long" />
      <RunFeatureTest testName="attack_maceHeavyLowRightDefend_sword_long" />
    </FeatureTest>
    <FeatureTest name="attack_maceDefend_shortsword" description="mace with shield various attacks on shortsword " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_maceLightCenterDefend_shortsword" />
      <RunFeatureTest testName="attack_maceLightHeadDefend_shortsword" />
      <RunFeatureTest testName="attack_maceHeavyHeadDefend_shortsword" />
      <RunFeatureTest testName="attack_maceHeavyTopLeftDefend_shortsword" />
      <RunFeatureTest testName="attack_maceHeavyTopRightDefend_shortsword" />
      <RunFeatureTest testName="attack_maceHeavyLowLeftDefend_shortsword" />
      <RunFeatureTest testName="attack_maceHeavyLowRightDefend_shortsword" />
    </FeatureTest>
    <FeatureTest name="attack_maceDefend_axe_onehand" description="mace with shield various attacks on axe_onehand " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_maceLightCenterDefend_axe_onehand" />
      <RunFeatureTest testName="attack_maceLightHeadDefend_axe_onehand" />
      <RunFeatureTest testName="attack_maceHeavyHeadDefend_axe_onehand" />
      <RunFeatureTest testName="attack_maceHeavyTopLeftDefend_axe_onehand" />
      <RunFeatureTest testName="attack_maceHeavyTopRightDefend_axe_onehand" />
      <RunFeatureTest testName="attack_maceHeavyLowLeftDefend_axe_onehand" />
      <RunFeatureTest testName="attack_maceHeavyLowRightDefend_axe_onehand" />
    </FeatureTest>
    <FeatureTest name="attack_maceDefend_mace" description="mace with shield various attacks on mace " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_maceLightCenterDefend_mace" />
      <RunFeatureTest testName="attack_maceLightHeadDefend_mace" />
      <RunFeatureTest testName="attack_maceHeavyHeadDefend_mace" />
      <RunFeatureTest testName="attack_maceHeavyTopLeftDefend_mace" />
      <RunFeatureTest testName="attack_maceHeavyTopRightDefend_mace" />
      <RunFeatureTest testName="attack_maceHeavyLowLeftDefend_mace" />
      <RunFeatureTest testName="attack_maceHeavyLowRightDefend_mace" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longDefend_sword_longShield" description="sword_long with shield various attacks on sword_long " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_sword_longLightCenterDefend_sword_longShield" />
      <RunFeatureTest testName="attack_sword_longLightHeadDefend_sword_longShield" />
      <RunFeatureTest testName="attack_sword_longHeavyHeadDefend_sword_longShield" />
      <RunFeatureTest testName="attack_sword_longHeavyTopLeftDefend_sword_longShield" />
      <RunFeatureTest testName="attack_sword_longHeavyTopRightDefend_sword_longShield" />
      <RunFeatureTest testName="attack_sword_longHeavyLowLeftDefend_sword_longShield" />
      <RunFeatureTest testName="attack_sword_longHeavyLowRightDefend_sword_longShield" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longDefend_shortswordShield" description="sword_long with shield various attacks on shortsword " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_sword_longLightCenterDefend_shortswordShield" />
      <RunFeatureTest testName="attack_sword_longLightHeadDefend_shortswordShield" />
      <RunFeatureTest testName="attack_sword_longHeavyHeadDefend_shortswordShield" />
      <RunFeatureTest testName="attack_sword_longHeavyTopLeftDefend_shortswordShield" />
      <RunFeatureTest testName="attack_sword_longHeavyTopRightDefend_shortswordShield" />
      <RunFeatureTest testName="attack_sword_longHeavyLowLeftDefend_shortswordShield" />
      <RunFeatureTest testName="attack_sword_longHeavyLowRightDefend_shortswordShield" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longDefend_axe_onehandShield" description="sword_long with shield various attacks on axe_onehand " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_sword_longLightCenterDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_sword_longLightHeadDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_sword_longHeavyHeadDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_sword_longHeavyTopLeftDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_sword_longHeavyTopRightDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_sword_longHeavyLowLeftDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_sword_longHeavyLowRightDefend_axe_onehandShield" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longDefend_maceShield" description="sword_long with shield various attacks on mace " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_sword_longLightCenterDefend_maceShield" />
      <RunFeatureTest testName="attack_sword_longLightHeadDefend_maceShield" />
      <RunFeatureTest testName="attack_sword_longHeavyHeadDefend_maceShield" />
      <RunFeatureTest testName="attack_sword_longHeavyTopLeftDefend_maceShield" />
      <RunFeatureTest testName="attack_sword_longHeavyTopRightDefend_maceShield" />
      <RunFeatureTest testName="attack_sword_longHeavyLowLeftDefend_maceShield" />
      <RunFeatureTest testName="attack_sword_longHeavyLowRightDefend_maceShield" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordDefend_sword_longShield" description="shortsword with shield various attacks on sword_long " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_shortswordLightCenterDefend_sword_longShield" />
      <RunFeatureTest testName="attack_shortswordLightHeadDefend_sword_longShield" />
      <RunFeatureTest testName="attack_shortswordHeavyHeadDefend_sword_longShield" />
      <RunFeatureTest testName="attack_shortswordHeavyTopLeftDefend_sword_longShield" />
      <RunFeatureTest testName="attack_shortswordHeavyTopRightDefend_sword_longShield" />
      <RunFeatureTest testName="attack_shortswordHeavyLowLeftDefend_sword_longShield" />
      <RunFeatureTest testName="attack_shortswordHeavyLowRightDefend_sword_longShield" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordDefend_shortswordShield" description="shortsword with shield various attacks on shortsword " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_shortswordLightCenterDefend_shortswordShield" />
      <RunFeatureTest testName="attack_shortswordLightHeadDefend_shortswordShield" />
      <RunFeatureTest testName="attack_shortswordHeavyHeadDefend_shortswordShield" />
      <RunFeatureTest testName="attack_shortswordHeavyTopLeftDefend_shortswordShield" />
      <RunFeatureTest testName="attack_shortswordHeavyTopRightDefend_shortswordShield" />
      <RunFeatureTest testName="attack_shortswordHeavyLowLeftDefend_shortswordShield" />
      <RunFeatureTest testName="attack_shortswordHeavyLowRightDefend_shortswordShield" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordDefend_axe_onehandShield" description="shortsword with shield various attacks on axe_onehand " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_shortswordLightCenterDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_shortswordLightHeadDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_shortswordHeavyHeadDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_shortswordHeavyTopLeftDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_shortswordHeavyTopRightDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_shortswordHeavyLowLeftDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_shortswordHeavyLowRightDefend_axe_onehandShield" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordDefend_maceShield" description="shortsword with shield various attacks on mace " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_shortswordLightCenterDefend_maceShield" />
      <RunFeatureTest testName="attack_shortswordLightHeadDefend_maceShield" />
      <RunFeatureTest testName="attack_shortswordHeavyHeadDefend_maceShield" />
      <RunFeatureTest testName="attack_shortswordHeavyTopLeftDefend_maceShield" />
      <RunFeatureTest testName="attack_shortswordHeavyTopRightDefend_maceShield" />
      <RunFeatureTest testName="attack_shortswordHeavyLowLeftDefend_maceShield" />
      <RunFeatureTest testName="attack_shortswordHeavyLowRightDefend_maceShield" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandDefend_sword_longShield" description="axe_onehand with shield various attacks on sword_long " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_axe_onehandLightCenterDefend_sword_longShield" />
      <RunFeatureTest testName="attack_axe_onehandLightHeadDefend_sword_longShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyHeadDefend_sword_longShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyTopLeftDefend_sword_longShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyTopRightDefend_sword_longShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyLowLeftDefend_sword_longShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyLowRightDefend_sword_longShield" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandDefend_shortswordShield" description="axe_onehand with shield various attacks on shortsword " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_axe_onehandLightCenterDefend_shortswordShield" />
      <RunFeatureTest testName="attack_axe_onehandLightHeadDefend_shortswordShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyHeadDefend_shortswordShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyTopLeftDefend_shortswordShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyTopRightDefend_shortswordShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyLowLeftDefend_shortswordShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyLowRightDefend_shortswordShield" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandDefend_axe_onehandShield" description="axe_onehand with shield various attacks on axe_onehand " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_axe_onehandLightCenterDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_axe_onehandLightHeadDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyHeadDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyTopLeftDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyTopRightDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyLowLeftDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyLowRightDefend_axe_onehandShield" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandDefend_maceShield" description="axe_onehand with shield various attacks on mace " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_axe_onehandLightCenterDefend_maceShield" />
      <RunFeatureTest testName="attack_axe_onehandLightHeadDefend_maceShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyHeadDefend_maceShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyTopLeftDefend_maceShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyTopRightDefend_maceShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyLowLeftDefend_maceShield" />
      <RunFeatureTest testName="attack_axe_onehandHeavyLowRightDefend_maceShield" />
    </FeatureTest>
    <FeatureTest name="attack_maceDefend_sword_longShield" description="mace with shield various attacks on sword_long " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_maceLightCenterDefend_sword_longShield" />
      <RunFeatureTest testName="attack_maceLightHeadDefend_sword_longShield" />
      <RunFeatureTest testName="attack_maceHeavyHeadDefend_sword_longShield" />
      <RunFeatureTest testName="attack_maceHeavyTopLeftDefend_sword_longShield" />
      <RunFeatureTest testName="attack_maceHeavyTopRightDefend_sword_longShield" />
      <RunFeatureTest testName="attack_maceHeavyLowLeftDefend_sword_longShield" />
      <RunFeatureTest testName="attack_maceHeavyLowRightDefend_sword_longShield" />
    </FeatureTest>
    <FeatureTest name="attack_maceDefend_shortswordShield" description="mace with shield various attacks on shortsword " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_maceLightCenterDefend_shortswordShield" />
      <RunFeatureTest testName="attack_maceLightHeadDefend_shortswordShield" />
      <RunFeatureTest testName="attack_maceHeavyHeadDefend_shortswordShield" />
      <RunFeatureTest testName="attack_maceHeavyTopLeftDefend_shortswordShield" />
      <RunFeatureTest testName="attack_maceHeavyTopRightDefend_shortswordShield" />
      <RunFeatureTest testName="attack_maceHeavyLowLeftDefend_shortswordShield" />
      <RunFeatureTest testName="attack_maceHeavyLowRightDefend_shortswordShield" />
    </FeatureTest>
    <FeatureTest name="attack_maceDefend_axe_onehandShield" description="mace with shield various attacks on axe_onehand " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_maceLightCenterDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_maceLightHeadDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_maceHeavyHeadDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_maceHeavyTopLeftDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_maceHeavyTopRightDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_maceHeavyLowLeftDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_maceHeavyLowRightDefend_axe_onehandShield" />
    </FeatureTest>
    <FeatureTest name="attack_maceDefend_maceShield" description="mace with shield various attacks on mace " enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_maceLightCenterDefend_maceShield" />
      <RunFeatureTest testName="attack_maceLightHeadDefend_maceShield" />
      <RunFeatureTest testName="attack_maceHeavyHeadDefend_maceShield" />
      <RunFeatureTest testName="attack_maceHeavyTopLeftDefend_maceShield" />
      <RunFeatureTest testName="attack_maceHeavyTopRightDefend_maceShield" />
      <RunFeatureTest testName="attack_maceHeavyLowLeftDefend_maceShield" />
      <RunFeatureTest testName="attack_maceHeavyLowRightDefend_maceShield" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldDefend_sword_long" description="sword_long with shield various attacks on sword_long Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_sword_longShieldLightCenterDefend_sword_long" />
      <RunFeatureTest testName="attack_sword_longShieldLightHeadDefend_sword_long" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyHeadDefend_sword_long" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyTopLeftDefend_sword_long" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyTopRightDefend_sword_long" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyLowLeftDefend_sword_long" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyLowRightDefend_sword_long" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldDefend_shortsword" description="sword_long with shield various attacks on shortsword Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_sword_longShieldLightCenterDefend_shortsword" />
      <RunFeatureTest testName="attack_sword_longShieldLightHeadDefend_shortsword" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyHeadDefend_shortsword" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyTopLeftDefend_shortsword" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyTopRightDefend_shortsword" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyLowLeftDefend_shortsword" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyLowRightDefend_shortsword" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldDefend_axe_onehand" description="sword_long with shield various attacks on axe_onehand Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_sword_longShieldLightCenterDefend_axe_onehand" />
      <RunFeatureTest testName="attack_sword_longShieldLightHeadDefend_axe_onehand" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyHeadDefend_axe_onehand" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyTopLeftDefend_axe_onehand" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyTopRightDefend_axe_onehand" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyLowLeftDefend_axe_onehand" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyLowRightDefend_axe_onehand" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldDefend_mace" description="sword_long with shield various attacks on mace Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_sword_longShieldLightCenterDefend_mace" />
      <RunFeatureTest testName="attack_sword_longShieldLightHeadDefend_mace" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyHeadDefend_mace" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyTopLeftDefend_mace" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyTopRightDefend_mace" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyLowLeftDefend_mace" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyLowRightDefend_mace" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldDefend_sword_long" description="shortsword with shield various attacks on sword_long Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_shortswordShieldLightCenterDefend_sword_long" />
      <RunFeatureTest testName="attack_shortswordShieldLightHeadDefend_sword_long" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyHeadDefend_sword_long" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyTopLeftDefend_sword_long" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyTopRightDefend_sword_long" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyLowLeftDefend_sword_long" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyLowRightDefend_sword_long" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldDefend_shortsword" description="shortsword with shield various attacks on shortsword Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_shortswordShieldLightCenterDefend_shortsword" />
      <RunFeatureTest testName="attack_shortswordShieldLightHeadDefend_shortsword" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyHeadDefend_shortsword" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyTopLeftDefend_shortsword" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyTopRightDefend_shortsword" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyLowLeftDefend_shortsword" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyLowRightDefend_shortsword" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldDefend_axe_onehand" description="shortsword with shield various attacks on axe_onehand Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_shortswordShieldLightCenterDefend_axe_onehand" />
      <RunFeatureTest testName="attack_shortswordShieldLightHeadDefend_axe_onehand" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyHeadDefend_axe_onehand" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyTopLeftDefend_axe_onehand" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyTopRightDefend_axe_onehand" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyLowLeftDefend_axe_onehand" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyLowRightDefend_axe_onehand" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldDefend_mace" description="shortsword with shield various attacks on mace Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_shortswordShieldLightCenterDefend_mace" />
      <RunFeatureTest testName="attack_shortswordShieldLightHeadDefend_mace" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyHeadDefend_mace" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyTopLeftDefend_mace" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyTopRightDefend_mace" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyLowLeftDefend_mace" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyLowRightDefend_mace" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldDefend_sword_long" description="axe_onehand with shield various attacks on sword_long Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_axe_onehandShieldLightCenterDefend_sword_long" />
      <RunFeatureTest testName="attack_axe_onehandShieldLightHeadDefend_sword_long" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyHeadDefend_sword_long" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyTopLeftDefend_sword_long" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyTopRightDefend_sword_long" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyLowLeftDefend_sword_long" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyLowRightDefend_sword_long" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldDefend_shortsword" description="axe_onehand with shield various attacks on shortsword Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_axe_onehandShieldLightCenterDefend_shortsword" />
      <RunFeatureTest testName="attack_axe_onehandShieldLightHeadDefend_shortsword" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyHeadDefend_shortsword" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyTopLeftDefend_shortsword" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyTopRightDefend_shortsword" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyLowLeftDefend_shortsword" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyLowRightDefend_shortsword" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldDefend_axe_onehand" description="axe_onehand with shield various attacks on axe_onehand Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_axe_onehandShieldLightCenterDefend_axe_onehand" />
      <RunFeatureTest testName="attack_axe_onehandShieldLightHeadDefend_axe_onehand" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyHeadDefend_axe_onehand" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyTopLeftDefend_axe_onehand" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyTopRightDefend_axe_onehand" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyLowLeftDefend_axe_onehand" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyLowRightDefend_axe_onehand" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldDefend_mace" description="axe_onehand with shield various attacks on mace Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_axe_onehandShieldLightCenterDefend_mace" />
      <RunFeatureTest testName="attack_axe_onehandShieldLightHeadDefend_mace" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyHeadDefend_mace" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyTopLeftDefend_mace" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyTopRightDefend_mace" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyLowLeftDefend_mace" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyLowRightDefend_mace" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldDefend_sword_long" description="mace with shield various attacks on sword_long Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_maceShieldLightCenterDefend_sword_long" />
      <RunFeatureTest testName="attack_maceShieldLightHeadDefend_sword_long" />
      <RunFeatureTest testName="attack_maceShieldHeavyHeadDefend_sword_long" />
      <RunFeatureTest testName="attack_maceShieldHeavyTopLeftDefend_sword_long" />
      <RunFeatureTest testName="attack_maceShieldHeavyTopRightDefend_sword_long" />
      <RunFeatureTest testName="attack_maceShieldHeavyLowLeftDefend_sword_long" />
      <RunFeatureTest testName="attack_maceShieldHeavyLowRightDefend_sword_long" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldDefend_shortsword" description="mace with shield various attacks on shortsword Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_maceShieldLightCenterDefend_shortsword" />
      <RunFeatureTest testName="attack_maceShieldLightHeadDefend_shortsword" />
      <RunFeatureTest testName="attack_maceShieldHeavyHeadDefend_shortsword" />
      <RunFeatureTest testName="attack_maceShieldHeavyTopLeftDefend_shortsword" />
      <RunFeatureTest testName="attack_maceShieldHeavyTopRightDefend_shortsword" />
      <RunFeatureTest testName="attack_maceShieldHeavyLowLeftDefend_shortsword" />
      <RunFeatureTest testName="attack_maceShieldHeavyLowRightDefend_shortsword" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldDefend_axe_onehand" description="mace with shield various attacks on axe_onehand Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_maceShieldLightCenterDefend_axe_onehand" />
      <RunFeatureTest testName="attack_maceShieldLightHeadDefend_axe_onehand" />
      <RunFeatureTest testName="attack_maceShieldHeavyHeadDefend_axe_onehand" />
      <RunFeatureTest testName="attack_maceShieldHeavyTopLeftDefend_axe_onehand" />
      <RunFeatureTest testName="attack_maceShieldHeavyTopRightDefend_axe_onehand" />
      <RunFeatureTest testName="attack_maceShieldHeavyLowLeftDefend_axe_onehand" />
      <RunFeatureTest testName="attack_maceShieldHeavyLowRightDefend_axe_onehand" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldDefend_mace" description="mace with shield various attacks on mace Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_maceShieldLightCenterDefend_mace" />
      <RunFeatureTest testName="attack_maceShieldLightHeadDefend_mace" />
      <RunFeatureTest testName="attack_maceShieldHeavyHeadDefend_mace" />
      <RunFeatureTest testName="attack_maceShieldHeavyTopLeftDefend_mace" />
      <RunFeatureTest testName="attack_maceShieldHeavyTopRightDefend_mace" />
      <RunFeatureTest testName="attack_maceShieldHeavyLowLeftDefend_mace" />
      <RunFeatureTest testName="attack_maceShieldHeavyLowRightDefend_mace" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldDefend_sword_longShield" description="sword_long with shield various attacks on sword_long Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_sword_longShieldLightCenterDefend_sword_longShield" />
      <RunFeatureTest testName="attack_sword_longShieldLightHeadDefend_sword_longShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyHeadDefend_sword_longShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyTopLeftDefend_sword_longShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyTopRightDefend_sword_longShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyLowLeftDefend_sword_longShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyLowRightDefend_sword_longShield" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldDefend_shortswordShield" description="sword_long with shield various attacks on shortsword Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_sword_longShieldLightCenterDefend_shortswordShield" />
      <RunFeatureTest testName="attack_sword_longShieldLightHeadDefend_shortswordShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyHeadDefend_shortswordShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyTopLeftDefend_shortswordShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyTopRightDefend_shortswordShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyLowLeftDefend_shortswordShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyLowRightDefend_shortswordShield" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldDefend_axe_onehandShield" description="sword_long with shield various attacks on axe_onehand Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_sword_longShieldLightCenterDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_sword_longShieldLightHeadDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyHeadDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyTopLeftDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyTopRightDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyLowLeftDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyLowRightDefend_axe_onehandShield" />
    </FeatureTest>
    <FeatureTest name="attack_sword_longShieldDefend_maceShield" description="sword_long with shield various attacks on mace Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_sword_longShieldLightCenterDefend_maceShield" />
      <RunFeatureTest testName="attack_sword_longShieldLightHeadDefend_maceShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyHeadDefend_maceShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyTopLeftDefend_maceShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyTopRightDefend_maceShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyLowLeftDefend_maceShield" />
      <RunFeatureTest testName="attack_sword_longShieldHeavyLowRightDefend_maceShield" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldDefend_sword_longShield" description="shortsword with shield various attacks on sword_long Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_shortswordShieldLightCenterDefend_sword_longShield" />
      <RunFeatureTest testName="attack_shortswordShieldLightHeadDefend_sword_longShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyHeadDefend_sword_longShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyTopLeftDefend_sword_longShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyTopRightDefend_sword_longShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyLowLeftDefend_sword_longShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyLowRightDefend_sword_longShield" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldDefend_shortswordShield" description="shortsword with shield various attacks on shortsword Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_shortswordShieldLightCenterDefend_shortswordShield" />
      <RunFeatureTest testName="attack_shortswordShieldLightHeadDefend_shortswordShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyHeadDefend_shortswordShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyTopLeftDefend_shortswordShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyTopRightDefend_shortswordShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyLowLeftDefend_shortswordShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyLowRightDefend_shortswordShield" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldDefend_axe_onehandShield" description="shortsword with shield various attacks on axe_onehand Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_shortswordShieldLightCenterDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_shortswordShieldLightHeadDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyHeadDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyTopLeftDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyTopRightDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyLowLeftDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyLowRightDefend_axe_onehandShield" />
    </FeatureTest>
    <FeatureTest name="attack_shortswordShieldDefend_maceShield" description="shortsword with shield various attacks on mace Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_shortswordShieldLightCenterDefend_maceShield" />
      <RunFeatureTest testName="attack_shortswordShieldLightHeadDefend_maceShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyHeadDefend_maceShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyTopLeftDefend_maceShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyTopRightDefend_maceShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyLowLeftDefend_maceShield" />
      <RunFeatureTest testName="attack_shortswordShieldHeavyLowRightDefend_maceShield" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldDefend_sword_longShield" description="axe_onehand with shield various attacks on sword_long Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_axe_onehandShieldLightCenterDefend_sword_longShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldLightHeadDefend_sword_longShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyHeadDefend_sword_longShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyTopLeftDefend_sword_longShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyTopRightDefend_sword_longShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyLowLeftDefend_sword_longShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyLowRightDefend_sword_longShield" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldDefend_shortswordShield" description="axe_onehand with shield various attacks on shortsword Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_axe_onehandShieldLightCenterDefend_shortswordShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldLightHeadDefend_shortswordShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyHeadDefend_shortswordShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyTopLeftDefend_shortswordShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyTopRightDefend_shortswordShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyLowLeftDefend_shortswordShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyLowRightDefend_shortswordShield" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldDefend_axe_onehandShield" description="axe_onehand with shield various attacks on axe_onehand Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_axe_onehandShieldLightCenterDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldLightHeadDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyHeadDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyTopLeftDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyTopRightDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyLowLeftDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyLowRightDefend_axe_onehandShield" />
    </FeatureTest>
    <FeatureTest name="attack_axe_onehandShieldDefend_maceShield" description="axe_onehand with shield various attacks on mace Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_axe_onehandShieldLightCenterDefend_maceShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldLightHeadDefend_maceShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyHeadDefend_maceShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyTopLeftDefend_maceShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyTopRightDefend_maceShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyLowLeftDefend_maceShield" />
      <RunFeatureTest testName="attack_axe_onehandShieldHeavyLowRightDefend_maceShield" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldDefend_sword_longShield" description="mace with shield various attacks on sword_long Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_maceShieldLightCenterDefend_sword_longShield" />
      <RunFeatureTest testName="attack_maceShieldLightHeadDefend_sword_longShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyHeadDefend_sword_longShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyTopLeftDefend_sword_longShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyTopRightDefend_sword_longShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyLowLeftDefend_sword_longShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyLowRightDefend_sword_longShield" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldDefend_shortswordShield" description="mace with shield various attacks on shortsword Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_maceShieldLightCenterDefend_shortswordShield" />
      <RunFeatureTest testName="attack_maceShieldLightHeadDefend_shortswordShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyHeadDefend_shortswordShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyTopLeftDefend_shortswordShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyTopRightDefend_shortswordShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyLowLeftDefend_shortswordShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyLowRightDefend_shortswordShield" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldDefend_axe_onehandShield" description="mace with shield various attacks on axe_onehand Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_maceShieldLightCenterDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_maceShieldLightHeadDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyHeadDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyTopLeftDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyTopRightDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyLowLeftDefend_axe_onehandShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyLowRightDefend_axe_onehandShield" />
    </FeatureTest>
    <FeatureTest name="attack_maceShieldDefend_maceShield" description="mace with shield various attacks on mace Shield" enabled="true" maxTime="126">
      <RunFeatureTest testName="attack_maceShieldLightCenterDefend_maceShield" />
      <RunFeatureTest testName="attack_maceShieldLightHeadDefend_maceShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyHeadDefend_maceShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyTopLeftDefend_maceShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyTopRightDefend_maceShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyLowLeftDefend_maceShield" />
      <RunFeatureTest testName="attack_maceShieldHeavyLowRightDefend_maceShield" />
    </FeatureTest>
  </Tests>
</FeatureTester>
