<?xml version="1.0" encoding="utf-8"?>
<FeatureTester xmlns="http://www.warhorsestudios.cz/tests">
  <Settings>
  </Settings>

  <Tests setName="startAll" >
    <FeatureTest name="synchInit" description="cekani na playera" enabled="true" >
      <ResetCCCPointHitCounters />
      <WaitUntilPlayerIsAlive who="localPlayer" timeout="20"/>
    </FeatureTest>

    <FeatureTest name="basics" description="Test basic variables scope" enabled="true" >
      <DoConsoleCommand command="#local npc1 = System.GetEntityByName('test_me') npc1:SetWorldPos({x=35,y=45,z=32})"/>
      <SetResponseToHittingCCCPoint checkpointName="basics_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="basics_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="basics2_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="basics2_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="basics3_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="basics3_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="basics4_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="basics4_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="basics5_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="basics5_FAIL" response="failTest"/>
      <WaitUntilHitAllExpectedCCCPoints timeout="5"/>
    </FeatureTest>

    <FeatureTest name="SAsubbrain" description="Test brain and subbrain scopes overlap onEnter." enabled="true" >
      <DoConsoleCommand command="#local npc1 = System.GetEntityByName('test_me') npc1:SetWorldPos({x=35,y=62,z=32})"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain2_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain2_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain3_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain3_FAIL" response="failTest"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain4_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain4_FAIL" response="failTest"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain5_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain5_FAIL" response="failTest"/>
      <WaitUntilHitAllExpectedCCCPoints timeout="5"/>
    </FeatureTest>

    <FeatureTest name="SAsubbrain2" description="Test brain and subbrain scopes overlap onExit." enabled="true" >
      <DoConsoleCommand command="#local npc1 = System.GetEntityByName('test_me') npc1:SetWorldPos({x=22,y=62,z=32})"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain2_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain2_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain3_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain3_FAIL" response="failTest"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain4_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain4_FAIL" response="failTest"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain5_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain5_FAIL" response="failTest"/>
      <WaitUntilHitAllExpectedCCCPoints timeout="5"/>
    </FeatureTest>

    <FeatureTest name="SAsubbrain3" description="Test brain and subbrain scopes overlap onRequest." enabled="true" >
      <DoConsoleCommand command="#local npc1 = System.GetEntityByName('test_me') npc1:SetWorldPos({x=47,y=62,z=32})"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain2_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain2_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain3_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain3_FAIL" response="failTest"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain4_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain4_FAIL" response="failTest"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain5_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain5_FAIL" response="failTest"/>
      <WaitUntilHitAllExpectedCCCPoints timeout="5"/>
    </FeatureTest>

    <FeatureTest name="SAsubbrain4" description="Test brain and subbrain scopes overlap onRelease." enabled="true" >
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain2_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain2_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain3_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain3_FAIL" response="failTest"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain4_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain4_FAIL" response="failTest"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain5_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain5_FAIL" response="failTest"/>
      <WaitUntilHitAllExpectedCCCPoints timeout="5"/>
    </FeatureTest>

    <FeatureTest name="SAsubbrain5" description="Test brain and subbrain scopes overlap onRequest." enabled="true" >
      <DoConsoleCommand command="#local npc1 = System.GetEntityByName('test_me') npc1:SetWorldPos({x=60,y=62,z=32})"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain2_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain2_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain3_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="SAsubbrain3_FAIL" response="failTest"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain4_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain4_FAIL" response="failTest"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain5_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="SAsubbrain5_FAIL" response="failTest"/>
      <WaitUntilHitAllExpectedCCCPoints timeout="5"/>
    </FeatureTest>


    <FeatureTest name="lua" description="Test lua and exports." enabled="true" >
      <DoConsoleCommand command="#local npc1 = System.GetEntityByName('test_me') npc1:SetWorldPos({x=35,y=78,z=32})"/>
	  <!-- was removed from test, Gabor removed this functionality
      <SetResponseToHittingCCCPoint checkpointName="lua_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="lua_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="lua2_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="lua2_FAIL" response="failTest"/>
	  -->
      <SetResponseToHittingCCCPoint checkpointName="lua3_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="lua3_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="lua4_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="lua4_FAIL" response="failTest"/>
	  <!-- was removed from test, Gabor removed this functionality
      <SetResponseToHittingCCCPoint checkpointName="lua5_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="lua5_FAIL" response="failTest"/>
	  -->
      <SetResponseToHittingCCCPoint checkpointName="lua6_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="lua6_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="lua7_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="lua7_FAIL" response="failTest"/>
      <WaitUntilHitAllExpectedCCCPoints timeout="5"/>
    </FeatureTest>

		<FeatureTest name="lua2" description="Test lua and exports." enabled="true" >
			<DoConsoleCommand command="#local npc1 = System.GetEntityByName('test_me') npc1:SetWorldPos({x=45,y=78,z=32})"/>
			<SetResponseToHittingCCCPoint checkpointName="lua_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="lua_FAIL" response="failTest"/>
			<SetResponseToHittingCCCPoint checkpointName="lua2_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="lua2_FAIL" response="failTest"/>
			<SetResponseToHittingCCCPoint checkpointName="lua3_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="lua3_FAIL" response="failTest"/>
			<SetResponseToHittingCCCPoint checkpointName="lua4_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="lua4_FAIL" response="failTest"/>
			<SetResponseToHittingCCCPoint checkpointName="lua5_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="lua5_FAIL" response="failTest"/>
			<WaitUntilHitAllExpectedCCCPoints timeout="5"/>
		</FeatureTest>

    <FeatureTest name="overlap" description="Test overlap of behavior scopes." enabled="true" >
      <DoConsoleCommand command="#local npc1 = System.GetEntityByName('test_me') npc1:SetWorldPos({x=35,y=93,z=32})"/>
      <SetResponseToHittingCCCPoint checkpointName="overlap_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="overlap_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="overlap2_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="overlap2_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="overlap3_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="overlap3_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="overlap4_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="overlap4_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="overlap5_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="overlap5_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="overlap6_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="overlap6_FAIL" response="failTest"/>
      <WaitUntilHitAllExpectedCCCPoints timeout="10"/>
    </FeatureTest>

    <FeatureTest name="inject" description="Test inject of variables." enabled="true" >
      <DoConsoleCommand command="#local npc1 = System.GetEntityByName('test_me') npc1:SetWorldPos({x=35,y=111,z=32})"/>
      <SetResponseToHittingCCCPoint checkpointName="inject_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="inject_FAIL" response="failTest"/>
      <SetResponseToHittingCCCPoint checkpointName="inject2_OK" response="expectedNext"/>
      <SetResponseToHittingCCCPoint checkpointName="inject2_FAIL" response="failTest"/>
      <WaitUntilHitAllExpectedCCCPoints timeout="5"/>
    </FeatureTest>

		<FeatureTest name="reqComplete" description="Test change of requestCompleted variables." enabled="true" >
			<DoConsoleCommand command="#local npc1 = System.GetEntityByName('test_me') npc1:SetWorldPos({x=35,y=130,z=32})"/>
			<SetResponseToHittingCCCPoint checkpointName="reqComplete_OK" response="expectedNext"/>			
			<SetResponseToHittingCCCPoint checkpointName="reqComplete2_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="reqComplete_FAIL" response="failTest"/>
			<WaitUntilHitAllExpectedCCCPoints timeout="5"/>
		</FeatureTest>

		<FeatureTest name="types" description="Basic operations with primitive types." enabled="true" >
			<DoConsoleCommand command="#local npc1 = System.GetEntityByName('test_me') npc1:SetWorldPos({x=48,y=45,z=32})"/>
			<SetResponseToHittingCCCPoint checkpointName="types_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="types_FAIL" response="failTest"/>
			<SetResponseToHittingCCCPoint checkpointName="types2_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="types2_FAIL" response="failTest"/>
			<SetResponseToHittingCCCPoint checkpointName="types3_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="types3_FAIL" response="failTest"/>
			<SetResponseToHittingCCCPoint checkpointName="types4_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="types4_FAIL" response="failTest"/>
			<SetResponseToHittingCCCPoint checkpointName="types5_OK" response="expectedNext"/>
			<SetResponseToHittingCCCPoint checkpointName="types5_FAIL" response="failTest"/>
			<WaitUntilHitAllExpectedCCCPoints timeout="5"/>
		</FeatureTest>	
		

  </Tests>

</FeatureTester>