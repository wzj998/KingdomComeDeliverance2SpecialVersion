<?xml version="1.0" encoding="utf-8"?>
<Database xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Name="brambora">
	<Skald>
		<Gameplay Name="special_horses">
			<Ports>
				<Port Name="bergovhorseinsidearea" Direction="Out" Type="bool">
					<DesignName StringName="special_h_bergovhorseinsi_6tdZ" Text="BergovHorseInsideArea" />
				</Port>
				<Port Name="horseevent_onnotification" Direction="In" Type="trigger">
					<DesignName StringName="special_h_horseevent_onno_dsSM" Text="HorseEvent_onNotification" />
				</Port>
				<Port Name="horseevent_horse" Direction="In" Type="wh::rpgmodule::I_Soul*">
					<DesignName StringName="special_h_horseevent_horse_SFJ3" Text="HorseEvent_horse" />
				</Port>
				<Port Name="horseevent_operation" Direction="In" Type="horseHandler_operation">
					<DesignName StringName="special_h_horseevent_oper_l9AQ" Text="HorseEvent_operation" />
				</Port>
				<Port Name="bergovhorsestreamed" Direction="In" Type="bool">
					<DesignName StringName="special_h_bergovhorsestre_LenQ" Text="BergovHorseStreamed" />
				</Port>
			</Ports>
			<Nodes>
				<State Name="BergovHorseInsideArea_state" PositionY="-70" PositionX="630" TypeT="bool">
					<Edge From="ifcompare4.True" To="SetTrue" />
					<Edge From="ifcompare4_1.True" To="SetFalse" />
				</State>
				<If Name="if8" PositionY="-170" PositionX="-770">
					<Edge From="bergovhorsestreamed" To="Condition" />
					<Edge From="horseevent_onnotification" To="Exec" />
				</If>
				<IfFunction Name="ifcompare11" PositionY="-240" PositionX="-490" TypeT="horseHandler_operation" MethodName="Control::Compare" DeclaringType="Control">
					<Constant Name="Op" Value="NotEquals" />
					<Constant Name="ValueB" Value="ResetValidHorsesCount" />
					<Edge From="if8.True" To="Exec" />
					<Edge From="horseevent_operation" To="ValueA">
						<Vertex>vertex3</Vertex>
					</Edge>
				</IfFunction>
				<IfFunction Name="ifcompare3" PositionY="-90" PositionX="-160" TypeT="wh::rpgmodule::I_Soul*" MethodName="Control::Compare" DeclaringType="Control">
					<Constant Name="Op" Value="Equals" />
					<Asset Name="ValueB" Alias="bergovHorse" />
					<Edge From="horseevent_horse" To="ValueA" />
					<Edge From="ifcompare11.True" To="Exec" />
				</IfFunction>
				<IfFunction Name="ifcompare4" PositionY="100" PositionX="280" TypeT="horseHandler_operation" MethodName="Control::Compare" DeclaringType="Control">
					<Constant Name="Op" Value="Equals" />
					<Constant Name="ValueB" Value="ValidHorseAdded" />
					<Edge From="horseevent_operation" To="ValueA">
						<Vertex>vertex3</Vertex>
						<Vertex>vertex1</Vertex>
					</Edge>
					<Edge From="ifcompare3.True" To="Exec">
						<Vertex>vertex2</Vertex>
					</Edge>
				</IfFunction>
				<IfFunction Name="ifcompare4_1" PositionY="357" PositionX="280" TypeT="horseHandler_operation" MethodName="Control::Compare" DeclaringType="Control">
					<Constant Name="Op" Value="Equals" />
					<Constant Name="ValueB" Value="ValidHorseRemoved" />
					<Edge From="ifcompare3.True" To="Exec">
						<Vertex>vertex2</Vertex>
					</Edge>
					<Edge From="horseevent_operation" To="ValueA">
						<Vertex>vertex3</Vertex>
						<Vertex>vertex1</Vertex>
					</Edge>
				</IfFunction>
				<Output Name="Output">
					<Edge From="BergovHorseInsideArea_state.State" To="bergovhorseinsidearea" />
				</Output>
			</Nodes>
			<EdgeVertices>
				<EdgeVertex Name="vertex1" PositionY="295" PositionX="-8" />
				<EdgeVertex Name="vertex2" PositionY="300" PositionX="150" />
				<EdgeVertex Name="vertex3" PositionY="127" PositionX="-617" />
			</EdgeVertices>
			<Notes>
				<Note Name="note6" PositionY="10" PositionX="140">
					<Text StringName="special_h_note6_FUpV" Text="If there will be more horses - turn it into a module" />
				</Note>
			</Notes>
			<Text StringName="special_horse_cases_ZIjJ" Text="Special horses" />
		</Gameplay>
	</Skald>
</Database>