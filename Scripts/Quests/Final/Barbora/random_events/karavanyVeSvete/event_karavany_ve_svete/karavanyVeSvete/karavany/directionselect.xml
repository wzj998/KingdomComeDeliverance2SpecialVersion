<?xml version="1.0" encoding="utf-8"?>
<Database xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Name="brambora">
	<Skald>
		<Module Name="directionselect">
			<Ports>
				<Port Name="select" Direction="In" Type="trigger">
					<DesignName StringName="direction_select_nnEc" Text="Select" />
				</Port>
				<Port Name="haste_always_ride_towards_start" Direction="In" Type="Tribool">
					<DesignName StringName="direction_direction_setti_KqQc" Text="Haste: Always ride towards start" />
				</Port>
				<Port Name="istowardsstart" Direction="Out" Type="bool">
					<DesignName StringName="direction_istowardsstart_4JHV" Text="IsTowardsStart" />
				</Port>
				<Port Name="can_ride_to_start" Direction="In" Type="bool">
					<DesignName StringName="direction_can_ride_to_sta_Oygy" Text="Can ride to start" />
				</Port>
				<Port Name="can_ride_to_end" Direction="In" Type="bool">
					<DesignName StringName="direction_can_ride_to_end_wsZL" Text="Can ride to end" />
				</Port>
			</Ports>
			<Nodes>
				<State Name="DirectionTowardsStart" PositionY="-170" PositionX="1470" TypeT="bool">
					<Constant Name="DefaultValue" Value="false" />
					<Edge From="IsDirectionTowardsStart.False" To="SetFalse">
						<Vertex>UdtfMRRz</Vertex>
						<Vertex>vertex3</Vertex>
					</Edge>
					<Edge From="Random.False" To="SetFalse">
						<Vertex>vertex3</Vertex>
					</Edge>
					<Edge From="IsDirectionTowardsStart.True" To="SetTrue">
						<Vertex>UryE9I4Y</Vertex>
						<Vertex>vertex2</Vertex>
					</Edge>
					<Edge From="Random.True" To="SetTrue">
						<Vertex>vertex2</Vertex>
					</Edge>
					<Edge From="IfCanRideToStart.True" To="SetTrue">
						<Vertex>UryE9I4Y</Vertex>
						<Vertex>vertex2</Vertex>
					</Edge>
					<Edge From="IfCanRideToStart.False" To="SetFalse">
						<Vertex>UdtfMRRz</Vertex>
						<Vertex>vertex3</Vertex>
					</Edge>
				</State>
				<IfFunction Name="ifand15" PositionY="-530" PositionX="470" MethodName="math::boolean::And" DeclaringType="math::boolean">
					<Edge From="can_ride_to_start" To="A">
						<Vertex>6kJsLFo8</Vertex>
						<Vertex>rRGGT9bp</Vertex>
					</Edge>
					<Edge From="can_ride_to_end" To="B">
						<Vertex>Wz3w0Dl2</Vertex>
					</Edge>
					<Edge From="IsRandom.True" To="Exec" />
				</IfFunction>
				<If Name="IfCanRideToStart" PositionY="-290" PositionX="740">
					<Edge From="ifand15.False" To="Exec" />
					<Edge From="can_ride_to_start" To="Condition">
						<Vertex>6kJsLFo8</Vertex>
						<Vertex>rRGGT9bp</Vertex>
						<Vertex>BmjGgP8w</Vertex>
					</Edge>
				</If>
				<IfFunction Name="IsDirectionTowardsStart" PositionY="-100" PositionX="500" TypeT="Tribool" MethodName="Control::Compare" DeclaringType="Control">
					<Constant Name="Op" Value="Equals" />
					<Constant Name="ValueB" Value="True" />
					<Edge From="IsRandom.False" To="Exec" />
					<Edge From="haste_always_ride_towards_start" To="ValueA">
						<Vertex>vertex1</Vertex>
					</Edge>
				</IfFunction>
				<IfFunction Name="IsRandom" PositionY="-240" PositionX="140" TypeT="Tribool" MethodName="Control::Compare" DeclaringType="Control">
					<Constant Name="Op" Value="Equals" />
					<Constant Name="ValueB" Value="None" />
					<Edge From="haste_always_ride_towards_start" To="ValueA">
						<Vertex>vertex1</Vertex>
					</Edge>
					<Edge From="select" To="Exec">
						<Vertex>vertex4</Vertex>
					</Edge>
				</IfFunction>
				<Output Name="Output">
					<Edge From="DirectionTowardsStart.State" To="istowardsstart" />
				</Output>
				<IfFunction Name="Random" PositionY="-530" PositionX="1050" TypeT="int" MethodName="Control::Compare" DeclaringType="Control">
					<Constant Name="Op" Value="Equals" />
					<Constant Name="ValueB" Value="1" />
					<Edge From="randominteger13.int" To="ValueA" />
					<Edge From="ifand15.True" To="Exec" />
				</IfFunction>
				<Function Name="randominteger13" PositionY="-650" PositionX="1010" MethodName="math::random::RandomInteger" DeclaringType="math::random">
					<Constant Name="Max" Value="1" />
				</Function>
			</Nodes>
			<EdgeVertices>
				<EdgeVertex Name="6kJsLFo8" PositionY="-400" PositionX="-120" />
				<EdgeVertex Name="BmjGgP8w" PositionY="-170" PositionX="500" />
				<EdgeVertex Name="rRGGT9bp" PositionY="-410" PositionX="380" />
				<EdgeVertex Name="UdtfMRRz" PositionY="20" PositionX="1040" />
				<EdgeVertex Name="UryE9I4Y" PositionY="-10" PositionX="1060" />
				<EdgeVertex Name="vertex1" PositionY="20" PositionX="70" />
				<EdgeVertex Name="vertex2" PositionY="-10" PositionX="1380" />
				<EdgeVertex Name="vertex3" PositionY="20" PositionX="1370" />
				<EdgeVertex Name="vertex4" PositionY="-150" PositionX="20" />
				<EdgeVertex Name="Wz3w0Dl2" PositionY="-370" PositionX="-100" />
			</EdgeVertices>
			<Notes>
				<Note Name="note16" PositionY="-290" PositionX="140">
					<Text StringName="direction_note16_6raC" Text="If override is not set" />
				</Note>
				<Note Name="note17" PositionY="-580" PositionX="470">
					<Text StringName="direction_note17_WTnu" Text="If both ways are available" />
				</Note>
				<Note Name="note19" PositionY="-380" PositionX="720">
					<Text StringName="direction_note19_VZI9" Text="Only check if can ride to the start, because if both are directions are turned off the whole variant is turned off" />
				</Note>
			</Notes>
			<Text StringName="directionselect_5C7Y" Text="DirectionSelect" />
		</Module>
	</Skald>
</Database>