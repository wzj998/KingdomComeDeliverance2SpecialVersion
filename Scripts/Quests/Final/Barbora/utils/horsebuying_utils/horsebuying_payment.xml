<?xml version="1.0" encoding="utf-8"?>
<Database xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Name="brambora">
	<Skald>
		<Module Name="horsebuying_payment">
			<Ports>
				<Port Name="amount" Direction="In" Type="float">
					<DesignName StringName="paying_amount_8aFC" Text="Amount" />
				</Port>
				<Port Name="recipient" Direction="In" Type="wh::rpgmodule::I_Soul*">
					<DesignName StringName="paying_recipient_47ij" Text="Recipient" />
				</Port>
				<Port Name="shopstash" Direction="In" Type="wh::entitymodule::Stash*">
					<DesignName StringName="horsebuyi_shopstash_wnnv" Text="ShopStash" />
				</Port>
				<Port Name="moneyavailable" Direction="Out" Type="bool">
					<DesignName StringName="paying_moneyavailable_Pdcn" Text="MoneyAvailable" />
				</Port>
				<Port Name="exchangevalue" Direction="Out" Type="float">
					<DesignName StringName="horsebuyi_exchangevalue_hicN" Text="ExchangeValue" />
				</Port>
				<Port Name="pay" Direction="In" Type="trigger">
					<DesignName StringName="paying_pay_29Rd" Text="Pay" />
				</Port>
			</Ports>
			<Nodes>
				<Function Name="and19" PositionY="-980" PositionX="-1030" MethodName="math::boolean::And" DeclaringType="math::boolean">
					<Edge From="hasmoney_1.hasmoney" To="A" />
					<Edge From="IsAmountPositive.bool" To="B" />
				</Function>
				<Function Name="and21" PositionY="300" PositionX="-940" MethodName="math::boolean::And" DeclaringType="math::boolean">
					<Edge From="not8.bool" To="A" />
					<Edge From="compare22.bool" To="B" />
				</Function>
				<Function Name="compare22" PositionY="350" PositionX="-1210" TypeT="float" MethodName="Control::Compare" DeclaringType="Control">
					<Constant Name="Op" Value="NotEquals" />
					<Constant Name="ValueB" Value="0" />
					<Edge From="converttogroshen.groshen" To="ValueA">
						<Vertex>vertex34</Vertex>
					</Edge>
				</Function>
				<converttogroshen Name="converttogroshen" PositionY="810" PositionX="-1810" Namespace="money">
					<Edge From="getmoney24.Amount" To="decigroshen" />
				</converttogroshen>
				<MemberFunction Name="getmoney24" PositionY="790" PositionX="-2090" MethodName="GetMoney" DeclaringType="wh::entitymodule::Inventory">
					<Edge From="stashproperties23_1.Inventory" To="Inventory" />
				</MemberFunction>
				<hasmoney Name="hasmoney_1" PositionY="-1140" PositionX="-1410" Namespace="money">
					<Edge From="amount" To="amount">
						<Vertex>vertex8</Vertex>
						<Vertex>vertex23</Vertex>
					</Edge>
					<Edge From="isoulproperties1_2.Inventory" To="inventory" />
				</hasmoney>
				<Function Name="IsAmountPositive" PositionY="-130" PositionX="-1450" TypeT="float" MethodName="Control::Compare" DeclaringType="Control">
					<Constant Name="Op" Value="Greater" />
					<Constant Name="ValueB" Value="0" />
					<Edge From="amount" To="ValueA">
						<Vertex>vertex8</Vertex>
					</Edge>
				</Function>
				<ObjectProperties Name="isoulproperties1_2" PositionY="-1550" PositionX="-1990" DeclaringType="wh::rpgmodule::I_Soul">
					<Asset Name="I_Soul" Alias="player" />
				</ObjectProperties>
				<minfloat Name="minfloat" PositionY="650" PositionX="-950" Namespace="general">
					<Edge From="multiplyfloat7.float" To="a" />
					<Edge From="converttogroshen.groshen" To="b">
						<Vertex>vertex34</Vertex>
					</Edge>
				</minfloat>
				<Function Name="multiplyfloat18" PositionY="680" PositionX="-630" MethodName="wh::conceptmodule::math::MultiplyFloat" DeclaringType="wh::conceptmodule::math">
					<Constant Name="B" Value="-1" />
					<Edge From="minfloat.minvalue" To="A" />
				</Function>
				<Function Name="multiplyfloat7" PositionY="610" PositionX="-1680" MethodName="wh::conceptmodule::math::MultiplyFloat" DeclaringType="wh::conceptmodule::math">
					<Constant Name="B" Value="-1" />
					<Edge From="amount" To="A">
						<Vertex>vertex8</Vertex>
					</Edge>
				</Function>
				<Function Name="not8" PositionY="210" PositionX="-1210" MethodName="math::boolean::Not" DeclaringType="math::boolean">
					<Edge From="IsAmountPositive.bool" To="Value" />
				</Function>
				<Function Name="or9" PositionY="-140" PositionX="-550" MethodName="math::boolean::Or" DeclaringType="math::boolean">
					<Edge From="and19.bool" To="A" />
					<Edge From="and21.bool" To="B" />
				</Function>
				<Output Name="Output">
					<Edge From="or9.bool" To="moneyavailable" />
					<Edge From="switch11.Value1" To="exchangevalue" />
				</Output>
				<ObjectProperties Name="stashproperties23_1" PositionY="620" PositionX="-2340" DeclaringType="wh::entitymodule::Stash">
					<Edge From="shopstash" To="Stash" />
				</ObjectProperties>
				<Switch Name="switch11" PositionY="60" PositionX="-250" TypeT="bool" ValueTypes="float" SwitchValues="true false">
					<Constant Name="DefaultValue1" Value="0" />
					<Edge From="IsAmountPositive.bool" To="Switch">
						<Vertex>vertex9</Vertex>
					</Edge>
					<Edge From="amount" To="trueValue1">
						<Vertex>vertex8</Vertex>
						<Vertex>vertex10</Vertex>
					</Edge>
					<Edge From="multiplyfloat18.float" To="falseValue1" />
				</Switch>
			</Nodes>
			<EdgeVertices>
				<EdgeVertex Name="vertex10" PositionY="190" PositionX="-1050" />
				<EdgeVertex Name="vertex23" PositionY="-1080" PositionX="-1550" />
				<EdgeVertex Name="vertex34" PositionY="920" PositionX="-1520" />
				<EdgeVertex Name="vertex8" PositionY="180" PositionX="-1840" />
				<EdgeVertex Name="vertex9" PositionY="150" PositionX="-1050" />
			</EdgeVertices>
			<Notes>
				<Note Name="note10" PositionY="-350" PositionX="-250">
					<Text StringName="horsebuyi_note10_SmcR" Text="True if&#xD;&#xA;Player has enough money AND it's not negative&#xD;&#xA;&#xD;&#xA;OR&#xD;&#xA;&#xD;&#xA;Trader giving money to player AND it's not 0&#xD;&#xA;(in that case Exchange is min(inv, price))" />
				</Note>
				<Note Name="note15" PositionY="950" PositionX="-760">
					<Text StringName="horsebuyi_note15_MhDa" Text="Trader gives price or maximum he has in inventory" />
				</Note>
				<Note Name="note17" PositionY="-160" PositionX="-2090">
					<Text StringName="horsebuyi_note17_8mzP" Text="Amount is&#xD;&#xA;Negative if Stable -&gt; Player&#xD;&#xA;Positive if Player -&gt; Stable" />
				</Note>
			</Notes>
			<Text StringName="paying_XpsU" Text="HorseBuying_payment" />
		</Module>
	</Skald>
</Database>