<?xml version="1.0" encoding="utf-8"?>
<Database xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Name="brambora">
	<Skald>
		<Module Name="triggerbydistanceandtimer">
			<Ports>
				<Port Name="setrunning" Direction="In" Type="trigger">
					<DesignName StringName="intermiss_setrunning_MmXV" Text="SetRunning" />
				</Port>
				<Port Name="onintermission" Direction="Out" Type="trigger">
					<DesignName StringName="intermiss_onloaded_JV9e" Text="OnIntermission" />
				</Port>
				<Port Name="waitingfortrigger" Direction="Out" Type="bool">
					<DesignName StringName="triggerby_waitingfortrigg_RYNO" Text="WaitingForTrigger" />
				</Port>
				<Port Name="setstopped" Direction="In" Type="trigger">
					<DesignName StringName="intermiss_setstopped_kGtI" Text="SetStopped" />
				</Port>
				<Port Name="timer" Direction="In" Type="wh::framework::TimeSpan">
					<DesignName StringName="intermiss_timer_h95s" Text="Timer" />
				</Port>
				<Port Name="timetype" Direction="In" Type="wh::framework::TimeType">
					<DesignName StringName="intermiss_timetype_3mBc" Text="TimeType" />
				</Port>
				<Port Name="origin" Direction="In" Type="wh::xgenaimodule::LinkableObject*">
					<DesignName StringName="intermiss_getdistance_ori_HZ2K" Text="Origin" />
				</Port>
				<Port Name="target" Direction="In" Type="wh::xgenaimodule::LinkableObject*">
					<DesignName StringName="intermiss_getdistance_tar_jAPN" Text="Target" />
				</Port>
				<Port Name="distance" Direction="In" Type="float">
					<DesignName StringName="intermiss_distance_XTRe" Text="Distance" />
				</Port>
			</Ports>
			<Nodes>
				<Timer Name="beforeIntermissionTimer" PositionY="-240" PositionX="50">
					<Edge From="setrunning" To="SetRunning" />
					<Edge From="setstopped" To="SetStopped" />
					<Edge From="timer" To="Duration" />
					<Edge From="timetype" To="TimeType" />
					<Edge From="IntermissionTriggerByDistance.onintermission" To="SetStopped">
						<Vertex>vertex39</Vertex>
						<Vertex>vertex40</Vertex>
					</Edge>
				</Timer>
				<IntermissionTriggerByDistance Name="IntermissionTriggerByDistance" PositionY="90" PositionX="400" Namespace="utils.general">
					<Edge From="origin" To="origin" />
					<Edge From="target" To="target" />
					<Edge From="distance" To="minimaldistance" />
					<Edge From="beforeIntermissionTimer.Finished" To="waitforintermission" />
				</IntermissionTriggerByDistance>
				<Function Name="or1" PositionY="-110" PositionX="480" MethodName="math::boolean::Or" DeclaringType="math::boolean">
					<Edge From="beforeIntermissionTimer.Running" To="A" />
					<Edge From="beforeIntermissionTimer.Finished" To="B" />
				</Function>
				<Output Name="Output">
					<Edge From="IntermissionTriggerByDistance.onintermission" To="onintermission" />
					<Edge From="or1.bool" To="waitingfortrigger" />
				</Output>
			</Nodes>
			<EdgeVertices>
				<EdgeVertex Name="vertex39" PositionY="-280" PositionX="650" />
				<EdgeVertex Name="vertex40" PositionY="-280" PositionX="70" />
			</EdgeVertices>
			<Text StringName="intermissiontrigger_getdi_KVDK" Text="TriggerByDistanceAndTimer" />
		</Module>
	</Skald>
</Database>