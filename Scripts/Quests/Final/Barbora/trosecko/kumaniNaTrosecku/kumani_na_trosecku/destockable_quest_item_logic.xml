<?xml version="1.0" encoding="utf-8"?>
<Database xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Name="brambora">
	<Skald>
		<Module Name="destockable_quest_item_logic">
			<Ports>
				<Port Name="canbedestocked" Direction="In" Type="bool">
					<DesignName StringName="destockab_canbedestocked_hdF8" Text="CanBeDestocked" />
				</Port>
				<Port Name="isactive" Direction="Out" Type="bool">
					<DesignName StringName="destockab_isactive_fJ6V" Text="IsActive" />
				</Port>
				<Port Name="forcerestock" Direction="In" Type="trigger">
					<DesignName StringName="destockab_forcerestock_Rwqb" Text="ForceRestock" />
				</Port>
				<Port Name="itemholder" Direction="In" Type="wh::xgenaimodule::LinkableObject*">
					<DesignName StringName="destockab_itemholder_lvcU" Text="ItemHolder" />
				</Port>
				<ConstantPort Name="minimaldistance" Direction="In" Type="float" Value="10">
					<DesignName StringName="destockab_minimaldistance_NHLO" Text="MinimalDistance" />
				</ConstantPort>
				<Port Name="ondestock" Direction="Out" Type="trigger">
					<DesignName StringName="destockab_ondestock_fAlg" Text="OnDestock" />
				</Port>
			</Ports>
			<Nodes>
				<Function Name="and1" PositionY="-210" PositionX="590" MethodName="math::boolean::And" DeclaringType="math::boolean">
					<Edge From="canbedestocked" To="B">
						<Vertex>vertex5</Vertex>
					</Edge>
					<Edge From="not8.bool" To="A" />
				</Function>
				<State Name="hasDestocked" PositionY="-240" PositionX="0" TypeT="bool">
					<Constant Name="DefaultValue" Value="false" />
					<Edge From="forcerestock" To="SetFalse" />
					<Edge From="IntermissionTriggerByDistance.onintermission" To="SetTrue">
						<Vertex>vertex3</Vertex>
						<Vertex>vertex2</Vertex>
					</Edge>
				</State>
				<IntermissionTriggerByDistance Name="IntermissionTriggerByDistance" PositionY="20" PositionX="1100" Namespace="utils.general">
					<Asset Name="origin" Alias="player" />
					<Edge From="minimaldistance" To="minimaldistance" />
					<Edge From="itemholder" To="target" />
					<Edge From="and1.bool" To="waitforintermission">
						<Vertex>vertex6</Vertex>
					</Edge>
				</IntermissionTriggerByDistance>
				<Function Name="not8" PositionY="-210" PositionX="300" MethodName="math::boolean::Not" DeclaringType="math::boolean">
					<Edge From="hasDestocked.State" To="Value" />
				</Function>
				<Output Name="Output">
					<Edge From="and1.bool" To="isactive">
						<Vertex>vertex6</Vertex>
					</Edge>
					<Edge From="hasDestocked.OnTrue" To="ondestock">
						<Vertex>vertex7</Vertex>
					</Edge>
				</Output>
			</Nodes>
			<EdgeVertices>
				<EdgeVertex Name="vertex2" PositionY="290" PositionX="60" />
				<EdgeVertex Name="vertex3" PositionY="290" PositionX="1360" />
				<EdgeVertex Name="vertex5" PositionY="0" PositionX="510" />
				<EdgeVertex Name="vertex6" PositionY="-60" PositionX="1030" />
				<EdgeVertex Name="vertex7" PositionY="-30" PositionX="450" />
			</EdgeVertices>
			<Text StringName="destockable_quest_item_lo_hvGv" Text="Destockable quest item logic" />
		</Module>
	</Skald>
</Database>