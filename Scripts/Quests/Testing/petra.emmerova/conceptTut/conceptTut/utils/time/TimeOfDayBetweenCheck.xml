<?xml version="1.0" encoding="utf-8"?>
<Database xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Name="brambora">
  <Skald>
    <Module Name="TimeOfDayBetweenCheck">
      <Ports>
        <Port Name="isbetween" Direction="Out" Type="bool">
          <DesignName Text="IsBetween" />
        </Port>
        <Port Name="fromtime" Direction="In" Type="wh::framework::TimeOfDay">
          <DesignName Text="FromTime" />
        </Port>
        <Port Name="totime" Direction="In" Type="wh::framework::TimeOfDay">
          <DesignName Text="ToTime" />
        </Port>
      </Ports>
      <Nodes>
        <Function Name="and10" PositionY="-110" PositionX="700" MethodName="math::boolean::And" DeclaringType="math::boolean">
          <Edge From="compare4.bool" To="A" />
          <Edge From="compare5.bool" To="B" />
        </Function>
        <Function Name="and11" PositionY="210" PositionX="1400" MethodName="math::boolean::And" DeclaringType="math::boolean">
          <Edge From="not8.bool" To="A" />
          <Edge From="or9.bool" To="B" />
        </Function>
        <Function Name="and12" PositionY="-140" PositionX="1100" MethodName="math::boolean::And" DeclaringType="math::boolean">
          <Edge From="compare6.bool" To="A" />
          <Edge From="and10.bool" To="B" />
        </Function>
        <Function Name="compare4" PositionY="0" PositionX="250" TypeT="wh::framework::TimeOfDay" MethodName="Control::Compare" DeclaringType="Control">
          <Constant Name="Op" Value="GreaterEquals" />
          <Edge From="gettimeofday3.TimeOfDay" To="ValueA" />
          <Edge From="fromtime" To="ValueB" />
        </Function>
        <Function Name="compare5" PositionY="230" PositionX="250" TypeT="wh::framework::TimeOfDay" MethodName="Control::Compare" DeclaringType="Control">
          <Constant Name="Op" Value="LessEquals" />
          <Edge From="gettimeofday3.TimeOfDay" To="ValueA" />
          <Edge From="totime" To="ValueB">
            <Vertex>vertex2</Vertex>
          </Edge>
        </Function>
        <Function Name="compare6" PositionY="-400" PositionX="700" TypeT="wh::framework::TimeOfDay" MethodName="Control::Compare" DeclaringType="Control">
          <Constant Name="Op" Value="LessEquals" />
          <Edge From="fromtime" To="ValueA" />
          <Edge From="totime" To="ValueB" />
        </Function>
        <Function Name="gettimeofday3" PositionY="130" PositionX="-80" MethodName="wh::rpgmodule::GetTimeOfDay" DeclaringType="wh::rpgmodule" />
        <Function Name="not8" PositionY="210" PositionX="1100" MethodName="math::boolean::Not" DeclaringType="math::boolean">
          <Edge From="compare6.bool" To="Value" />
        </Function>
        <Function Name="or13" PositionY="30" PositionX="1700" MethodName="math::boolean::Or" DeclaringType="math::boolean">
          <Edge From="and12.bool" To="A" />
          <Edge From="and11.bool" To="B" />
        </Function>
        <Function Name="or9" PositionY="370" PositionX="700" MethodName="math::boolean::Or" DeclaringType="math::boolean">
          <Edge From="compare4.bool" To="A" />
          <Edge From="compare5.bool" To="B" />
        </Function>
        <Output Name="Output">
          <Edge From="or13.bool" To="isbetween" />
        </Output>
      </Nodes>
      <EdgeVertices>
        <EdgeVertex Name="vertex2" PositionY="380" PositionX="-120" />
      </EdgeVertices>
      <Notes>
        <Note Name="note14" PositionY="-230" PositionX="1100">
          <Text Text="If FROM time is lower than TO time (or equal) we are checking interval in the same single day.&#xD;&#xA;Therefore to pass the CURRENT time has to be greater than FROM (or equal) AND lower than TO (or equal)." />
        </Note>
        <Note Name="note15" PositionY="100" PositionX="1100">
          <Text Text="If FROM time is greater than TO time we are checking interval spanning two days.&#xD;&#xA;Therefore to pass the CURRENT time has to be either greater than FROM (or equal) OR lower than TO (or equal)." />
        </Note>
      </Notes>
      <Text Text="TimeOfDayBetweenCheck" />
    </Module>
  </Skald>
</Database>