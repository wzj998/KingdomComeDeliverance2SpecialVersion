<?xml version="1.0" encoding="utf-8"?>
<Database xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Name="brambora">
  <Skald>
    <Module Name="timeofdaywithin">
      <Ports>
        <ConstantPort Name="active" Direction="In" Type="bool" Value="false">
          <DesignName StringName="timeofday_active_7E31" Text="Active" />
        </ConstantPort>
        <Port Name="tod_is_within_specified_timespan" Direction="Out" Type="bool">
          <DesignName StringName="timeofday_tod_is_within_s_dPq4" Text="ToD is within specified timespan" />
        </Port>
        <Port Name="time_of_day_start" Direction="In" Type="wh::framework::TimeOfDay">
          <DesignName StringName="timeofday_time_of_day_sta_ikGM" Text="Time of day start" />
        </Port>
        <Port Name="time_of_day_end" Direction="In" Type="wh::framework::TimeOfDay">
          <DesignName StringName="timeofday_time_of_day_end_8uhX" Text="Time of day end" />
        </Port>
      </Ports>
      <Nodes>
        <Function Name="A" PositionY="-550" PositionX="820" TypeT="wh::framework::TimeOfDay" MethodName="Control::Compare" DeclaringType="Control">
          <Constant Name="Op" Value="Greater" />
          <Edge From="time_of_day_start" To="ValueA" />
          <Edge From="time_of_day_end" To="ValueB" />
        </Function>
        <Function Name="and41" PositionY="-390" PositionX="1310" MethodName="math::boolean::And" DeclaringType="math::boolean">
          <Edge From="A.bool" To="A" />
          <Edge From="B.bool" To="B" />
        </Function>
        <Function Name="and43" PositionY="-110" PositionX="1560" MethodName="math::boolean::And" DeclaringType="math::boolean">
          <Edge From="not42.bool" To="A" />
          <Edge From="C.bool" To="B" />
        </Function>
        <Function Name="and48" PositionY="-150" PositionX="2230" MethodName="math::boolean::And" DeclaringType="math::boolean">
          <Edge From="active" To="A">
            <Vertex>vertex6</Vertex>
            <Vertex>vertex7</Vertex>
          </Edge>
          <Edge From="or44.bool" To="B" />
        </Function>
        <Function Name="B" PositionY="-360" PositionX="820" MethodName="math::boolean::Or" DeclaringType="math::boolean">
          <Edge From="compare34.bool" To="A" />
          <Edge From="compare35.bool" To="B" />
        </Function>
        <Function Name="C" PositionY="-200" PositionX="820" MethodName="math::boolean::And" DeclaringType="math::boolean">
          <Edge From="compare34.bool" To="A" />
          <Edge From="compare35.bool" To="B" />
        </Function>
        <Function Name="compare34" PositionY="-360" PositionX="310" TypeT="wh::framework::TimeOfDay" MethodName="Control::Compare" DeclaringType="Control">
          <Constant Name="Op" Value="GreaterEquals" />
          <Edge From="gettimeofday31.TimeOfDay" To="ValueA" />
          <Edge From="time_of_day_start" To="ValueB" />
        </Function>
        <Function Name="compare35" PositionY="-170" PositionX="310" TypeT="wh::framework::TimeOfDay" MethodName="Control::Compare" DeclaringType="Control">
          <Constant Name="Op" Value="LessEquals" />
          <Edge From="gettimeofday31.TimeOfDay" To="ValueA" />
          <Edge From="time_of_day_end" To="ValueB" />
        </Function>
        <Function Name="gettimeofday31" PositionY="-260" PositionX="-260" MethodName="wh::rpgmodule::GetTimeOfDay" DeclaringType="wh::rpgmodule" />
        <Function Name="not42" PositionY="-230" PositionX="1310" MethodName="math::boolean::Not" DeclaringType="math::boolean">
          <Edge From="A.bool" To="Value" />
        </Function>
        <Function Name="or44" PositionY="-270" PositionX="1790" MethodName="math::boolean::Or" DeclaringType="math::boolean">
          <Edge From="and41.bool" To="A" />
          <Edge From="and43.bool" To="B" />
        </Function>
        <Output Name="Output">
          <Edge From="and48.bool" To="tod_is_within_specified_timespan" />
        </Output>
      </Nodes>
      <EdgeVertices>
        <EdgeVertex Name="vertex6" PositionY="100" PositionX="-270" />
        <EdgeVertex Name="vertex7" PositionY="100" PositionX="2030" />
      </EdgeVertices>
      <Notes>
        <Note Name="note46" PositionY="-720" PositionX="770">
          <Text StringName="timeofday_note46_FMtP" Text="If you're trying to understand this clusterfuck of logical nodes: nodes in this column have been named A, B, and C. A node is here as an indication whether we want to consider the inside or the outside of the specified timespan. B and C specify whether we're within that timespan or not. In other words, we want to return B if A=1 and C if A=0. This is achieved by formula [(A &amp; B) | (not(A) &amp; C)]." />
        </Note>
        <Note Name="note49" PositionY="-230" PositionX="2180">
          <Text StringName="timeofday_note49_b1iR" Text="And this last AND is here just to account for the Active port." />
        </Note>
      </Notes>
      <Text StringName="timeofdaywithin_jFU5" Text="TimeOfDayWithin - OBSOLETE (replace with TimeOfDayBetweenCheck)" />
    </Module>
  </Skald>
</Database>